import { CdsBaseAlert } from './alert.base.js';
/**
 * Alerts are banners that communicate a message with a severity attached to it.
 * They grab the userâ€™s attention to provide critical information needed in context.
 *
 * ```typescript
 * import '@clr/core/alert';
 * ```
 *
 * ```html
 * <cds-alert>
 *   <cds-alert-content>This is an alert.</cds-alert-content>
 * </cds-alert>
 * ```
 *
 * @beta
 * @element cds-alert
 * @slot default - Content slot for inside the alert. Usually will contain at least a <cds-alert-content> component.
 * @cssprop --color
 * @cssprop --background
 * @cssprop --border-radius
 * @cssprop --border-color
 * @cssprop --icon-color
 * @cssprop --close-icon-color
 * @cssprop --close-icon-color-hover
 */
export declare class CdsAlert extends CdsBaseAlert {
    /** Sets the overall height and width of the alert and icon based on value */
    size: 'default' | 'sm';
    static get styles(): import("lit-element").CSSResult[];
}
declare global {
    interface HTMLElementTagNameMap {
        'cds-alert': CdsAlert;
    }
}
