{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@clr/angular/utils/popover/enums/viewport-violation.enum.ts","ng://@clr/angular/utils/popover/enums/alignment.enum.ts","ng://@clr/angular/icon/icon.ts","ng://@clr/angular/icon/icon.module.ts","ng://@clr/angular/utils/popover/providers/popover-toggle.service.ts","ng://@clr/angular/utils/popover/providers/popover-events.service.ts","ng://@clr/angular/utils/popover/position-operators.ts","ng://@clr/angular/utils/popover/enums/axis.enum.ts","ng://@clr/angular/utils/loading/loading.ts","ng://@clr/angular/utils/popover/providers/popover-position.service.ts","ng://@clr/angular/utils/popover/popover-content.ts","ng://@clr/angular/utils/popover/popover-open-close-button.ts","ng://@clr/angular/utils/popover/popover-close-button.ts","ng://@clr/angular/utils/popover/popover-anchor.ts","ng://@clr/angular/utils/popover/popover.module.ts","ng://@clr/angular/utils/loading/loading-listener.ts","ng://@clr/angular/button/providers/button-in-group.service.ts","ng://@clr/angular/button/button-group/button.ts","ng://@clr/angular/utils/i18n/common-strings.default.ts","ng://@clr/angular/utils/i18n/common-strings.service.ts","ng://@clr/angular/utils/id-generator/id-generator.service.ts","ng://@clr/angular/utils/popover/enums/side.enum.ts","ng://@clr/angular/utils/popover/enums/positions.enum.ts","ng://@clr/angular/utils/a11y/aria-live.service.ts","ng://@clr/angular/button/button-group/button-group.ts","ng://@clr/angular/button/button-group/button-group.module.ts","ng://@clr/angular/button/button-loading/loading-button.ts","ng://@clr/angular/button/button-loading/loading-button.module.ts","ng://@clr/angular/button/button.module.ts","ng://@clr/angular/utils/host-wrapping/empty-anchor.ts","ng://@clr/angular/utils/host-wrapping/host-wrapping.module.ts","ng://@clr/angular/forms/common/providers/control-id.service.ts","ng://@clr/angular/forms/common/providers/layout.service.ts","ng://@clr/angular/forms/common/providers/control-class.service.ts","ng://@clr/angular/forms/common/error.ts","ng://@clr/angular/forms/common/helper.ts","ng://@clr/angular/forms/common/providers/ng-control.service.ts","ng://@clr/angular/forms/common/if-error/if-error.service.ts","ng://@clr/angular/forms/common/if-error/if-error.ts","ng://@clr/angular/forms/common/label.ts","ng://@clr/angular/forms/common/providers/mark-control.service.ts","ng://@clr/angular/forms/common/form.ts","ng://@clr/angular/forms/common/layout.ts","ng://@clr/angular/forms/common/abstract-container.ts","ng://@clr/angular/forms/common/control-container.ts","ng://@clr/angular/utils/host-wrapping/host-wrapper.ts","ng://@clr/angular/forms/common/wrapped-control.ts","ng://@clr/angular/forms/common/control.ts","ng://@clr/angular/forms/common/common.module.ts","ng://@clr/angular/forms/checkbox/checkbox-wrapper.ts","ng://@clr/angular/forms/checkbox/checkbox.ts","ng://@clr/angular/forms/checkbox/checkbox-container.ts","ng://@clr/angular/forms/checkbox/checkbox.module.ts","ng://@clr/angular/utils/conditional/if-active.service.ts","ng://@clr/angular/utils/conditional/if-active.directive.ts","ng://@clr/angular/utils/conditional/if-open.directive.ts","ng://@clr/angular/utils/conditional/if-expanded.service.ts","ng://@clr/angular/utils/conditional/if-expanded.directive.ts","ng://@clr/angular/utils/conditional/conditional.module.ts","ng://@clr/angular/utils/focus-trap/focus-trap-tracker.service.ts","ng://@clr/angular/utils/focus-trap/focus-trap.directive.ts","ng://@clr/angular/utils/focus-trap/focus-trap.module.ts","ng://@clr/angular/forms/datepicker/utils/constants.ts","ng://@clr/angular/forms/datepicker/utils/date-utils.ts","ng://@clr/angular/forms/datepicker/model/day-view.model.ts","ng://@clr/angular/forms/datepicker/model/day.model.ts","ng://@clr/angular/forms/datepicker/model/calendar-view.model.ts","ng://@clr/angular/forms/datepicker/model/calendar.model.ts","ng://@clr/angular/forms/datepicker/providers/date-navigation.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-focus.service.ts","ng://@clr/angular/forms/datepicker/providers/locale-helper.service.ts","ng://@clr/angular/forms/datepicker/providers/date-io.service.ts","ng://@clr/angular/forms/datepicker/calendar.ts","ng://@clr/angular/utils/key-codes/key-codes.ts","ng://@clr/angular/forms/common/providers/focus.service.ts","ng://@clr/angular/forms/datepicker/providers/date-form-control.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-enabled.service.ts","ng://@clr/angular/utils/breakpoints/breakpoints.ts","ng://@clr/angular/forms/datepicker/providers/view-manager.service.ts","ng://@clr/angular/forms/datepicker/date-container.ts","ng://@clr/angular/utils/component/is-boolean-attribute-set.ts","ng://@clr/angular/forms/datepicker/date-input.ts","ng://@clr/angular/forms/datepicker/datepicker-view-manager.ts","ng://@clr/angular/forms/datepicker/day.ts","ng://@clr/angular/forms/datepicker/daypicker.ts","ng://@clr/angular/forms/datepicker/monthpicker.ts","ng://@clr/angular/forms/datepicker/model/year-range.model.ts","ng://@clr/angular/forms/datepicker/yearpicker.ts","ng://@clr/angular/forms/datepicker/datepicker.module.ts","ng://@clr/angular/forms/input/input-container.ts","ng://@clr/angular/forms/input/input.ts","ng://@clr/angular/forms/input/input.module.ts","ng://@clr/angular/forms/password/password-container.ts","ng://@clr/angular/utils/drag-and-drop/interfaces/drag-event.interface.ts","ng://@clr/angular/forms/password/password.ts","ng://@clr/angular/forms/password/password.module.ts","ng://@clr/angular/forms/radio/radio-wrapper.ts","ng://@clr/angular/forms/radio/radio.ts","ng://@clr/angular/forms/radio/radio-container.ts","ng://@clr/angular/forms/radio/radio.module.ts","ng://@clr/angular/forms/select/select-container.ts","ng://@clr/angular/forms/select/select.ts","ng://@clr/angular/forms/select/select.module.ts","ng://@clr/angular/forms/textarea/textarea-container.ts","ng://@clr/angular/forms/textarea/textarea.ts","ng://@clr/angular/forms/textarea/textarea.module.ts","ng://@clr/angular/forms/range/range-container.ts","ng://@clr/angular/forms/range/range.ts","ng://@clr/angular/forms/range/range.module.ts","ng://@clr/angular/forms/datalist/providers/datalist-id.service.ts","ng://@clr/angular/forms/datalist/datalist-container.ts","ng://@clr/angular/forms/datalist/datalist-input.ts","ng://@clr/angular/forms/datalist/datalist.ts","ng://@clr/angular/forms/datalist/datalist.module.ts","ng://@clr/angular/forms/forms.module.ts","ng://@clr/angular/utils/loading/loading.module.ts","ng://@clr/angular/utils/outside-click/outside-click.ts","ng://@clr/angular/utils/outside-click/index.ts","ng://@clr/angular/utils/outside-click/outside-click.module.ts","ng://@clr/angular/utils/dom-adapter/dom-adapter.ts","ng://@clr/angular/utils/drag-and-drop/drag-event.ts","ng://@clr/angular/data/datagrid/enums/sort-order.enum.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-and-drop-event-bus.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-event-listener.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/draggable-snapshot.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable-ghost.ts","ng://@clr/angular/utils/drag-and-drop/if-dragged.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-handle-registrar.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/global-drag-mode.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable/draggable.ts","ng://@clr/angular/utils/drag-and-drop/droppable/droppable.ts","ng://@clr/angular/utils/drag-and-drop/drag-handle.ts","ng://@clr/angular/utils/drag-and-drop/drag-and-drop.module.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.ts","ng://@clr/angular/utils/animations/expandable-animation/index.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.module.ts","ng://@clr/angular/progress/spinner/spinner.ts","ng://@clr/angular/progress/spinner/spinner.module.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.provider.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.module.ts","ng://@clr/angular/data/datagrid/providers/custom-filter.ts","ng://@clr/angular/data/datagrid/providers/state-debouncer.provider.ts","ng://@clr/angular/data/datagrid/providers/page.ts","ng://@clr/angular/data/datagrid/providers/filters.ts","ng://@clr/angular/data/datagrid/utils/datagrid-filter-registrar.ts","ng://@clr/angular/data/datagrid/datagrid-filter.ts","ng://@clr/angular/data/datagrid/built-in/nested-property.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-numeric-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter.ts","ng://@clr/angular/utils/chocolate/oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/row-action-service.ts","ng://@clr/angular/utils/chocolate/willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/datagrid-willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/actionable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/detail.service.ts","ng://@clr/angular/data/datagrid/providers/global-expandable-rows.ts","ng://@clr/angular/data/datagrid/chocolate/expandable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/built-in/comparators/datagrid-property-comparator.ts","ng://@clr/angular/data/datagrid/enums/display-mode.enum.ts","ng://@clr/angular/data/datagrid/enums/render-step.enum.ts","ng://@clr/angular/data/datagrid/providers/sort.ts","ng://@clr/angular/data/datagrid/wrapped-column.ts","ng://@clr/angular/data/datagrid/datagrid-column.ts","ng://@clr/angular/data/datagrid/providers/items.ts","ng://@clr/angular/data/datagrid/datagrid-items.ts","ng://@clr/angular/data/datagrid/datagrid-placeholder.ts","ng://@clr/angular/popover/common/popover-host-anchor.token.ts","ng://@clr/angular/popover/signpost/providers/signpost-focus-manager.service.ts","ng://@clr/angular/popover/signpost/providers/signpost-id.service.ts","ng://@clr/angular/popover/signpost/signpost-trigger.ts","ng://@clr/angular/popover/signpost/signpost.ts","ng://@clr/angular/data/datagrid/wrapped-cell.ts","ng://@clr/angular/data/datagrid/datagrid-cell.ts","ng://@clr/angular/data/datagrid/enums/selection-type.ts","ng://@clr/angular/data/datagrid/render/render-organizer.ts","ng://@clr/angular/data/datagrid/providers/display-mode.service.ts","ng://@clr/angular/data/datagrid/providers/selection.ts","ng://@clr/angular/data/datagrid/enums/column-changes.enum.ts","ng://@clr/angular/data/datagrid/wrapped-row.ts","ng://@clr/angular/data/datagrid/datagrid-if-expanded.service.ts","ng://@clr/angular/data/datagrid/datagrid-row.ts","ng://@clr/angular/data/datagrid/providers/state.provider.ts","ng://@clr/angular/data/datagrid/providers/table-size.service.ts","ng://@clr/angular/data/datagrid/providers/columns.service.ts","ng://@clr/angular/data/datagrid/datagrid.ts","ng://@clr/angular/data/datagrid/datagrid-action-bar.ts","ng://@clr/angular/data/datagrid/datagrid-action-overflow.ts","ng://@clr/angular/data/datagrid/providers/column-resizer.service.ts","ng://@clr/angular/data/datagrid/datagrid-column-separator.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-title.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-button.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle.ts","ng://@clr/angular/data/datagrid/datagrid-detail-registerer.ts","ng://@clr/angular/data/datagrid/datagrid-detail-header.ts","ng://@clr/angular/data/datagrid/datagrid-detail.ts","ng://@clr/angular/data/datagrid/datagrid-if-detail.ts","ng://@clr/angular/data/datagrid/datagrid-detail-body.ts","ng://@clr/angular/data/datagrid/datagrid-footer.ts","ng://@clr/angular/data/datagrid/providers/column-state.provider.ts","ng://@clr/angular/utils/enums/key-codes.enum.ts","ng://@clr/angular/data/tree-view/models/selected-state.enum.ts","ng://@clr/angular/data/datagrid/datagrid-hideable-column.ts","ng://@clr/angular/data/datagrid/datagrid-items-trackby.ts","ng://@clr/angular/data/datagrid/datagrid-page-size.ts","ng://@clr/angular/data/datagrid/datagrid-pagination.ts","ng://@clr/angular/data/datagrid/datagrid-row-detail.ts","ng://@clr/angular/data/datagrid/render/cell-renderer.ts","ng://@clr/angular/data/datagrid/render/constants.ts","ng://@clr/angular/data/datagrid/render/header-renderer.ts","ng://@clr/angular/data/datagrid/render/noop-dom-adapter.ts","ng://@clr/angular/data/datagrid/render/row-renderer.ts","ng://@clr/angular/data/datagrid/render/main-renderer.ts","ng://@clr/angular/data/datagrid/datagrid.module.ts","ng://@clr/angular/data/stack-view/stack-block.ts","ng://@clr/angular/data/stack-view/stack-view.ts","ng://@clr/angular/data/stack-view/stack-header.ts","ng://@clr/angular/data/stack-view/stack-control.ts","ng://@clr/angular/data/stack-view/stack-input.ts","ng://@clr/angular/data/stack-view/stack-select.ts","ng://@clr/angular/data/stack-view/stack-view-custom-tags.ts","ng://@clr/angular/data/stack-view/stack-content-input.ts","ng://@clr/angular/data/stack-view/stack-view.module.ts","ng://@clr/angular/utils/focus/key-focus/util.ts","ng://@clr/angular/data/tree-view/models/tree-node.model.ts","ng://@clr/angular/data/tree-view/models/declarative-tree-node.model.ts","ng://@clr/angular/data/tree-view/tree-features.service.ts","ng://@clr/angular/data/tree-view/tree-focus-manager.service.ts","ng://@clr/angular/data/tree-view/tree-node-link.ts","ng://@clr/angular/data/tree-view/tree-node.ts","ng://@clr/angular/data/tree-view/tree.ts","ng://@clr/angular/data/tree-view/models/recursive-tree-node.model.ts","ng://@clr/angular/utils/focus/arrow-key-direction.enum.ts","ng://@clr/angular/data/tree-view/models/async-array.ts","ng://@clr/angular/data/tree-view/recursive-for-of.ts","ng://@clr/angular/data/tree-view/recursive-children.ts","ng://@clr/angular/data/tree-view/tree-view.module.ts","ng://@clr/angular/data/data.module.ts","ng://@clr/angular/utils/focus/focusable-item/focusable-item.ts","ng://@clr/angular/utils/focus/focusable-item/custom-focusable-item-provider.ts","ng://@clr/angular/utils/focus/focus.service.ts","ng://@clr/angular/utils/focus/focusable-item/linkers.ts","ng://@clr/angular/utils/focus/wrap-observable.ts","ng://@clr/angular/popover/dropdown/providers/dropdown-focus-handler.service.ts","ng://@clr/angular/popover/dropdown/providers/dropdown.service.ts","ng://@clr/angular/popover/common/popover.ts","ng://@clr/angular/popover/dropdown/dropdown.ts","ng://@clr/angular/utils/focus/focusable-item/basic-focusable-item.service.ts","ng://@clr/angular/popover/dropdown/dropdown-item.ts","ng://@clr/angular/layout/tabs/enums/tabs-layout.enum.ts","ng://@clr/angular/popover/common/abstract-popover.ts","ng://@clr/angular/popover/dropdown/dropdown-menu.ts","ng://@clr/angular/popover/dropdown/dropdown-trigger.ts","ng://@clr/angular/popover/dropdown/dropdown.module.ts","ng://@clr/angular/emphasis/alert/utils/alert-types.ts","ng://@clr/angular/emphasis/alert/providers/icon-and-types.service.ts","ng://@clr/angular/emphasis/alert/providers/multi-alert.service.ts","ng://@clr/angular/emphasis/alert/alert-text.ts","ng://@clr/angular/emphasis/alert/alert.ts","ng://@clr/angular/emphasis/alert/alert-item.ts","ng://@clr/angular/emphasis/alert/alerts.ts","ng://@clr/angular/emphasis/alert/alerts-pager.ts","ng://@clr/angular/emphasis/alert/alert.module.ts","ng://@clr/angular/emphasis/emphasis.module.ts","ng://@clr/angular/layout/nav/responsive-nav-codes.ts","ng://@clr/angular/layout/nav/responsive-nav-control-message.ts","ng://@clr/angular/layout/nav/providers/responsive-navigation.service.ts","ng://@clr/angular/layout/main-container/main-container.ts","ng://@clr/angular/layout/main-container/main-container.module.ts","ng://@clr/angular/layout/nav/chocolate/main-container-willy-wonka.ts","ng://@clr/angular/layout/nav/chocolate/nav-detection-oompa-loompa.ts","ng://@clr/angular/layout/nav/header.ts","ng://@clr/angular/layout/nav/nav-level.ts","ng://@clr/angular/layout/nav/navigation.module.ts","ng://@clr/angular/utils/template-ref/template-ref-container.ts","ng://@clr/angular/utils/template-ref/index.ts","ng://@clr/angular/utils/template-ref/template-ref.module.ts","ng://@clr/angular/layout/tabs/chocolate/tabs-willy-wonka.ts","ng://@clr/angular/layout/tabs/chocolate/active-oompa-loompa.ts","ng://@clr/angular/layout/tabs/providers/aria.service.ts","ng://@clr/angular/layout/tabs/providers/tabs.service.ts","ng://@clr/angular/layout/tabs/tab-content.ts","ng://@clr/angular/layout/tabs/tabs-id.provider.ts","ng://@clr/angular/utils/focus/key-focus/enums/focus-direction.enum.ts","ng://@clr/angular/layout/tabs/tab-link.directive.ts","ng://@clr/angular/layout/tabs/tab.ts","ng://@clr/angular/layout/tabs/tab-overflow-content.ts","ng://@clr/angular/accordion/enums/accordion-strategy.enum.ts","ng://@clr/angular/accordion/enums/accordion-status.enum.ts","ng://@clr/angular/utils/focus/key-focus/key-focus-item.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.ts","ng://@clr/angular/layout/tabs/tabs.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.module.ts","ng://@clr/angular/layout/tabs/tabs.module.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group-registration.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-icon.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group-children.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-icon.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-link.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.module.ts","ng://@clr/angular/layout/layout.module.ts","ng://@clr/angular/utils/scrolling/scrolling-service.ts","ng://@clr/angular/modal/modal.ts","ng://@clr/angular/modal/modal-body.ts","ng://@clr/angular/modal/modal.module.ts","ng://@clr/angular/popover/signpost/signpost-positions.ts","ng://@clr/angular/popover/signpost/signpost-content.ts","ng://@clr/angular/popover/signpost/signpost.module.ts","ng://@clr/angular/popover/tooltip/providers/tooltip-id.service.ts","ng://@clr/angular/popover/tooltip/tooltip.ts","ng://@clr/angular/popover/tooltip/tooltip-content.ts","ng://@clr/angular/popover/tooltip/tooltip-trigger.ts","ng://@clr/angular/popover/tooltip/tooltip.module.ts","ng://@clr/angular/popover/popover.module.ts","ng://@clr/angular/wizard/providers/button-hub.service.ts","ng://@clr/angular/wizard/providers/page-collection.service.ts","ng://@clr/angular/wizard/providers/wizard-navigation.service.ts","ng://@clr/angular/wizard/providers/header-actions.service.ts","ng://@clr/angular/wizard/wizard-header-action.ts","ng://@clr/angular/wizard/wizard-page-buttons.ts","ng://@clr/angular/wizard/wizard-page-header-actions.ts","ng://@clr/angular/wizard/wizard-page-navtitle.ts","ng://@clr/angular/wizard/wizard-page-title.ts","ng://@clr/angular/wizard/wizard-page.ts","ng://@clr/angular/wizard/wizard.ts","ng://@clr/angular/wizard/wizard-button.ts","ng://@clr/angular/wizard/wizard-custom-tags.ts","ng://@clr/angular/wizard/wizard-stepnav.ts","ng://@clr/angular/wizard/wizard-stepnav-item.ts","ng://@clr/angular/wizard/wizard.module.ts","ng://@clr/angular/accordion/models/accordion.model.ts","ng://@clr/angular/accordion/providers/accordion.service.ts","ng://@clr/angular/accordion/utils/animation.ts","ng://@clr/angular/utils/animations/constants.ts","ng://@clr/angular/accordion/accordion-description.ts","ng://@clr/angular/accordion/accordion-panel.ts","ng://@clr/angular/accordion/accordion-title.ts","ng://@clr/angular/accordion/accordion.ts","ng://@clr/angular/accordion/accordion-content.ts","ng://@clr/angular/accordion/chocolate/accordion-willy-wonka.ts","ng://@clr/angular/accordion/chocolate/accordion-oompa-loompa.ts","ng://@clr/angular/accordion/accordion.module.ts","ng://@clr/angular/accordion/stepper/models/stepper.model.ts","ng://@clr/angular/accordion/stepper/providers/stepper.service.ts","ng://@clr/angular/accordion/stepper/step-button.ts","ng://@clr/angular/accordion/stepper/stepper-panel.ts","ng://@clr/angular/utils/forms/validation.ts","ng://@clr/angular/timeline/enums/timeline-layout.enum.ts","ng://@clr/angular/timeline/enums/timeline-step-state.enum.ts","ng://@clr/angular/accordion/stepper/stepper.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-willy-wonka.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-oompa-loompa.ts","ng://@clr/angular/accordion/stepper/stepper.module.ts","ng://@clr/angular/progress/progress-bars/progress-bar.ts","ng://@clr/angular/progress/progress-bars/progress-bar.module.ts","ng://@clr/angular/timeline/providers/timeline-icon-attribute.service.ts","ng://@clr/angular/timeline/timeline.ts","ng://@clr/angular/timeline/timeline-step-title.ts","ng://@clr/angular/timeline/timeline-step.ts","ng://@clr/angular/timeline/timeline-step-description.ts","ng://@clr/angular/timeline/timeline-step-header.ts","ng://@clr/angular/timeline/timeline.module.ts","ng://@clr/angular/clr-angular.module.ts","ng://@clr/angular/popover/dropdown/menu-positions.ts","ng://@clr/angular/utils/animations/collapse/collapse.ts","ng://@clr/angular/utils/animations/fade/fade.ts","ng://@clr/angular/utils/animations/fade-slide/fade-slide.ts","ng://@clr/angular/utils/animations/slide/slide.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","ClrViewportViolation","ClrAlignment","ClrIconCustomTag","Directive","selector","CLR_ICON_DIRECTIVES","ClrIconModule","NgModule","imports","CommonModule","declarations","exports","ClrPopoverToggleService","_open","_openChange","Subject","_openEventChange","asObservable","_openEvent","event","getEventChange","toggleWithEvent","openEvent","open","Injectable","ClrPopoverEventsService","renderer","smartOpenService","document","_this","outsideClickClose","scrollToClose","subscriptions","openChange","subscribe","addEscapeListener","addClickListener","addScrollListener","removeAllEventListeners","ignoredEvent","documentScroller","fromEvent","capture","scrollSubscription","pipe","filter","testForSmartPopoverContentContainer","setAnchorFocus","removeScrollListener","unsubscribe","classList","parentElement","localName","contains","documentClickListener","listen","focus","removeClickListener","escapeListener","removeEscapeListener","_anchorButtonRef","ref","_closeButtonRef","setCloseFocus","nativeElement","anchorButtonRef","_contentRef","host","ngOnDestroy","forEach","sub","Renderer2","HTMLDocument","type","Inject","args","DOCUMENT","ClrAxis","flipSides","position","side","nudgeContent","forward","nextAlignment","content","flipSidesAndNudgeContent","flip","nudge","nudgeBack","align","anchor","xDiff","left","yDiff","top","axis","alignHorizontal","height","width","alignVertical","xOffset","yOffset","horizontalOffset","START","CENTER","END","verticalOffset","ClrLoadingState","ClrPopoverPositionService","eventService","platformId","_shouldRealign","shouldRealign","realign","_position","alignContent","isPlatformBrowser","currentAnchorCoords","getBoundingClientRect","currentContentCoords","contentOffsets","visibilityViolations","offset","violations","mockCoords","TOP","LEFT","window","innerHeight","documentElement","clientHeight","BOTTOM","innerWidth","clientWidth","RIGHT","testVisibility","errorSum","reduce","count","current","VERTICAL","handleVerticalAxisOneViolation","HORIZONTAL","handleHorizontalAxisOneViolation","handleVerticalAxisTwoViolations","handleHorizontalAxisTwoViolations","flipAndNudgeLeft","flipAndNudgeRight","flipAndNudgeDown","flipAndNudgeUp","PLATFORM_ID","ClrPopoverContent","container","template","smartPositionService","smartEventsService","checkCollector","EventEmitter","clickToClose","ngAfterViewInit","change","addContent","removeContent","view","setStyle","rootNodes","debounceTime","node","removeChild","body","clear","createEmbeddedView","contentRef","addClass","appendChild","ngAfterContentChecked","emit","positionCoords","ViewContainerRef","TemplateRef","Input","ClrPopoverOpenCloseButton","openCloseChange","handleClick","Output","HostListener","[class.clr-smart-open-close]","ClrPopoverCloseButton","elementRef","closeChange","closeButtonRef","ElementRef","[class.clr-smart-close-button]","ClrPopoverAnchor","smartEventService","element","[class.clr-anchor]","ClrPopoverModuleNext","LoadingListener","ClrLoading","listener","_loadingState","DEFAULT","LOADING","loadingStateChange","loadingState","Optional","ButtonInGroupService","_changes","updateButtonGroup","button","ClrButton","buttonInGroupService","toggleService","_enableService","_inMenu","_classNames","_name","_type","_id","_disabled","_click","classNames","split","indexOf","join","state","loading","emitClick","$event","inMenu","SkipSelf","ViewChild","static","ClrButton_1","Component","providers","provide","useExisting","commonStringsDefault","close","show","hide","expand","collapse","more","select","selectAll","previous","info","success","warning","danger","rowActions","pickColumns","showColumns","sortColumn","firstPage","lastPage","nextPage","previousPage","currentPage","totalPages","minValue","maxValue","modalContentStart","modalContentEnd","showColumnsMenuDescription","allColumnsSelected","signpostToggle","signpostClose","detailPaneStart","detailPaneEnd","singleSelectionAriaLabel","singleActionableAriaLabel","detailExpandableAriaLabel","datagridFilterAriaLabel","alertCloseButtonAriaLabel","datepickerToggle","datepickerPreviousMonth","datepickerCurrentMonth","datepickerNextMonth","datepickerPreviousDecade","datepickerNextDecade","datepickerCurrentDecade","datepickerSelectMonthText","datepickerSelectYearText","daypickerSRCurrentMonthPhrase","daypickerSRCurrentYearPhrase","daypickerSRCurrentDecadePhrase","stackViewChanged","formErrorSummary","verticalNavToggle","verticalNavGroupToggle","timelineStepNotStarted","timelineStepCurrent","timelineStepSuccess","timelineStepError","timelineStepProcessing","dategridExpandableBeginningOf","dategridExpandableEndOf","dategridExpandableRowContent","dategridExpandableRowsHelperText","ClrCommonStringsService","_strings","localize","overrides","parse","source","tokens","names","keys","output","name","replace","providedIn","NB_INSTANCES","UNIQUE_ID","InjectionToken","uniqueIdFactory","ClrSide","UNIQUE_ID_PROVIDER","useFactory","ClrAriaLivePoliteness","ClrPopoverPositions","BEFORE","AFTER","ClrButtonGroup","buttonGroupNewService","popoverId","commonStrings","popoverPosition","inlineButtons","menuButtons","ngAfterContentInit","initializeButtons","changes","rearrangeButton","buttons","fromView","toView","index","splice","moveIndex","getMoveIndex","buttonToMove","tempInlineButtons","tempInMenuButtons","_menuPosition","pos","ContentChildren","[class.btn-group]","CLR_BUTTON_GROUP_DIRECTIVES","ClrButtonGroupModule","ClrLoadingButton","el","buttonState","clrLoadingChange","removeStyle","disabled","removeAttribute","setExplicitButtonWidth","setAttribute","SUCCESS","ERROR","boundingClientRect","ClrLoadingButton_1","animations","trigger","transition","style","opacity","animate","keyframes","transform","[attr.disabled]","CLR_LOADING_BUTTON_DIRECTIVES","ClrLoadingButtonModule","ClrButtonModule","EmptyAnchor","ClrHostWrappingModule","entryComponents","counter","ControlIdService","_idChange","BehaviorSubject","Layouts","ClrAriaLiveService","ngZone","_document","announce","message","politeness","polite","off","ariaLiveElement","createContainer","textContent","runOutsideAngular","clearTimeout","previousTimeout","setTimeout","createElement","id","add","NgZone","LayoutService","minLabelSize","maxLabelSize","layout","layoutValues","map","_labelSize","size","labelSizeIsValid","isVertical","isHorizontal","isCompact","COMPACT","isValid","labelSize","Number","isInteger","ControlClassService","layoutService","className","controlClass","invalid","grid","additional","controlClasses","trim","initControlClass","klass","startsWith","removeClass","ClrControlError","controlIdService","controlClassService","ariaLiveService","[class.clr-subtext]","[id]","ClrControlHelper","NgControlService","_controlChanges","setControl","control","IfErrorService","ngControlService","_statusChanges","controlChanges","listenForChanges","statusChanges","sendValidity","touched","triggerStatusChange","ClrIfError","ifErrorService","displayed","Error","displayError","hasError","getError","ClrLabel","enableGrid","ngOnInit","forAttr","idChange","disableGrid","HostBinding","MarkControlService","_touched","markAsTouched","ClrForm","markControlService","invalidControls","markAsDirty","updateAriaLiveText","from","querySelectorAll","updateAriaLive","onFormSubmit","errorList","labels","label","find","ERROR_NUMBER","toString","descendants","[class.clr-form]","[class.clr-form-horizontal]","[class.clr-form-compact]","ClrLayout","ClrAbstractContainer","_dynamic","addGrid","ContentChild","ClrControlContainer","_super","[class.clr-form-control]","[class.clr-form-control-disabled]","[class.clr-row]","HostWrapper","containerType","vcr","injector","get","cfr","ComponentFactoryResolver","createComponent","resolveComponentFactory","factory","containerRef","undefined","remove","instance","token","notFoundValue","WrappedFormControl","wrapperType","ngControl","touchedChange","updateValueAndValidity","triggerValidation","getProviderFromContainer","_containerInjector","listenForErrorStateChanges","startWith","distinctUntilChanged","setAriaDescribedBy","getAriaDescribedById","Type","Injector","NgControl","ClrControl","Self","[class.clr-input]","ClrCommonFormsModule","IS_TOGGLE","isToggleFactory","IS_TOGGLE_PROVIDER","ClrCheckboxWrapper","toggle","[class.clr-checkbox-wrapper]","[class.clr-toggle-wrapper]","ClrCheckbox","Attribute","ClrCheckboxContainer","inline","ClrCheckboxModule","activeCounter","IF_ACTIVE_ID","tokenFactory","IF_ACTIVE_ID_PROVIDER","IfActiveService","_currentChange","_current","ClrIfActive","ifActiveService","wasActive","activeChange","checkAndUpdateView","subscription","currentChange","newCurrentId","currentId","isNowActive","updateView","ClrIfOpen","IfExpandService","expandable","_loading","_expanded","_expandChange","expanded","ClrIfExpanded","expandedChange","_subscriptions","expandChange","CONDITIONAL_DIRECTIVES","ClrConditionalModule","FocusTrapTracker","_previousFocusTraps","activatePreviousTrapper","pop","FocusTrapDirective","focusTrapsTracker","localFocusEscaped","_config","strict","config","onFocusIn","bottomReboundEl","previousTrappedActiveElement","topReboundEl","createFocusableOffScreenEl","offScreenSpan","addReboundEls","hostElement","insertBefore","nextSibling","parentNode","removeReboundEls","setPreviousFocus","previousActiveElement","activeElement","FOCUS_TRAP_DIRECTIVES","ClrFocusTrapModule","LITTLE_ENDIAN_REGEX","MIDDLE_ENDIAN_REGEX","DELIMITER_REGEX","USER_INPUT_REGEX","MOBILE_USERAGENT_REGEX","RTL_REGEX","LITTLE_ENDIAN","format","MIDDLE_ENDIAN","BIG_ENDIAN","getNumberOfDaysInTheMonth","year","month","Date","getDate","DayViewModel","dayModel","isTodaysDate","isExcluded","isDisabled","isSelected","isFocusable","DayModel","date","isEqual","day","toDate","incrementBy","getFullYear","getMonth","clone","toComparisonString","pad","num","toDateString","toLocaleDateString","CalendarViewModel","calendar","selectedDay","focusableDay","today","firstDayOfWeek","excludedDates","currMonthDayViews","initializeCalendarView","_calendarView","prevMonthCalendar","previousMonth","nextMonthCalendar","nextMonth","daysFromPrevMonthInCalView","numDaysFromPrevMonthInCalView","daysFromNextMonthInCalView","NO_OF_DAYS_IN_A_WEEK","days","prevMonthDayViews","nextMonthDayViews","generateDayViewModels","slice","generateCalendarView","initializeSelectedDay","initializeFocusableDay","isDateExcluded","_a","minDate","maxDate","to","isCurrentCalendar","dayViews","isDayInCalendar","currentYear","currentMonth","firstDayOfCurrMonth","getDay","isDayInCalendarView","prev","curr","combinationArr","calendarView","setFocusableFlag","flag","updateFocusableDay","CalendarModel","initializeDaysInCalendar","noOfDaysInCalendar","fill","DateNavigationService","_todaysFullDate","_selectedDayChange","_displayedCalendarChange","_focusOnCalendarChange","_focusedDayChange","_displayedCalendar","setDisplayedCalendar","initializeTodaysDate","_today","notifySelectedDayChanged","initializeCalendar","focusedDay","changeMonth","changeYear","moveToNextMonth","moveToPreviousMonth","moveToCurrentMonth","displayedCalendar","incrementFocusDay","DatepickerFocusService","_ngZone","focusCell","elRef","ngZoneIsStableInBrowser","focusEl","querySelector","focusInput","elementIsFocused","onStable","first","LocaleHelperService","locale","_firstDayOfWeek","initializeLocaleData","_localeDays","narrow","_localeMonthsAbbreviated","_localeMonthsWide","_localeDateFormat","initializeFirstDayOfWeek","initializeLocaleDateFormat","initializeLocaleMonthsAbbreviated","initializeLocaleMonthsWide","initializeLocaleDays","tempArr","tempWideArr","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Wide","tempNarrowArr","Narrow","prevDays","getLocaleMonthNames","Abbreviated","getLocaleFirstDayOfWeek","getLocaleDateFormat","FormatWidth","Short","LOCALE_ID","DateIOService","_localeHelperService","disabledDates","cldrLocaleDateFormat","localeDisplayFormat","delimiters","localeDateFormat","initializeLocaleDisplayFormat","setMinDate","parseInt","setMaxDate","toLocaleLowerCase","test","extractDelimiters","console","toLocaleDisplayFormatString","isNaN","getTime","dateNo","monthNo","dateStr","monthStr","isValidMonth","isValidDate","validateAndGetDate","y","result","currYear","Math","floor","parseToFourDigitYear","getDateValueFromDateString","dateParts","match","firstPart","secondPart","thirdPart","ClrCalendar","_dateNavigationService","_datepickerFocusService","_dateIOService","_elRef","_subs","initializeSubscriptions","localeDays","displayedCalendarChange","focusedDayChange","calendarViewModel","focusOnCalendarChange","onKeyDown","keyCode","preventDefault","FocusService","_focused","DateFormControlService","_touchedChange","_dirtyChange","setDisabled","DatepickerEnabledService","_isUserAgentMobile","defaultView","navigator","userAgent","_innerWidth","ViewManagerService","_currentView","changeToMonthView","changeToYearView","changeToDayView","ClrDateContainer","dateNavigationService","datepickerEnabledService","dateFormControlService","focusService","viewManagerService","focusChange","toggleButton","isEnabled","isBooleanAttributeSet","ClrDateInput","viewContainerRef","dateIOService","datepickerFocusService","dateChange","previousDateChange","updateDate","getValidDateValueFromDate","initialClrDateInputValue","dateString","populateServicesFromContainerComponent","listenForUserSelectedDayChanges","listenForControlValueChanges","listenForTouchChanges","listenForDirtyChanges","listenForInputRefocus","processInitialInputs","setFocusStates","setFocus","placeholder","placeholderText","usingNativeDatepicker","onValueChange","validDateValue","usingClarityDatepicker","emitDateOutput","focused","datepickerHasFormControl","setByUserInteraction","updateInput","setMinutes","getMinutes","getTimezoneOffset","setProperty","setValue","date1","date2","of","hasControl","switchMap","valueChanges","selectedDayChange","dirtyChange","v","ClrDatepickerViewManager","isMonthView","isYearView","isDayView","[class.datepicker]","[attr.aria-modal]","ClrDay","_toggleService","_dayView","dayString","onDayViewFocus","dayView","selectDay","[class.day]","ClrDaypicker","_viewManagerService","ariaLiveMonth","updateAriaLiveYear","CALENDAR_MONTH","calendarMonth","CALENDAR_YEAR","calendarYear","CURRENT_MONTH","CURRENT_YEAR","localeMonthsAbbreviated","[class.daypicker]","ClrMonthpicker","_focusedMonthIndex","calendarMonthIndex","localeMonthsWide","monthIndex","getTabIndex","[class.monthpicker]","YearRangeModel","yearRange","generateYearRange","remainder","ceil","generateRange","k","nextDecade","previousDecade","currentDecade","inRange","ClrYearpicker","yearRangeModel","_focusedYear","updateRange","DECADE_RANGE","decadeRange","incrementFocusYearBy","middleYear","yrm","ariaLiveDecadeText","[class.yearpicker]","CLR_DATEPICKER_DIRECTIVES","ClrDatepickerModule","ClrInputContainer","ClrInput","ClrInputModule","FormsModule","TOGGLE_SERVICE","ToggleServiceFactory","DragEventType","TOGGLE_SERVICE_PROVIDER","ClrPasswordContainer","_toggle","ClrPassword","triggerFocus","ClrPasswordModule","ClrRadioWrapper","[class.clr-radio-wrapper]","ClrRadio","ClrRadioContainer","ClrRadioModule","ClrSelectContainer","multi","valueAccessor","SelectMultipleControlValueAccessor","wrapperClass","ClrSelect","[class.clr-select]","ClrSelectModule","ClrTextareaContainer","ClrTextarea","[class.clr-textarea]","ClrTextareaModule","ClrRangeContainer","idService","_hasProgress","val","valBool","getRangeProgressFillWidth","input","selectRootElement","inputWidth","offsetWidth","inputMinValue","min","inputMaxValue","max","inputMiddle","ClrRange","[class.clr-range]","ClrRangeModule","DatalistIdService","ClrDatalistContainer","ClrDatalistInput","datalistIdService","listValue","[attr.list]","ClrDatalist","datalistId","idValue","ClrDatalistModule","ClrFormsModule","CLR_LOADING_DIRECTIVES","ClrLoadingModule","OutsideClick","outsideClick","documentClick","OUSTIDE_CLICK_DIRECTIVES","ClrOutsideClickModule","DomAdapter","userDefinedWidth","clientRect","scrollBarWidth","scrollWidth","computedHeight","getComputedStyle","getPropertyValue","elementClientRect","bottom","right","minWidth","ClrDragEvent","dragEvent","dragPosition","group","dragDataTransfer","dropPointPosition","ClrDatagridSortOrder","DragAndDropEventBusService","dragStart","dragMove","dragEnd","drop","broadcast","DRAG_START","DRAG_MOVE","DRAG_END","DROP","DragEventListenerService","eventBus","hasDragStarted","attachDragListeners","draggableEl","listeners","customDragEvent","detachDragListeners","nestedListeners","getNativeEventObject","changedTouches","startOnEvent","moveOnEvent","endOnEvent","startEvent","initialPosition","pageX","pageY","selectEvent","stopImmediatePropagation","moveEvent","endEvent","eventType","generateDragEvent","ghostElement","nativeEvent","moveX","moveY","DraggableSnapshotService","domAdapter","draggableElClientRect","snapshotDragEvent","discard","ClrDraggableGhost","dragEventListener","draggableSnapshot","leaveAnimConfig","params","draggableGhostEl","setDefaultGhostSize","hasDraggableState","isAnimationConfigured","dragMoved","animateToOnLeave","topLeftPosition","findTopLeftPosition","setPositionStyle","findDropPointPosition","setSizeStyle","run","ClrIfDragged","dragStarted","dragEnded","DragHandleRegistrarService","_defaultHandleEl","_customHandleEl","makeElementHandle","registerCustomHandle","unregisterCustomHandle","GlobalDragModeService","enter","exit","ClrDraggable","dragHandleRegistrar","globalDragMode","dragOn","dragStartEmitter","dragMoveEmitter","dragEndEmitter","componentFactory","createDefaultGhost","cloneNode","destroyDefaultGhost","defaultHandleEl","customGhost","[class.draggable]","[class.being-dragged]","ClrDroppable","isDraggableMatch","_isDraggableOver","_dropTolerance","dragLeaveEmitter","dragEnterEmitter","dropEmitter","droppableEl","_group","dropToleranceGenerator","toleranceValues","tolerance","unsubscribeFrom","checkGroupMatch","draggableGroup","some","groupKey","isInDropArea","point","onDragStart","dragStartEvent","dragMoveSubscription","dragMoveEvent","onDragMove","dragEndSubscription","dragEndEvent","onDragEnd","isDraggableOver","dragEnterEvent","DRAG_ENTER","dragLeaveEvent","DRAG_LEAVE","dropEvent","dragStartSubscription","[class.droppable]","[class.draggable-match]","ClrDragHandle","[class.drag-handle]","CLR_DRAG_AND_DROP_DIRECTIVES","ClrDragAndDropModule","ClrExpandableAnimation","startHeight","clrExpandTrigger","animationDone","updateStartHeight","overflow","EXPANDABLE_ANIMATION_DIRECTIVES","ClrExpandableAnimationModule","ClrSpinner","ariaLive","_inline","_inverse","_small","_medium","assertive","[attr.aria-busy]","CLR_SPINNER_DIRECTIVES","ClrSpinnerModule","FOCUS_ON_VIEW_INIT","FOCUS_ON_VIEW_INIT_PROVIDER","useValue","ClrFocusOnViewInit","focusOnViewInit","directFocus","_isEnabled","onFocusout","FOCUS_ON_VIEW_INIT_DIRECTIVES","ClrFocusOnViewInitModule","CustomFilter","StateDebouncer","_change","nbChanges","changeStart","changeDone","Page","stateDebouncer","preventEmit","activated","_size","_sizeChange","oldSize","_totalItems","total","last","_last","totalItems","page","lastInPage","resetPageSize","FiltersProvider","_page","_all","hasActiveFilters","_b","_c","isActive","getActiveFilters","ret","resetPageAndEmitFilterChange","hasUnregistered","registered","RegisteredFilter","matchIndex","findIndex","item","accepts","filters","unregister","DatagridFilterRegistrar","setFilter","deleteFilter","ClrDatagridFilter","_filters","smartToggleService","subs","ariaExpanded","smartPosition","read","ClrDatagridFilter_1","NestedProperty","prop","splitProp","getPropValue","nestedProp","DatagridPropertyStringFilter","exact","search","propValue","toLowerCase","DatagridStringFilterImpl","filterFn","_rawValue","_lowerCaseValue","lowerCaseValue","property","equals","other","DatagridStringFilter","filterValueChange","initFilterValue","DatagridStringFilter_1","DatagridPropertyNumericFilter","low","high","DatagridNumericFilterImpl","_low","_high","vals","DatagridNumericFilter","popoverToggleService","initFilterValues","values","isFinite","DatagridNumericFilter_1","OompaLoompa","cdr","willyWonka","chocolate","latestFlavor","flavor","disableChocolateCheck","detectChanges","RowActionService","actionableCount","register","WillyWonka","_chocolate","ngAfterViewChecked","DatagridWillyWonka","ActionableOompaLoompa","hasActionableRow","ChangeDetectorRef","DetailService","toggleState","_state","_enabled","cache","isRowOpen","ExpandableRowsCount","detailService","expandableCount","enabled","ExpandableOompaLoompa","hasExpandableRow","DatagridPropertyComparator","compare","a","propA","propB","DatagridDisplayMode","DatagridRenderStep","Sort","_reverse","_comparator","emitChange","sortBy","forceReverse","comparator","reverse","WrappedColumn","columnView","templateRef","destroy","ClrDatagridColumn","_sort","changeDetectorRef","showSeparator","_colType","_sorted","sortedChange","_sortOrder","UNSORTED","sortOrderChange","customFilter","listenForSortingChanges","listenForDetailPaneChanges","stateChange","markForCheck","sort","sortOrder","_sortBy","sortIcon","sorted","_field","field","setupDefaultFilter","colType","updateFilterValue","ASC","DESC","sortable","custom","newValue","wrappedInjector","[class.datagrid-column]","[attr.aria-sort]","role","changeDetection","ChangeDetectionStrategy","OnPush","Items","trackBy","_smart","_displayed","_allChanges","_filtersSub","_sortSub","_pageSub","smartenUp","_filterItems","_sortItems","_changePage","items","emitAllChanges","smart","refresh","uninitialized","_filtered","firstItem","lastItem","ClrDatagridItems","differs","differ","iterableProxy","NgForOf","newItems","ngForOf","ngDoCheck","_rawItems","ngForTrackBy","diff","all","IterableDiffers","ClrDatagridPlaceholder","[class.datagrid-placeholder-container]","POPOVER_HOST_ANCHOR","SignpostFocusManager","_triggerEl","focusTrigger","SignpostIdService","setId","ClrSignpostTrigger","signpostIdService","signpostFocusManager","triggerEl","isOpen","prevIsOpen","focusOnClose","ariaControl","onSignpostTriggerClick","class","[attr.aria-label]","[attr.aria-expanded]","[attr.aria-controls]","[class.active]","ClrSignpost","useCustomTrigger","[class.signpost]","WrappedCell","cellView","ClrDatagridCell","[class.datagrid-cell]","[class.datagrid-signpost-trigger]","SelectionType","DatagridRenderOrganizer","_renderStep","alreadySized","filterRenderSteps","step","renderStep","testStep","resize","CALCULATE_MODE_ON","CLEAR_WIDTHS","COMPUTE_COLUMN_WIDTHS","ALIGN_COLUMNS","CALCULATE_MODE_OFF","DisplayModeService","renderOrganizer","_view","DISPLAY","CALCULATE","DatagridColumnChanges","nbSelection","Selection","_items","preserveSelection","prevSelectionRefs","lockedRefs","_selectionType","None","rowSelectionMode","debounce","_selectable","clearSelection","allChanges","updatedItems","updateLockedRef","selectionType","Single","newSingle_1","trackBy_1","selectionUpdated_1","currentSingle","prevSingleSelectionRef","lookup","maybe","Multi","leftOver_1","trackBy_2","selectionUpdated_2","selectedIndex","selected","_currentSingle","updateCurrent","selectItem","deselectItem","indexOfItem","removedItems_1","locked","setSelected","isAllSelected","displayedItems","isLocked","canItBeLocked","isArray","lockItem","lock","ref_1","lockedItem","toggleAll","currentIndex","WrappedRow","rowView","nbRow","DatagridIfExpandService","expandableId","_replace","_animate","setReplace","replaceValue","ClrDatagridRow","selection","rowActionService","globalExpandable","displayMode","SELECTION_TYPE","expandAnimationTrigger","_selected","selectedChanged","_detailOpenLabel","_detailCloseLabel","displayCells","radioId","checkboxId","combineLatest","expandReplaceValue","expandChangeValue","replaced","toggleExpand","expandAnimation","dgCells","cell","destroyed","_scrollableCells","insert","viewChange","detach","_calculatedCells","[class.datagrid-row]","[class.datagrid-selected]","[attr.aria-owns]","StateProvider","debouncer","by","activeFilters","activeFilters_1","activeFilters_1_1","TableSizeService","_tableRef","table","tableRef","getColumnDragHeight","ALL_COLUMN_CHANGES","ColumnsService","columns","_cache","subject","hasCache","resetToLastCache","column","columnStates","hideable","emitStateChangeAt","columnIndex","emitStateChange","ClrDatagrid","organizer","expandableRows","stateProvider","datagridId","singleSelectedChanged","clrDgSingleSelectionAriaLabel","clrDgSingleActionableAriaLabel","clrDetailExpandableAriaLabel","dataChanged","rows","row","_displayedRows","datagridTable","_projectedDisplayColumns","_projectedCalculationColumns","_calculationRows","[class.datagrid-host]","[class.datagrid-detail-open]","ClrDatagridActionBar","[class.datagrid-action-bar]","clrDgActionId","ClrDatagridActionOverflow","zone","openState","focusFirstButton","closeOverflowContent","firstButton","ColumnResizerService","_resizedBy","widthBeforeResize","minColumnWidth","startResize","isWithinMaxResizeRange","endResize","calculateResize","maxResizeRange","ClrDatagridColumnSeparator","columnResizerService","tableSizeService","columnSeparatorId","showTracker","resizeTrackerEl","tableHeight","moveTracker","resizedBy","redFlagTracker","hideTracker","[class.datagrid-column-separator]","ClrDatagridColumnToggleTitle","ClrDatagridColumnToggleButton","columnsService","allSelected","hideableColumns","hidden","hideableColumn","HIDDEN","ClrDatagridColumnToggle","columnSwitchId","_allColumnsVisible","hideableColumnStates","columnState","toggleColumnState","columnToToggle","toggleSwitchPanel","menuDescriptionElement","allSelectedElement","trackByFn","[class.column-switch-wrapper]","DatagridDetailRegisterer","expandableRowsCount","ClrDatagridDetailHeader","[class.datagrid-detail-header]","ClrDatagridDetail","closeCheck","[class.datagrid-detail-pane]","ClrIfDetail","viewContainer","skip","model","togglePanel","showPanel","stateChangeParams","$implicit","ClrDatagridDetailBody","[class.datagrid-detail-body]","ClrDatagridFooter","hasHideableColumns","[class.datagrid-footer]","COLUMN_STATE","columnStateFactory","KeyCodes","IEKeyCodes","ClrSelectedState","COLUMN_STATE_PROVIDER","ClrDatagridHideableColumn","titleTemplateRef","hiddenChange","clrDgHidden","_hidden","ClrDatagridItemsTrackBy","ClrDatagridPageSize","pageSizeOptions","ClrDatagridPagination","currentChanged","_pageSubscription","middlePages","updateCurrentPage","parsed","currentPageInputRef","[class.pagination]","ClrDatagridRowDetail","replacedRow","replaceChange","_beginningOfExpandableContentAriaText","_endOfExpandableContentAriaText","[class.datagrid-row-flex]","[class.datagrid-row-detail]","[class.datagrid-container]","[attr.id]","DatagridCellRenderer","clearWidth","stateSubscription","runAllChanges","stateChanges","WIDTH","setWidth","setHidden","strictWidth","DatagridHeaderRenderer","resizeEmitter","widthSet","autoSet","detectStrictWidth","widthAfterResize","computeWidth","getColumnWidthState","setColumnState","NoopDomAdapter","DatagridRowRenderer","cells","domAdapterFactory","DatagridMainRenderer","_heightSet","columnsSizesStable","shouldStabilizeColumns","computeHeadersWidth","sizeChange","resetDatagridHeight","toggleDetailPane","setupColumns","headers","stabilizeColumns","shouldComputeHeight","computeDatagridHeight","header","nbColumns","allStrict","deps","CLR_DATAGRID_DIRECTIVES","ClrDatagridModule","ClrStackBlock","parent","uniqueId","_changedChildren","_fullyInitialized","_changed","addChild","getStackChildrenId","[class.stack-block]","ClrStackView","editable","save","_editMode","editingChange","ClrStackHeader","stackView","StackControl","modelChange","editing","ClrStackInput","inputs","outputs","ClrStackSelect","ClrStackViewCustomTags","ClrStackContentInput","[attr.aria-labelledby]","CLR_STACK_VIEW_DIRECTIVES","ClrStackViewModule","keyValidator","ArrowUp","ArrowDown","ArrowRight","ArrowLeft","Space","Escape","preventArrowKeyScroll","validKey","getKeyCodes","code","TreeNodeModel","UNSELECTED","complete","propagateUp","propagateDown","INDETERMINATE","children","child","_updateSelectionFromChildren","toggleSelection","propagate","newState","SELECTED","computeSelectionStateFromChildren","oneSelected","oneUnselected","DeclarativeTreeNodeModel","_addChild","_removeChild","TreeFeaturesService","selectable","eager","childrenFetched","treeFeaturesFactory","existing","TREE_FEATURES_PROVIDER","TreeFocusManagerService","_focusRequest","_focusChange","findSiblings","rootNodeModels","findLastVisibleInNode","lastChild","findNextFocusable","siblings","selfIndex","findLastVisibleInTree","lastRootNode","findNodeAbove","findNodeBelow","focusNode","nodeId","broadcastFocusedNode","focusedNodeId","focusParent","focusFirstVisibleNode","focusModel","focusLastVisibleNode","focusNodeAbove","focusNodeBelow","ClrTreeNodeLink","activate","click","ClrTreeNode","featuresService","expandService","focusManager","STATES","skipEmitChange","selectedChange","contentContainerTabindex","recursion","_model","context","clrModel","_lView","isExpandable","focusRequest","focusTreeNode","checkTabIndex","treeNodeLinkList","setTabIndex","contentContainer","broadcastFocusOnContainer","expandOrFocusFirstChild","collapseOrFocusParent","Home","End","Enter","triggerDefaultAction","treeNodeLink","overflow-y","[attr.role]","[class.clr-tree-node]","ClrTree","focusManagerService","tabindex","setRootNodes","[attr.tabindex]","[attr.aria-multiselectable]","ArrowKeyDirection","RecursiveTreeNodeModel","getChildren","_children","clearChildren","fetchChildren","asyncChildren","then","raw","wrapChildren","isObservable","rawModels","ClrRecursiveForOf","ngOnChanges","wrapped","nodes","childrenFetchSubscription","root","RecursiveChildren","shouldRender","getContext","CLR_TREE_VIEW_DIRECTIVES","ClrTreeViewModule","ClrDataModule","FocusableItem","customFocusableItemProvider","implementation","_unlistenFuncs","reset","listenToArrowKeys","move","UP","DOWN","registerContainer","activateCurrent","moveTo","blur","direction","moved","detachListeners","unlisten","clrFocusServiceFactory","FOCUS_SERVICE_PROVIDER","Linkers","linkParent","linkVertical","loop","up","down","wrapObservable","observable","onSubscribe","onUnsubscribe","Observable","observer","DropdownFocusHandler","focusBackOnTrigger","resetChildren","moveToFirstItemWhenOpen","handleRootFocus","originalEvent","_trigger","_container","stopPropagation","take","relatedTarget","openAndGetChildren","closeAndGetThis","ReplaySubject","addChildren","DROPDOWN_FOCUS_HANDLER_PROVIDER","RootDropdownService","closeMenus","clrRootDropdownFactory","Point","ROOT_DROPDOWN_PROVIDER","ClrDropdown","dropdownService","isMenuClosable","[class.dropdown]","[class.open]","BasicFocusableItem","BASIC_FOCUSABLE_ITEM_PROVIDER","useClass","ClrDropdownItem","dropdown","_dropdownService","focusableItem","setByDeprecatedDisabled","onDropdownItemClick","[class.disabled]","[class.dropdown-item]","[attr.aria-disabled]","TabsLayout","Popover","scrollableElements","boundOnScrollListener","emitScrollEvent","bind","anchorAlign","popoverAlign","offsetX","_d","offsetY","_e","useAnchorParent","addScrollEventListeners","anchorRect","popoverRect","leftDiff","topDiff","LEFT_TOP","TOP_LEFT","TOP_CENTER","TOP_RIGHT","RIGHT_TOP","LEFT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","RIGHT_BOTTOM","LEFT_CENTER","RIGHT_CENTER","popoverComputedStyle","marginLeft","marginRight","marginTop","marginBottom","round","_scroll","release","removeScrollEventListeners","isPositioned","scrolls","addEventListener","removeEventListener","computedStyles","overflowX","overflowY","AbstractPopover","parentHost","updateAnchor","popoverOptions","closeOnOutsideClick","anchorElem","popoverInstance","attachESCListener","detachESCListener","ignore","detachOutsideClickListener","anchorPoint","popoverPoint","attachOutsideClickListener","ignoreGlobalESCListener","documentESCListener","hostClickListener","ignoredElement","ignoredElementClickListener","ClrDropdownMenu","nested","focusHandler","allowMultipleOpen","toArray","notifyOnChanges","[class.dropdown-menu]","ClrDropdownTrigger","isRootLevelToggle","onDropdownTriggerClick","[class.dropdown-toggle]","[class.expandable]","[attr.aria-haspopup]","CLR_DROPDOWN_DIRECTIVES","ClrDropdownModule","ALERT_TYPES","AlertIconAndTypesService","defaultIconShape","_alertIconShape","_alertType","iconInfoFromType","shape","title","returnObj","cssClass","MultiAlertService","allAlerts","alert","_closed","activeAlerts","manage","alerts","ClrAlertText","ClrAlert","iconService","multiAlertService","isSmall","closable","isAppLevel","clrCloseButtonAriaLabel","_closedChanged","currentAlert","announceAriaLiveMessage","alertType","alertIconShape","alertTexts","alertText","ClrAlertItem","ClrAlerts","currentAlertIndexChange","currentAlertChange","[class.alerts]","[class.alert-danger]","[class.alert-info]","[class.alert-success]","[class.alert-warning]","ClrAlertsPager","multiAlertServiceChanges","pageUp","pageDown","[class.alerts-pager]","CLR_ALERT_DIRECTIVES","ClrAlertModule","ClrEmphasisModule","ResponsiveNavCodes","NAV_LEVEL_1","NAV_LEVEL_2","NAV_CLOSE_ALL","NAV_OPEN","NAV_CLOSE","NAV_TOGGLE","NAV_CLASS_HAMBURGER_MENU","NAV_CLASS_OVERFLOW_MENU","NAV_CLASS_TRIGGER_1","NAV_CLASS_TRIGGER_2","NAV_CLASS_LEVEL_1","NAV_CLASS_LEVEL_2","ResponsiveNavControlMessage","_controlCode","_navLevel","ResponsiveNavigationService","responsiveNavList","registerNavSubject","controlNavSubject","closeAllNavs","registerNav","navLevel","isNavRegistered","unregisterNav","sendControlMessage","controlCode","ClrMainContainer","responsiveNavService","_classList","_subscription","navControl","processMessage","navClass","controlNav","[class.main-container]","CLR_LAYOUT_DIRECTIVES","ClrMainContainerModule","MainContainerWillyWonka","NavDetectionOompaLoompa","sum","ClrHeader","isNavLevel1OnPage","isNavLevel2OnPage","openNavLevel","responsiveNavCodes","registeredNavs","navLevelList","initializeNavTriggers","resetNavTriggers","navList","closeOpenNav","toggleNav","[class.header]","ClrNavLevel","level","addNavClass","navHostClassList","_level","onMouseClick","navHost","CLR_NAVIGATION_DIRECTIVES","ClrNavigationModule","TemplateRefContainer","TEMPLATE_REF_DIRECTIVES","ClrTemplateRefModule","TabsWillyWonka","ActiveOompaLoompa","ifActive","AriaService","TabsService","tab","active","tabLink","inOverflow","nbTabContentComponents","ClrTabContent","ariaService","tabsService","tabContentId","viewRef","tabContentViewContainer","ariaLabelledBy","ariaControls","nbTabsComponent","TABS_ID","ClrFocusDirection","TABS_ID_PROVIDER","nbTabLinkComponents","ClrTabLink","tabsId","tabLinkId","templateRefContainer","_inOverflow","[attr.aria-hidden]","[class.btn]","ClrTab","ClrTabOverflowContent","AccordionStrategy","AccordionStatus","ClrKeyFocusItem","ClrKeyFocus","focusOnLoad","_focusableItems","clrKeyFocusItems","elements","initializeFocus","focusableItems","currentItem","focusCurrent","positionInRange","listenForItemUpdates","handleKeyboardEvent","currentItemElement","getItemPosition","prevKeyPressed","currentFocusIsNotFirstItem","nextKeyPressed","currentFocusIsNotLastItem","setClickedItemCurrent","_item","keyCodes","BOTH","ClrTabs","_tabLinkDirectives","tabLinkElements","_mousedown","link","overflowTabs","activeTab","keyFocus","overflowPosition","toggleOverflowOnPosition","_tabOverflowEl","resetKeyFocusCurrentToActive","activeTabPosition","toggleOverflowOnClick","isCurrentInOverflow","openOverflowOnFocus","closeOnFocusOut","closeOnEscapeKey","tabOverflowTrigger","listenForTabLinkChanges","tabs","tabLinkDirectives","KEY_FOCUS_DIRECTIVES","ClrKeyFocusModule","CLR_TABS_DIRECTIVES","ClrTabsModule","VerticalNavGroupRegistrationService","navGroupCount","registerNavGroup","unregisterNavGroup","VerticalNavIconService","_icons","registerIcon","unregisterIcon","VerticalNavService","_animateOnCollapsed","_collapsedChanged","_collapsed","_collapsible","collapsible","updateCollapseBehavior","collapsed","ClrVerticalNav","_navService","_navIconService","_navGroupRegistrationService","_sub","collapsedChanged","hasIcons","toggleByButton","[class.is-collapsed]","[class.has-nav-groups]","[class.has-icons]","VerticalNavGroupService","ClrVerticalNavGroup","_itemExpand","_navGroupService","wasExpanded","_expandAnimationState","expandAnimationState","animateOnCollapsed","goingToCollapse","expandGroup","collapseGroup","expandAnimationDone","toState","visibility","EXPANDED_STATE","ClrVerticalNavGroupChildren","ClrVerticalNavIcon","_verticalNavIconService","ClrVerticalNavLink","expandParentNavGroup","CLR_VERTICAL_NAV_DIRECTIVES","ClrVerticalNavModule","ClrLayoutModule","ScrollingService","stopScrolling","resumeScrolling","ClrModal","_scrollingService","modalId","_openChanged","staticBackdrop","skipAnimation","bypassScrollService","stopClose","altClose","currentValue","focusTrap","fadeDone","viewProviders","ClrModalBody","mouseDown","mouseUp","CLR_MODAL_DIRECTIVES","ClrModalModule","SIGNPOST_POSITIONS","top-left","top-middle","top-right","right-top","right-middle","right-bottom","bottom-right","bottom-middle","bottom-left","left-bottom","left-middle","left-top","default","POSITIONS","ClrSignpostContent","signpostContentId","setPosition","[class.signpost-content]","CLR_SIGNPOST_DIRECTIVES","ClrSignpostModule","TooltipIdService","updateId","ClrTooltip","[class.tooltip]","SIZES","ClrTooltipContent","tooltipIdService","[class.tooltip-content]","[style.opacity]","ClrTooltipTrigger","tooltipId","ariaDescribedBy","showTooltip","hideTooltip","[class.tooltip-trigger]","[attr.aria-describedby]","CLR_TOOLTIP_DIRECTIVES","ClrTooltipModule","ClrPopoverModule","ButtonHubService","buttonsReady","_previousBtnClicked","_nextBtnClicked","_dangerBtnClicked","_cancelBtnClicked","_finishBtnClicked","_customBtnClicked","buttonClicked","buttonType","PageCollectionService","_pagesReset","pages","pageCount","pagesCount","pagesAsArray","getPageById","foundPages","checkResults","getPageByIndex","pagesLastIndex","getPageIndex","results","requestedPageId","foundPagesCount","pageRange","start","end","getPageRangeFromPages","otherPage","startIndex","endIndex","pageIndex","otherPageIndex","getPreviousPage","previousPageIndex","previousPageIsCompleted","completed","getNextPage","nextPageIndex","getStepItemIdForPage","pageIdParts","commitPage","pageHasOverrides","stopNext","onCommit","updateCompletedStates","firstIncompleteIndex","findFirstIncompletePageIndex","returnIndex","findFirstIncompletePage","myIncompleteIndex","WizardNavigationService","pageCollection","buttonService","_currentChanged","navServiceLoaded","forceForwardNavigation","_movedToNextPage","_wizardFinished","_movedToPreviousPage","_cancelWizard","wizardHasAltCancel","wizardHasAltNext","wizardStopNavigation","wizardDisableStepnav","previousButtonSubscription","previousBtnClicked","currentPageIsFirst","previousStepDisabled","previousButtonClicked","nextButtonSubscription","nextBtnClicked","checkAndCommitCurrentPage","dangerButtonSubscription","dangerBtnClicked","finishButtonSubscription","finishBtnClicked","customButtonSubscription","customBtnClicked","customButtonClicked","cancelButtonSubscription","cancelBtnClicked","pageOnCancel","cancel","pagesResetSubscription","pagesReset","setFirstPageCurrent","_currentPage","onLoad","currentPageIsLast","forceNext","iAmTheLastPage","isNext","isDanger","isDangerNext","isFinish","readyToComplete","primaryButtonClicked","finishButtonClicked","dangerButtonClicked","nextButtonClicked","finish","goTo","pageToGoToOrId","lazyComplete","pageToGoTo","myPages","pagesToCheck","goingForward","currentPageIndex","canGoTo","previousPagePasses","okayToMove","setLastEnabledPageCurrent","allPages","lastCompletedPageIndex","updateNavigation","toSetCurrent","HeaderActionService","navService","wizardHdrActions","wizardHeaderActions","hasHeaderActions","currentPageHasHeaderActions","wizardHasHeaderActions","wizardHeaderActionIndex","ClrWizardHeaderAction","headerActionClicked","ClrWizardPageButtons","pageButtonsTemplateRef","ClrWizardPageHeaderActions","pageHeaderActionsTemplateRef","ClrWizardPageNavTitle","pageNavTitleTemplateRef","ClrWizardPageTitle","pageTitleTemplateRef","wizardPageIndex","ClrWizardPage","_nextStepDisabled","nextStepDisabledChange","_previousStepDisabled","previousStepDisabledChange","_hasError","_stopCancel","stopCancelChange","_stopNext","_complete","nextStepDisabled","previousCompleted","pageTitle","pageNavTitle","_headerActions","_buttons","makeCurrent","[class.clr-wizard-page]","ClrWizard","headerActionService","_forceForward","_stopNavigation","_disableStepnav","_stopModalAnimations","onCancel","wizardFinished","onReset","currentPageChanged","onMoveNext","onMovePrevious","listenForNextPageChanges","listenForPreviousPageChanges","listenForCancelChanges","listenForFinishedChanges","listenForPageChanges","headerActions","updateNavOnPageChanges","skipChecksAndEmits","forceFinish","stopNavigation","modalCancel","checkAndCancel","currentPageHasOverrides","stopCancel","pageId","movedToNextPage","wizardTitle","movedToPreviousPage","notifyWizardCancel","emitWizardFinished","forEachAddedItem","forEachRemovedItem","[class.clr-wizard]","[class.wizard-md]","[class.wizard-lg]","[class.wizard-xl]","[class.lastPage]","DEFAULT_BUTTON_TYPES","CUSTOM_BUTTON_TYPES","ClrWizardButton","wasClicked","checkDefaultAndCustomType","valueToCheck","typeToLookUp","nav","isCancel","isPrevious","ClrWizardCustomTags","ClrWizardStepnav","pageService","ClrWizardStepnavItem","pageGuard","isComplete","isCurrent","[attr.aria-selected]","[class.clr-nav-link]","[class.nav-item]","[class.no-click]","[class.complete]","[class.error]","CLR_WIZARD_DIRECTIVES","ClrWizardModule","accordionCount","AccordionPanelModel","accordionId","status","Inactive","templateId","AccordionModel","strategy","Default","_panels","setStrategy","updatePanelOrder","ids","removeOldPanels","addPanel","panelId","panelIsOpen","closeAllPanels","disablePanel","panels","panel","AccordionService","accordion","_panelsChanges","getPanelChanges","emitUpdatedPanels","panelAnimation","display","stepAnimation","ClrAccordionDescription","[class.clr-accordion-description]","ClrAccordionPanel","accordionService","ifExpandService","panelOpen","panelOpenChange","isAccordion","tap","emitPanelChange","previousValue","collapsePanelOnAnimationDone","getPanelStateClasses","getAccordionContentId","getAccordionHeaderId","[class.clr-accordion-panel]","ClrAccordionTitle","[class.clr-accordion-title]","ClrAccordion","multiPanel","setAccordionStrategy","listenForDOMChanges","[class.clr-accordion]","ClrAccordionContent","AccordionWillyWonka","AccordionOompaLoompa","ClrAccordionModule","StepperModel","stepperModelInitialize","getNumberOfIncompletePanels","getNumberOfOpenPanels","openFirstPanel","Complete","navigateToNextPanel","currentPanelId","currentPanelValid","completePanel","openNextPanel","setPanelError","overrideInitialPanel","setPanelsWithErrors","resetPanels","resetPanel","getNextPanel","resetAllFuturePanels","firstPanel","getFirstPanel","nextPanel","StepperService","panelsCompleted","getAllCompletedPanelChanges","_activeStepChanges","activeStep","updateNextStep","allPanelsCompleted","ClrStepButtonType","ClrStepperPanel","formGroupName","ngModelGroup","stepperService","_value","triggerAllFormControlValidationIfError","listenToFocusChanges","headerButton","triggerAllFormControlValidation","formGroup","controls","FormControl","FormGroup","FormGroupName","NgModelGroup","ClrTimelineLayout","ClrTimelineStepState","ClrStepButton","clrStep","Next","submitButton","Submit","valid","[class.clr-step-button]","[type]","ClrStepper","ngForm","form","listenForPanelsCompleted","listenForFormResetChanges","initialPanel","pristine","ngSubmit","setPanelsWithFormErrors","panelsWithErrors","FormGroupDirective","NgForm","[class.clr-stepper-forms]","StepperWillyWonka","StepperOompaLoompa","ClrStepperModule","ClrProgressBar","externalId","_ID","displayAriaLive","displayValue","_labeled","_fade","_loop","_success","_danger","_flash","_flashDanger","displayval","CLR_PROGRESS_BAR_DIRECTIVES","ClrProgressBarModule","TimelineIconAttributeService","attributeMap","Map","set","NOT_STARTED","iconShape","ariaLabel","CURRENT","PROCESSING","getAriaLabel","getIconShape","ClrTimeline","[class.clr-timeline]","ClrTimelineStepTitle","[class.clr-timeline-step-title]","ClrTimelineStep","iconAttributeService","stepTitle","stepTitleText","innerText","[class.clr-timeline-step]","ClrTimelineStepDescription","[class.clr-timeline-step-description]","ClrTimelineStepHeader","[class.clr-timeline-step-header]","CLR_TIMELINE_DIRECTIVES","ClrTimelineModule","ClarityModule"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAezB,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2H5B,EAAvH6B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO1B,OAAO6B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAIyB,EAAWP,MAAIY,GAAKD,EAAI,EAAI7B,EAAE8B,GAAKD,EAAI,EAAI7B,EAAE0B,EAAQC,EAAKG,GAAK9B,EAAE0B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK5B,OAAOgC,eAAeR,EAAQC,EAAKG,GAAIA,EAGzD,SAASK,EAAQC,EAAYC,GAChC,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAiDpD,SAASE,EAASC,GACrB,IAAItB,EAAsB,mBAAXuB,QAAyBA,OAAOC,SAAUC,EAAIzB,GAAKsB,EAAEtB,GAAIC,EAAI,EAC5E,GAAIwB,EAAG,OAAOA,EAAEpB,KAAKiB,GACrB,GAAIA,GAAyB,iBAAbA,EAAElB,OAAqB,MAAO,CAC1CsB,KAAM,WAEF,OADIJ,GAAKrB,GAAKqB,EAAElB,SAAQkB,OAAI,GACrB,CAAEK,MAAOL,GAAKA,EAAErB,KAAM2B,MAAON,KAG5C,MAAM,IAAIO,UAAU7B,EAAI,0BAA4B,mCAGjD,SAAS8B,EAAOR,EAAGpB,GACtB,IAAIuB,EAAsB,mBAAXF,QAAyBD,EAAEC,OAAOC,UACjD,IAAKC,EAAG,OAAOH,EACf,IAAmBT,EAAYkB,EAA3B9B,EAAIwB,EAAEpB,KAAKiB,GAAOU,EAAK,GAC3B,IACI,WAAc,IAAN9B,GAAgBA,KAAM,MAAQW,EAAIZ,EAAEyB,QAAQE,MAAMI,EAAGC,KAAKpB,EAAEc,OAExE,MAAOO,GAASH,EAAI,CAAEG,MAAOA,GACjC,QACQ,IACQrB,IAAMA,EAAEe,OAASH,EAAIxB,EAAU,SAAIwB,EAAEpB,KAAKJ,GAE1D,QAAkB,GAAI8B,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGJ,SAASG,IACZ,IAAK,IAAIH,EAAK,GAAI/B,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3C+B,EAAKA,EAAGI,OAAON,EAAO3B,UAAUF,KACpC,OAAO+B,MCtICK,ECAAC,eCCZ,SAAAC,KAGA,OAHaA,EAAgBhC,EAAA,CAD5BiC,EAAAA,UAAU,CAAEC,SAAU,cACVF,MCEAG,EAAmC,CAACH,GAGjDI,EAAA,WAAA,SAAAA,KAA4B,OAAfA,EAAapC,EAAA,CADzBqC,EAAAA,SAAS,CAAEC,QAAS,CAACC,EAAAA,cAAeC,aAAc,CAACL,GAAsBM,QAAS,CAACN,MACvEC,GAAb,gBCHA,SAAAM,IAKUxD,KAAAyD,OAAiB,EACjBzD,KAAA0D,YAAgC,IAAIC,EAAAA,QAEpC3D,KAAA4D,iBAAmC,IAAID,EAAAA,QA2CjD,OAzCEnE,OAAAgC,eAAWgC,EAAAtD,UAAA,aAAU,KAArB,WACE,OAAOF,KAAK0D,YAAYG,gDAG1BrE,OAAAgC,eAAWgC,EAAAtD,UAAA,YAAS,KAKpB,WACE,OAAOF,KAAK8D,gBANd,SAAqBC,GACnB/D,KAAK8D,WAAaC,EAClB/D,KAAK4D,iBAAiB3B,KAAK8B,oCAOtBP,EAAAtD,UAAA8D,eAAP,WACE,OAAOhE,KAAK4D,iBAAiBC,gBAG/BrE,OAAAgC,eAAWgC,EAAAtD,UAAA,OAAI,KAQf,WACE,OAAOF,KAAKyD,WATd,SAAgBvB,GACdA,IAAUA,EACNlC,KAAKyD,QAAUvB,IACjBlC,KAAKyD,MAAQvB,EACblC,KAAK0D,YAAYzB,KAAKC,qCAQ1B1C,OAAAgC,eAAIgC,EAAAtD,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAK8D,4CAOPN,EAAAtD,UAAA+D,gBAAP,SAAuBF,GACrB/D,KAAKkE,UAAYH,EACjB/D,KAAKmE,MAAQnE,KAAKmE,MAjDTX,EAAuB1C,EAAA,CADnCsD,EAAAA,cACYZ,MCMba,EAAA,WAOE,SAAAA,EACUC,EACAC,EACkBC,GAH5B,IAAAC,EAAAzE,KACUA,KAAAsE,SAAAA,EACAtE,KAAAuE,iBAAAA,EACkBvE,KAAAwE,SAAAA,EATrBxE,KAAA0E,mBAAoB,EACpB1E,KAAA2E,eAAgB,EAGf3E,KAAA4E,cAAgC,GAOtC5E,KAAK4E,cAAcpC,KACjB+B,EAAiBM,WAAWC,WAAU,SAAAX,GAChCA,GACFM,EAAKM,oBACLN,EAAKO,mBACLP,EAAKQ,qBAELR,EAAKS,6BAGTX,EAAiBP,iBAAiBc,WAAU,SAAAf,GAE1CU,EAAKU,aAAepB,MAyI5B,OAnISM,EAAAnE,UAAA+E,kBAAP,WAAA,IAAAR,EAAAzE,KACMA,KAAK2E,gBACP3E,KAAKoF,iBAAmBC,EAAAA,UAAUrF,KAAKwE,SAAU,SAAU,CAAEc,SAAS,IACtEtF,KAAKuF,mBAAqBvF,KAAKoF,iBAC5BI,KAAKC,EAAAA,OAAOzF,KAAK0F,sCACjBZ,WAAU,WACTL,EAAKF,iBAAiBJ,MAAO,EAC7BM,EAAKkB,sBAYNtB,EAAAnE,UAAA0F,qBAAP,WACM5F,KAAKoF,mBACPpF,KAAKuF,mBAAmBM,qBACjB7F,KAAKoF,mBAIRf,EAAAnE,UAAAwF,oCAAR,SAA4C3B,GAK1C,IAHA,IAAI/C,EAA2B+C,EAAM/C,OAG9BA,EAAO8E,WAAgD,SAAnC9E,EAAO+E,cAAcC,WAC9ChF,EAASA,EAAO+E,cAMlB,QAAI/E,EAAO8E,YAEF9E,EAAO8E,UAAUG,SAAS,wBAO9B5B,EAAAnE,UAAA8E,iBAAP,WAAA,IAAAP,EAAAzE,KACMA,KAAK0E,oBACP1E,KAAKkG,sBAAwBlG,KAAKsE,SAAS6B,OAAOnG,KAAKwE,SAAU,SAAS,SAACT,GACrEA,IAAUU,EAAKU,oBAEVV,EAAKU,cAEZV,EAAKF,iBAAiBJ,MAAO,EAEoBJ,EAAM/C,OACxCoF,cAMhB/B,EAAAnE,UAAAmG,oBAAP,WACMrG,KAAK0E,2BACA1E,KAAKmF,aACRnF,KAAKkG,wBACPlG,KAAKkG,+BACElG,KAAKkG,yBAMX7B,EAAAnE,UAAA6E,kBAAP,WAAA,IAAAN,EAAAzE,KACEA,KAAKsG,eAAiBtG,KAAKsE,SAAS6B,OAAOnG,KAAKwE,SAAU,kBAAkB,SAAAT,GAC1EU,EAAKF,iBAAiBJ,MAAO,EAC7BM,EAAKkB,qBAIFtB,EAAAnE,UAAAqG,qBAAP,WACMvG,KAAKsG,iBACPtG,KAAKsG,wBACEtG,KAAKsG,iBAKhB9G,OAAAgC,eAAW6C,EAAAnE,UAAA,kBAAe,KAG1B,WACE,OAAOF,KAAKwG,sBAJd,SAA2BC,GACzBzG,KAAKwG,iBAAmBC,mCAO1BjH,OAAAgC,eAAW6C,EAAAnE,UAAA,iBAAc,KAGzB,WACE,OAAOF,KAAK0G,qBAJd,SAA0BD,GACxBzG,KAAK0G,gBAAkBD,mCAMlBpC,EAAAnE,UAAAyG,cAAP,WACE3G,KAAK0G,gBAAgBE,cAAcR,SAG9B/B,EAAAnE,UAAAyF,eAAP,WACE3F,KAAK6G,gBAAgBD,cAAcR,SAIrC5G,OAAAgC,eAAW6C,EAAAnE,UAAA,aAAU,KAGrB,WACE,OAAOF,KAAK8G,iBAJd,SAAsBC,GACpB/G,KAAK8G,YAAcC,mCAQb1C,EAAAnE,UAAAgF,wBAAR,WACElF,KAAK4F,uBACL5F,KAAKqG,sBACLrG,KAAKuG,wBAEPlC,EAAAnE,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,iBACtC7F,KAAKkF,oEAvJaiC,EAAAA,iBACQ3D,SACU4D,aAAYrG,WAAA,CAAA,CAAAsG,KAA/CC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,eAVCnD,EAAuBvD,EAAA,CADnCsD,EAAAA,aAWI3C,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,YAVCnD,GAAb,ILTA,SAAYzB,GACVA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,IAAA,GAAA,MAJF,CAAYA,IAAAA,EAAoB,MCApBC,EAAAA,EAAAA,eAAAA,EAAAA,aAAY,KACtBA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,IAAA,GAAA,MKMK,ICTK4E,EDSCC,EAA0B,SAAAC,GACrC,OAAAvH,EAAAA,EAAA,GACKuH,GAAQ,CACXC,MAAO,EAAID,EAASC,QAcXC,EAA6B,SAACF,EAAUG,GACnD,IAAMC,EAAgBJ,EAASK,SAAWF,EAAU,IAAO,IAC3D,OAAIC,EAAgB,GAAKA,EAAgB,EAChCJ,EAEPvH,EAAAA,EAAA,GACKuH,GAAQ,CACXK,QAASD,KAKf,SAAgBE,EAAyBC,EAAoBC,EAAqBC,GAChF,OAAO,SAACT,GAAqD,OAAAQ,EAAMD,EAAKP,GAAWS,IAGrF,SAAgBC,EAAMV,EAA8BW,EAAoBN,GACtE,IAAIO,EAAQD,EAAOE,KACfC,EAAQH,EAAOI,IAInB,OAAQf,EAASgB,KAAOhB,EAASC,MAC/B,KAAM,EAEJW,GAASK,EAAgBjB,EAAUW,EAAQN,GAC3CS,GAAST,EAAQa,OACjB,MAEF,KAAK,EAEHN,GAASK,EAAgBjB,EAAUW,EAAQN,GAC3CS,GAASH,EAAOO,OAChB,MAEF,KAAK,EAEHN,GAASP,EAAQc,MACjBL,GAASM,EAAcpB,EAAUW,EAAQN,GACzC,MAEF,KAAK,EAEHO,GAASD,EAAOQ,MAChBL,GAASM,EAAcpB,EAAUW,EAAQN,GAO7C,MAAO,CAAEgB,QAAST,EAAOU,QAASR,GAGpC,SAASG,EAAgBjB,EAA8BW,EAAoBN,GACzE,IAAIkB,EAAmB,EAEvB,OAAQvB,EAASW,QACf,KAAKzF,EAAAA,aAAasG,MAEhB,MAEF,KAAKtG,EAAAA,aAAauG,OAChBF,GAAoBZ,EAAOQ,MAAQ,EACnC,MAEF,KAAKjG,EAAAA,aAAawG,IAChBH,GAAoBZ,EAAOQ,MAS/B,OACEnB,EAASK,SAET,KAAKnF,EAAAA,aAAasG,MAEhB,MAEF,KAAKtG,EAAAA,aAAauG,OAChBF,GAAoBlB,EAAQc,MAAQ,EACpC,MAEF,KAAKjG,EAAAA,aAAawG,IAEhBH,GAAoBlB,EAAQc,MAQhC,OAAOI,EAGT,SAASH,EAAcpB,EAA8BW,EAAoBN,GAEvE,IAAIsB,EAAiB,EAGrB,OAAQ3B,EAASW,QACf,KAAKzF,EAAAA,aAAasG,MAEhB,MAEF,KAAKtG,EAAAA,aAAauG,OAChBE,GAAkBhB,EAAOO,OAAS,EAClC,MAEF,KAAKhG,EAAAA,aAAawG,IAChBC,GAAkBhB,EAAOO,OAS7B,OAAQlB,EAASK,SACf,KAAKnF,EAAAA,aAAasG,MAEhB,MAEF,KAAKtG,EAAAA,aAAauG,OAChBE,GAAkBtB,EAAQa,OAAS,EACnC,MAEF,KAAKhG,EAAAA,aAAawG,IAChBC,GAAkBtB,EAAQa,OAO9B,OAAOS,GCvKG7B,EAAAA,EAAAA,UAAAA,EAAAA,QAAO,KACjBA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,WAAA,GAAA,iBCAU8B,eC6BV,SAAAC,EAAoBC,EAAmEC,GAAnE1J,KAAAyJ,aAAAA,EAAmEzJ,KAAA0J,WAAAA,EAd/E1J,KAAA2J,eAAgC,IAAIhG,EAAAA,QAC5C3D,KAAA4J,cAAkC5J,KAAK2J,eAAe9F,eAgOxD,OA9NE2F,EAAAtJ,UAAA2J,QAAA,WACE7J,KAAK2J,eAAe1H,QAGtBzC,OAAAgC,eAAIgI,EAAAtJ,UAAA,WAAQ,KAGZ,WACE,OAAOF,KAAK8J,eAJd,SAAanC,GACX3H,KAAK8J,UAAYnC,mCAQZ6B,EAAAtJ,UAAA6J,aAAP,SAAoB/B,GAClB,IAAKgC,EAAAA,kBAAkBhK,KAAK0J,YAG1B,MAAO,CACLV,QAAS,EACTC,QAAS,GAIbjJ,KAAKiK,oBAAsBjK,KAAKyJ,aAAa5C,gBAAgBD,cAAcsD,wBAC3ElK,KAAKmK,qBAAuBnC,EAAQkC,wBACpClK,KAAKoK,eAAiB/B,EAAMrI,KAAK2H,SAAU3H,KAAKiK,oBAAqBjK,KAAKmK,sBAE1E,IAAME,EH2HV,SAA+BC,EAAiCtC,GAC9D,IAAMuC,EAAqC,GACrCC,EACIF,EAAOrB,QAAUjB,EAAQa,OAD7B2B,EAEEF,EAAOtB,QAFTwB,EAGGF,EAAOtB,QAAUhB,EAAQc,MAiBlC,OAhBOwB,EAAOrB,SAGU,GACtBsB,EAAW/H,KAAKI,EAAqB6H,KAEjCD,GAAmB,GACvBD,EAAW/H,KAAKI,EAAqB8H,MAEjCF,IAAsBG,OAAOC,aAAepG,SAASqG,gBAAgBC,eACzEP,EAAW/H,KAAKI,EAAqBmI,QAEjCP,IAAqBG,OAAOK,YAAcxG,SAASqG,gBAAgBI,cACvEV,EAAW/H,KAAKI,EAAqBsI,OAGhCX,EGjJgDY,CAAenL,KAAKoK,eAAgBpK,KAAKmK,sBA8BxFiB,EAAWf,EAAqBgB,QAAO,SAACC,EAAOC,GACnD,OAAOD,EAAQC,IACd,GAeH,OAboC,IAAhClB,EAAqB1J,QAAgBX,KAAK2H,SAASgB,OAASlB,EAAAA,QAAQ+D,SAEtExL,KAAKyL,+BAA+BL,GACK,IAAhCf,EAAqB1J,QAAgBX,KAAK2H,SAASgB,OAASlB,EAAAA,QAAQiE,WAE7E1L,KAAK2L,iCAAiCP,GACG,IAAhCf,EAAqB1J,QAAgBX,KAAK2H,SAASgB,OAASlB,EAAAA,QAAQ+D,SAE7ExL,KAAK4L,gCAAgCR,GACI,IAAhCf,EAAqB1J,QAAgBX,KAAK2H,SAASgB,OAASlB,EAAAA,QAAQiE,YAE7E1L,KAAK6L,kCAAkCT,GAElCpL,KAAKoK,gBAGNZ,EAAAtJ,UAAAuL,+BAAR,SAAuCL,GACrC,OAAQA,GACN,KAAK,EACL,KAAK,EAEHpL,KAAKoK,eAAiB/B,EAAMX,EAAU1H,KAAK2H,UAAW3H,KAAKiK,oBAAqBjK,KAAKmK,sBACrF,MAEF,KAAK,EAEHnK,KAAKoK,eAAiB/B,EAAMR,EAAa7H,KAAK2H,UAAW3H,KAAKiK,oBAAqBjK,KAAKmK,sBACxF,MAEF,KAAK,EAEHnK,KAAKoK,eAAiB/B,EACpBR,EAAa7H,KAAK2H,UAAU,GAC5B3H,KAAKiK,oBACLjK,KAAKmK,wBAULX,EAAAtJ,UAAA0L,gCAAR,SAAwCR,GACtC,OAAQA,GAGN,KAAK,EAEH,IAAMU,EAAmB7D,EAAyBP,EAAWG,GAAc,GAC3E7H,KAAKoK,eAAiB/B,EACpByD,EAAiB9L,KAAK2H,UACtB3H,KAAKiK,oBACLjK,KAAKmK,sBAEP,MAEF,KAAK,EAEH,IAAM4B,EAAoB9D,EAAyBP,EAAWG,GAAc,GAC5E7H,KAAKoK,eAAiB/B,EACpB0D,EAAkB/L,KAAK2H,UACvB3H,KAAKiK,oBACLjK,KAAKmK,sBAEP,MAEF,KAAK,EAGH,MAEF,KAAK,EAEG2B,EAAmB7D,EAAyBP,EAAWG,GAAc,GAC3E7H,KAAKoK,eAAiB/B,EACpByD,EAAiB9L,KAAK2H,UACtB3H,KAAKiK,oBACLjK,KAAKmK,sBAEP,MAEF,KAAK,EAEG4B,EAAoB9D,EAAyBP,EAAWG,GAAc,GAC5E7H,KAAKoK,eAAiB/B,EACpB0D,EAAkB/L,KAAK2H,UACvB3H,KAAKiK,oBACLjK,KAAKmK,wBAULX,EAAAtJ,UAAAyL,iCAAR,SAAyCP,GACvC,OAAQA,GACN,KAAK,EACL,KAAK,EAEHpL,KAAKoK,eAAiB/B,EAAMX,EAAU1H,KAAK2H,UAAW3H,KAAKiK,oBAAqBjK,KAAKmK,sBACrF,MAEF,KAAK,EAEHnK,KAAKoK,eAAiB/B,EACpBR,EAAa7H,KAAK2H,UAAU,GAC5B3H,KAAKiK,oBACLjK,KAAKmK,sBAEP,MAEF,KAAK,EAEHnK,KAAKoK,eAAiB/B,EAAMR,EAAa7H,KAAK2H,UAAW3H,KAAKiK,oBAAqBjK,KAAKmK,wBAStFX,EAAAtJ,UAAA2L,kCAAR,SAA0CT,GACxC,OAAQA,GACN,KAAK,EACL,KAAK,EAIH,IAAMY,EAAmB/D,EAAyBP,EAAWG,GAAc,GAC3E7H,KAAKoK,eAAiB/B,EACpB2D,EAAiBhM,KAAK2H,UACtB3H,KAAKiK,oBACLjK,KAAKmK,sBAEP,MAEF,KAAK,EAGH,MAEF,KAAK,EACL,KAAK,EAIH,IAAM8B,EAAiBhE,EAAyBP,EAAWG,GAAc,GACzE7H,KAAKoK,eAAiB/B,EAAM4D,EAAejM,KAAK2H,UAAW3H,KAAKiK,oBAAqBjK,KAAKmK,iEA3M9D9F,SAAiE7E,OAAMuB,WAAA,CAAA,CAAAsG,KAA7CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBApBxD1C,EAAyB1I,EAAA,CADrCsD,EAAAA,aAqB6D3C,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eApBxD1C,MCYb2C,EAAA,WAwBE,SAAAA,EAC4B3H,EAClB4H,EACAC,EACA/H,EACAgI,EACAC,EACAhI,GANkBvE,KAAAwE,SAAAA,EAClBxE,KAAAoM,UAAAA,EACApM,KAAAqM,SAAAA,EACArM,KAAAsE,SAAAA,EACAtE,KAAAsM,qBAAAA,EACAtM,KAAAuM,mBAAAA,EACAvM,KAAAuE,iBAAAA,EA7BFvE,KAAA4E,cAAgC,GAwGhC5E,KAAA4J,eAAgB,EAQhB5J,KAAAwM,eAAqC,IAAIC,EAAAA,aAiBnD,OA9HEjN,OAAAgC,eAAW2K,EAAAjM,UAAA,OAAI,KAAf,SAAgBgC,GACdlC,KAAKuE,iBAAiBJ,OAASjC,mCAIjC1C,OAAAgC,eAAI2K,EAAAjM,UAAA,YAAS,KAAb,SAAcyH,GACZ3H,KAAKsM,qBAAqB3E,SAAWA,mCAIvCnI,OAAAgC,eAAI2K,EAAAjM,UAAA,oBAAiB,KAArB,SAAsBwM,GACpB1M,KAAKuM,mBAAmB7H,oBAAsBgI,mCAIhDlN,OAAAgC,eAAI2K,EAAAjM,UAAA,gBAAa,KAAjB,SAAkByE,GAChB3E,KAAKuM,mBAAmB5H,gBAAkBA,mCAa5CwH,EAAAjM,UAAAyM,gBAAA,WAAA,IAAAlI,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAKuE,iBAAiBM,WAAWC,WAAU,SAAA8H,GACrCA,EACFnI,EAAKoI,aAELpI,EAAKqI,mBAGT9M,KAAKsM,qBAAqB1C,cAAc9E,WAAU,WAChDL,EAAKmF,eAAgB,EAGjBnF,EAAKsI,MACPtI,EAAKH,SAAS0I,SAASvI,EAAKsI,KAAKE,UAAU,GAAI,UAAW,QAK9DjN,KAAKwM,eAAehH,KAAK0H,EAAAA,aAAa,IAAIpI,WAAU,WAClDL,EAAKsF,eACLtF,EAAKmF,eAAgB,EACjBnF,EAAKsI,MACPtI,EAAKH,SAAS0I,SAASvI,EAAKsI,KAAKE,UAAU,GAAI,UAAW,UAMlEd,EAAAjM,UAAA8G,YAAA,WACEhH,KAAK8M,gBACL9M,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAGhCsG,EAAAjM,UAAA4M,cAAR,WAAA,IAAArI,EAAAzE,KACOA,KAAK+M,OAGV/M,KAAK+M,KAAKE,UAAUhG,SAAQ,SAAAkG,GAAQ,OAAA1I,EAAKH,SAAS8I,YAAY3I,EAAKD,SAAS6I,KAAMF,MAClFnN,KAAKoM,UAAUkB,eACRtN,KAAK+M,OAUNZ,EAAAjM,UAAA2M,WAAR,WAAA,IAAApI,EAAAzE,KAEEA,KAAK+M,KAAO/M,KAAKoM,UAAUmB,mBAAmBvN,KAAKqM,UACnDrM,KAAKuM,mBAAmBiB,WAAaxN,KAAK+M,KAAKE,UAAU,GACzDjN,KAAKsE,SAASmJ,SAASzN,KAAK+M,KAAKE,UAAU,GAAI,uBAI/CjN,KAAKsE,SAAS0I,SAAShN,KAAK+M,KAAKE,UAAU,GAAI,MAAO,OACtDjN,KAAKsE,SAAS0I,SAAShN,KAAK+M,KAAKE,UAAU,GAAI,OAAQ,OAEvDjN,KAAKsE,SAAS0I,SAAShN,KAAK+M,KAAKE,UAAU,GAAI,UAAW,KAC1DjN,KAAKsE,SAAS6B,OAAOnG,KAAK+M,KAAKE,UAAU,GAAI,SAAS,SAAAlJ,GACpDU,EAAKF,iBAAiBL,UAAYH,KAEpC/D,KAAK+M,KAAKE,UAAUhG,SAAQ,SAAAkG,GAC1B1I,EAAKH,SAASoJ,YAAYjJ,EAAKD,SAAS6I,KAAMF,MAGhDnN,KAAK4J,eAAgB,GAavBuC,EAAAjM,UAAAyN,sBAAA,WACM3N,KAAKuE,iBAAiBJ,MAAQnE,KAAK+M,MAAQ/M,KAAK4J,eAElD5J,KAAKwM,eAAeoB,QAIhBzB,EAAAjM,UAAA6J,aAAR,WACE,GAAK/J,KAAK+M,KAAV,CAGA,IAAMc,EAAiB7N,KAAKsM,qBAAqBvC,aAAa/J,KAAK+M,KAAKE,UAAU,IAClFjN,KAAKsE,SAAS0I,SAAShN,KAAK+M,KAAKE,UAAU,GAAI,MAAUY,EAAe5E,QAAO,MAC/EjJ,KAAKsE,SAAS0I,SAAShN,KAAK+M,KAAKE,UAAU,GAAI,OAAWY,EAAe7E,QAAO,iDAxG5C5B,aAAYrG,WAAA,CAAA,CAAAsG,KAA/CC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBACWsG,EAAAA,wBACDC,EAAAA,mBACA5G,EAAAA,iBACYqC,SACFnF,SACFb,KA1B5B1C,EAAA,CADCkN,EAAAA,MAAM,+CAMPlN,EAAA,CADCkN,EAAAA,MAAM,sDAMPlN,EAAA,CADCkN,EAAAA,MAAM,+EAMPlN,EAAA,CADCkN,EAAAA,MAAM,qEAnBI7B,EAAiBrL,EAAA,CAD7BiC,EAAAA,UAAU,CAAEC,SAAU,wBA0BlBvB,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,YAzBC2E,GAAb,gBCVE,SAAA8B,EAAoB1J,GAApB,IAAAE,EAAAzE,KAAoBA,KAAAuE,iBAAAA,EAFZvE,KAAA4E,cAAgC,GAUH5E,KAAAkO,gBAAyC,IAAIzB,EAAAA,aAPhFzM,KAAK4E,cAAcpC,KACjBxC,KAAKuE,iBAAiBM,WAAWC,WAAU,SAAA8H,GACzCnI,EAAKyJ,gBAAgBjM,KAAK2K,OAelC,OAPEqB,EAAA/N,UAAAiO,YAAA,SAAYpK,GACV/D,KAAKuE,iBAAiBN,gBAAgBF,IAGxCkK,EAAA/N,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAhBFrC,KAQD1C,EAAA,CAApCsN,EAAAA,OAAO,oEAGRtN,EAAA,CADCuN,EAAAA,aAAa,QAAS,CAAC,4CAbbJ,EAAyBnN,EAAA,CANrCiC,EAAAA,UAAU,CACTC,SAAU,8BACV+D,KAAM,CACJuH,+BAAgC,WAGvBL,mBCKX,SAAAM,EACUC,EACAjC,EACAhI,GAHV,IAAAE,EAAAzE,KACUA,KAAAwO,WAAAA,EACAxO,KAAAuM,mBAAAA,EACAvM,KAAAuE,iBAAAA,EALFvE,KAAA4E,cAAgC,GAcL5E,KAAAyO,YAAkC,IAAIhC,EAAAA,aAPvEzM,KAAK4E,cAAcpC,KACjB+B,EAAiBM,WAAWW,KAAKC,EAAAA,QAAO,SAAAvD,GAAS,OAACA,MAAQ4C,WAAU,WAClEL,EAAKgK,YAAYxM,WAoBzB,OAZEsM,EAAArO,UAAAiO,YAAA,SAAYpK,GACV/D,KAAKuE,iBAAiBN,gBAAgBF,GACtC/D,KAAKuM,mBAAmB5G,kBAG1B4I,EAAArO,UAAAyM,gBAAA,WACE3M,KAAKuM,mBAAmBmC,eAAiB1O,KAAKwO,WAC9CxO,KAAKuM,mBAAmB5F,iBAE1B4H,EAAArO,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAxBlB8I,EAAAA,kBACQtK,SACFb,KASO1C,EAAA,CAAlCsN,EAAAA,OAAO,8DAGRtN,EAAA,CADCuN,EAAAA,aAAa,QAAS,CAAC,4CAjBbE,EAAqBzN,EAAA,CANjCiC,EAAAA,UAAU,CACTC,SAAU,0BACV+D,KAAM,CACJ6H,iCAAkC,WAGzBL,mBCFX,SAAAM,EAAYC,EAA4CC,GACtDD,EAAkBjI,gBAAkBkI,EAExC,gDAHiC1K,SAAkCsK,EAAAA,cADtDE,EAAgB/N,EAAA,CAN5BiC,EAAAA,UAAU,CACTC,SAAU,qBACV+D,KAAM,CACJiI,qBAAsB,WAGbH,mBCEb,SAAAI,KAAmC,OAAtBA,EAAoBnO,EAAA,CALhCqC,EAAAA,SAAS,CACRC,QAAS,GACTE,aAAc,CAACuL,EAAkBN,EAAuBN,EAA2B9B,GACnF5I,QAAS,CAACsL,EAAkBN,EAAuBN,EAA2B9B,MAEnE8C,MCNbC,EAAA,cPHY3F,EAAAA,EAAAA,kBAAAA,EAAAA,gBAAe,KACzBA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QAIF,IAAA4F,EAAA,WAEE,SAAAA,EAAgCC,GAAApP,KAAAoP,SAAAA,EAExBpP,KAAAqP,cAAiC9F,EAAAA,gBAAgB+F,QA2B3D,OAzBE9P,OAAAgC,eAAW2N,EAAAjP,UAAA,eAAY,KAAvB,WACE,OAAOF,KAAKqP,mBAId,SAAwBnN,IACR,IAAVA,EACFA,EAAQqH,EAAAA,gBAAgBgG,QACdrN,IACVA,EAAQqH,EAAAA,gBAAgB+F,SAGtBpN,IAAUlC,KAAKqP,gBAInBrP,KAAKqP,cAAgBnN,EACjBlC,KAAKoP,UACPpP,KAAKoP,SAASI,mBAAmBtN,qCAIrCiN,EAAAjP,UAAA8G,YAAA,WACEhH,KAAKyP,aAAelG,EAAAA,gBAAgB+F,kDA3BIJ,EAAenO,WAAA,CAAA,CAAAsG,KAA5CqI,EAAAA,cASb5O,EAAA,CADCkN,EAAAA,MAAM,gDAVImB,EAAUrO,EAAA,CADtBiC,EAAAA,UAAU,CAAEC,SAAU,iBAGRvB,EAAA,EAAAiO,EAAAA,aAFFP,GAAb,gBQJA,SAAAQ,IACU3P,KAAA4P,SAA+B,IAAIjM,EAAAA,QAS7C,OAPEnE,OAAAgC,eAAImO,EAAAzP,UAAA,UAAO,KAAX,WACE,OAAOF,KAAK4P,SAAS/L,gDAGvB8L,EAAAzP,UAAA2P,kBAAA,SAAkBC,GAChB9P,KAAK4P,SAAS3N,KAAK6N,IARVH,EAAoB7O,EAAA,CADhCsD,EAAAA,cACYuL,mBCwBX,SAAAI,EAGSC,EACCC,GADDjQ,KAAAgQ,qBAAAA,EACChQ,KAAAiQ,cAAAA,EATFjQ,KAAAkQ,gBAA0B,EAY1BlQ,KAAAmQ,SAAmB,EAmBnBnQ,KAAAoQ,YAAsB,MAiBtBpQ,KAAAqQ,MAAgB,KAahBrQ,KAAAsQ,MAAgB,KAahBtQ,KAAAuQ,IAAc,KAadvQ,KAAAwQ,UAAiB,KAqBRxQ,KAAAyQ,OAAgC,IAAIhE,EAAAA,cAAsB,SAY7E,SAzHasD,EAeXvQ,OAAAgC,eAAIuO,EAAA7P,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKmQ,aAId,SAAWjO,GACTA,IAAUA,EACNlC,KAAKmQ,UAAYjO,IACnBlC,KAAKmQ,QAAUjO,EAGXlC,KAAKkQ,gBAAkBlQ,KAAKgQ,sBAC9BhQ,KAAKgQ,qBAAqBH,kBAAkB7P,wCAOlDR,OAAAgC,eAAIuO,EAAA7P,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKoQ,iBAId,SAAelO,GACb,GAAqB,iBAAVA,EAAoB,CAC7B,IAAMwO,EAAuBxO,EAAMyO,MAAM,MACN,IAA/BD,EAAWE,QAAQ,QACrBF,EAAWlO,KAAK,OAElBxC,KAAKoQ,YAAcM,EAAWG,KAAK,uCAMvCrR,OAAAgC,eAAIuO,EAAA7P,UAAA,OAAI,KAAR,WACE,OAAOF,KAAKqQ,WAId,SAASnO,GACc,iBAAVA,IACTlC,KAAKqQ,MAAQnO,oCAMjB1C,OAAAgC,eAAIuO,EAAA7P,UAAA,OAAI,KAAR,WACE,OAAOF,KAAKsQ,WAId,SAASpO,GACc,iBAAVA,IACTlC,KAAKsQ,MAAQpO,oCAMjB1C,OAAAgC,eAAIuO,EAAA7P,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKuQ,SAId,SAAOrO,GACgB,iBAAVA,IACTlC,KAAKuQ,IAAMrO,oCAMf1C,OAAAgC,eAAIuO,EAAA7P,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKwQ,eAId,SAAatO,GAETlC,KAAKwQ,UADO,OAAVtO,IAA4B,IAAVA,EACH,GAEA,sCAMrB6N,EAAA7P,UAAAsP,mBAAA,SAAmBsB,GACjB9Q,KAAK+Q,QAAUD,IAAUvH,EAAAA,gBAAgBgG,SAK3CQ,EAAA7P,UAAA8Q,UAAA,SAAUC,GACJjR,KAAKkR,QACPlR,KAAKiQ,cAAchM,gBAAgBgN,GAErCjR,KAAKyQ,OAAO7C,MAAK,IAGnBmC,EAAA7P,UAAAyM,gBAAA,WACE3M,KAAKkQ,gBAAiB,4CA9GOP,EAAoB5O,WAAA,CAAA,CAAAsG,KAFhD8J,EAAAA,UAAQ,CAAA9J,KACRqI,EAAAA,kBAEsBlM,KANzB1C,EAAA,CADCsQ,EAAAA,UAAU,qBAAsB,CAAEC,QAAQ,uCAiB3CvQ,EAAA,CADCkN,EAAAA,MAAM,yCAoBPlN,EAAA,CADCkN,EAAAA,MAAM,yCAkBPlN,EAAA,CADCkN,EAAAA,MAAM,kCAcPlN,EAAA,CADCkN,EAAAA,MAAM,kCAcPlN,EAAA,CADCkN,EAAAA,MAAM,8BAcPlN,EAAA,CADCkN,EAAAA,MAAM,0CAeUlN,EAAA,CAAhBsN,EAAAA,OAAO,uCA7GG2B,EAASuB,EAAAxQ,EAAA,CAlBrByQ,EAAAA,UAAU,CACTvO,SAAU,aACVqJ,SAAU,ydAcVmF,UAAW,CAAC,CAAEC,QAASvC,EAAiBwC,YAAaJ,MASlD7P,EAAA,EAAA0P,EAAAA,YACA1P,EAAA,EAAAiO,EAAAA,aARQK,MCvBA4B,EAAyC,CACpDxN,KAAM,OACNyN,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,OAAQ,SACRC,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,UAAW,aACXC,SAAU,WACVnQ,KAAM,OACNsJ,QAAS,kBACT8G,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,OAAQ,QACRC,WAAY,oBACZC,YAAa,uBACbC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,SAAU,YACVC,SAAU,YACVC,aAAc,gBACdC,YAAa,eACbC,WAAY,cACZC,SAAU,YACVC,SAAU,YACVC,kBAAmB,6BACnBC,gBAAiB,uBACjBC,2BAA4B,4BAC5BC,mBAAoB,uBACpBC,eAAgB,kBAChBC,cAAe,iBACf3C,QAAS,UAET4C,gBAAiB,uBACjBC,cAAe,qBACfC,yBAA0B,0BAC1BC,0BAA2B,2BAC3BC,0BAA2B,0BAC3BC,wBAAyB,uBAEzBC,0BAA2B,cAE3BC,iBAAkB,oBAClBC,wBAAyB,iBACzBC,uBAAwB,gBACxBC,oBAAqB,aACrBC,yBAA0B,kBAC1BC,qBAAsB,cACtBC,wBAAyB,iBACzBC,0BAA2B,sDAC3BC,yBAA0B,mDAC1BC,8BAA+B,uCAC/BC,6BAA8B,qCAC9BC,+BAAgC,uCAEhCC,iBAAkB,iBAElBC,iBAAkB,sCAElBC,kBAAmB,6BACnBC,uBAAwB,mCAExBC,uBAAwB,cACxBC,oBAAqB,UACrBC,oBAAqB,YACrBC,kBAAmB,QACnBC,uBAAwB,cAGxBC,8BAA+B,eAC/BC,wBAAyB,SACzBC,6BAA8B,yBAC9BC,iCAAkC,+KCtEpC,SAAAC,IACU3V,KAAA4V,SAAWjE,SAKnBgE,EAAAzV,UAAA2V,SAAA,SAASC,GACP9V,KAAK4V,SAAQxV,EAAAA,EAAA,GAAQJ,KAAK4V,UAAaE,IAMzCtW,OAAAgC,eAAImU,EAAAzV,UAAA,OAAI,KAAR,WACE,OAAOF,KAAK4V,0CAMdD,EAAAzV,UAAA6V,MAAA,SAAMC,EAAgBC,QAAA,IAAAA,IAAAA,EAAA,IACpB,IAAMC,EAAQ1W,OAAO2W,KAAKF,GACtBG,EAASJ,EAMb,OALIE,EAAMvV,QACRuV,EAAMjP,SAAQ,SAAAoP,GACZD,EAASA,EAAOE,QAAQ,IAAID,EAAI,IAAKJ,EAAOI,OAGzCD,iGA5BET,EAAuB7U,EAAA,CAHnCsD,EAAAA,WAAW,CACVmS,WAAY,UAEDZ,MCNTa,EAAe,EAENC,EAAY,IAAIC,EAAAA,eAAuB,aAEpD,SAAgBC,IACd,MAAO,UAAYH,IAGrB,ICTYI,EDSCC,EAAqB,CAChCpF,QAASgF,EACTK,WAAYH,ICXFC,EAAAA,EAAAA,UAAAA,EAAAA,QAAO,KACjBA,EAAA,QAAA,GAAA,SACAA,EAAAA,EAAA,MAAA,GAAA,QCFF,ICIYG,EDJZC,EAAA,WAWA,SAAAA,KAwDA,OAvDSA,EAAA,aAA4C,CACjDrO,KAAMlB,EAAAA,QAAQ+D,SACd5D,KAAMgP,EAAAA,QAAQK,OACd3O,OAAQzF,EAAAA,aAAawG,IACrBrB,QAASnF,EAAAA,aAAawG,KAGjB2N,EAAA,YAA2C,CAChDrO,KAAMlB,EAAAA,QAAQ+D,SACd5D,KAAMgP,EAAAA,QAAQK,OACd3O,OAAQzF,EAAAA,aAAasG,MACrBnB,QAASnF,EAAAA,aAAasG,OAGjB6N,EAAA,gBAA+C,CACpDrO,KAAMlB,EAAAA,QAAQ+D,SACd5D,KAAMgP,EAAAA,QAAQM,MACd5O,OAAQzF,EAAAA,aAAawG,IACrBrB,QAASnF,EAAAA,aAAawG,KAGjB2N,EAAA,eAA8C,CACnDrO,KAAMlB,EAAAA,QAAQ+D,SACd5D,KAAMgP,EAAAA,QAAQM,MACd5O,OAAQzF,EAAAA,aAAasG,MACrBnB,QAASnF,EAAAA,aAAasG,OAGjB6N,EAAA,aAA4C,CACjDrO,KAAMlB,EAAAA,QAAQiE,WACd9D,KAAMgP,EAAAA,QAAQM,MACd5O,OAAQzF,EAAAA,aAAauG,OACrBpB,QAASnF,EAAAA,aAAawG,KAGjB2N,EAAA,gBAA+C,CACpDrO,KAAMlB,EAAAA,QAAQiE,WACd9D,KAAMgP,EAAAA,QAAQM,MACd5O,OAAQzF,EAAAA,aAAasG,MACrBnB,QAASnF,EAAAA,aAAasG,OAGjB6N,EAAA,YAA2C,CAChDrO,KAAMlB,EAAAA,QAAQiE,WACd9D,KAAMgP,EAAAA,QAAQK,OACd3O,OAAQzF,EAAAA,aAAauG,OACrBpB,QAASnF,EAAAA,aAAawG,KAGjB2N,EAAA,eAA8C,CACnDrO,KAAMlB,EAAAA,QAAQiE,WACd9D,KAAMgP,EAAAA,QAAQK,OACd3O,OAAQzF,EAAAA,aAAasG,MACrBnB,QAASnF,EAAAA,aAAasG,OAE1B6N,EAnEA,gBE2BE,SAAAG,EACSC,EACCnH,EACkBoH,EACnBC,GAHAtX,KAAAoX,sBAAAA,EACCpX,KAAAiQ,cAAAA,EACkBjQ,KAAAqX,UAAAA,EACnBrX,KAAAsX,cAAAA,EAGFtX,KAAAuX,gBAAsCP,EAAoB,eAMjEhX,KAAAwX,cAA6B,GAC7BxX,KAAAyX,YAA2B,GA0F7B,OA/FEjY,OAAAgC,eAAW2V,EAAAjX,UAAA,OAAI,KAAf,WACE,OAAOF,KAAKiQ,cAAc9L,sCAW5BgT,EAAAjX,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAK2X,oBACL3X,KAAKoX,sBAAsBQ,QAAQ9S,WAAU,SAAAgL,GAAU,OAAArL,EAAKoT,gBAAgB/H,MAC5E9P,KAAK8X,QAAQF,QAAQ9S,WAAU,WAC7BL,EAAKkT,wBAUTR,EAAAjX,UAAA2X,gBAAA,SAAgB/H,GACd,IAAIiI,EACAC,EACAlI,EAAOoB,QACT6G,EAAW/X,KAAKwX,cAChBQ,EAAShY,KAAKyX,cAEdM,EAAW/X,KAAKyX,YAChBO,EAAShY,KAAKwX,eAEhB,IAAMS,EAAgBF,EAASnH,QAAQd,GACvC,GAAImI,GAAS,EAAG,CACdF,EAASG,OAAOD,EAAO,GACvB,IAAME,EAAYnY,KAAKoY,aAAatI,GAChCqI,GAAaH,EAAOrX,QACtBqX,EAAOE,OAAOC,EAAW,EAAGrI,KAalCqH,EAAAjX,UAAAkY,aAAA,SAAaC,GAEX,OAD6BrY,KAAK8X,QAAQrS,QAAO,SAAAqK,GAAU,OAAAA,EAAOoB,SAAWmH,EAAanH,UAC3EN,QAAQyH,IAGzBlB,EAAAjX,UAAAyX,kBAAA,WACE,IAAMW,EAAiC,GACjCC,EAAiC,GACvCvY,KAAK8X,QAAQ7Q,SAAQ,SAAA6I,GACfA,EAAOoB,OACTqH,EAAkB/V,KAAKsN,GAEvBwI,EAAkB9V,KAAKsN,MAG3B9P,KAAKwX,cAAgBc,EACrBtY,KAAKyX,YAAcc,GAWrB/Y,OAAAgC,eAAI2V,EAAAjX,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKwY,mBAId,SAAiBC,GACXA,GAAOzB,EAAoByB,GAC7BzY,KAAKwY,cAAgBC,EAErBzY,KAAKwY,cAAgB,cAGvBxY,KAAKuX,gBAAkBP,EAAoBhX,KAAKwY,yFArGlB7I,SACPnM,kCACtB8D,EAAAA,OAAMC,KAAA,CAACkP,YACcd,KANI7U,EAAA,CAA3B4X,EAAAA,gBAAgB3I,kCAiGjBjP,EAAA,CADCkN,EAAAA,MAAM,qDAjGImJ,EAAcrW,EAAA,CAZ1ByQ,EAAAA,UAAU,CACTvO,SAAU,mBACVqJ,SAAA,mhDACAmF,UAAW,CACT7B,EACAkH,EACArT,EACAa,EACAmF,GAEFzC,KAAM,CAAE4R,oBAAqB,UAQ1BlX,EAAA,EAAA6F,EAAAA,OAAOmP,KANCU,MChBAyB,EAA2C,CAAC7I,EAAWoH,GAOpE0B,EAAA,WAAA,SAAAA,KAAmC,OAAtBA,EAAoB/X,EAAA,CALhCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAe+L,GACvC3L,aAAc,CAACsV,GACfrV,QAAS,CAACqV,MAECC,GAAb,gBC0CE,SAAAC,EAAmBC,EAAwBzU,GAAxBtE,KAAA+Y,GAAAA,EAAwB/Y,KAAAsE,SAAAA,EARpCtE,KAAAgZ,YAAczP,EAAAA,gBACdvJ,KAAA8Q,MAAyBvH,EAAAA,gBAAgB+F,QAKzCtP,KAAAiZ,iBAAkD,IAAIxM,EAAAA,cAA8B,SAyC7F,SAhDaqM,EAWXA,EAAA5Y,UAAAsP,mBAAA,SAAmBsB,GACjB,GAAIA,IAAU9Q,KAAK8Q,MAAnB,CAKA,OAFA9Q,KAAK8Q,MAAQA,EAELA,GACN,KAAKvH,EAAAA,gBAAgB+F,QACnBtP,KAAKsE,SAAS4U,YAAYlZ,KAAK+Y,GAAGnS,cAAe,SACjD5G,KAAKsE,SAAS4U,YAAYlZ,KAAK+Y,GAAGnS,cAAe,aAC5C5G,KAAKmZ,UACRnZ,KAAKsE,SAAS8U,gBAAgBpZ,KAAK+Y,GAAGnS,cAAe,YAEvD,MACF,KAAK2C,EAAAA,gBAAgBgG,QACnBvP,KAAKqZ,yBACLrZ,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,YAAa,iBAC3D5G,KAAKsE,SAASgV,aAAatZ,KAAK+Y,GAAGnS,cAAe,WAAY,IAC9D,MACF,KAAK2C,EAAAA,gBAAgBgQ,QACnBvZ,KAAKqZ,yBACL,MACF,KAAK9P,EAAAA,gBAAgBiQ,MACnBxZ,KAAKwP,mBAAmBjG,EAAAA,gBAAgB+F,SAK5CtP,KAAKiZ,iBAAiBrL,KAAKkD,KAGrBgI,EAAA5Y,UAAAmZ,uBAAR,WACE,GAAIrZ,KAAK+Y,GAAGnS,eAAiB5G,KAAK+Y,GAAGnS,cAAcsD,sBAAuB,CACxE,IAAMuP,EAAqBzZ,KAAK+Y,GAAGnS,cAAcsD,wBACjDlK,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,QAAY6S,EAAmB3Q,MAAK,iDApC/D6F,EAAAA,kBAA8BxH,EAAAA,aALlCrG,EAAA,CAAlBkN,EAAAA,MAAM,4CAGPlN,EAAA,CADCsN,EAAAA,OAAO,4DANG0K,EAAgBY,EAAA5Y,EAAA,CA5C5ByQ,EAAAA,UAAU,CACTvO,SAAU,qBACVqJ,SAAU,klBAaVmF,UAAW,CAAC,CAAEC,QAASvC,EAAiBwC,YAAagI,IACrDC,WAAY,CACVC,EAAAA,QAAQ,gBAAiB,CACvBC,EAAAA,WAAW,SAAU,CAACC,EAAAA,MAAM,CAAEC,QAAS,IAAMC,EAAAA,QAAQ,sBAAuBF,EAAAA,MAAM,CAAEC,QAAS,OAE7FF,EAAAA,WAAW,SAAU,CAACC,EAAAA,MAAM,CAAEC,QAAS,QAEzCH,EAAAA,QAAQ,UAAW,CACjBC,EAAAA,WAAW,SAAU,CAACC,EAAAA,MAAM,CAAEC,QAAS,IAAMC,EAAAA,QAAQ,sBAAuBF,EAAAA,MAAM,CAAEC,QAAS,OAC7FF,EAAAA,WAAW,SAAU,CAACC,EAAAA,MAAM,CAAEC,QAAS,IAAMC,EAAAA,QAAQ,iBAAkBF,EAAAA,MAAM,CAAEC,QAAS,SAE1FH,EAAAA,QAAQ,YAAa,CACnBC,EAAAA,WAAW,SAAU,CACnBG,EAAAA,QACE,QACAC,EAAAA,UAAU,CACRH,EAAAA,MAAM,CAAEI,UAAW,aAAc5P,OAAQ,IACzCwP,EAAAA,MAAM,CAAEC,QAAS,EAAGzP,OAAQ,KAC5BwP,EAAAA,MAAM,CAAEI,UAAW,iBAAkB5P,OAAQ,KAC7CwP,EAAAA,MAAM,CAAEI,UAAW,eAAgB5P,OAAQ,KAC3CwP,EAAAA,MAAM,CAAEI,UAAW,aAAc5P,OAAQ,SAI/CuP,EAAAA,WAAW,SAAU,CAACC,EAAAA,MAAM,CAAEC,QAAS,IAAMC,EAAAA,QAAQ,iBAAkBF,EAAAA,MAAM,CAAEC,QAAS,UAG5FhT,KAAM,CAAEoT,kBAAmB,0BAEhBrB,MC5CAsB,EAA6C,CAACtB,GAO3DuB,GAAA,WAAA,SAAAA,KAAqC,OAAxBA,EAAsBvZ,EAAA,CALlCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC8W,GACf7W,QAAS,CAAC6W,MAECC,GAAb,iBCJA,SAAAC,KAA8B,OAAjBA,EAAexZ,EAAA,CAH3BqC,EAAAA,SAAS,CACRI,QAAS,CAAC8W,GAAwBxB,MAEvByB,oBCHb,SAAAC,KAA0B,OAAbA,EAAWzZ,EAAA,CAHvByQ,EAAAA,UAAU,CACTlF,SAAU,MAECkO,MCGbC,GAAA,WAAA,SAAAA,KAAoC,OAAvBA,EAAqB1Z,EAAA,CADjCqC,EAAAA,SAAS,CAAEG,aAAc,CAACiX,IAAchX,QAAS,CAACgX,IAAcE,gBAAiB,CAACF,OACtEC,GAAb,GCLIE,GAAU,EAGdC,GAAA,WAAA,SAAAA,IACU3a,KAAAuQ,IAAM,uBAAwBmK,GAS9B1a,KAAA4a,UAAqC,IAAIC,EAAAA,gBAAgB7a,KAAKuQ,KAIxE,OAZE/Q,OAAAgC,eAAImZ,EAAAza,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKuQ,SAEd,SAAOrO,GACLlC,KAAKuQ,IAAMrO,EACXlC,KAAK4a,UAAU3Y,KAAKC,oCAItB1C,OAAAgC,eAAWmZ,EAAAza,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAK4a,UAAU/W,gDAZb8W,EAAgB7Z,EAAA,CAD5BsD,EAAAA,cACYuW,GAAb,IRDY5D,EAAAA,EAAAA,wBAAAA,EAAAA,sBAAqB,KAC/B,IAAA,MACAA,EAAA,OAAA,SACAA,EAAA,UAAA,YAMF,ISZY+D,GT0CZC,GAAA,WAKE,SAAAA,EACUC,EACUC,EACWvR,GAFrB1J,KAAAgb,OAAAA,EAEqBhb,KAAA0J,WAAAA,EAKvB1J,KAAAuQ,IAAc,yBAAyBoG,IAH7C3W,KAAKwE,SAAWyW,SAQlBzb,OAAAgC,eAAWuZ,EAAA7a,UAAA,KAAE,KAAb,WACE,OAAOF,KAAKuQ,qCAoBPwK,EAAA7a,UAAAgb,SAAP,SACEC,EACAC,GAFF,IAAA3W,EAAAzE,UAEE,IAAAob,IAAAA,EAAoCrE,EAAAA,sBAAsBsE,QAEtDD,IAAerE,EAAAA,sBAAsBuE,OAIpCtb,KAAKub,iBAAmBvR,EAAAA,kBAAkBhK,KAAK0J,cAClD1J,KAAKub,gBAAkBvb,KAAKwb,oBAG9BL,EAA6B,iBAAZA,GAAwBnR,EAAAA,kBAAkBhK,KAAK0J,YAAcyR,EAAQM,YAAcN,KAOpGnb,KAAKub,gBAAgBjC,aAAa,YAAa8B,GAO/Cpb,KAAKgb,OAAOU,mBAAkB,WAI5BC,aAAalX,EAAKmX,iBAClBnX,EAAKmX,gBAAkBC,YAAW,WAChCpX,EAAK8W,gBAAgBE,YAAsBN,IArGpB,WA8GtBJ,EAAA7a,UAAA8G,YAAP,WACE2U,aAAa3b,KAAK4b,iBACd5R,EAAAA,kBAAkBhK,KAAK0J,aAAe1J,KAAKub,kBAC7Cvb,KAAKwE,SAAS6I,KAAKD,YAAYpN,KAAKub,iBACpCvb,KAAKub,gBAAkB,OAkBnBR,EAAA7a,UAAAsb,gBAAR,WACE,IAAMD,EAAkBvb,KAAKwE,SAASsX,cAAc,OAYpD,OAVAP,EAAgBjC,aAAa,KAAMtZ,KAAK+b,IAGxCR,EAAgBzV,UAAUkW,IAAI,eAE9BT,EAAgBjC,aAAa,cAAe,QAC5CiC,EAAgBjC,aAAa,YAAavC,EAAAA,sBAAsBsE,QAEhErb,KAAKwE,SAAS6I,KAAKK,YAAY6N,GAExBA,4CA7GSU,EAAAA,uCACf3U,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBACiChI,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,gMARC6O,EAAkBja,EAAA,CAH9BsD,EAAAA,WAAW,CACVmS,WAAY,SAST9U,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,WACP/F,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eARC6O,GAAb,IS1CA,SAAYD,GACVA,EAAA,SAAA,WACAA,EAAA,WAAA,aACAA,EAAA,QAAA,UAHF,CAAYA,KAAAA,GAAO,KAOnB,IAAAoB,GAAA,WAAA,SAAAA,IACWlc,KAAAmc,aAAe,EACfnc,KAAAoc,aAAe,GACxBpc,KAAAqc,OAAkBvB,GAAQpP,WAKlB1L,KAAAsc,aAAyB9c,OAAO2W,KAAK2E,IAASyB,KAAI,SAAAtb,GAAO,OAAA6Z,GAAQ7Z,MACjEjB,KAAAwc,WAAqB,EAmC/B,OAjCEhd,OAAAgC,eAAI0a,EAAAhc,UAAA,YAAS,KAMb,WACE,OAAOF,KAAKwc,gBAPd,SAAcC,GACRzc,KAAK0c,iBAAiBD,KACxBzc,KAAKwc,WAAaC,oCAQtBP,EAAAhc,UAAAyc,WAAA,WACE,OAAO3c,KAAKqc,SAAWvB,GAAQtP,UAGjC0Q,EAAAhc,UAAA0c,aAAA,WACE,OAAO5c,KAAKqc,SAAWvB,GAAQpP,YAGjCwQ,EAAAhc,UAAA2c,UAAA,WACE,OAAO7c,KAAKqc,SAAWvB,GAAQgC,SAGjCtd,OAAAgC,eAAI0a,EAAAhc,UAAA,cAAW,KAAf,WACE,MAAO,YAAYF,KAAKqc,wCAG1BH,EAAAhc,UAAA6c,QAAA,SAAQV,GACN,OAAOrc,KAAKsc,aAAa1L,QAAQyL,IAAW,GAG9CH,EAAAhc,UAAAwc,iBAAA,SAAiBM,GACf,OAAOC,OAAOC,UAAUF,IAAcA,GAAahd,KAAKmc,cAAgBa,GAAahd,KAAKoc,cA1CjFF,EAAapb,EAAA,CADzBsD,EAAAA,cACY8X,GAAb,iBCFE,SAAAiB,EAAgCC,GAAApd,KAAAod,cAAAA,EAFhCpd,KAAAqd,UAAY,GA2Bd,OAvBEF,EAAAjd,UAAAod,aAAA,SAAaC,EAAiBC,EAAcC,QAA/B,IAAAF,IAAAA,GAAA,QAAiB,IAAAC,IAAAA,GAAA,QAAc,IAAAC,IAAAA,EAAA,IAC1C,IAAMC,EAAiB,CAAC1d,KAAKqd,UAAWI,GAOxC,OANIF,GACFG,EAAelb,KAAK,aAElBgb,GAAQxd,KAAKod,gBAAwD,IAAvCpd,KAAKqd,UAAUzM,QAAQ,YACvD8M,EAAelb,KAAK,eAAcxC,KAAKod,cAAchB,aAAepc,KAAKod,cAAcJ,WAAS,eAE3FU,EAAe7M,KAAK,KAAK8M,QAIlCR,EAAAjd,UAAA0d,iBAAA,SAAiBtZ,EAAUyK,GACrBA,GAAWA,EAAQsO,YACrBrd,KAAKqd,UAAYtO,EAAQsO,UACTtO,EAAQsO,UAAU1M,MAAM,KAChC1J,SAAQ,SAAA4W,GACVA,EAAMC,WAAW,YACnBxZ,EAASyZ,YAAYhP,EAAS8O,iDApBS3B,GAAanb,WAAA,CAAA,CAAAsG,KAA/CqI,EAAAA,cAHFyN,EAAmBrc,EAAA,CAD/BsD,EAAAA,aAIc3C,EAAA,EAAAiO,EAAAA,aAHFyN,oBCaX,SAAAa,EACqBC,EACAC,EACXC,EACApF,GAHW/Y,KAAAie,iBAAAA,EACAje,KAAAke,oBAAAA,EACXle,KAAAme,gBAAAA,EACAne,KAAA+Y,GAAAA,EAsBZ,OAlBEiF,EAAA9d,UAAAyM,gBAAA,WAcmC,OAA7B3M,KAAKke,qBACPle,KAAKme,gBAAgBjD,SAASlb,KAAK+Y,GAAGnS,yDAtBH+T,GAAgB5Z,WAAA,CAAA,CAAAsG,KAApDqI,EAAAA,kBACuCyN,GAAmBpc,WAAA,CAAA,CAAAsG,KAA1DqI,EAAAA,kBACwBqL,UACbpM,EAAAA,cALHqP,EAAeld,EAAA,CAX3ByQ,EAAAA,UAAU,CACTC,UAAW,CAACuJ,IACZ/X,SAAU,oBACVqJ,SAAU,wCAGVtF,KAAM,CACJqX,sBAAuB,OACvBC,OAAQ,qCAKP5c,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,aAHQsO,oBCFX,SAAAM,EAA+BL,GAAAje,KAAAie,iBAAAA,EACjC,gDADmDtD,GAAgB5Z,WAAA,CAAA,CAAAsG,KAApDqI,EAAAA,cADF4O,EAAgBxd,EAAA,CAV5ByQ,EAAAA,UAAU,CACTvO,SAAU,qBACVqJ,SAAU,wCAGVtF,KAAM,CACJqX,sBAAuB,OACvBC,OAAQ,sCAIG5c,EAAA,EAAAiO,EAAAA,aADF4O,oBCRb,SAAAC,IAEUve,KAAAwe,gBAAsC,IAAI7a,EAAAA,QAQpD,OAPEnE,OAAAgC,eAAI+c,EAAAre,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKwe,gBAAgB3a,gDAG9B0a,EAAAre,UAAAue,WAAA,SAAWC,GACT1e,KAAKwe,gBAAgBvc,KAAKyc,IARjBH,EAAgBzd,EAAA,CAD5BsD,EAAAA,cACYma,oBCaX,SAAAI,EAAoBC,GAApB,IAAAna,EAAAzE,KAAoBA,KAAA4e,iBAAAA,EARZ5e,KAAA6e,eAAmC,IAAIlb,EAAAA,QAKvC3D,KAAA4E,cAAgC,GAKtC5E,KAAK4E,cAAcpC,KACjBxC,KAAK4e,iBAAiBE,eAAeha,WAAU,SAAA4Z,GACzCA,IACFja,EAAKia,QAAUA,EACfja,EAAKsa,wBAkCf,OA/CEvf,OAAAgC,eAAImd,EAAAze,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAK6e,eAAehb,gDAmBrB8a,EAAAze,UAAA6e,iBAAR,WAAA,IAAAta,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAK0e,QAAQM,cAAcla,WAAU,WACnCL,EAAKwa,oBAKHN,EAAAze,UAAA+e,aAAR,WACMjf,KAAK0e,QAAQQ,SAAWlf,KAAK0e,QAAQnB,QACvCvd,KAAK6e,eAAe5c,MAAK,GAEzBjC,KAAK6e,eAAe5c,MAAK,IAK7B0c,EAAAze,UAAAif,oBAAA,WACMnf,KAAK0e,SACP1e,KAAKif,gBAKTN,EAAAze,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAtCF0Y,MAX3BI,EAAc7d,EAAA,CAD1BsD,EAAAA,cACYua,oBCCX,SAAAS,EACsBC,EACAT,EACZvS,EACAD,GAJV,IAAA3H,EAAAzE,KAME,GALoBA,KAAAqf,eAAAA,EACArf,KAAA4e,iBAAAA,EACZ5e,KAAAqM,SAAAA,EACArM,KAAAoM,UAAAA,EA0BFpM,KAAA4E,cAAgC,GAChC5E,KAAAsf,WAAqB,GAzBtBtf,KAAKqf,eACR,MAAM,IAAIE,MAAM,gGAEhBvf,KAAKwf,cAAa,GAEpBxf,KAAK4E,cAAcpC,KACjBxC,KAAK4e,iBAAiBE,eAAeha,WAAU,SAAA4Z,GAC7Cja,EAAKia,QAAUA,MAGnB1e,KAAK4E,cAAcpC,KACjBxC,KAAKqf,eAAeL,cAAcla,WAAU,SAAAyY,GAEtC9Y,EAAKhC,OAASgC,EAAKia,QACrBja,EAAK+a,aAAa/a,EAAKia,QAAQe,SAAShb,EAAKhC,QAE7CgC,EAAK+a,aAAajC,OAyB5B,OAbE6B,EAAAlf,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAGhCuZ,EAAAlf,UAAAsf,aAAR,SAAqBjC,GACfA,IAAYvd,KAAKsf,WACnBtf,KAAKoM,UAAUmB,mBAAmBvN,KAAKqM,SAAU,CAAE5J,MAAOzC,KAAK0e,QAAQgB,SAAS1f,KAAKyC,SACrFzC,KAAKsf,WAAY,GACP/B,IACVvd,KAAKoM,UAAUkB,QACftN,KAAKsf,WAAY,6CA3CiBX,GAAc5d,WAAA,CAAA,CAAAsG,KAAjDqI,EAAAA,kBACqC6O,GAAgBxd,WAAA,CAAA,CAAAsG,KAArDqI,EAAAA,kBACiB3B,EAAAA,mBACCD,EAAAA,oBAwBAhN,EAAA,CAApBkN,EAAAA,MAAM,2CA7BIoR,EAAUte,EAAA,CADtBiC,EAAAA,UAAU,CAAEC,SAAU,iBAGlBvB,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,aAHQ0P,oBCCX,SAAAO,EACsB1B,EACAb,EACAwB,EACZta,EACAyU,GAJY/Y,KAAAie,iBAAAA,EACAje,KAAAod,cAAAA,EACApd,KAAA4e,iBAAAA,EACZ5e,KAAAsE,SAAAA,EACAtE,KAAA+Y,GAAAA,EAOF/Y,KAAA4E,cAAgC,GAChC5E,KAAA4f,YAAa,EAkCvB,OAhCEpgB,OAAAgC,eAAIme,EAAAzf,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK+Y,GAAGnS,eAAiB5G,KAAK+Y,GAAGnS,cAAc6U,6CAGxDkE,EAAAzf,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,MAEMA,KAAKie,kBAAoBje,KAAK4e,mBAChC5e,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cAAe,qBAI9C5G,KAAK4f,YACL5f,KAAKod,gBACJpd,KAAKod,cAAcT,cACpB3c,KAAK+Y,GAAGnS,eACR5G,KAAK+Y,GAAGnS,cAAcyW,UAAUzM,QAAQ,WAAa,IAErD5Q,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cAAe,cAC9C5G,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cAAe,cAAc5G,KAAKod,cAAcJ,YAE7Ehd,KAAKie,mBAAqBje,KAAK8f,SACjC9f,KAAK4E,cAAcpC,KAAKxC,KAAKie,iBAAiB8B,SAASjb,WAAU,SAAAiX,GAAM,OAACtX,EAAKqb,QAAU/D,OAI3F4D,EAAAzf,UAAA8f,YAAA,WACEhgB,KAAK4f,YAAa,GAGpBD,EAAAzf,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DA5CA8U,GAAgB5Z,WAAA,CAAA,CAAAsG,KAArDqI,EAAAA,kBACkCwM,GAAanb,WAAA,CAAA,CAAAsG,KAA/CqI,EAAAA,kBACqC6O,GAAgBxd,WAAA,CAAA,CAAAsG,KAArDqI,EAAAA,kBACiBvI,EAAAA,iBACNwH,EAAAA,cAKd7N,EAAA,CAFCmf,EAAAA,YAAY,YACZjS,EAAAA,MAAM,sCAVI2R,EAAQ7e,EAAA,CADpBiC,EAAAA,UAAU,CAAEC,SAAU,UAGlBvB,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,aAJQiQ,oBCHb,SAAAO,IACUlgB,KAAAmgB,SAA0B,IAAIxc,EAAAA,QASxC,OAPEnE,OAAAgC,eAAI0e,EAAAhgB,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKmgB,SAAStc,gDAGvBqc,EAAAhgB,UAAAkgB,cAAA,WACEpgB,KAAKmgB,SAASle,QARLie,EAAkBpf,EAAA,CAD9BsD,EAAAA,cACY8b,oBC8BX,SAAAG,EACSjD,EACCkD,EACqB5W,EACrBqP,EACAzB,EACA6G,GALDne,KAAAod,cAAAA,EACCpd,KAAAsgB,mBAAAA,EACqBtgB,KAAA0J,WAAAA,EACrB1J,KAAA+Y,GAAAA,EACA/Y,KAAAsX,cAAAA,EACAtX,KAAAme,gBAAAA,EAbFne,KAAAugB,gBAAkB,GAwD5B,OArDE/gB,OAAAgC,eAAI6e,EAAAngB,UAAA,YAAS,KAAb,SAAcuc,GACZzc,KAAKod,cAAcJ,UAAYP,mCAajC4D,EAAAngB,UAAAsgB,YAAA,SAAYC,GACVzgB,KAAKogB,eAAoC,IAI3CC,EAAAngB,UAAAkgB,cAAA,SAAcK,GACZzgB,KAAKsgB,mBAAmBF,iBAIG,IAAvBK,GAAgCzW,EAAAA,kBAAkBhK,KAAK0J,cACzD1J,KAAKugB,gBAAkB5gB,MAAM+gB,KAAK1gB,KAAK+Y,GAAGnS,cAAc+Z,iBAAiB,gBACrE3gB,KAAKugB,gBAAgB5f,OAAS,IAChCX,KAAKugB,gBAAgB,GAAGna,QACxBpG,KAAK4gB,oBASXP,EAAAngB,UAAA2gB,aAAA,WACE7gB,KAAKogB,iBAICC,EAAAngB,UAAA0gB,eAAR,WAAA,IAAAnc,EAAAzE,KACE,GAAoC,IAAhCA,KAAKugB,gBAAgB5f,OAAzB,CAIA,IAAMmgB,EAAY9gB,KAAK+gB,OAAOtb,QAAO,SAAAub,GAAS,OAAAvc,EAAK8b,gBAAgBU,MAAK,SAAAvC,GAAW,OAAAsC,EAAMlB,UAAYpB,EAAQ3C,SAE7G/b,KAAKme,gBAAgBjD,SACnBlb,KAAKsX,cAAcvB,MAAM/V,KAAKsX,cAAcnB,KAAKpB,iBAAkB,CAAEmM,aAAcJ,EAAUngB,OAAOwgB,yDA7ChFjF,UACMgE,UACa1gB,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,sBACIyC,EAAAA,kBACWgH,SACEoF,MAV3Bja,EAAA,CADCkN,EAAAA,MAAM,+CAmCPlN,EAAA,CADC4X,EAAAA,gBAAgBiH,GAAU,CAAEyB,aAAa,kCAI1CtgB,EAAA,CADCuN,EAAAA,aAAa,4CAxCHgS,EAAOvf,EAAA,CATnBiC,EAAAA,UAAU,CACTC,SAAU,YACVwO,UAAW,CAAC0K,GAAegE,GAAoBnF,IAC/ChU,KAAM,CACJsa,mBAAoB,OACpBC,8BAA+B,+BAC/BC,2BAA4B,+BAc3B9f,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eAXCmU,oBCjBX,SAAAmB,EAAmBpE,GAAApd,KAAAod,cAAAA,EAQrB,OANEoE,EAAAthB,UAAA2f,SAAA,WAEM7f,KAAKqc,QAAUrc,KAAKod,cAAcL,QAAQ/c,KAAKqc,UACjDrc,KAAKod,cAAcf,OAASrc,KAAKqc,kDALHH,MAFdpb,EAAA,CAAnBkN,EAAAA,MAAM,2CADIwT,EAAS1gB,EAAA,CAHrBiC,EAAAA,UAAU,CACTC,SAAU,0BAECwe,oBCcX,SAAAC,EACYpC,EACYjC,EACZc,EACAU,GAJZ,IAAAna,EAAAzE,KACYA,KAAAqf,eAAAA,EACYrf,KAAAod,cAAAA,EACZpd,KAAAke,oBAAAA,EACAle,KAAA4e,iBAAAA,EAXF5e,KAAA4E,cAAgC,GAC1C5E,KAAAud,SAAU,EACVvd,KAAA0hB,UAAW,EAWT1hB,KAAK4E,cAAcpC,KACjBxC,KAAKqf,eAAeL,cAAcla,WAAU,SAAAyY,GAC1C9Y,EAAK8Y,QAAUA,MAGnBvd,KAAK4E,cAAcpC,KACjBxC,KAAK4e,iBAAiBE,eAAeha,WAAU,SAAA4Z,GAC7Cja,EAAKia,QAAUA,MAgBvB,OAXE+C,EAAAvhB,UAAAod,aAAA,WACE,OAAOtd,KAAKke,oBAAoBZ,aAAatd,KAAKud,QAASvd,KAAK2hB,YAGlEF,EAAAvhB,UAAAyhB,QAAA,WACE,OAAO3hB,KAAKod,gBAAkBpd,KAAKod,cAAcT,cAGnD8E,EAAAvhB,UAAA8G,YAAA,WACEhH,KAAK4E,cAAc2X,KAAI,SAAArV,GAAO,OAAAA,EAAIrB,2DA1BR8Y,UACWzC,GAAanb,WAAA,CAAA,CAAAsG,KAAjDqI,EAAAA,kBAC8ByN,UACHoB,MAP9Bzd,EAAA,CADC8gB,EAAAA,aAAajC,GAAU,CAAEtO,QAAQ,iCAJdoQ,EAAoB3gB,EAAA,CADzCiC,EAAAA,YAWItB,EAAA,EAAAiO,EAAAA,aAViB+R,qBCiBtB,SAAAI,mDAA+D,OAAtB/hB,EAAA+hB,EAAAC,GAA5BD,EAAmB/gB,EAAA,CArB/ByQ,EAAAA,UAAU,CACTvO,SAAU,wBACVqJ,SAAU,ylBAYVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CAACmN,GAAgBJ,GAAkB5D,GAAkBwC,OAErD0E,IAA4BJ,ICXzCS,GAAA,WACE,SAAAA,EAAYC,EAAwBC,EAAuBnK,GAGzD,QAHyD,IAAAA,IAAAA,EAAA,GACzDjY,KAAKqiB,SAAWD,EAAIC,UAEfriB,KAAKqiB,SAASC,IAAIH,EAAe,MAAO,CAC3C,IAAMI,EAAMviB,KAAKqiB,SAASC,IAAIE,EAAAA,0BACxBzJ,EAAK/Y,KAAKqiB,SAASC,IAAI3T,EAAAA,YAG7ByT,EAAIK,gBAAgBF,EAAIG,wBAAwBnI,KAChD,IAAMoI,EAA+BJ,EAAIG,wBAAwBP,GAI3DpT,EAAU,GAChBA,EAAQkJ,GAAS,CAACc,EAAGnS,eAGrB,IAAMgc,EAAeR,EAAIK,gBAAgBE,OAASE,OAAWA,EAAW9T,GAExEqT,EAAIU,OAAO,GAGXF,EAAaG,SAASrB,UAAW,EAGjC1hB,KAAKqiB,SAAWO,EAAaP,UASnC,OAHEH,EAAAhiB,UAAAoiB,IAAA,SAAOU,EAAoCC,GACzC,OAAOjjB,KAAKqiB,SAASC,IAAIU,EAAOC,IAEpCf,EAnCA,iBCyBE,SAAAgB,EACYd,EACAe,EACVd,EACQe,EACR9e,EACAyU,GANF,IAAAtU,EAAAzE,KACYA,KAAAoiB,IAAAA,EACApiB,KAAAmjB,YAAAA,EAEFnjB,KAAAojB,UAAAA,EAZApjB,KAAA4E,cAAgC,GAChC5E,KAAAiY,MAAQ,EAehBjY,KAAKsE,SAAWA,EAChBtE,KAAK+Y,GAAKA,EACV,IACE/Y,KAAK4e,iBAAmByD,EAASC,IAAI/D,IACrCve,KAAKqf,eAAiBgD,EAASC,IAAI3D,IACnC3e,KAAKke,oBAAsBmE,EAASC,IAAInF,IACxCnd,KAAKsgB,mBAAqB+B,EAASC,IAAIpC,IACvC,MAAO5d,IAELtC,KAAKke,qBACPle,KAAKke,oBAAoBN,iBAAiBtZ,EAAUyU,EAAGnS,eAErD5G,KAAKsgB,oBACPtgB,KAAK4E,cAAcpC,KACjBxC,KAAKsgB,mBAAmB+C,cAAcve,WAAU,WAC9CL,EAAK2e,UAAU1E,QAAQ0B,gBACvB3b,EAAK2e,UAAU1E,QAAQ4E,6BA6EjC,OArEE9jB,OAAAgC,eAAI0hB,EAAAhjB,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKuQ,SAEd,SAAOrO,GACLlC,KAAKuQ,IAAMrO,EACPlC,KAAKie,mBACPje,KAAKie,iBAAiBlC,GAAK7Z,oCAK/BghB,EAAAhjB,UAAAqjB,kBAAA,WACMvjB,KAAKqf,gBACPrf,KAAKqf,eAAeF,uBAUd+D,EAAAhjB,UAAAsjB,yBAAV,SAAsCR,EAAoCC,GACxE,IACE,OAAOjjB,KAAKyjB,mBAAmBnB,IAAIU,EAAOC,GAC1C,MAAO3gB,GACP,OAAO2gB,IAIXC,EAAAhjB,UAAA2f,SAAA,WACE7f,KAAKyjB,mBAAqB,IAAIvB,GAAYliB,KAAKmjB,YAAanjB,KAAKoiB,IAAKpiB,KAAKiY,OAC3EjY,KAAKie,iBAAmBje,KAAKyjB,mBAAmBnB,IAAI3H,IAEhD3a,KAAKuQ,IACPvQ,KAAKie,iBAAiBlC,GAAK/b,KAAKuQ,IAEhCvQ,KAAKuQ,IAAMvQ,KAAKie,iBAAiBlC,GAG/B/b,KAAK4e,kBACP5e,KAAK4e,iBAAiBH,WAAWze,KAAKojB,WAGxCpjB,KAAK0jB,8BAGPR,EAAAhjB,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAGhCqd,EAAAhjB,UAAAwjB,2BAAR,WAAA,IAAAjf,EAAAzE,KACMA,KAAKqf,gBACPrf,KAAK4E,cAAcpC,KACjBxC,KAAKqf,eAAeL,cACjBxZ,KAAKme,EAAAA,WAAU,GAAQle,EAAAA,QAAO,WAAM,OAAAhB,EAAKH,YAAcG,EAAKsU,MAAK6K,EAAAA,wBACjE9e,WAAU,SAAArC,GAAS,OAAAgC,EAAKof,mBAAmBphB,QAK5CygB,EAAAhjB,UAAA2jB,mBAAR,SAA2BphB,GACzBzC,KAAKsE,SAASgV,aAAatZ,KAAK+Y,GAAGnS,cAAe,mBAAoB5G,KAAK8jB,qBAAqBrhB,KAG1FygB,EAAAhjB,UAAA4jB,qBAAR,SAA6BrhB,GAC3B,OAAOzC,KAAKie,iBAAiBlC,GAAGpZ,OAAOF,EAAQ,SAAW,qDAlG3CqL,EAAAA,wBACQiW,EAAAA,YACbC,EAAAA,gBACSC,EAAAA,iBACT9c,EAAAA,iBACNwH,EAAAA,cA0BN7N,EAAA,CAFCmf,EAAAA,cACAjS,EAAAA,gCAYDlN,EAAA,CADCuN,EAAAA,aAAa,+CA1DH6U,EAAkBpiB,EAAA,CAD9BiC,EAAAA,aACYmgB,qBCnBX,SAAAgB,EACE9B,EACAC,EAGA3D,EACApa,EACAyU,GAPF,IAAAtU,EASEqd,EAAAlhB,KAAAZ,KAAMoiB,EAAKP,GAAqBQ,EAAU3D,EAASpa,EAAUyU,IAAG/Y,YAXxDyE,EAAAwT,MAAQ,IAapB,OAdgCnY,EAAAokB,EAAApC,4CAIvBhU,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,cAVKuV,EAAUpjB,EAAA,CADtBiC,EAAAA,UAAU,CAAEC,SAAU,eAAgB+D,KAAM,CAAEqd,oBAAqB,UAO/D3iB,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,aAPQwU,IAAmBhB,kBCgChC,SAAAmB,KAAmC,OAAtBA,EAAoBvjB,EAAA,CAxBhCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,GACxBI,aAAc,CACZqc,GACA3B,GACAM,GACAc,GACAiB,GACAmB,GACAK,GACAqC,IAEF3gB,QAAS,CACPoc,GACA3B,GACAM,GACAc,GACAiB,GACAmB,GACAK,GACAqC,IAEFzJ,gBAAiB,CAACoH,OAEPwC,MC9BAC,GAAY,IAAI5N,EAAAA,eAAyC,aACtE,SAAgB6N,KACd,OAAO,IAAI1J,EAAAA,iBAAyB,GAEtC,IAAa2J,GAAqB,CAAE/S,QAAS6S,GAAWxN,WAAYyN,IAepEE,GAAA,WAUE,SAAAA,EAA+BxU,GAA/B,IAAAxL,EAAAzE,KANAA,KAAA0hB,UAAW,EAGX1hB,KAAA0kB,QAAS,EACD1kB,KAAA4E,cAAgC,GAGtC5E,KAAK4E,cAAcpC,KACjByN,EAAcnL,WAAU,SAAAgM,GACtBrM,EAAKigB,OAAS5T,MActB,OATE2T,EAAAvkB,UAAA2f,SAAA,WACM7f,KAAKghB,OACPhhB,KAAKghB,MAAMhB,eAIfyE,EAAAvkB,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAfMgV,EAAAA,gBAAe9Z,WAAA,CAAA,CAAAsG,KAAhDC,EAAAA,OAAMC,KAAA,CAAC+c,SAJpBxjB,EAAA,CADC8gB,EAAAA,aAAajC,GAAU,CAAEtO,QAAQ,iCALvBoT,EAAkB3jB,EAAA,CAb9ByQ,EAAAA,UAAU,CACTvO,SAAU,0CACVqJ,SAAU,2JAKVtF,KAAM,CACJ4d,+BAAgC,UAChCC,6BAA8B,UAEhCpT,UAAW,CAACmJ,GAAkB6J,MAYjB/iB,EAAA,EAAA6F,EAAAA,OAAOgd,MAVTG,GAAb,GCZAI,GAAA,SAAA/C,GACE,SAAA+C,EACEzC,EACAC,EAGA3D,EACApa,EACAyU,EACgC2L,GARlC,IAAAjgB,EAUEqd,EAAAlhB,KAAAZ,KAAMoiB,EAAKqC,GAAoBpC,EAAU3D,EAASpa,EAAUyU,IAAG/Y,YAF/ByE,EAAAigB,OAAAA,IAcpC,OAvBiC5kB,EAAA+kB,EAAA/C,GAc/B+C,EAAA3kB,UAAA2f,SAAA,WACEiC,EAAA5hB,UAAM2f,SAAQjf,KAAAZ,MAEd,IAAMiQ,EAAgBjQ,KAAKwjB,yBAAmDc,GAAW,MAErFrU,GAAiC,OAAhBjQ,KAAK0kB,QACxBzU,EAAchO,MAAK,6CAlBhB6L,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,2CACHmW,EAAAA,UAASvd,KAAA,CAAC,kBATFsd,EAAW/jB,EAAA,CADvBiC,EAAAA,UAAU,CAAEC,SAAU,8BAKlBvB,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,YAIAjO,EAAA,EAAAqjB,EAAAA,UAAU,eATFD,GAAb,CAAiC3B,mBCcjC,SAAA6B,IAAA,IAAAtgB,EAAA,OAAAqd,GAAAA,EAAAjhB,MAAAb,KAAAU,YAAAV,YACUyE,EAAAugB,QAAS,IAoBnB,OArB0CllB,EAAAilB,EAAAjD,GAWxCtiB,OAAAgC,eAAIujB,EAAA7kB,UAAA,YAAS,KAOb,WACE,OAAOF,KAAKglB,YARd,SAAc9iB,GAEVlC,KAAKglB,OADc,iBAAV9iB,EACe,UAAVA,IAEEA,mCAJpBpB,EAAA,CADCkN,EAAAA,uCAVU+W,EAAoBjkB,EAAA,CArBhCyQ,EAAAA,UAAU,CACTvO,SAAU,8CACVqJ,SAAU,2nBAYVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CAAC+M,GAAkBpB,GAAqBwB,OAExCoG,IAA6BtD,kBCX1C,SAAAwD,KAAgC,OAAnBA,EAAiBnkB,EAAA,CAN7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAemhB,GAAsB7J,IAC7DlX,aAAc,CAACuhB,GAAaE,GAAsBN,IAClDlhB,QAAS,CAAC8gB,GAAsBQ,GAAaE,GAAsBN,IACnEhK,gBAAiB,CAACgK,OAEPQ,MCdTC,GAAgB,EAEPC,GAAe,IAAIzO,EAAAA,eAAuB,gBAEvD,SAAgB0O,KACd,QAASF,GAGX,IAAaG,GAAwB,CACnC5T,QAAS0T,GACTrO,WAAYsO,IAcdE,GAAA,WAAA,SAAAA,IASUtlB,KAAAulB,eAAkC,IAAI5hB,EAAAA,QA4ChD,OA5BEnE,OAAAgC,eAAW8jB,EAAAplB,UAAA,gBAAa,KAAxB,WACE,OAAOF,KAAKulB,eAAe1hB,gDAW7BrE,OAAAgC,eAAW8jB,EAAAplB,UAAA,UAAO,KAalB,WACE,OAAOF,KAAKwlB,cAdd,SAAmBtjB,GACblC,KAAKwlB,WAAatjB,IACpBlC,KAAKwlB,SAAWtjB,EAChBlC,KAAKulB,eAAetjB,KAAKC,qCAxClBojB,EAAexkB,EAAA,CAX3BsD,EAAAA,cAWYkhB,GAAb,iBCEE,SAAAG,EACUC,EACsB3J,EACtB1P,EACAD,GAJV,IAAA3H,EAAAzE,KACUA,KAAA0lB,gBAAAA,EACsB1lB,KAAA+b,GAAAA,EACtB/b,KAAAqM,SAAAA,EACArM,KAAAoM,UAAAA,EANFpM,KAAA2lB,WAAqB,EA+CA3lB,KAAA4lB,aAAsC,IAAInZ,EAAAA,cAAsB,GAvC3FzM,KAAK6lB,mBAAmBH,EAAgBna,SAExCvL,KAAK8lB,aAAe9lB,KAAK0lB,gBAAgBK,cAAcjhB,WAAU,SAAAkhB,GAC/DvhB,EAAKohB,mBAAmBG,MAiE9B,OA7DUP,EAAAvlB,UAAA2lB,mBAAR,SAA2BI,GACzB,IAAMC,EAAcD,IAAcjmB,KAAK+b,GAEnCmK,IAAgBlmB,KAAK2lB,YACvB3lB,KAAKmmB,WAAWD,GAChBlmB,KAAK4lB,aAAahY,KAAKsY,GACvBlmB,KAAK2lB,UAAYO,IAYrB1mB,OAAAgC,eAAWikB,EAAAvlB,UAAA,SAAM,KAqBjB,WACE,OAAOF,KAAK0lB,gBAAgBna,UAAYvL,KAAK+b,QAtB/C,SAAkB7Z,GACZA,IACFlC,KAAK0lB,gBAAgBna,QAAUvL,KAAK+b,qCA8BjC0J,EAAAvlB,UAAAimB,WAAP,SAAkBjkB,GACZA,EACFlC,KAAKoM,UAAUmB,mBAAmBvN,KAAKqM,UAEvCrM,KAAKoM,UAAUkB,SAInBmY,EAAAvlB,UAAA8G,YAAA,WACEhH,KAAK8lB,aAAajgB,wDAvEOyf,mCACxBhe,EAAAA,OAAMC,KAAA,CAAC4d,aACUpX,EAAAA,mBACCD,EAAAA,oBA2BrBhN,EAAA,CADCkN,EAAAA,MAAM,2CAesBlN,EAAA,CAA5BsN,EAAAA,OAAO,yDAjDGqX,EAAW3kB,EAAA,CAZvBiC,EAAAA,UAAU,CAAEC,SAAU,kBAkBlBvB,EAAA,EAAA6F,EAAAA,OAAO6d,MANCM,oBCyBX,SAAAW,EACUnW,EACA5D,EACAD,GAHV,IAAA3H,EAAAzE,KACUA,KAAAiQ,cAAAA,EACAjQ,KAAAqM,SAAAA,EACArM,KAAAoM,UAAAA,EAfiBpM,KAAA6E,WAAoC,IAAI4H,EAAAA,cAAsB,GAiBvFzM,KAAK8lB,aAAe9lB,KAAKiQ,cAAcpL,WAAWC,WAAU,SAAA8H,GAC1DnI,EAAK0hB,WAAWvZ,GAChBnI,EAAKI,WAAW+I,KAAKhB,MAsB3B,OApDEpN,OAAAgC,eAAW4kB,EAAAlmB,UAAA,OAAI,KAmBf,WACE,OAAOF,KAAKiQ,cAAc9L,UApB5B,SAAgBjC,GACdlC,KAAKiQ,cAAc9L,KAAOjC,mCAwCrBkkB,EAAAlmB,UAAAimB,WAAP,SAAkBjkB,GACZA,EACFlC,KAAKoM,UAAUmB,mBAAmBvN,KAAKqM,UAEvCrM,KAAKoM,UAAUkB,SAInB8Y,EAAAlmB,UAAA8G,YAAA,WACEhH,KAAK8lB,aAAajgB,wDA1BKrC,SACLuK,EAAAA,mBACCD,EAAAA,oBA1BrBhN,EAAA,CADCkN,EAAAA,MAAM,uCAYoBlN,EAAA,CAA1BsN,EAAAA,OAAO,qDAtBGgY,EAAStlB,EAAA,CAZrBiC,EAAAA,UAAU,CAAEC,SAAU,iBAYVojB,oBCVb,SAAAC,IACSrmB,KAAAsmB,WAAqB,EAElBtmB,KAAAumB,UAAoB,EAYpBvmB,KAAAwmB,WAAqB,EAiBrBxmB,KAAAymB,cAAkC,IAAI9iB,EAAAA,QAelD,OA3CEnE,OAAAgC,eAAI6kB,EAAAnmB,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKumB,cAGd,SAAYrkB,IACVA,IAAUA,KACIlC,KAAKumB,WACjBvmB,KAAKumB,SAAWrkB,oCAKpB1C,OAAAgC,eAAI6kB,EAAAnmB,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKwmB,eAGd,SAAatkB,IACXA,IAAUA,KACIlC,KAAKwmB,YACjBxmB,KAAKwmB,UAAYtkB,EACjBlC,KAAKymB,cAAcxkB,KAAKC,qCAIrBmkB,EAAAnmB,UAAAwkB,OAAP,WACE1kB,KAAK0mB,UAAY1mB,KAAKwmB,WAIxBhnB,OAAAgC,eAAW6kB,EAAAnmB,UAAA,eAAY,KAAvB,WACE,OAAOF,KAAKymB,cAAc5iB,gDAG5BwiB,EAAAnmB,UAAAsP,mBAAA,SAAmBsB,GACjB,OAAQA,GACN,KAAKvH,EAAAA,gBAAgBgG,QACnBvP,KAAK+Q,SAAU,EACf,MACF,QACE/Q,KAAK+Q,SAAU,IA3CVsV,EAAevlB,EAAA,CAD3BsD,EAAAA,cACYiiB,oBC4BX,SAAAM,EACsBta,EACZD,EACA2M,EACAzU,EACAyN,GALV,IAAAtN,EAAAzE,KACsBA,KAAAqM,SAAAA,EACZrM,KAAAoM,UAAAA,EACApM,KAAA+Y,GAAAA,EACA/Y,KAAAsE,SAAAA,EACAtE,KAAA+R,OAAAA,EArBF/R,KAAAwmB,WAAqB,EAcExmB,KAAA4mB,eAAwC,IAAIna,EAAAA,cAAsB,GAqBzFzM,KAAA6mB,eAAiC,GAZvC9U,EAAOuU,aACPtmB,KAAK6mB,eAAerkB,KAClBuP,EAAO+U,aAAahiB,WAAU,WAC5BL,EAAK0hB,aACL1hB,EAAKmiB,eAAehZ,KAAKnJ,EAAKsN,OAAO2U,cAgD7C,OAzEElnB,OAAAgC,eAAImlB,EAAAzmB,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKwmB,eAId,SAAatkB,GACU,kBAAVA,IACTlC,KAAK+R,OAAO2U,SAAWxkB,EACvBlC,KAAKwmB,UAAYtkB,oCA2BbykB,EAAAzmB,UAAAimB,WAAR,WACE,IAAInmB,KAAK+R,OAAO2U,UAAsC,IAA1B1mB,KAAKoM,UAAUzL,OAG3C,GAAIX,KAAKqM,SACHrM,KAAK+R,OAAO2U,SAGd1mB,KAAKoM,UAAUmB,mBAAmBvN,KAAKqM,UAMvCrM,KAAKoM,UAAUkB,aAGjB,IAEMtN,KAAK+R,OAAO2U,SACd1mB,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,UAAW,MAEzD5G,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,UAAW,QAE3D,MAAOtE,MAMbqkB,EAAAzmB,UAAA2f,SAAA,WACE7f,KAAKmmB,cAGPQ,EAAAzmB,UAAA8G,YAAA,WACEhH,KAAK+R,OAAOuU,aACZtmB,KAAK6mB,eAAe5f,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,2DAxDzBkI,EAAAA,YAAWhN,WAAA,CAAA,CAAAsG,KAAxCqI,EAAAA,kBACkB5B,EAAAA,wBACPa,EAAAA,kBACMxH,EAAAA,iBACFkf,MAdlBvlB,EAAA,CADCkN,EAAAA,MAAM,+CAQwBlN,EAAA,CAA9BsN,EAAAA,OAAO,6DAfGuY,EAAa7lB,EAAA,CADzBiC,EAAAA,UAAU,CAAEC,SAAU,oBAmBlBvB,EAAA,EAAAiO,EAAAA,aAlBQiX,MCXAI,GAAsC,CAACtB,GAAaW,GAAWO,IAG5EK,GAAA,WAAA,SAAAA,KAAmC,OAAtBA,EAAoBlmB,EAAA,CADhCqC,EAAAA,SAAS,CAAEC,QAAS,CAACC,EAAAA,cAAeC,aAAc,CAACyjB,IAAyBxjB,QAAS,CAACwjB,OAC1EC,GAAb,iBCNA,SAAAC,IACUjnB,KAAAknB,oBAA4C,UAGpD1nB,OAAAgC,eAAIylB,EAAA/mB,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKwlB,cAGd,SAAYtjB,GACVlC,KAAKknB,oBAAoB1kB,KAAKxC,KAAKwlB,UACnCxlB,KAAKwlB,SAAWtjB,mCAGlB1C,OAAAgC,eAAIylB,EAAA/mB,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAKknB,oBAAoBvmB,wCAGlCsmB,EAAA/mB,UAAAinB,wBAAA,WACEnnB,KAAKwlB,SAAWxlB,KAAKknB,oBAAoBE,qGAlBhCH,EAAgBnmB,EAAA,CAD5BsD,EAAAA,WAAW,CAAEmS,WAAY,UACb0Q,oBC2BX,SAAAI,EACUtO,EACAsJ,EACAiF,EACAhjB,EACqBoF,GAJrB1J,KAAA+Y,GAAAA,EACA/Y,KAAAqiB,SAAAA,EACAriB,KAAAsnB,kBAAAA,EACAtnB,KAAAsE,SAAAA,EACqBtE,KAAA0J,WAAAA,EAZvB1J,KAAAunB,mBAAoB,EAoBpBvnB,KAAAwnB,QAA2B,CACjCC,QAAQ,GAPRznB,KAAKwE,SAAWxE,KAAKqiB,SAASC,IAAI9a,EAAAA,UAClCxH,KAAKsnB,kBAAkB/b,QAAUvL,KAEjCA,KAAKsE,SAASgV,aAAatZ,KAAK+Y,GAAGnS,cAAe,WAAY,KA4FlE,OArFEpH,OAAAgC,eAAI6lB,EAAAnnB,UAAA,SAAM,KAAV,SAAWwnB,GACT1nB,KAAKwnB,QAAUhoB,OAAOa,OAAOL,KAAKwnB,QAASE,oCAI7CL,EAAAnnB,UAAAynB,UAAA,SAAU5jB,GACR,GAAI/D,KAAKsnB,kBAAkB/b,UAAYvL,MAASgK,EAAAA,kBAAkBhK,KAAK0J,cAAe1J,KAAKunB,kBAA3F,CAGA,IAAM3gB,EAA6B5G,KAAK+Y,GAAGnS,cACvC5G,KAAKwnB,QAAQC,QAAU1jB,EAAM/C,SAAW4F,EAAcX,SAASlC,EAAM/C,QAEvE4F,EAAcR,QACLrC,EAAM/C,SAAWhB,KAAK4nB,iBAAmBhhB,EAAcX,SAASjG,KAAK6nB,8BAE9EjhB,EAAcR,QACLrC,EAAM/C,SAAWhB,KAAK8nB,cAGtB/jB,EAAM/C,SAAW4F,GAAkBA,EAAcX,SAASlC,EAAM/C,UAGzEhB,KAAKunB,mBAAoB,GAG3BvnB,KAAK6nB,6BAA+B9jB,EAAM/C,SAGpCqmB,EAAAnnB,UAAA6nB,2BAAR,WAGE,IAAMC,EAAgBhoB,KAAKwE,SAASsX,cAAc,QAIlD,OAHA9b,KAAKsE,SAASgV,aAAa0O,EAAe,WAAY,KACtDhoB,KAAKsE,SAASmJ,SAASua,EAAe,6BAE/BA,GAGDX,EAAAnnB,UAAA+nB,cAAR,WACE,GAAIje,EAAAA,kBAAkBhK,KAAK0J,YAAa,CACtC1J,KAAK8nB,aAAe9nB,KAAK+nB,6BACzB/nB,KAAK4nB,gBAAkB5nB,KAAK+nB,6BAC5B,IAAMG,EAAcloB,KAAK+Y,GAAGnS,cAE5B5G,KAAKsE,SAAS6jB,aAAaD,EAAYniB,cAAe/F,KAAK8nB,aAAcI,GAErEA,EAAYE,YACdpoB,KAAKsE,SAAS6jB,aAAaD,EAAYG,WAAYroB,KAAK4nB,gBAAiBM,EAAYE,aAErFpoB,KAAKsE,SAASoJ,YAAYwa,EAAYG,WAAYroB,KAAK4nB,mBAKrDP,EAAAnnB,UAAAooB,iBAAR,WACMte,EAAAA,kBAAkBhK,KAAK0J,aAAe1J,KAAK8nB,cAAgB9nB,KAAK4nB,kBAClE5nB,KAAK+F,cAAcqH,YAAYpN,KAAK8nB,cACpC9nB,KAAK+F,cAAcqH,YAAYpN,KAAK4nB,wBAG7B5nB,KAAK8nB,oBACL9nB,KAAK4nB,kBAITP,EAAAnnB,UAAAqoB,iBAAP,WACMvoB,KAAKwoB,uBAAyBxoB,KAAKwoB,sBAAsBpiB,OAC3DpG,KAAKwoB,sBAAsBpiB,SAI/BihB,EAAAnnB,UAAAyM,gBAAA,WACM3C,EAAAA,kBAAkBhK,KAAK0J,cACzB1J,KAAKwoB,sBAAqCxoB,KAAKwE,SAASikB,cACxDzoB,KAAK+F,cAAgB/F,KAAK+Y,GAAGnS,cAAcb,eAG7C/F,KAAKioB,iBAGPZ,EAAAnnB,UAAA8G,YAAA,WACEhH,KAAKsoB,mBACLtoB,KAAKuoB,mBACLvoB,KAAKsnB,kBAAkBH,oEAnGXxY,EAAAA,kBACMqV,EAAAA,gBACSiD,UACT9f,EAAAA,iBACuB3H,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBAYVpL,EAAA,CADCkN,EAAAA,MAAM,4CAMPlN,EAAA,CADCuN,EAAAA,aAAa,mBAAoB,CAAC,0CA/BxBgZ,EAAkBvmB,EAAA,CAD9BiC,EAAAA,UAAU,CAAEC,SAAU,mBAgBlBvB,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eAfCmb,MCjBAqB,GAAqC,CAACrB,IAOnDsB,GAAA,WAAA,SAAAA,KAAiC,OAApBA,EAAkB7nB,EAAA,CAL9BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAColB,IACfnlB,QAAS,CAACmlB,OAECC,GAAb,GCJaC,GAA8B,cAC9BC,GAA8B,cAI9BC,GAA0B,YAE1BC,GAA2B,OAE3BC,GAAiC,QAEjCC,GAAoB,UAapBC,GAAwC,CACnD7S,KAAM,gBACN8S,OAAQ,CAXkB,KADC,KADD,SAgBfC,GAAwC,CACnD/S,KAAM,gBACN8S,OAAQ,CAjBmB,KACD,KAFA,SAqBfE,GAAqC,CAChDhT,KAAM,aACN8S,OAAQ,CAvBkB,OACC,KACD,OChB5B,SAAgBG,GAA0BC,EAAcC,GAEtD,OAAO,IAAIC,KAAKF,EAAMC,EAAQ,EAAG,GAAGE,UCLtC,IAAAC,GAAA,WACE,SAAAA,EACSC,EACAC,EACAC,EACAC,EACAC,EACAC,QAJA,IAAAJ,IAAAA,GAAA,QACA,IAAAC,IAAAA,GAAA,QACA,IAAAC,IAAAA,GAAA,QACA,IAAAC,IAAAA,GAAA,QACA,IAAAC,IAAAA,GAAA,GALAjqB,KAAA4pB,SAAAA,EACA5pB,KAAA6pB,aAAAA,EACA7pB,KAAA8pB,WAAAA,EACA9pB,KAAA+pB,WAAAA,EACA/pB,KAAAgqB,WAAAA,EACAhqB,KAAAiqB,YAAAA,EASX,OAHEzqB,OAAAgC,eAAImoB,EAAAzpB,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKiqB,YAAc,GAAK,mCAEnCN,EAhBA,GCFAO,GAAA,WACE,SAAAA,EAA4BX,EAA8BC,EAA+BW,GAA7DnqB,KAAAupB,KAAAA,EAA8BvpB,KAAAwpB,MAAAA,EAA+BxpB,KAAAmqB,KAAAA,EA6C3F,OAxCED,EAAAhqB,UAAAkqB,QAAA,SAAQC,GACN,QAAIA,IACKrqB,KAAKupB,OAASc,EAAId,MAAQvpB,KAAKwpB,QAAUa,EAAIb,OAASxpB,KAAKmqB,OAASE,EAAIF,OAKnFD,EAAAhqB,UAAAoqB,OAAA,WACE,OAAO,IAAIb,KAAKzpB,KAAKupB,KAAMvpB,KAAKwpB,MAAOxpB,KAAKmqB,OAM9CD,EAAAhqB,UAAAqqB,YAAA,SAAYroB,GAIV,IAAMioB,EAAa,IAAIV,KAAKzpB,KAAKupB,KAAMvpB,KAAKwpB,MAAOxpB,KAAKmqB,KAAOjoB,GAC/D,OAAO,IAAIgoB,EAASC,EAAKK,cAAeL,EAAKM,WAAYN,EAAKT,YAMhEQ,EAAAhqB,UAAAwqB,MAAA,WACE,OAAO,IAAIR,EAASlqB,KAAKupB,KAAMvpB,KAAKwpB,MAAOxpB,KAAKmqB,OAGlDD,EAAAhqB,UAAAyqB,mBAAA,WACE,MAAO,GAAG3qB,KAAKupB,KAAOvpB,KAAK4qB,IAAI5qB,KAAKwpB,OAASxpB,KAAK4qB,IAAI5qB,KAAKmqB,OAGrDD,EAAAhqB,UAAA0qB,IAAR,SAAYC,GACV,OAAOA,EAAM,GAAK,IAAIA,EAAQ,GAAGA,GAG5BX,EAAAhqB,UAAA4qB,aAAP,WACE,OAAO9qB,KAAKsqB,SAASS,sBAEzBb,EA9CA,GCQAc,GAAA,WACE,SAAAA,EACSC,EACCC,EACAC,EACAC,EACDC,EACCC,GALDtrB,KAAAirB,SAAAA,EACCjrB,KAAAkrB,YAAAA,EACAlrB,KAAAmrB,aAAAA,EACAnrB,KAAAorB,MAAAA,EACDprB,KAAAqrB,eAAAA,EACCrrB,KAAAsrB,cAAAA,EAKFtrB,KAAAurB,kBAAoC,GAH1CvrB,KAAKwrB,yBAwKT,OA9JEhsB,OAAAgC,eAAIwpB,EAAA9qB,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKyrB,+CASNT,EAAA9qB,UAAAsrB,uBAAR,WAEE,IAAME,EAAmC1rB,KAAKirB,SAASU,gBACjDC,EAAmC5rB,KAAKirB,SAASY,YAGjDC,EAAqC9rB,KAAK+rB,8BAC9C/rB,KAAKirB,SAAS1B,KACdvpB,KAAKirB,SAASzB,OAEVwC,EJAqCC,IICdjsB,KAAKirB,SAASiB,KAAKvrB,OAASmrB,GAGrDK,EAAoC,GACpCC,EAAoC,GAEpCN,EAA6B,IAC/BK,EAAoBnsB,KAAKqsB,sBACvBX,EAAkBQ,KAAKI,OAAO,EAAIR,IAClC,GACA,IAIJ9rB,KAAKurB,kBAAoBvrB,KAAKqsB,sBAAsBrsB,KAAKirB,SAASiB,MAAM,GAAO,GAE3EF,EAA6B,IAC/BI,EAAoBpsB,KAAKqsB,sBACvBT,EAAkBM,KAAKI,MAAM,EAAGN,IAChC,GACA,IAKJhsB,KAAKyrB,cAAgBzrB,KAAKusB,qBAAqBJ,EAAmBnsB,KAAKurB,kBAAmBa,GAC1FpsB,KAAKwsB,wBACLxsB,KAAKysB,0BAGCzB,EAAA9qB,UAAAwsB,eAAR,SAAuBvC,GACf,IAAAwC,EAAA3sB,KAAAsrB,cAAEsB,EAAAD,EAAAC,QAASC,EAAAF,EAAAE,QACXnM,EAAOkM,EAAQjC,qBACfmC,EAAKD,EAAQlC,qBACbS,EAAQjB,EAAKQ,qBAEnB,QAASS,GAAS1K,GAAQ0K,GAAS0B,IAM7B9B,EAAA9qB,UAAAmsB,sBAAR,SAA8BH,EAAkBpC,EAAqBiD,GAArE,IAAAtoB,EAAAzE,KACQgtB,EAA2Bd,EAAK3P,KAAI,SAAA8N,GACxC,OAAO,IAAIV,GAAaU,GAAK,EAAOP,EAAYrlB,EAAKioB,eAAerC,IAAM,GAAO,MAKnF,OAHI0C,GAAqB/sB,KAAKirB,SAASgC,gBAAgBjtB,KAAKorB,SAC1D4B,EAAShtB,KAAKorB,MAAMjB,KAAO,GAAGN,cAAe,GAExCmD,GAWDhC,EAAA9qB,UAAA6rB,8BAAR,SAAsCmB,EAAqBC,GACzD,IAAMC,EH/FD,IAAI3D,KG+FkCyD,EAAaC,EAAc,GH/FrCE,SGiGjC,OAAID,GAAuBptB,KAAKqrB,eACvB+B,EAAsBptB,KAAKqrB,eJnEI,EIqER+B,EAAsBptB,KAAKqrB,gBAOrDL,EAAA9qB,UAAAotB,oBAAR,SAA4BjD,GAC1B,QAAKrqB,KAAKirB,SAASgC,gBAAgB5C,IAU7BW,EAAA9qB,UAAAqsB,qBAAR,SAA6BgB,EAAsBC,EAAsBvrB,GAIvE,IAHA,IAAMwrB,EAAc/qB,EAAuB6qB,EAASC,EAASvrB,GAEvDyrB,EAAiC,GAC9BltB,EAAI,EAAGA,EJ1F+B,EI0FEA,IAC/CktB,EAAaltB,GAAKitB,EAAenB,MJ5FK,EI4FC9rB,EJ5FD,GI4F4BA,EAAI,IAExE,OAAOktB,GAMD1C,EAAA9qB,UAAAssB,sBAAR,WACMxsB,KAAKkrB,aAAelrB,KAAKstB,oBAAoBttB,KAAKkrB,eACpDlrB,KAAKurB,kBAAkBvrB,KAAKkrB,YAAYf,KAAO,GAAGH,YAAa,IAS3DgB,EAAA9qB,UAAAusB,uBAAR,WACMzsB,KAAKmrB,cAAgBnrB,KAAKstB,oBAAoBttB,KAAKmrB,cACrDnrB,KAAK2tB,iBAAiB3tB,KAAKmrB,cAAc,GAChCnrB,KAAKkrB,aAAelrB,KAAKstB,oBAAoBttB,KAAKkrB,cAC3DlrB,KAAK2tB,iBAAiB3tB,KAAKkrB,aAAa,GACxClrB,KAAKmrB,aAAenrB,KAAKkrB,YAAYR,SAC5B1qB,KAAKstB,oBAAoBttB,KAAKorB,QACvCprB,KAAK2tB,iBAAiB3tB,KAAKorB,OAAO,GAClCprB,KAAKmrB,aAAenrB,KAAKorB,MAAMV,UAE/B1qB,KAAKmrB,aAAe,IAAIjB,GAASlqB,KAAKirB,SAAS1B,KAAMvpB,KAAKirB,SAASzB,MAAO,IAC1ExpB,KAAK2tB,iBAAiB3tB,KAAKmrB,cAAc,KAIrCH,EAAA9qB,UAAAytB,iBAAR,SAAyBtD,EAAeuD,GAClCvD,IACFrqB,KAAKurB,kBAAkBlB,EAAIF,KAAO,GAAGF,YAAc2D,IAOvD5C,EAAA9qB,UAAA2tB,mBAAA,SAAmBxD,GACjBrqB,KAAK2tB,iBAAiB3tB,KAAKmrB,cAAc,GACzCnrB,KAAK2tB,iBAAiBtD,GAAK,GAC3BrqB,KAAKmrB,aAAed,GAExBW,EAjLA,GCRA8C,GAAA,WAKE,SAAAA,EAA4BvE,EAA8BC,GAA9BxpB,KAAAupB,KAAAA,EAA8BvpB,KAAAwpB,MAAAA,EACxDxpB,KAAK+tB,2BA0DT,OAlDUD,EAAA5tB,UAAA6tB,yBAAR,WAAA,IAAAtpB,EAAAzE,KACQguB,EAA6B1E,GAA0BtpB,KAAKupB,KAAMvpB,KAAKwpB,OAC7ExpB,KAAKksB,KAAOvsB,MAAMquB,GACfC,KAAK,MACL1R,KAAI,SAAC4N,EAAMlS,GACV,OAAO,IAAIiS,GAASzlB,EAAK8kB,KAAM9kB,EAAK+kB,MAAOvR,EAAQ,OAOzD6V,EAAA5tB,UAAAkqB,QAAA,SAAQa,GACN,QAAIA,IACKjrB,KAAKupB,OAAS0B,EAAS1B,MAAQvpB,KAAKwpB,QAAUyB,EAASzB,QAQlEsE,EAAA5tB,UAAA+sB,gBAAA,SAAgB5C,GACd,QAAIA,IACKrqB,KAAKupB,OAASc,EAAId,MAAQvpB,KAAKwpB,QAAUa,EAAIb,QAQxDsE,EAAA5tB,UAAAyrB,cAAA,WACE,OAAmB,IAAf3rB,KAAKwpB,MACA,IAAIsE,EAAc9tB,KAAKupB,KAAO,EAAG,IAEjC,IAAIuE,EAAc9tB,KAAKupB,KAAMvpB,KAAKwpB,MAAQ,IAOrDsE,EAAA5tB,UAAA2rB,UAAA,WACE,OAAmB,KAAf7rB,KAAKwpB,MACA,IAAIsE,EAAc9tB,KAAKupB,KAAO,EAAG,GAEjC,IAAIuE,EAAc9tB,KAAKupB,KAAMvpB,KAAKwpB,MAAQ,IAGvDsE,EAhEA,GCaAI,GAAA,WAAA,SAAAA,IAkBUluB,KAAAmuB,gBAAwB,IAAI1E,KAkB5BzpB,KAAAouB,mBAAwC,IAAIzqB,EAAAA,QAwE5C3D,KAAAquB,yBAA0C,IAAI1qB,EAAAA,QAS9C3D,KAAAsuB,uBAAwC,IAAI3qB,EAAAA,QAS5C3D,KAAAuuB,kBAAuC,IAAI5qB,EAAAA,QAQrD,OAnIEnE,OAAAgC,eAAI0sB,EAAAhuB,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAKwuB,oDAINN,EAAAhuB,UAAAuuB,qBAAR,SAA6BvsB,GACtBlC,KAAKwuB,mBAAmBpE,QAAQloB,KACnClC,KAAKwuB,mBAAqBtsB,EAC1BlC,KAAKquB,yBAAyBpsB,SAU1BisB,EAAAhuB,UAAAwuB,qBAAR,WACE1uB,KAAKmuB,gBAAkB,IAAI1E,KAC3BzpB,KAAK2uB,OAAS,IAAIzE,GAChBlqB,KAAKmuB,gBAAgB3D,cACrBxqB,KAAKmuB,gBAAgB1D,WACrBzqB,KAAKmuB,gBAAgBzE,YAIzBlqB,OAAAgC,eAAI0sB,EAAAhuB,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK2uB,wCAOdnvB,OAAAgC,eAAI0sB,EAAAhuB,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAKouB,mBAAmBvqB,gDAOjCqqB,EAAAhuB,UAAA0uB,yBAAA,SAAyBhF,GACvB5pB,KAAKkrB,YAActB,EACnB5pB,KAAKouB,mBAAmBnsB,KAAK2nB,IAQ/BsE,EAAAhuB,UAAA2uB,mBAAA,WACE7uB,KAAK8uB,WAAa,KAClB9uB,KAAK0uB,uBACD1uB,KAAKkrB,YACPlrB,KAAKwuB,mBAAqB,IAAIV,GAAc9tB,KAAKkrB,YAAY3B,KAAMvpB,KAAKkrB,YAAY1B,OAEpFxpB,KAAKwuB,mBAAqB,IAAIV,GAAc9tB,KAAKorB,MAAM7B,KAAMvpB,KAAKorB,MAAM5B,QAI5E0E,EAAAhuB,UAAA6uB,YAAA,SAAYvF,GACVxpB,KAAKyuB,qBAAqB,IAAIX,GAAc9tB,KAAKwuB,mBAAmBjF,KAAMC,KAG5E0E,EAAAhuB,UAAA8uB,WAAA,SAAWzF,GACTvpB,KAAKyuB,qBAAqB,IAAIX,GAAcvE,EAAMvpB,KAAKwuB,mBAAmBhF,SAM5E0E,EAAAhuB,UAAA+uB,gBAAA,WACEjvB,KAAKyuB,qBAAqBzuB,KAAKwuB,mBAAmB3C,cAMpDqC,EAAAhuB,UAAAgvB,oBAAA,WACElvB,KAAKyuB,qBAAqBzuB,KAAKwuB,mBAAmB7C,kBAMpDuC,EAAAhuB,UAAAivB,mBAAA,WACOnvB,KAAKovB,kBAAkBnC,gBAAgBjtB,KAAKorB,QAC/CprB,KAAKyuB,qBAAqB,IAAIX,GAAc9tB,KAAKorB,MAAM7B,KAAMvpB,KAAKorB,MAAM5B,QAE1ExpB,KAAKsuB,uBAAuBrsB,QAG9BisB,EAAAhuB,UAAAmvB,kBAAA,SAAkBntB,GAChBlC,KAAK8uB,WAAa9uB,KAAK8uB,WAAWvE,YAAYroB,GAC1ClC,KAAKwuB,mBAAmBvB,gBAAgBjtB,KAAK8uB,YAC/C9uB,KAAKuuB,kBAAkBtsB,KAAKjC,KAAK8uB,YAEjC9uB,KAAKyuB,qBAAqB,IAAIX,GAAc9tB,KAAK8uB,WAAWvF,KAAMvpB,KAAK8uB,WAAWtF,QAEpFxpB,KAAKsuB,uBAAuBrsB,QAQ9BzC,OAAAgC,eAAI0sB,EAAAhuB,UAAA,0BAAuB,KAA3B,WACE,OAAOF,KAAKquB,yBAAyBxqB,gDAQvCrE,OAAAgC,eAAI0sB,EAAAhuB,UAAA,wBAAqB,KAAzB,WACE,OAAOF,KAAKsuB,uBAAuBzqB,gDAQrCrE,OAAAgC,eAAI0sB,EAAAhuB,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKuuB,kBAAkB1qB,gDApIrBqqB,EAAqBptB,EAAA,CADjCsD,EAAAA,cACY8pB,GAAb,GCLAoB,GAAA,WACE,SAAAA,EAAoBC,EAA8C7lB,GAA9C1J,KAAAuvB,QAAAA,EAA8CvvB,KAAA0J,WAAAA,EAyBpE,OAvBE4lB,EAAApvB,UAAAsvB,UAAA,SAAUC,GAAV,IAAAhrB,EAAAzE,KACEA,KAAKuvB,QAAQ7T,mBAAkB,WAC7BjX,EAAKirB,0BAA0B5qB,WAAU,WACvC,IAAM6qB,EAAUF,EAAM7oB,cAAcgpB,cAAc,kBAC9CD,GACFA,EAAQvpB,eAMhBkpB,EAAApvB,UAAA2vB,WAAA,SAAW9gB,GAAX,IAAAtK,EAAAzE,KACEA,KAAKuvB,QAAQ7T,mBAAkB,WAAM,OAAAjX,EAAKirB,0BAA0B5qB,WAAU,WAAM,OAAAiK,EAAQ3I,eAG9FkpB,EAAApvB,UAAA4vB,iBAAA,SAAiB/gB,GACf,OAAO/E,EAAAA,kBAAkBhK,KAAK0J,aAAelF,SAASikB,gBAAkB1Z,GAGlEugB,EAAApvB,UAAAwvB,wBAAR,WAAA,IAAAjrB,EAAAzE,KAEE,OAAOA,KAAKuvB,QAAQQ,SAASlsB,eAAe2B,KAAKwqB,EAAAA,QAASvqB,EAAAA,QAAO,WAAM,OAAAuE,EAAAA,kBAAkBvF,EAAKiF,0DAvBnEuS,EAAAA,cAAiDzc,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBADlCojB,EAAsBxuB,EAAA,CADlCsD,EAAAA,aAEuC3C,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eADlCojB,GAAb,GCQAW,GAAA,WACE,SAAAA,EAAsCC,GAAAlwB,KAAAkwB,OAAAA,EAI9BlwB,KAAAmwB,gBAA0B,EAHhCnwB,KAAKowB,uBAsGT,OA7FE5wB,OAAAgC,eAAIyuB,EAAA/vB,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKmwB,iDAGd3wB,OAAAgC,eAAIyuB,EAAA/vB,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKqwB,6CAId7wB,OAAAgC,eAAIyuB,EAAA/vB,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKqwB,YAAY9T,KAAI,SAAA8N,GAAO,OAAAA,EAAIiG,2CAGzC9wB,OAAAgC,eAAIyuB,EAAA/vB,UAAA,0BAAuB,KAA3B,WACE,OAAOF,KAAKuwB,0DAGd/wB,OAAAgC,eAAIyuB,EAAA/vB,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKwwB,mDAGdhxB,OAAAgC,eAAIyuB,EAAA/vB,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKywB,mDAMNR,EAAA/vB,UAAAkwB,qBAAR,WAEEpwB,KAAK0wB,2BACL1wB,KAAK2wB,6BACL3wB,KAAK4wB,oCACL5wB,KAAK6wB,6BACL7wB,KAAK8wB,wBAOCb,EAAA/vB,UAAA4wB,qBAAR,WAWE,IATA,IAAMC,EAAU,GACVC,EAAwBC,EAAAA,kBAAkBjxB,KAAKkwB,OAAQgB,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBC,MAAM/E,QACpGgF,EAA0BL,EAAAA,kBAC9BjxB,KAAKkwB,OACLgB,EAAAA,UAAUC,WACVC,EAAAA,iBAAiBG,QACjBjF,QAEIjB,EAAyBrrB,KAAKqrB,eAC3B7qB,EAAI,EAAGA,EAAI,EAAGA,IACrBuwB,EAAQvuB,KAAK,CAAE6nB,IAAK2G,EAAYxwB,GAAI8vB,OAAQgB,EAAc9wB,KAG5D,GAAI6qB,EAAiB,EAAG,CACtB,IAAMmG,EAAqBT,EAAQ7Y,OAAO,EAAGmT,GAC7C0F,EAAQvuB,KAAI3B,MAAZkwB,EAAOruB,EAAS8uB,IAElBxxB,KAAKqwB,YAAcU,GAObd,EAAA/vB,UAAA0wB,kCAAR,WACE5wB,KAAKuwB,yBAA2BkB,EAAAA,oBAC9BzxB,KAAKkwB,OACLgB,EAAAA,UAAUC,WACVC,EAAAA,iBAAiBM,aACjBpF,SAOI2D,EAAA/vB,UAAA2wB,2BAAR,WACE7wB,KAAKwwB,kBAAoBiB,EAAAA,oBAAoBzxB,KAAKkwB,OAAQgB,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBC,MAAM/E,SAMjG2D,EAAA/vB,UAAAwwB,yBAAR,WACE1wB,KAAKmwB,gBAAkBwB,EAAAA,wBAAwB3xB,KAAKkwB,SAG9CD,EAAA/vB,UAAAywB,2BAAR,WACE3wB,KAAKywB,kBAAoBmB,EAAAA,oBAAoB5xB,KAAKkwB,OAAQ2B,EAAAA,YAAYC,0EArG3DxqB,EAAAA,OAAMC,KAAA,CAACwqB,EAAAA,gBADT9B,EAAmBnvB,EAAA,CAD/BsD,EAAAA,aAEc3C,EAAA,EAAA6F,EAAAA,OAAOyqB,EAAAA,aADT9B,GAAb,iBCiBE,SAAA+B,EAAoBC,GAAAjyB,KAAAiyB,qBAAAA,EAXbjyB,KAAAkyB,cAA2B,CAIhCtF,QAAS,IAAI1C,GAAS,EAAG,EAAG,GAC5B2C,QAAS,IAAI3C,GAAS,KAAM,GAAI,KAE3BlqB,KAAAmyB,qBT1BoC,US2BnCnyB,KAAAoyB,oBAA8ClJ,GAC9ClpB,KAAAqyB,WAA+B,CAAC,IAAK,KAG3CryB,KAAKmyB,qBAAuBnyB,KAAKiyB,qBAAqBK,iBACtDtyB,KAAKuyB,gCAmJT,OAhJSP,EAAA9xB,UAAAsyB,WAAP,SAAkBrI,GAGhB,GAAKA,EAGE,CACC,IAAAwC,EAAAtqB,EAAA8nB,EAAAxZ,MAAA,KAAA4L,KAAA,SAAA9b,GAAA,OAAAgyB,SAAAhyB,EAAA,OAAA,GAAC8oB,EAAAoD,EAAA,GAAMnD,EAAAmD,EAAA,GAAOtC,EAAAsC,EAAA,GACpB3sB,KAAKkyB,cAActF,QAAU,IAAI1C,GAASX,EAAMC,EAAQ,EAAGa,QAH3DrqB,KAAKkyB,cAActF,QAAU,IAAI1C,GAAS,EAAG,EAAG,IAO7C8H,EAAA9xB,UAAAwyB,WAAP,SAAkBvI,GAGhB,GAAKA,EAGE,CACC,IAAAwC,EAAAtqB,EAAA8nB,EAAAxZ,MAAA,KAAA4L,KAAA,SAAA9b,GAAA,OAAAgyB,SAAAhyB,EAAA,OAAA,GAAC8oB,EAAAoD,EAAA,GAAMnD,EAAAmD,EAAA,GAAOtC,EAAAsC,EAAA,GACpB3sB,KAAKkyB,cAAcrF,QAAU,IAAI3C,GAASX,EAAMC,EAAQ,EAAGa,QAH3DrqB,KAAKkyB,cAAcrF,QAAU,IAAI3C,GAAS,KAAM,GAAI,KAOhD8H,EAAA9xB,UAAAqyB,8BAAR,WACE,IAAMpJ,EAAiBnpB,KAAKmyB,qBAAqBQ,oBAC7C/J,GAAoBgK,KAAKzJ,GAC3BnpB,KAAKoyB,oBAAsBlJ,GAClBL,GAAoB+J,KAAKzJ,GAClCnpB,KAAKoyB,oBAAsBhJ,GAG3BppB,KAAKoyB,oBAAsB/I,GAE7BrpB,KAAK6yB,qBAGCb,EAAA9xB,UAAA2yB,kBAAR,WACE,GAAI7yB,KAAKmyB,qBAAsB,CAG7B,IACME,EADuBryB,KAAKmyB,qBAAqB7b,QAAQ2S,GAAW,IAChCtY,MAAMmY,IAM5CuJ,GAAoC,IAAtBA,EAAW1xB,OAC3BX,KAAKqyB,WAAa,CAACA,EAAW,GAAIA,EAAW,IAE7CS,QAAQrwB,MAAM,0DAA2D4vB,KAK/EL,EAAA9xB,UAAA6yB,4BAAA,SAA4B5I,GAC1B,GAAIA,EAAM,CACR,GAAI6I,MAAM7I,EAAK8I,WACb,MAAO,GAET,IAAMC,EAAiB/I,EAAKT,UACtByJ,EAAkBhJ,EAAKM,WAAa,EACpC2I,EAAkBF,EAAS,EAAIA,EAAO/R,WAAa,IAAM+R,EACzDG,EAAmBF,EAAU,EAAIA,EAAQhS,WAAa,IAAMgS,EAClE,OAAInzB,KAAKoyB,sBAAwBlJ,GACxBkK,EAAUpzB,KAAKqyB,WAAW,GAAKgB,EAAWrzB,KAAKqyB,WAAW,GAAKlI,EAAKK,cAClExqB,KAAKoyB,sBAAwBhJ,GAC/BiK,EAAWrzB,KAAKqyB,WAAW,GAAKe,EAAUpzB,KAAKqyB,WAAW,GAAKlI,EAAKK,cAEpEL,EAAKK,cAAgBxqB,KAAKqyB,WAAW,GAAKgB,EAAWrzB,KAAKqyB,WAAW,GAAKe,EAGrF,MAAO,IAGT5zB,OAAAgC,eAAIwwB,EAAA9xB,UAAA,kBAAe,KAAnB,WACE,IAAMipB,EAAmCnpB,KAAKoyB,oBAAoBjJ,OAClE,OAAOA,EAAO,GAAKnpB,KAAKqyB,WAAW,GAAKlJ,EAAO,GAAKnpB,KAAKqyB,WAAW,GAAKlJ,EAAO,oCAO1E6I,EAAA9xB,UAAAozB,aAAR,SAAqB9J,GACnB,OAAOA,GAAS,GAAKA,EAAQ,IAMvBwI,EAAA9xB,UAAAqzB,YAAR,SAAoBhK,EAAcC,EAAeW,GAC/C,OAAOA,EAAO,GAAKA,GAAQb,GAA0BC,EAAMC,IASrDwI,EAAA9xB,UAAAszB,mBAAR,SAA2BjK,EAAcC,EAAeW,GAYtD,IAAMsJ,GAAalK,EACbvnB,GAAawnB,EAAQ,EACrBlqB,GAAa6qB,EACnB,IAAKnqB,KAAKszB,aAAatxB,KAAOhC,KAAKuzB,YAAYE,EAAGzxB,EAAG1C,GACnD,OAAO,KAET,IAAMo0B,ERxIV,SAAqCnK,GACnC,GAAIA,EAAO,MAASA,EAAO,KAAOA,EAAO,KAAQA,EAAO,GACtD,OAAQ,EAEV,GAAIA,EAAO,IACT,OAAOA,EAET,IAAMoK,GAAmB,IAAIlK,MAAOe,cAEhCkJ,EAAiBnK,EADgC,IAA7BqK,KAAKC,MAAMF,EAAW,KAK9C,OAHID,EAASC,EAAW,KACtBD,GAAkB,KAEbA,EQ2HkBI,CAAqBL,GAC5C,OAAmB,IAAZC,EAAgB,IAAIjK,KAAKiK,EAAQ1xB,EAAG1C,GAAK,MAGlD0yB,EAAA9xB,UAAA6zB,2BAAA,SAA2B5J,GACzB,IAAKA,EACH,OAAO,KAET,IAAM6J,EAAsB7J,EAAK8J,MAAMlL,IACvC,IAAKiL,GAAkC,IAArBA,EAAUrzB,OAC1B,OAAO,KAEH,IAAAgsB,EAAAtqB,EAAA2xB,EAAA,GAACE,EAAAvH,EAAA,GAAWwH,EAAAxH,EAAA,GAAYyH,EAAAzH,EAAA,GAC9B,OAAI3sB,KAAKoyB,sBAAwBlJ,GAExBlpB,KAAKwzB,mBAAmBY,EAAWD,EAAYD,GAC7Cl0B,KAAKoyB,sBAAwBhJ,GAE/BppB,KAAKwzB,mBAAmBY,EAAWF,EAAWC,GAG9Cn0B,KAAKwzB,mBAAmBU,EAAWC,EAAYC,6CAlJhBnE,MAZ/B+B,EAAalxB,EAAA,CADzBsD,EAAAA,cACY4tB,oBCJX,SAAAqC,EACUpC,EACAqC,EACAC,EACAC,EACAC,GAJAz0B,KAAAiyB,qBAAAA,EACAjyB,KAAAs0B,uBAAAA,EACAt0B,KAAAu0B,wBAAAA,EACAv0B,KAAAw0B,eAAAA,EACAx0B,KAAAy0B,OAAAA,EANFz0B,KAAA00B,MAAwB,GAQ9B10B,KAAKusB,uBACLvsB,KAAK20B,0BAiHT,OAtGEn1B,OAAAgC,eAAI6yB,EAAAn0B,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKiyB,qBAAqB2C,4CAGnCp1B,OAAAgC,eAAI6yB,EAAAn0B,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKs0B,uBAAuBlF,mDAGrC5vB,OAAAgC,eAAI6yB,EAAAn0B,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKs0B,uBAAuBpJ,6CAGrC1rB,OAAAgC,eAAI6yB,EAAAn0B,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKs0B,uBAAuBxF,4CAGrCtvB,OAAAgC,eAAI6yB,EAAAn0B,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKs0B,uBAAuBlJ,uCAS7BiJ,EAAAn0B,UAAAy0B,wBAAR,WAAA,IAAAlwB,EAAAzE,KACEA,KAAK00B,MAAMlyB,KACTxC,KAAKs0B,uBAAuBO,wBAAwB/vB,WAAU,WAC5DL,EAAK8nB,2BAITvsB,KAAK00B,MAAMlyB,KACTxC,KAAKs0B,uBAAuBQ,iBAAiBhwB,WAAU,SAACgqB,GACtDrqB,EAAKswB,kBAAkBlH,mBAAmBiB,OAI9C9uB,KAAK00B,MAAMlyB,KACTxC,KAAKs0B,uBAAuBU,sBAAsBlwB,WAAU,WAC1DL,EAAK8vB,wBAAwB/E,UAAU/qB,EAAKgwB,aAQ1CJ,EAAAn0B,UAAAqsB,qBAAR,WACEvsB,KAAK+0B,kBAAoB,IAAI/J,GAC3BhrB,KAAKirB,SACLjrB,KAAKkrB,YACLlrB,KAAK8uB,WACL9uB,KAAKorB,MACLprB,KAAKiyB,qBAAqB5G,eAC1BrrB,KAAKw0B,eAAetC,gBAQxBmC,EAAAn0B,UAAA+0B,UAAA,SAAUlxB,GACR,GAAIA,GAAS/D,KAAK8uB,WAChB,OAAQ/qB,EAAMmxB,SACZ,KCvGwB,GDwGtBnxB,EAAMoxB,iBACNn1B,KAAKs0B,uBAAuBjF,mBAAkB,GAC9C,MACF,KC1G0B,GD2GxBtrB,EAAMoxB,iBACNn1B,KAAKs0B,uBAAuBjF,kBVhEM,GUiElC,MACF,KC5G0B,GD6GxBtrB,EAAMoxB,iBACNn1B,KAAKs0B,uBAAuBjF,mBAAmB,GAC/C,MACF,KCjH2B,GDkHzBtrB,EAAMoxB,iBACNn1B,KAAKs0B,uBAAuBjF,kBAAkB,KAWtDgF,EAAAn0B,UAAAyM,gBAAA,WACE3M,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,SAM9CJ,EAAAn0B,UAAA8G,YAAA,WACEhH,KAAK00B,MAAMztB,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,2DAtHhBoqB,UACE/B,UACCoB,UACT0C,UACRrjB,EAAAA,cA8ElB7N,EAAA,CADCuN,EAAAA,aAAa,UAAW,CAAC,0CApFfgmB,EAAWvzB,EAAA,CADvByQ,EAAAA,UAAU,CAAEvO,SAAU,eAAgBqJ,SAAA,weAC1BgoB,oBEXb,SAAAe,IACUp1B,KAAAq1B,SAAqC,IAAIxa,EAAAA,iBAAgB,GAOnE,OANErb,OAAAgC,eAAI4zB,EAAAl1B,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKq1B,SAASxxB,gDAEvBrE,OAAAgC,eAAI4zB,EAAAl1B,UAAA,UAAO,KAAX,SAAY4Q,GACV9Q,KAAKq1B,SAASpzB,KAAK6O,oCANVskB,EAAYt0B,EAAA,CADxBsD,EAAAA,cACYgxB,oBCAb,SAAAE,IACUt1B,KAAAu1B,eAAgC,IAAI5xB,EAAAA,QAOpC3D,KAAAw1B,aAA8B,IAAI7xB,EAAAA,QAkB5C,OAtBEnE,OAAAgC,eAAI8zB,EAAAp1B,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKu1B,eAAe1xB,gDAK7BrE,OAAAgC,eAAI8zB,EAAAp1B,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKw1B,aAAa3xB,gDAG3ByxB,EAAAp1B,UAAAkgB,cAAA,WACEpgB,KAAKu1B,eAAetzB,QAGtBqzB,EAAAp1B,UAAAsgB,YAAA,WACExgB,KAAKw1B,aAAavzB,QAIpBqzB,EAAAp1B,UAAAu1B,YAAA,SAAY3kB,GACV9Q,KAAKmZ,SAAWrI,GAxBPwkB,EAAsBx0B,EAAA,CADlCsD,EAAAA,cACYkxB,oBCIX,SAAAI,EAAsCza,GAAAjb,KAAAib,UAAAA,EAO9Bjb,KAAA21B,oBAA8B,EANhC31B,KAAKib,YACPjb,KAAK21B,mBAAqB3M,GAAuB4J,KAAK3X,EAAU2a,YAAYC,UAAUC,WACtF91B,KAAK+1B,YAAc9a,EAAU2a,YAAY5qB,YAwB/C,OAZExL,OAAAgC,eAAIk0B,EAAAx1B,UAAA,YAAS,KAAb,WAKE,QAAIF,KAAKib,WACHjb,KAAK+1B,YC3BqC,KD2BS/1B,KAAK21B,uHArBnDruB,EAAAA,OAAMC,KAAA,CAACC,EAAAA,eADTkuB,EAAwB50B,EAAA,CADpCsD,EAAAA,aAEc3C,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,YADTkuB,MEObM,GAAA,WAAA,SAAAA,IACUh2B,KAAAi2B,aAAY,UACpBj2B,KAAA2H,SAA+BqP,EAAoB,eAyBrD,OAvBExX,OAAAgC,eAAIw0B,EAAA91B,UAAA,YAAS,KAAb,WACE,MAAwB,YAAjBF,KAAKi2B,8CAGdz2B,OAAAgC,eAAIw0B,EAAA91B,UAAA,aAAU,KAAd,WACE,MAAwB,aAAjBF,KAAKi2B,8CAGdz2B,OAAAgC,eAAIw0B,EAAA91B,UAAA,cAAW,KAAf,WACE,MAAwB,cAAjBF,KAAKi2B,8CAGdD,EAAA91B,UAAAg2B,kBAAA,WACEl2B,KAAKi2B,aAAY,aAGnBD,EAAA91B,UAAAi2B,iBAAA,WACEn2B,KAAKi2B,aAAY,YAGnBD,EAAA91B,UAAAk2B,gBAAA,WACEp2B,KAAKi2B,aAAY,WAzBRD,EAAkBl1B,EAAA,CAD9BsD,EAAAA,cACY4xB,GAAb,iBCiGE,SAAAK,EACUpmB,EACAqmB,EACAC,EACAC,EACDlf,EACC+H,EACAoX,EACAC,EACAxY,EACYd,EACZwB,GAXV,IAAAna,EAAAzE,KACUA,KAAAiQ,cAAAA,EACAjQ,KAAAs2B,sBAAAA,EACAt2B,KAAAu2B,yBAAAA,EACAv2B,KAAAw2B,uBAAAA,EACDx2B,KAAAsX,cAAAA,EACCtX,KAAAqf,eAAAA,EACArf,KAAAy2B,aAAAA,EACAz2B,KAAA02B,mBAAAA,EACA12B,KAAAke,oBAAAA,EACYle,KAAAod,cAAAA,EACZpd,KAAA4e,iBAAAA,EAtCV5e,KAAA0hB,UAAoB,EACpB1hB,KAAAud,SAAU,EACVvd,KAAAoG,OAAQ,EAuBApG,KAAA4E,cAAgC,GAetC5E,KAAK4E,cAAcpC,KACjBxC,KAAKy2B,aAAaE,YAAY7xB,WAAU,SAAAgM,GACtCrM,EAAK2B,MAAQ0K,KAEf9Q,KAAK4e,iBAAiBE,eAAeha,WAAU,SAAA4Z,GAC7Cja,EAAKia,QAAUA,KAEjB1e,KAAKiQ,cAAcpL,WAAWC,WAAU,SAAAgM,GACtCrM,EAAK+xB,uBAAuBpW,oBAqEpC,OA/GE5gB,OAAAgC,eAAI60B,EAAAn2B,UAAA,cAAW,KAAf,SAAgByH,GACVA,GAAYqP,EAAoBrP,KAClC3H,KAAK02B,mBAAmB/uB,SAAWqP,EAAoBrP,qCAG3DnI,OAAAgC,eAAI60B,EAAAn2B,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAK02B,mBAAmB/uB,0CAGjCnI,OAAAgC,eAAW60B,EAAAn2B,UAAA,OAAI,KAAf,WACE,OAAOF,KAAKiQ,cAAc9L,sCAK5B3E,OAAAgC,eAAI60B,EAAAn2B,UAAA,eAAY,KAAhB,SAAiB4P,GACf9P,KAAK42B,aAAe9mB,mCA+BtBumB,EAAAn2B,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAKqf,eAAeL,cAAcla,WAAU,SAAAyY,GAC1C9Y,EAAK8Y,QAAUA,OAKrB8Y,EAAAn2B,UAAAyM,gBAAA,WAAA,IAAAlI,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAKiQ,cAAcpL,WAAWC,WAAU,SAAAX,GAClCA,EACFM,EAAKoqB,qBAELpqB,EAAKmyB,aAAahwB,cAAcR,aASxCiwB,EAAAn2B,UAAAod,aAAA,WACE,OAAOtd,KAAKke,oBAAoBZ,aAAatd,KAAKud,QAASvd,KAAK2hB,YAMlE0U,EAAAn2B,UAAAyhB,QAAA,WACE,OAAO3hB,KAAKod,gBAAkBpd,KAAKod,cAAcT,cAMnDnd,OAAAgC,eAAI60B,EAAAn2B,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKu2B,yBAAyBM,2CAMvCr3B,OAAAgC,eAAI60B,EAAAn2B,UAAA,sBAAmB,KAAvB,WAEE,OACGF,KAAK0e,SAAW1e,KAAK0e,QAAQvF,UAAcnZ,KAAKw2B,wBAA0Bx2B,KAAKw2B,uBAAuBrd,0CAOnGkd,EAAAn2B,UAAA2uB,mBAAR,WACE7uB,KAAKs2B,sBAAsBzH,sBAM7BwH,EAAAn2B,UAAA8G,YAAA,WACEhH,KAAK4E,cAAc2X,KAAI,SAAArV,GAAO,OAAAA,EAAIrB,2DAvFXrC,SACQ0qB,UACGwH,UACFJ,UACV3f,SACEgJ,UACFyW,UACMY,UACC7Y,UACMjB,GAAanb,WAAA,CAAA,CAAAsG,KAA/CqI,EAAAA,kBACyB6O,MAlCJzd,EAAA,CAAvB8gB,EAAAA,aAAajC,iCAEd7e,EAAA,CADCkN,EAAAA,MAAM,gDAgBPlN,EAAA,CADCsQ,EAAAA,UAAU,kDArBAilB,EAAgBv1B,EAAA,CAjD5ByQ,EAAAA,UAAU,CACTvO,SAAU,qBACVqJ,SAAU,8yCAyBVmF,UAAW,CACTmJ,GACAnX,EACAa,EACAmF,EACAymB,GACAtR,GACAxB,GACAiY,GACA7W,GACAyT,GACA9D,GACAwH,GACAJ,GACAU,IAEFjvB,KAAM,CACJib,oCAAqC,sBACrCD,2BAA4B,OAC5BE,kBAAmB,eAyClBxgB,EAAA,EAAAiO,EAAAA,aAtCQ2mB,MCnFb,SAAgBS,GAAsB50B,GAEpC,OAAc,OAAVA,IAGiB,iBAAVA,EAEFA,EAAMvB,QAAU,EAGD,kBAAVuB,GAAsBA,GCuCtC,IAAA60B,GAAA,SAAAjV,GA4BE,SAAAiV,EACEC,EACA3U,EACUtJ,EACAzU,EAGAoa,EACUtS,EACA6qB,EACAX,EACAC,EACAC,EACS9sB,EACT+sB,EACZS,GAfV,IAAAzyB,EAiBEqd,EAAAlhB,KAAAZ,KAAMg3B,EAAkBX,GAAkBhU,EAAU3D,EAASpa,EAAUyU,IAAG/Y,YAdhEyE,EAAAsU,GAAAA,EACAtU,EAAAH,SAAAA,EAGAG,EAAAia,QAAAA,EACUja,EAAA2H,UAAAA,EACA3H,EAAAwyB,cAAAA,EACAxyB,EAAA6xB,sBAAAA,EACA7xB,EAAA8xB,yBAAAA,EACA9xB,EAAA+xB,uBAAAA,EACS/xB,EAAAiF,WAAAA,EACTjF,EAAAgyB,aAAAA,EACZhyB,EAAAyyB,uBAAAA,EAzCezyB,EAAA0yB,WAAiC,IAAI1qB,EAAAA,cAAmB,GAsBvEhI,EAAAwT,MAAQ,IAyNpB,OAjPkCnY,EAAAi3B,EAAAjV,GAIhCtiB,OAAAgC,eAAIu1B,EAAA72B,UAAA,OAAI,KAAR,SAASiqB,GACHnqB,KAAKo3B,qBAAuBjN,GAC9BnqB,KAAKq3B,WAAWr3B,KAAKs3B,0BAA0BnN,IAG5CnqB,KAAKu3B,2BACRv3B,KAAKu3B,yBAA2BpN,oCAKpC3qB,OAAAgC,eAAIu1B,EAAA72B,UAAA,MAAG,KAAP,SAAQs3B,GACNx3B,KAAKi3B,cAAczE,WAAWgF,oCAIhCh4B,OAAAgC,eAAIu1B,EAAA72B,UAAA,MAAG,KAAP,SAAQs3B,GACNx3B,KAAKi3B,cAAcvE,WAAW8E,oCA2BhCT,EAAA72B,UAAA2f,SAAA,WACEiC,EAAA5hB,UAAM2f,SAAQjf,KAAAZ,MACdA,KAAKy3B,yCAELz3B,KAAK4E,cAAcpC,KACjBxC,KAAK03B,kCACL13B,KAAK23B,+BACL33B,KAAK43B,wBACL53B,KAAK63B,wBACL73B,KAAK83B,0BAITf,EAAA72B,UAAAyM,gBAAA,WAQE3M,KAAK+3B,wBAIPhB,EAAA72B,UAAA83B,eAAA,WACEh4B,KAAKi4B,UAAS,IAIhBlB,EAAA72B,UAAAqjB,kBAAA,WACEzB,EAAA5hB,UAAMqjB,kBAAiB3iB,KAAAZ,MACvBA,KAAKi4B,UAAS,IAIhBz4B,OAAAgC,eAAIu1B,EAAA72B,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAKk4B,YAAcl4B,KAAKk4B,YAAcl4B,KAAKi3B,cAAckB,iDAIlE34B,OAAAgC,eAAIu1B,EAAA72B,UAAA,YAAS,KAAb,WACE,OAAO8J,EAAAA,kBAAkBhK,KAAK0J,aAAe1J,KAAKo4B,wBAA0B,OAAS,wCAIvFrB,EAAA72B,UAAAm4B,cAAA,SAAcr3B,GACZ,IAAMs3B,EAAiBt4B,KAAKi3B,cAAclD,2BAA2B/yB,EAAOkB,OAC5E,GAAIlC,KAAKu4B,0BAA4BD,EACnCt4B,KAAKq3B,WAAWiB,GAAgB,QAC3B,GAAIt4B,KAAKo4B,wBAAyB,CACjC,IAAAzL,EAAAtqB,EAAArB,EAAAkB,MAAAyO,MAAA,KAAA,GAAC4Y,EAAAoD,EAAA,GAAMnD,EAAAmD,EAAA,GAAOtC,EAAAsC,EAAA,GACpB3sB,KAAKq3B,WAAW,IAAI5N,MAAMF,GAAOC,EAAQ,GAAIa,IAAM,QAEnDrqB,KAAKw4B,eAAe,OAMxBh5B,OAAAgC,eAAIu1B,EAAA72B,UAAA,WAAQ,KAKZ,WACE,OAAIF,KAAKw2B,uBACAx2B,KAAKw2B,uBAAuBrd,SAE9B,UATT,SAAajX,GACPlC,KAAKw2B,wBACPx2B,KAAKw2B,uBAAuBf,YAAYqB,GAAsB50B,qCAU1D60B,EAAA72B,UAAAq4B,uBAAR,WACE,OAAOv4B,KAAKu2B,yBAAyBM,WAG/BE,EAAA72B,UAAAk4B,sBAAR,WACE,OAAQp4B,KAAKu2B,yBAAyBM,WAGhCE,EAAA72B,UAAA+3B,SAAR,SAAiB7xB,GACXpG,KAAKy2B,eACPz2B,KAAKy2B,aAAagC,QAAUryB,IAIxB2wB,EAAA72B,UAAAu3B,uCAAR,WACOz3B,KAAKoM,YACRpM,KAAKi3B,cAAgBj3B,KAAKwjB,yBAAyBwO,IACnDhyB,KAAKs2B,sBAAwBt2B,KAAKwjB,yBAAyB0K,IAC3DluB,KAAKu2B,yBAA2Bv2B,KAAKwjB,yBAAyBkS,IAC9D11B,KAAKw2B,uBAAyBx2B,KAAKwjB,yBAAyB8R,MAIxDyB,EAAA72B,UAAA63B,qBAAR,WACM/3B,KAAK04B,2BACP14B,KAAKq3B,WAAWr3B,KAAKi3B,cAAclD,2BAA2B/zB,KAAK0e,QAAQxc,QAE3ElC,KAAKq3B,WAAWr3B,KAAKu3B,2BAIjBR,EAAA72B,UAAAm3B,WAAR,SAAmBn1B,EAAay2B,QAAA,IAAAA,IAAAA,GAAA,GAC9B,IAAMxO,EAAOnqB,KAAKs3B,0BAA0Bp1B,GAExCy2B,EACF34B,KAAKw4B,eAAerO,GAEpBnqB,KAAKo3B,mBAAqBjN,EAGxBnqB,KAAKs2B,wBACPt2B,KAAKs2B,sBAAsBpL,YAAcf,EACrC,IAAID,GAASC,EAAKK,cAAeL,EAAKM,WAAYN,EAAKT,WACvD,MAGN1pB,KAAK44B,YAAYzO,IAGX4M,EAAA72B,UAAA04B,YAAR,SAAoBzO,GAClB,GAAIA,EAAM,CACR,IAAMqN,EAAax3B,KAAKi3B,cAAclE,4BAA4B5I,GAC9DnqB,KAAKo4B,yBAEPjO,EAAK0O,WAAW1O,EAAK2O,aAAe3O,EAAK4O,qBACzC/4B,KAAKsE,SAAS00B,YAAYh5B,KAAK+Y,GAAGnS,cAAe,cAAeujB,IACvDnqB,KAAK04B,4BAA8BlB,IAAex3B,KAAK0e,QAAQxc,MACxElC,KAAK0e,QAAQA,QAAQua,SAASzB,GAE9Bx3B,KAAKsE,SAAS00B,YAAYh5B,KAAK+Y,GAAGnS,cAAe,QAAS4wB,QAG5Dx3B,KAAKsE,SAAS00B,YAAYh5B,KAAK+Y,GAAGnS,cAAe,QAAS,KAItDmwB,EAAA72B,UAAAo3B,0BAAR,SAAkCnN,GAChC,GAAInqB,KAAKi3B,cAAe,CACtB,IAAMO,EAAax3B,KAAKi3B,cAAclE,4BAA4B5I,GAClE,OAAOnqB,KAAKi3B,cAAclD,2BAA2ByD,GAErD,OAAO,MAIHT,EAAA72B,UAAAs4B,eAAR,SAAuBrO,GlB9MzB,IAA8B+O,EAAaC,EAAbD,EkB+MP/O,ElB/MoBgP,EkB+Mdn5B,KAAKo3B,mBlB9M5B8B,aAAiBzP,MAAQ0P,aAAiB1P,MAE1CyP,EAAM1O,gBAAkB2O,EAAM3O,eAC9B0O,EAAMzO,aAAe0O,EAAM1O,YAC3ByO,EAAMxP,YAAcyP,EAAMzP,WkB6MhBS,GAAQnqB,KAAKo3B,qBACvBp3B,KAAKm3B,WAAWvpB,KAAK,MACrB5N,KAAKo3B,mBAAqB,OAJ1Bp3B,KAAKm3B,WAAWvpB,KAAKuc,GACrBnqB,KAAKo3B,mBAAqBjN,IAOtB4M,EAAA72B,UAAAw4B,yBAAR,WACE,QAAS14B,KAAK0e,SAGRqY,EAAA72B,UAAAy3B,6BAAR,WAAA,IAAAlzB,EAAAzE,KACE,OAAOo5B,EAAAA,GAAGp5B,KAAK04B,4BACZlzB,KACCC,EAAAA,QAAO,SAAA4zB,GAAc,OAAAA,KACrBC,EAAAA,WAAU,WAAM,OAAA70B,EAAKia,QAAQ6a,gBAE7B9zB,EAAAA,QAAO,WAAM,OAAChB,EAAKyyB,uBAAuBpH,iBAAiBrrB,EAAKsU,GAAGnS,mBAEpE9B,WAAU,SAAC5C,GAAkB,OAAAuC,EAAK4yB,WAAW5yB,EAAKwyB,cAAclD,2BAA2B7xB,QAGxF60B,EAAA72B,UAAAw3B,gCAAR,WAAA,IAAAjzB,EAAAzE,KACE,OAAOA,KAAKs2B,sBAAsBkD,kBAAkB10B,WAAU,SAAA8kB,GAAY,OAAAnlB,EAAK4yB,WAAWzN,EAASU,UAAU,OAGvGyM,EAAA72B,UAAA03B,sBAAR,WAAA,IAAAnzB,EAAAzE,KACE,OAAOA,KAAKw2B,uBAAuBnT,cAChC7d,KAAKC,EAAAA,QAAO,WAAM,OAAAhB,EAAKi0B,+BACvB5zB,WAAU,WAAM,OAAAL,EAAKia,QAAQA,QAAQ0B,oBAGlC2W,EAAA72B,UAAA23B,sBAAR,WAAA,IAAApzB,EAAAzE,KACE,OAAOA,KAAKw2B,uBAAuBiD,YAChCj0B,KAAKC,EAAAA,QAAO,WAAM,OAAAhB,EAAKi0B,+BACvB5zB,WAAU,WAAM,OAAAL,EAAKia,QAAQA,QAAQ8B,kBAGlCuW,EAAA72B,UAAA43B,sBAAR,WAAA,IAAArzB,EAAAzE,KACE,OAAOA,KAAKs2B,sBAAsBkD,kBAC/Bh0B,KAAKC,EAAAA,QAAO,SAAA0kB,GAAQ,QAAEA,MACtBrlB,WAAU,SAAA40B,GAAK,OAAAj1B,EAAKyyB,uBAAuBrH,WAAWprB,EAAKsU,GAAGnS,4DAlN/CkH,EAAAA,wBACRkW,EAAAA,gBACIrV,EAAAA,kBACMxH,EAAAA,iBAGD8c,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAF3B8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAE8B2mB,GAAgBt1B,WAAA,CAAA,CAAAsG,KAA9CqI,EAAAA,kBACkCsiB,GAAajxB,WAAA,CAAA,CAAAsG,KAA/CqI,EAAAA,kBAC0Cwe,GAAqBntB,WAAA,CAAA,CAAAsG,KAA/DqI,EAAAA,kBAC6CgmB,GAAwB30B,WAAA,CAAA,CAAAsG,KAArEqI,EAAAA,kBAC2C4lB,GAAsBv0B,WAAA,CAAA,CAAAsG,KAAjEqI,EAAAA,kBACwClQ,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,sBAC0BkpB,GAAYr0B,WAAA,CAAA,CAAAsG,KAA7CqI,EAAAA,kBAC+B4f,MA1CzBxuB,EAAA,CAARkN,EAAAA,2CACwBlN,EAAA,CAAxBsN,EAAAA,OAAO,mDAERtN,EAAA,CADCkN,EAAAA,MAAM,qCAYPlN,EAAA,CADCkN,EAAAA,iCAMDlN,EAAA,CADCkN,EAAAA,iCAsDDlN,EAAA,CADCuN,EAAAA,aAAa,6CAMdvN,EAAA,CADCuN,EAAAA,aAAa,+CAOdvN,EAAA,CADCmf,EAAAA,YAAY,yDAMbnf,EAAA,CADCmf,EAAAA,YAAY,4CAMbnf,EAAA,CADCuN,EAAAA,aAAa,SAAU,CAAC,qDAezBvN,EAAA,CAFCmf,EAAAA,YAAY,YACZjS,EAAAA,MAAM,0CA3GI+oB,EAAYj2B,EAAA,CAPxBiC,EAAAA,UAAU,CACTC,SAAU,YACV+D,KAAM,CACJqd,oBAAqB,QAEvB5S,UAAW,CAAC8d,MAmCT7tB,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,YAEAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,GAAA6F,EAAAA,OAAO4E,EAAAA,cACPzK,EAAA,GAAAiO,EAAAA,aA1CQqnB,GAAb,CAAkC7T,kBClChC,SAAAyW,EAAoBjD,GAAA12B,KAAA02B,mBAAAA,EAsBtB,OAjBEl3B,OAAAgC,eAAIm4B,EAAAz5B,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK02B,mBAAmBkD,6CAMjCp6B,OAAAgC,eAAIm4B,EAAAz5B,UAAA,aAAU,KAAd,WACE,OAAOF,KAAK02B,mBAAmBmD,4CAMjCr6B,OAAAgC,eAAIm4B,EAAAz5B,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK02B,mBAAmBoD,oFApBO9D,MAD7B2D,EAAwB74B,EAAA,CATpCyQ,EAAAA,UAAU,CACTvO,SAAU,8BACVqJ,SAAA,oYACAmF,UAAW,CAAC8d,IACZvoB,KAAM,CACJgzB,qBAAsB,OACtBC,oBAAqB,WAGZL,oBCkBX,SAAAM,EACU3F,EACA4F,EACA1D,GAFAx2B,KAAAs0B,uBAAAA,EACAt0B,KAAAk6B,eAAAA,EACAl6B,KAAAw2B,uBAAAA,EAiCZ,OAzBEh3B,OAAAgC,eAAWy4B,EAAA/5B,UAAA,UAAO,KAKlB,WACE,OAAOF,KAAKm6B,cANd,SAAmB9P,GACjBrqB,KAAKm6B,SAAW9P,EAChBrqB,KAAKo6B,UAAYp6B,KAAKm6B,SAASvQ,SAASkB,gDAU1CmP,EAAA/5B,UAAAm6B,eAAA,WACEr6B,KAAKs0B,uBAAuBxF,WAAa9uB,KAAKs6B,QAAQ1Q,UAMxDqQ,EAAA/5B,UAAAq6B,UAAA,WACE,IAAMlQ,EAAgBrqB,KAAKs6B,QAAQ1Q,SACnC5pB,KAAKs0B,uBAAuB1F,yBAAyBvE,GACrDrqB,KAAKw2B,uBAAuBhW,cAC5BxgB,KAAKk6B,eAAe/1B,MAAO,4CAjCK+pB,UACR1qB,SACQ8xB,MAQlCx0B,EAAA,CADCkN,EAAAA,MAAM,2CAdIisB,EAAMn5B,EAAA,CAnBlByQ,EAAAA,UAAU,CACTvO,SAAU,UACVqJ,SAAU,0gBAeVtF,KAAM,CAAEyzB,cAAe,WAEZP,oBCdX,SAAAQ,EACUC,EACApG,EACArC,EACD3a,EACC6G,GAJAne,KAAA06B,oBAAAA,EACA16B,KAAAs0B,uBAAAA,EACAt0B,KAAAiyB,qBAAAA,EACDjyB,KAAAsX,cAAAA,EACCtX,KAAAme,gBAAAA,EAgFZ,OA7EEsc,EAAAv6B,UAAAyM,gBAAA,WAEE3M,KAAKme,gBAAgBjD,SAAYlb,KAAK26B,cAAa,IAAI36B,KAAK46B,qBAG9Dp7B,OAAAgC,eAAIi5B,EAAAv6B,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAKsX,cAAcvB,MAAM/V,KAAKsX,cAAcnB,KAAK1B,0BAA2B,CACjFomB,eAAgB76B,KAAK86B,iDAIzBt7B,OAAAgC,eAAIi5B,EAAAv6B,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKsX,cAAcvB,MAAM/V,KAAKsX,cAAcnB,KAAKzB,yBAA0B,CAChFqmB,cAAe/6B,KAAKg7B,aAAa7Z,8CAIrC3hB,OAAAgC,eAAIi5B,EAAAv6B,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKsX,cAAcvB,MAAM/V,KAAKsX,cAAcnB,KAAKxB,8BAA+B,CACrFsmB,cAAej7B,KAAK86B,iDAIxBt7B,OAAAgC,eAAIi5B,EAAAv6B,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKsX,cAAcvB,MAAM/V,KAAKsX,cAAcnB,KAAKvB,6BAA8B,CACpFsmB,aAAcl7B,KAAKg7B,aAAa7Z,8CAOpCsZ,EAAAv6B,UAAAg2B,kBAAA,WACEl2B,KAAK06B,oBAAoBxE,qBAM3BuE,EAAAv6B,UAAAi2B,iBAAA,WACEn2B,KAAK06B,oBAAoBvE,oBAM3B32B,OAAAgC,eAAIi5B,EAAAv6B,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKiyB,qBAAqBkJ,wBAAwBn7B,KAAKs0B,uBAAuBlF,kBAAkB5F,wCAMzGhqB,OAAAgC,eAAIi5B,EAAAv6B,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKs0B,uBAAuBlF,kBAAkB7F,sCAMvDkR,EAAAv6B,UAAA2rB,UAAA,WACE7rB,KAAKs0B,uBAAuBrF,mBAM9BwL,EAAAv6B,UAAAyrB,cAAA,WACE3rB,KAAKs0B,uBAAuBpF,uBAM9BuL,EAAAv6B,UAAAitB,aAAA,WACEntB,KAAKs0B,uBAAuBnF,+DAlFC6G,UACG9H,UACF+B,UACRta,SACGoF,MANhB0f,EAAY35B,EAAA,CANxByQ,EAAAA,UAAU,CACTvO,SAAU,gBACVwO,UAAW,CAACuJ,IACZ1O,SAAA,82DACAtF,KAAM,CAAEq0B,oBAAqB,WAElBX,oBCaX,SAAAY,EACUX,EACAzI,EACAqC,EACAC,EACAE,GAJAz0B,KAAA06B,oBAAAA,EACA16B,KAAAiyB,qBAAAA,EACAjyB,KAAAs0B,uBAAAA,EACAt0B,KAAAu0B,wBAAAA,EACAv0B,KAAAy0B,OAAAA,EAERz0B,KAAKs7B,mBAAqBt7B,KAAKu7B,mBA2EnC,OA/DE/7B,OAAAgC,eAAI65B,EAAAn7B,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKiyB,qBAAqBuJ,kDAMnCh8B,OAAAgC,eAAI65B,EAAAn7B,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKs0B,uBAAuBlF,kBAAkB5F,uCAOvD6R,EAAAn7B,UAAA6uB,YAAA,SAAY0M,GACVz7B,KAAKs0B,uBAAuBvF,YAAY0M,GACxCz7B,KAAK06B,oBAAoBtE,mBAM3BiF,EAAAn7B,UAAAw7B,YAAA,SAAYD,GACV,OAAOA,IAAez7B,KAAKs7B,mBAAqB,GAAK,GAOvDD,EAAAn7B,UAAA+0B,UAAA,SAAUlxB,GAIR,GAAIA,EAAO,CACT,IAAMmxB,EAAkBnxB,EAAMmxB,QZjFJ,KYkFtBA,GAAwBl1B,KAAKs7B,mBAAqB,GACpDv3B,EAAMoxB,iBACNn1B,KAAKs7B,qBACLt7B,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,SZpFlB,KYqFjBS,GAA0Bl1B,KAAKs7B,mBAAqB,IAC7Dv3B,EAAMoxB,iBACNn1B,KAAKs7B,qBACLt7B,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,SZvFjB,KYwFlBS,GAA2Bl1B,KAAKs7B,mBAAqB,GAC9Dv3B,EAAMoxB,iBACNn1B,KAAKs7B,mBAAqBt7B,KAAKs7B,mBAAqB,EACpDt7B,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,SZ1FlB,KY2FjBS,GAA0Bl1B,KAAKs7B,mBAAqB,IAC7Dv3B,EAAMoxB,iBACNn1B,KAAKs7B,mBAAqBt7B,KAAKs7B,mBAAqB,EACpDt7B,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,WAQlD4G,EAAAn7B,UAAAyM,gBAAA,WACE3M,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,kDA/EfuB,UACC/F,UACE/B,UACCoB,UACjB3gB,EAAAA,cA6ClB7N,EAAA,CADCuN,EAAAA,aAAa,UAAW,CAAC,0CAlDfgtB,EAAcv6B,EAAA,CAjB1ByQ,EAAAA,UAAU,CACTvO,SAAU,kBACVqJ,SAAU,yXAWVtF,KAAM,CACJ40B,sBAAuB,WAGdN,MCvBbO,GAAA,WACE,SAAAA,EAA6BrS,GAAAvpB,KAAAupB,KAAAA,EAI7BvpB,KAAA67B,UAAsB,GAHpB77B,KAAK87B,oBAyDT,OAjDEt8B,OAAAgC,eAAIo6B,EAAA17B,UAAA,aAAU,KAAd,WACE,OAAOF,KAAK67B,UAAUjI,KAAKC,MAAM7zB,KAAK67B,UAAUl7B,OAAS,qCAOnDi7B,EAAA17B,UAAA47B,kBAAR,WACE,IAAMC,EAAoB/7B,KAAKupB,KArBF,GAsBvBsK,EAAgB7zB,KAAKupB,KAAOwS,EAC5BC,EAAenI,EAvBQ,GAwB7B7zB,KAAK67B,UAAY77B,KAAKi8B,cAAcpI,EAAOmI,IAMrCJ,EAAA17B,UAAA+7B,cAAR,SAAsBpI,EAAemI,GACnC,OAAOr8B,MAAM+gB,KAAK,CAAE/f,OAAQq7B,EAAOnI,IAAS,SAAC6F,EAAGwC,GAAM,OAAAA,EAAIrI,MAM5D+H,EAAA17B,UAAAi8B,WAAA,WACE,OAAO,IAAIP,EAAe57B,KAAKupB,KAAO,KAMxCqS,EAAA17B,UAAAk8B,eAAA,WACE,OAAO,IAAIR,EAAe57B,KAAKupB,KAAO,KAMxCqS,EAAA17B,UAAAm8B,cAAA,WACE,OAAO,IAAIT,GAAe,IAAInS,MAAOe,gBAMvCoR,EAAA17B,UAAAo8B,QAAA,SAAQp6B,GACN,OAAOlC,KAAK67B,UAAUjrB,QAAQ1O,IAAU,GAE5C05B,EA3DA,iBCoDE,SAAAW,EACUjI,EACAoG,EACAnG,EACAE,EACDnd,EACC6G,GALAne,KAAAs0B,uBAAAA,EACAt0B,KAAA06B,oBAAAA,EACA16B,KAAAu0B,wBAAAA,EACAv0B,KAAAy0B,OAAAA,EACDz0B,KAAAsX,cAAAA,EACCtX,KAAAme,gBAAAA,EAERne,KAAKw8B,eAAiB,IAAIZ,GAAe57B,KAAKg7B,cAC9Ch7B,KAAKy8B,aAAez8B,KAAKg7B,aACzBh7B,KAAK08B,YAAY18B,KAAKw8B,gBA6I1B,OAzIEh9B,OAAAgC,eAAI+6B,EAAAr8B,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKsX,cAAcvB,MAAM/V,KAAKsX,cAAcnB,KAAKtB,+BAAgC,CACtF8nB,aAAc38B,KAAK48B,+CAmBvBp9B,OAAAgC,eAAI+6B,EAAAr8B,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKs0B,uBAAuBlF,kBAAkB7F,sCAO/CgT,EAAAr8B,UAAA28B,qBAAR,SAA6B36B,GAC3BlC,KAAKy8B,aAAez8B,KAAKy8B,aAAev6B,EACnClC,KAAKw8B,eAAeF,QAAQt8B,KAAKy8B,gBAElCz8B,KAAKw8B,eADHt6B,EAAQ,EACYlC,KAAKw8B,eAAeL,aAEpBn8B,KAAKw8B,eAAeJ,kBAG9Cp8B,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,SAO9C8H,EAAAr8B,UAAA8uB,WAAA,SAAWzF,GACTvpB,KAAKs0B,uBAAuBtF,WAAWzF,GACvCvpB,KAAK06B,oBAAoBtE,mBAM3BmG,EAAAr8B,UAAAk8B,eAAA,WACEp8B,KAAKw8B,eAAiBx8B,KAAKw8B,eAAeJ,iBAC1Cp8B,KAAK08B,YAAY18B,KAAKw8B,iBAQxBD,EAAAr8B,UAAAm8B,cAAA,WACOr8B,KAAKw8B,eAAeF,QAAQt8B,KAAKs0B,uBAAuBlJ,MAAM7B,QACjEvpB,KAAKw8B,eAAiBx8B,KAAKw8B,eAAeH,iBAE5Cr8B,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,QAC5Cz0B,KAAK08B,YAAY18B,KAAKw8B,iBAMxBD,EAAAr8B,UAAAi8B,WAAA,WACEn8B,KAAKw8B,eAAiBx8B,KAAKw8B,eAAeL,aAC1Cn8B,KAAK08B,YAAY18B,KAAKw8B,iBAQxBD,EAAAr8B,UAAAw7B,YAAA,SAAYnS,GAQV,OAPKvpB,KAAKw8B,eAAeF,QAAQt8B,KAAKy8B,gBAChCz8B,KAAKw8B,eAAeF,QAAQt8B,KAAKg7B,cACnCh7B,KAAKy8B,aAAez8B,KAAKg7B,aAEzBh7B,KAAKy8B,aAAez8B,KAAKw8B,eAAeM,YAGrC98B,KAAKy8B,eAAiBlT,EAAO,GAAK,GAO3CgT,EAAAr8B,UAAA+0B,UAAA,SAAUlxB,GAIR,GAAIA,EAAO,CACT,IAAMmxB,EAAkBnxB,EAAMmxB,Qd5KJ,Kc6KtBA,GACFnxB,EAAMoxB,iBACNn1B,KAAK68B,sBAAsB,Id9KD,Kc+KjB3H,GACTnxB,EAAMoxB,iBACNn1B,KAAK68B,qBAAqB,IdhLC,KciLlB3H,GACTnxB,EAAMoxB,iBACNn1B,KAAK68B,qBAAqB,IdlLA,KcmLjB3H,IACTnxB,EAAMoxB,iBACNn1B,KAAK68B,sBAAsB,MAKzBN,EAAAr8B,UAAAw8B,YAAR,SAAoBK,GAClB,IAAMlJ,EAAQkJ,EAAIlB,UAAU,GACtBG,EAAOe,EAAIlB,UAAUkB,EAAIlB,UAAUl7B,OAAS,GAClDX,KAAK48B,YAAiB/I,EAAK,OAAOmI,EAElCh8B,KAAKme,gBAAgBjD,SAASlb,KAAKg9B,qBAMrCT,EAAAr8B,UAAAyM,gBAAA,WACE3M,KAAKu0B,wBAAwB/E,UAAUxvB,KAAKy0B,QAE5Cz0B,KAAKme,gBAAgBjD,SAASlb,KAAKg9B,8DApJH9O,UACH8H,UACI1G,UACjB3gB,EAAAA,kBACMgH,SACGoF,MA2G3Bja,EAAA,CADCuN,EAAAA,aAAa,UAAW,CAAC,0CAjHfkuB,EAAaz7B,EAAA,CA3CzByQ,EAAAA,UAAU,CACTvO,SAAU,iBACVwO,UAAW,CAACuJ,IACZ1O,SAAU,g/CAoCVtF,KAAM,CACJk2B,qBAAsB,WAGbV,MClCAW,GAAyC,CACpDjD,GACA5D,GACAU,GACA4C,GACA0B,GACAkB,GACA9B,GACApG,IAiBF8I,GAAA,WAAA,SAAAA,KAAkC,OAArBA,EAAmBr8B,EAAA,CAd/BqC,EAAAA,SAAS,CACRC,QAAS,CACPC,EAAAA,aACAmX,GACAwM,GACA/X,EACA/L,EACAylB,GACAtE,IAEF/gB,aAAc,CAAC45B,IACf35B,QAAS,CAAC25B,IACVziB,gBAAiB,CAAC4b,OAEP8G,GAAb,kBCfA,SAAAC,mDAA6D,OAAtBt9B,EAAAs9B,EAAAtb,GAA1Bsb,EAAiBt8B,EAAA,CArB7ByQ,EAAAA,UAAU,CACTvO,SAAU,sBACVqJ,SAAU,6mBAYVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CAACmN,GAAgBJ,GAAkB5D,GAAkBwC,OAErDigB,IAA0B3b,mBCnBrC,SAAA4b,EACEjb,EACAC,EAGA3D,EACApa,EACAyU,GAPF,IAAAtU,EASEqd,EAAAlhB,KAAAZ,KAAMoiB,EAAKgb,GAAmB/a,EAAU3D,EAASpa,EAAUyU,IAAG/Y,YAXtDyE,EAAAwT,MAAQ,IAapB,OAd8BnY,EAAAu9B,EAAAvb,4CAIrBhU,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,cAVK0uB,EAAQv8B,EAAA,CADpBiC,EAAAA,UAAU,CAAEC,SAAU,aAAc+D,KAAM,CAAEqd,oBAAqB,UAO7D3iB,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,aAPQ2tB,IAAiBna,kBCS9B,SAAAoa,KAA6B,OAAhBA,EAAcx8B,EAAA,CAN1BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAck6B,EAAAA,YAAar6B,EAAemhB,IACpD/gB,aAAc,CAAC+5B,GAAUD,IACzB75B,QAAS,CAAC8gB,GAAsBgZ,GAAUD,IAC1C3iB,gBAAiB,CAAC2iB,OAEPE,MCJAE,GAAiB,IAAI9mB,EAAAA,oBAAyCmM,GAC3E,SAAgB4a,KACd,OAAO,IAAI5iB,EAAAA,iBAAyB,GAEtC,ICjBY6iB,GDiBCC,GAA0B,CAAElsB,QAAS+rB,GAAgB1mB,WAAY2mB,IA0C9EG,GAAA,SAAA9b,GAgBE,SAAA8b,EACEve,EACYjC,EACZc,EACAU,EACO6X,EACyBxmB,EACzBqH,GAPT,IAAA7S,EASEqd,EAAAlhB,KAAAZ,KAAMqf,EAAgBjC,EAAec,EAAqBU,IAAiB5e,YAJpEyE,EAAAgyB,aAAAA,EACyBhyB,EAAAwL,cAAAA,EACzBxL,EAAA6S,cAAAA,EAtBT7S,EAAAoN,MAAO,EACPpN,EAAA2B,OAAQ,EACA3B,EAAAo5B,SAAU,EAuBhBp5B,EAAKG,cAAcpC,KACjBiC,EAAKgyB,aAAaE,YAAY7xB,WAAU,SAAAgM,GACtCrM,EAAK2B,MAAQ0K,QASrB,OArC0ChR,EAAA89B,EAAA9b,GAMxCtiB,OAAAgC,eAAIo8B,EAAA19B,UAAA,YAAS,KAMb,WACE,OAAOF,KAAK69B,aAPd,SAAc/sB,GACZ9Q,KAAK69B,QAAU/sB,EACVA,IACH9Q,KAAK6R,MAAO,oCAwBhB+rB,EAAA19B,UAAAwkB,OAAA,WACE1kB,KAAK6R,MAAQ7R,KAAK6R,KAClB7R,KAAKiQ,cAAchO,KAAKjC,KAAK6R,gDAlBb8M,UACWzC,GAAanb,WAAA,CAAA,CAAAsG,KAAvCqI,EAAAA,kBACoByN,UACHoB,UACG6W,UAC0Bva,EAAAA,gBAAe9Z,WAAA,CAAA,CAAAsG,KAA7DC,EAAAA,OAAMC,KAAA,CAACi2B,aACc7nB,KAjBxB7U,EAAA,CADCkN,EAAAA,MAAM,4CALI4vB,EAAoB98B,EAAA,CAxChCyQ,EAAAA,UAAU,CACTvO,SAAU,yBACVqJ,SAAU,6hCAwBVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CACTmN,GACAJ,GACA5D,GACAwC,GACAiY,GACAuI,MAqBCl8B,EAAA,EAAAiO,EAAAA,YAIAjO,EAAA,EAAA6F,EAAAA,OAAOk2B,MAtBCI,GAAb,CAA0Cnc,mBElCxC,SAAAqc,EACE1b,EACAC,EAGA3D,EACApa,EACAyU,EACoB0d,EAGZxmB,GAXV,IAAAxL,EAaEqd,EAAAlhB,KAAAZ,KAAMoiB,EAAKwb,GAAsBvb,EAAU3D,EAASpa,EAAUyU,IAAG/Y,KAEjE,GAPoByE,EAAAgyB,aAAAA,EAGZhyB,EAAAwL,cAAAA,EAbAxL,EAAAwT,MAAQ,GAiBXxT,EAAKgyB,aACR,MAAM,IAAIlX,MAAM,yEAGlB9a,EAAKG,cAAcpC,KACjBiC,EAAKwL,cAAcnL,WAAU,SAAA4f,GAC3BpgB,EAAS00B,YAAYjgB,EAAGnS,cAAe,OAAQ8d,EAAS,OAAS,kBAmBzE,OA3CiC5kB,EAAAg+B,EAAAhc,GA8B/Bgc,EAAA59B,UAAA69B,aAAA,WACM/9B,KAAKy2B,eACPz2B,KAAKy2B,aAAagC,SAAU,IAKhCqF,EAAA59B,UAAAqjB,kBAAA,WACEzB,EAAA5hB,UAAMqjB,kBAAiB3iB,KAAAZ,MACnBA,KAAKy2B,eACPz2B,KAAKy2B,aAAagC,SAAU,6CApCzB3qB,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,kBAC8BymB,GAAYr0B,WAAA,CAAA,CAAAsG,KAA7CqI,EAAAA,kBAGsBmL,EAAAA,gBAAe9Z,WAAA,CAAA,CAAAsG,KAFrCqI,EAAAA,UAAQ,CAAArI,KACRC,EAAAA,OAAMC,KAAA,CAACi2B,SAiBV18B,EAAA,CADCuN,EAAAA,aAAa,2CAQdvN,EAAA,CADCuN,EAAAA,aAAa,+CApCHyvB,EAAWh9B,EAAA,CADvBiC,EAAAA,UAAU,CAAEC,SAAU,gBAAiB+D,KAAM,CAAEqd,oBAAqB,UAOhE3iB,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,YAIAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA6F,EAAAA,OAAOk2B,MAbCM,IAAoB5a,kBCLjC,SAAA8a,KAAgC,OAAnBA,EAAiBl9B,EAAA,CAN7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAck6B,EAAAA,YAAar6B,EAAemhB,IACpD/gB,aAAc,CAACw6B,GAAaF,IAC5Br6B,QAAS,CAAC8gB,GAAsByZ,GAAaF,IAC7CnjB,gBAAiB,CAACmjB,OAEPI,oBCEb,SAAAC,IAIEj+B,KAAA0hB,UAAW,EASb,OALEuc,EAAA/9B,UAAA2f,SAAA,WACM7f,KAAKghB,OACPhhB,KAAKghB,MAAMhB,eAJflf,EAAA,CADC8gB,EAAAA,aAAajC,GAAU,CAAEtO,QAAQ,iCALvB4sB,EAAen9B,EAAA,CAZ3ByQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,4IAKVtF,KAAM,CACJm3B,4BAA6B,QAE/B1sB,UAAW,CAACmJ,OAEDsjB,qBCVX,SAAAE,EACE/b,EACAC,EAGA3D,EACApa,EACAyU,UAEA+I,EAAAlhB,KAAAZ,KAAMoiB,EAAK6b,GAAiB5b,EAAU3D,EAASpa,EAAUyU,IAAG/Y,KAEhE,OAZ8BF,EAAAq+B,EAAArc,4CAErBhU,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,cARKwvB,EAAQr9B,EAAA,CADpBiC,EAAAA,UAAU,CAAEC,SAAU,eAKlBvB,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,aALQyuB,IAAiBjb,mBCqB9B,SAAAkb,IAAA,IAAA35B,EAAA,OAAAqd,GAAAA,EAAAjhB,MAAAb,KAAAU,YAAAV,YACUyE,EAAAugB,QAAS,IAmBnB,OApBuCllB,EAAAs+B,EAAAtc,GAUrCtiB,OAAAgC,eAAI48B,EAAAl+B,UAAA,YAAS,KAOb,WACE,OAAOF,KAAKglB,YARd,SAAc9iB,GAEVlC,KAAKglB,OADc,iBAAV9iB,EACe,UAAVA,IAEEA,mCAJpBpB,EAAA,CADCkN,EAAAA,uCATUowB,EAAiBt9B,EAAA,CArB7ByQ,EAAAA,UAAU,CACTvO,SAAU,sBACVqJ,SAAU,umBAYVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CAAC+M,GAAkBpB,GAAqBwB,OAExCyf,IAA0B3c,kBCXvC,SAAA4c,KAA6B,OAAhBA,EAAcv9B,EAAA,CAN1BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcghB,GAAsB7J,GAAuBtX,GACrEI,aAAc,CAAC66B,GAAUC,GAAmBH,IAC5C16B,QAAS,CAAC8gB,GAAsB8Z,GAAUC,GAAmBH,IAC7DxjB,gBAAiB,CAACwjB,OAEPI,qBCcb,SAAAC,IAAA,IAAA75B,EAAA,OAAAqd,GAAAA,EAAAjhB,MAAAb,KAAAU,YAAAV,YAGUyE,EAAA85B,OAAQ,IAgBlB,OAnBwCz+B,EAAAw+B,EAAAxc,GAKtCwc,EAAAp+B,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAK4e,iBAAiBE,eAAeha,WAAU,SAAA4Z,GACzCA,IACFja,EAAK85B,MAAQ7f,EAAQ8f,yBAAyBC,EAAAA,mCAC9Ch6B,EAAKia,QAAUA,QAMvB4f,EAAAp+B,UAAAw+B,aAAA,WACE,OAAO1+B,KAAKu+B,MAAQ,0BAA4B,sBAflDz9B,EAAA,CADC8gB,EAAAA,aAAa6c,EAAAA,mCAAoC,CAAEptB,QAAQ,oCADjDitB,EAAkBx9B,EAAA,CAtB9ByQ,EAAAA,UAAU,CACTvO,SAAU,uBACVqJ,SAAU,+mBAYVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBAErCC,kBAAmB,aAErBzQ,UAAW,CAACmN,GAAgBJ,GAAkB5D,GAAkBwC,OAErDmhB,IAA2B7c,mBCrBtC,SAAAkd,EACEvc,EACAC,EAGA3D,EACApa,EACAyU,GAPF,IAAAtU,EASEqd,EAAAlhB,KAAAZ,KAAMoiB,EAAKkc,GAAoBjc,EAAU3D,EAASpa,EAAUyU,IAAG/Y,YAXvDyE,EAAAwT,MAAQ,IAapB,OAd+BnY,EAAA6+B,EAAA7c,4CAItBhU,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,cAVKgwB,EAAS79B,EAAA,CADrBiC,EAAAA,UAAU,CAAEC,SAAU,cAAe+D,KAAM,CAAE63B,qBAAsB,UAO/Dn9B,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,aAPQivB,IAAkBzb,kBCS/B,SAAA2b,KAA8B,OAAjBA,EAAe/9B,EAAA,CAN3BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAck6B,EAAAA,YAAar6B,EAAemhB,IACpD/gB,aAAc,CAACq7B,GAAWL,IAC1B/6B,QAAS,CAAC8gB,GAAsBsa,GAAWL,IAC3C7jB,gBAAiB,CAAC6jB,OAEPO,qBCab,SAAAC,mDAAgE,OAAtBh/B,EAAAg/B,EAAAhd,GAA7Bgd,EAAoBh+B,EAAA,CArBhCyQ,EAAAA,UAAU,CACTvO,SAAU,yBACVqJ,SAAU,mnBAYVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CAACmN,GAAgBJ,GAAkB5D,GAAkBwC,OAErD2hB,IAA6Brd,mBCnBxC,SAAAsd,EACE3c,EACAC,EAGA3D,EACApa,EACAyU,GAPF,IAAAtU,EASEqd,EAAAlhB,KAAAZ,KAAMoiB,EAAK0c,GAAsBzc,EAAU3D,EAASpa,EAAUyU,IAAG/Y,YAXzDyE,EAAAwT,MAAQ,IAapB,OAdiCnY,EAAAi/B,EAAAjd,4CAIxBhU,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,cAVKowB,EAAWj+B,EAAA,CADvBiC,EAAAA,UAAU,CAAEC,SAAU,gBAAiB+D,KAAM,CAAEi4B,uBAAwB,UAOnEv9B,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,aAPQqvB,IAAoB7b,kBCSjC,SAAA+b,KAAgC,OAAnBA,EAAiBn+B,EAAA,CAN7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAck6B,EAAAA,YAAar6B,EAAemhB,IACpD/gB,aAAc,CAACy7B,GAAaD,IAC5Bv7B,QAAS,CAAC8gB,GAAsB0a,GAAaD,IAC7CrkB,gBAAiB,CAACqkB,OAEPG,qBCkCX,SAAAC,EACE7f,EACYjC,EACZc,EACAU,EACQta,EACA66B,GANV,IAAA16B,EAQEqd,EAAAlhB,KAAAZ,KAAMqf,EAAgBjC,EAAec,EAAqBU,IAAiB5e,YAHnEyE,EAAAH,SAAAA,EACAG,EAAA06B,UAAAA,EApBF16B,EAAA26B,cAAwB,IA0ClC,OA3CuCt/B,EAAAo/B,EAAApd,GAIrCtiB,OAAAgC,eAAI09B,EAAAh/B,UAAA,cAAW,KAOf,WACE,OAAOF,KAAKo/B,kBARd,SAAgBC,GACd,IAAMC,IAAYD,EACdC,IAAYt/B,KAAKo/B,eACnBp/B,KAAKo/B,aAAeE,oCAmBxBJ,EAAAh/B,UAAAq/B,0BAAA,WACE,IAAMC,EAA0Bx/B,KAAKsE,SAASm7B,kBAAkB,cAAgBz/B,KAAKm/B,UAAUpjB,IAEzF2jB,EAAaF,EAAMG,YACnBC,GAAiBJ,EAAMK,IACzBC,GAAiBN,EAAMO,IAEL,IAAlBH,GAAyC,IAAlBE,IACzBA,EAAgB,KAGlB,IAAME,GAAeJ,EAAgBE,GAAiB,EAItD,OAFsD,MADjC9/B,KAAK0e,cAAkCmE,IAAvB7iB,KAAK0e,QAAQxc,MAAsBlC,KAAK0e,QAAQxc,MAAQ89B,GACxDJ,IAAwBE,EAAgBF,GAErDF,EAAa,IAAM,+CAzB3B/gB,UACWzC,GAAanb,WAAA,CAAA,CAAAsG,KAAvCqI,EAAAA,kBACoByN,UACHoB,UACApX,EAAAA,iBACCwT,MAjBrB7Z,EAAA,CADCkN,EAAAA,MAAM,wDAHIkxB,EAAiBp+B,EAAA,CA1B7ByQ,EAAAA,UAAU,CACTvO,SAAU,sBACVqJ,SAAU,80BAiBVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CAACmN,GAAgBJ,GAAkB5D,GAAkBwC,MAmB7D1b,EAAA,EAAAiO,EAAAA,aAjBQwvB,IAA0Bzd,mBC3BrC,SAAAwe,EACE7d,EACAC,EAGA3D,EACApa,EACAyU,UAEA+I,EAAAlhB,KAAAZ,KAAMoiB,EAAK8c,GAAmB7c,EAAU3D,EAASpa,EAAUyU,IAAG/Y,KAKlE,OAf8BF,EAAAmgC,EAAAne,4CAErBhU,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,cARKsxB,EAAQn/B,EAAA,CADpBiC,EAAAA,UAAU,CAAEC,SAAU,aAAc+D,KAAM,CAAEm5B,oBAAqB,UAK7Dz+B,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,aALQuwB,IAAiB/c,kBCQ9B,SAAAid,KAA6B,OAAhBA,EAAcr/B,EAAA,CAN1BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcghB,GAAsB7J,GAAuBtX,GACrEI,aAAc,CAAC28B,GAAUf,IACzB37B,QAAS,CAAC8gB,GAAsB4b,GAAUf,IAC1CzkB,gBAAiB,CAACykB,OAEPiB,MCbTzlB,GAAU,EAGd0lB,GAAA,WAAA,SAAAA,IACUpgC,KAAAuQ,IAAM,mBAAoBmK,GAW1B1a,KAAA4a,UAAqC,IAAIC,EAAAA,gBAAgB7a,KAAKuQ,KAIxE,OAbE/Q,OAAAgC,eAAI4+B,EAAAlgC,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKuQ,SAGd,SAAOrO,GACLlC,KAAKuQ,IAAMrO,EACXlC,KAAK4a,UAAU3Y,KAAKC,oCAItB1C,OAAAgC,eAAW4+B,EAAAlgC,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAK4a,UAAU/W,gDAdbu8B,EAAiBt/B,EAAA,CAD7BsD,EAAAA,cACYg8B,GAAb,kBCwCE,SAAAC,EACEniB,EACYd,EACZiC,EACAT,EACQ6X,GALV,IAAAhyB,EAOEqd,EAAAlhB,KAAAZ,KAAMqf,EAAgBjC,EAAec,EAAqBU,IAAiB5e,YAFnEyE,EAAAgyB,aAAAA,EAPVhyB,EAAA2B,OAAiB,EAWf3B,EAAKG,cAAcpC,KAAKiC,EAAKgyB,aAAaE,YAAY7xB,WAAU,SAAAgM,GAAS,OAACrM,EAAK2B,MAAQ0K,QAE3F,OAd0ChR,EAAAugC,EAAAve,4CAIjB3E,UACMjB,GAAanb,WAAA,CAAA,CAAAsG,KAAvCqI,EAAAA,kBACeiP,UACEJ,UACI6W,MARbiL,EAAoBv/B,EAAA,CAhChCyQ,EAAAA,UAAU,CACTvO,SAAU,yBACVqJ,SAAU,usBAeVtF,KAAM,CACJgb,2BAA4B,OAC5BC,oCAAqC,oBACrCC,kBAAmB,aAErBzQ,UAAW,CACT2L,GACAjB,GACAvB,GACAya,GACAzW,GACAJ,GACA6hB,MAQC3+B,EAAA,EAAAiO,EAAAA,aALQ2wB,IAA6B5e,mBCjBxC,SAAA6e,EACsB7J,EACpBrU,EACAC,EAGA3D,EACApa,EACAyU,EACQwnB,GATV,IAAA97B,EAWEqd,EAAAlhB,KAAAZ,KAAMoiB,EAAKie,GAAsBhe,EAAU3D,EAASpa,EAAUyU,IAAG/Y,KAEjE,GAZoByE,EAAAgyB,aAAAA,EAQZhyB,EAAA87B,kBAAAA,GAIH97B,EAAKgyB,aACR,MAAM,IAAIlX,MAAM,2EAyBtB,OAxCsCzf,EAAAwgC,EAAAxe,GAqBpCwe,EAAApgC,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KAEEA,KAAK4E,cAAcpC,KAAKxC,KAAKugC,kBAAkBxgB,SAASjb,WAAU,SAAAiX,GAAM,OAACtX,EAAK+7B,UAAYzkB,OAI5FukB,EAAApgC,UAAA69B,aAAA,WACM/9B,KAAKy2B,eACPz2B,KAAKy2B,aAAagC,SAAU,IAKhC6H,EAAApgC,UAAAqjB,kBAAA,WACEzB,EAAA5hB,UAAMqjB,kBAAiB3iB,KAAAZ,MACnBA,KAAKy2B,eACPz2B,KAAKy2B,aAAagC,SAAU,6CAnCIrD,GAAYr0B,WAAA,CAAA,CAAAsG,KAA7CqI,EAAAA,kBACI5B,EAAAA,wBACKkW,EAAAA,gBAGDC,EAAAA,UAASljB,WAAA,CAAA,CAAAsG,KAFjB8c,EAAAA,MAAI,CAAA9c,KACJqI,EAAAA,kBAESvI,EAAAA,iBACNwH,EAAAA,kBACuByxB,MAiB7Bt/B,EAAA,CADCuN,EAAAA,aAAa,2CAQdvN,EAAA,CADCuN,EAAAA,aAAa,+CAjCHiyB,EAAgBx/B,EAAA,CAP5BiC,EAAAA,UAAU,CACTC,SAAU,qBACV+D,KAAM,CACJqd,oBAAqB,OACrBqc,cAAe,eAKdh/B,EAAA,EAAAiO,EAAAA,YAGAjO,EAAA,EAAA0iB,EAAAA,QACA1iB,EAAA,EAAAiO,EAAAA,aANQ4wB,IAAyBpd,kBCXpC,SAAAwd,EAAgCH,GAAAvgC,KAAAugC,kBAAAA,EADxBvgC,KAAA4E,cAAgC,GAuB1C,OAnBE87B,EAAAxgC,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACOA,KAAKugC,mBAGVvgC,KAAK4E,cAAcpC,KAAKxC,KAAKugC,kBAAkBxgB,SAASjb,WAAU,SAAAiX,GAAM,OAACtX,EAAKk8B,WAAa5kB,OAG7Fvc,OAAAgC,eAAIk/B,EAAAxgC,UAAA,KAAE,KAAN,SAAO0gC,GACCA,GAAW5gC,KAAKugC,mBACpBvgC,KAAK2gC,WAAaC,EAClB5gC,KAAKugC,kBAAkBxkB,GAAK6kB,GACjBA,IACX5gC,KAAK2gC,WAAaC,oCAItBF,EAAAxgC,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DApBWu6B,GAAiBr/B,WAAA,CAAA,CAAAsG,KAAvDqI,EAAAA,cAUb5O,EAAA,CADCkN,EAAAA,gCAXU0yB,EAAW5/B,EAAA,CANvBiC,EAAAA,UAAU,CACTC,SAAU,WACV+D,KAAM,CACJsX,OAAQ,gBAKG5c,EAAA,EAAAiO,EAAAA,aAFFgxB,oBCEb,SAAAG,KAAgC,OAAnBA,EAAiB//B,EAAA,CAL7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAci6B,GAAgBp6B,GACxCI,aAAc,CAACo9B,GAAaJ,GAAkBD,IAC9C98B,QAAS,CAACm9B,GAAaJ,GAAkBD,OAE9BQ,oBCgBb,SAAAC,KAA6B,OAAhBA,EAAchgC,EAAA,CAf1BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVE,QAAS,CACP8gB,GACAY,GACAkY,GACAG,GACAU,GACAK,GACAQ,GACAI,GACAkB,GACAU,OAGSC,MCzBAC,GAAsC,CAAC5xB,GAGpD6xB,GAAA,WAAA,SAAAA,KAA+B,OAAlBA,EAAgBlgC,EAAA,CAD5BqC,EAAAA,SAAS,CAAEC,QAAS,CAACC,EAAAA,cAAeC,aAAc,CAACy9B,IAAyBx9B,QAAS,CAACw9B,OAC1EC,GAAb,iBCJE,SAAAC,EAAoBloB,GAAA/Y,KAAA+Y,GAAAA,EAEA/Y,KAAAynB,QAAS,EAEFznB,KAAAkhC,aAAe,IAAIz0B,EAAAA,cAAkB,GAelE,OAZEw0B,EAAA/gC,UAAAihC,cAAA,SAAcp9B,GACZ,IAAM/C,EAAS+C,EAAM/C,OACf+F,EAAO/G,KAAK+Y,GAAGnS,cAEjB5F,IAAW+F,KAGV/G,KAAKynB,QAAU1gB,EAAKd,SAASjF,IAGlChB,KAAKkhC,aAAatzB,KAAK7J,8CAjBD4K,EAAAA,cAEJ7N,EAAA,CAAnBkN,EAAAA,MAAM,2CAEoBlN,EAAA,CAA1BsN,EAAAA,OAAO,uDAGRtN,EAAA,CADCuN,EAAAA,aAAa,iBAAkB,CAAC,8CAPtB4yB,EAAYngC,EAAA,CADxBiC,EAAAA,UAAU,CAAEC,SAAU,uBACVi+B,MCEAG,GAAwC,CAACH,kBCCtD,SAAAI,KAAoC,OAAvBA,EAAqBvgC,EAAA,CADjCqC,EAAAA,SAAS,CAAEC,QAAS,CAACC,EAAAA,cAAeC,aAAc,CAAC89B,IAA2B79B,QAAS,CAAC69B,OAC5EC,oBCIb,SAAAC,KAuCA,OAtCEA,EAAAphC,UAAAqhC,iBAAA,SAAiBxyB,GACfA,EAAQjJ,UAAUkW,IAAI,4BACtB,IAAMulB,EAAmBvhC,KAAKwhC,WAAWzyB,GAASjG,MAElD,OADAiG,EAAQjJ,UAAUgd,OAAO,4BAClBye,GAGTD,EAAAphC,UAAAuhC,eAAA,SAAe1yB,GACb,OAAOA,EAAQ4wB,YAAc5wB,EAAQ9D,aAGvCq2B,EAAAphC,UAAAwhC,YAAA,SAAY3yB,GACV,OAAOA,EAAQ2yB,aAAe,GAGhCJ,EAAAphC,UAAAyhC,eAAA,SAAe5yB,GACb,OAAO0jB,SAASmP,iBAAiB7yB,GAAS8yB,iBAAiB,UAAW,KAGxEP,EAAAphC,UAAAshC,WAAA,SAAWzyB,GACT,IAAM+yB,EAAoB/yB,EAAQ7E,wBAClC,MAAO,CACLxB,IAAK+pB,SAASqP,EAAkBp5B,IAAK,IACrCq5B,OAAQtP,SAASqP,EAAkBC,OAAQ,IAC3Cv5B,KAAMiqB,SAASqP,EAAkBt5B,KAAM,IACvCw5B,MAAOvP,SAASqP,EAAkBE,MAAO,IACzCl5B,MAAO2pB,SAASqP,EAAkBh5B,MAAO,IACzCD,OAAQ4pB,SAASqP,EAAkBj5B,OAAQ,MAI/Cy4B,EAAAphC,UAAA+hC,SAAA,SAASlzB,GACP,OAAO0jB,SAASmP,iBAAiB7yB,GAAS8yB,iBAAiB,aAAc,KAG3EP,EAAAphC,UAAAkG,MAAA,SAAM2I,GACJA,EAAQ3I,SArCCk7B,EAAUxgC,EAAA,CADtBsD,EAAAA,cACYk9B,MCNbY,GAME,SAAYC,GACVniC,KAAKoiC,aAAeD,EAAUC,aAC9BpiC,KAAKqiC,MAAQF,EAAUE,MACvBriC,KAAKsiC,iBAAmBH,EAAUG,iBAClCtiC,KAAKuiC,kBAAoBJ,EAAUI,oB3BdvC,SAAY7E,GACVA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,KAAA,GAAA,OANF,CAAYA,KAAAA,GAAa,S4BQb8E,iBCFZ,SAAAC,IACUziC,KAAA0iC,UAA4C,IAAI/+B,EAAAA,QAChD3D,KAAA2iC,SAA2C,IAAIh/B,EAAAA,QAC/C3D,KAAA4iC,QAA0C,IAAIj/B,EAAAA,QAC9C3D,KAAA6iC,KAAuC,IAAIl/B,EAAAA,eAEnDnE,OAAAgC,eAAIihC,EAAAviC,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK0iC,UAAU7+B,gDAGxBrE,OAAAgC,eAAIihC,EAAAviC,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK2iC,SAAS9+B,gDAGvBrE,OAAAgC,eAAIihC,EAAAviC,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK4iC,QAAQ/+B,gDAGtBrE,OAAAgC,eAAIihC,EAAAviC,UAAA,UAAO,KAAX,WACE,OAAOF,KAAK6iC,KAAKh/B,gDAGnB4+B,EAAAviC,UAAA4iC,UAAA,SAAU/+B,GACR,OAAQA,EAAMsD,MACZ,KAAKq2B,GAAcqF,WACjB/iC,KAAK0iC,UAAUzgC,KAAK8B,GACpB,MACF,KAAK25B,GAAcsF,UACjBhjC,KAAK2iC,SAAS1gC,KAAK8B,GACnB,MACF,KAAK25B,GAAcuF,SACjBjjC,KAAK4iC,QAAQ3gC,KAAK8B,GAClB,MACF,KAAK25B,GAAcwF,KACjBljC,KAAK6iC,KAAK5gC,KAAK8B,mGAlCV0+B,EAA0B3hC,EAAA,CADtCsD,EAAAA,WAAW,CAAEmS,WAAY,UACbksB,oBC4BX,SAAAU,EAAoBnoB,EAAwB1W,EAA6B8+B,GAArDpjC,KAAAgb,OAAAA,EAAwBhb,KAAAsE,SAAAA,EAA6BtE,KAAAojC,SAAAA,EAlBjEpjC,KAAA0iC,UAA4C,IAAI/+B,EAAAA,QAChD3D,KAAA2iC,SAA2C,IAAIh/B,EAAAA,QAC/C3D,KAAA4iC,QAA0C,IAAIj/B,EAAAA,QAE9C3D,KAAAqjC,gBAA0B,EAkKpC,OAhKE7jC,OAAAgC,eAAI2hC,EAAAjjC,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK0iC,UAAU7+B,gDAGxBrE,OAAAgC,eAAI2hC,EAAAjjC,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK2iC,SAAS9+B,gDAGvBrE,OAAAgC,eAAI2hC,EAAAjjC,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK4iC,QAAQ/+B,gDAefs/B,EAAAjjC,UAAAojC,oBAAP,SAA2BC,GACzBvjC,KAAKujC,YAAcA,EACnBvjC,KAAKwjC,UAAY,CACfxjC,KAAKyjC,gBAAgBzjC,KAAKujC,YAAa,YAAa,YAAa,WACjEvjC,KAAKyjC,gBAAgBzjC,KAAKujC,YAAa,aAAc,YAAa,cAI/DJ,EAAAjjC,UAAAwjC,oBAAP,WACM1jC,KAAKwjC,WACPxjC,KAAKwjC,UAAUjnB,KAAI,SAAAxY,GAAS,OAAAA,OAQ1B/D,KAAK2jC,iBACP3jC,KAAK2jC,gBAAgBpnB,KAAI,SAAAxY,GAAS,OAAAA,QAI9Bo/B,EAAAjjC,UAAA0jC,qBAAR,SAA6B7/B,GAC3B,OAAiBA,EAAOlE,eAAe,kBACjBkE,EAAO8/B,eAAe,GAEnC9/B,GAIHo/B,EAAAjjC,UAAAujC,gBAAR,SAAwB10B,EAAe+0B,EAAsBC,EAAqBC,GAAlF,IAAAv/B,EAAAzE,KACE,OAAOA,KAAKsE,SAAS6B,OAAO4I,EAAS+0B,GAAc,SAACG,GAGlDx/B,EAAKy/B,gBAAkB,CACrBC,MAAO1/B,EAAKm/B,qBAAqBK,GAAYE,MAC7CC,MAAO3/B,EAAKm/B,qBAAqBK,GAAYG,OAI/C3/B,EAAKk/B,gBAAkB,GAGvBl/B,EAAKk/B,gBAAgBnhC,KACnBiC,EAAKH,SAAS6B,OAAO,WAAY,eAAe,SAACk+B,GAC/CA,EAAYlP,iBACZkP,EAAYC,+BAKhB7/B,EAAKk/B,gBAAgBnhC,KACnBiC,EAAKuW,OAAOU,mBAAkB,WAC5B,OAAOjX,EAAKH,SAAS6B,OAAO,WAAY49B,GAAa,SAACQ,GAUpDA,EAAUD,2BAEL7/B,EAAK4+B,eAMR5+B,EAAKq+B,UAAUyB,EAAW7G,GAAcsF,YALxCv+B,EAAK4+B,gBAAiB,EAEtB5+B,EAAKq+B,UAAUyB,EAAW7G,GAAcqF,oBAUhDt+B,EAAKk/B,gBAAgBnhC,KACnBiC,EAAKH,SAAS6B,OAAO,WAAY69B,GAAY,SAACQ,GACxC//B,EAAK4+B,iBAEP5+B,EAAK4+B,gBAAiB,EACtB5+B,EAAKq+B,UAAU0B,EAAU9G,GAAcuF,WAIrCx+B,EAAKk/B,iBACPl/B,EAAKk/B,gBAAgBpnB,KAAI,SAAAxY,GAAS,OAAAA,eAOpCo/B,EAAAjjC,UAAA4iC,UAAR,SAAkB/+B,EAAgC0gC,GAChD,IAAMtC,EAAmCniC,KAAK0kC,kBAAkB3gC,EAAO0gC,GAEvE,OAAQtC,EAAU96B,MAChB,KAAKq2B,GAAcqF,WACjB/iC,KAAK0iC,UAAUzgC,KAAKkgC,GACpB,MACF,KAAKzE,GAAcsF,UACjBhjC,KAAK2iC,SAAS1gC,KAAKkgC,GACnB,MACF,KAAKzE,GAAcuF,SACjBjjC,KAAK4iC,QAAQ3gC,KAAKkgC,GAOtBA,EAAUwC,aAAe3kC,KAAK2kC,aAC9BxC,EAAUI,kBAAoBviC,KAAKuiC,kBAEnCviC,KAAKojC,SAASN,UAAUX,IAGlBgB,EAAAjjC,UAAAwkC,kBAAR,SAA0B3gC,EAAgC0gC,GACxD,IAAMG,EAAmB5kC,KAAK4jC,qBAAqB7/B,GAEnD,MAAO,CACLsD,KAAMo9B,EACNrC,aAAc,CACZ+B,MAAOS,EAAYT,MACnBC,MAAOQ,EAAYR,MACnBS,MAAOD,EAAYT,MAAQnkC,KAAKkkC,gBAAgBC,MAChDW,MAAOF,EAAYR,MAAQpkC,KAAKkkC,gBAAgBE,OAElD/B,MAAOriC,KAAKqiC,MACZC,iBAAkBtiC,KAAKsiC,iBACvBqC,aAAc3kC,KAAK2kC,wDAjJK1oB,EAAAA,cAA0B9U,EAAAA,iBAA6Bs7B,MA3BxEU,EAAwBriC,EAAA,CADpCsD,EAAAA,cACY++B,MCAb4B,GAAA,WACE,SAAAA,EAAoBC,GAAAhlC,KAAAglC,WAAAA,EAsBtB,OAjBSD,EAAA7kC,UAAAoF,QAAP,SAAeyT,EAAUhV,GACvB/D,KAAKilC,sBAAwBjlC,KAAKglC,WAAWxD,WAAWzoB,GACxD/Y,KAAKklC,kBAAoBnhC,GAEpBghC,EAAA7kC,UAAAilC,QAAP,kBACSnlC,KAAKilC,6BACLjlC,KAAKklC,mBAEd1lC,OAAAgC,eAAIujC,EAAA7kC,UAAA,oBAAiB,KAArB,WACE,QAASF,KAAKklC,qBAAuBllC,KAAKilC,uDAE5CzlC,OAAAgC,eAAIujC,EAAA7kC,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKilC,uDAEdzlC,OAAAgC,eAAIujC,EAAA7kC,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKklC,4FApBkB5D,MADrByD,EAAwBjkC,EAAA,CADpCsD,EAAAA,cACY2gC,GAAb,iBC6BE,SAAAK,EACUrsB,EACYssB,EACAC,EACZhhC,EACA0W,GALV,IAAAvW,EAAAzE,KAOE,GANQA,KAAA+Y,GAAAA,EACY/Y,KAAAqlC,kBAAAA,EACArlC,KAAAslC,kBAAAA,EACZtlC,KAAAsE,SAAAA,EACAtE,KAAAgb,OAAAA,EATFhb,KAAA4E,cAAgC,GAER5E,KAAAulC,gBAAkB,CAAErjC,MAAO,EAAGsjC,OAAQ,CAAE98B,IAAK,MAAOF,KAAM,SASnFxI,KAAKqlC,oBAAsBrlC,KAAKslC,kBACnC,MAAM,IAAI/lB,MAAM,0FAGlBvf,KAAKylC,iBAAmBzlC,KAAK+Y,GAAGnS,cAGhC5G,KAAKsE,SAASmJ,SAASzN,KAAKylC,iBAAkB,mBAG9CzlC,KAAKqlC,kBAAkBV,aAAe3kC,KAAKylC,iBAG3CzlC,KAAK0lC,oBAAoB1lC,KAAKylC,kBAE9B,IAAMn7B,EAAyB,CAC7B5B,IAAK1I,KAAKslC,kBAAkBK,kBACxB3lC,KAAKslC,kBAAkBnD,UAAUC,aAAagC,MAAQpkC,KAAKslC,kBAAkB9D,WAAW94B,IACxF,EACJF,KAAMxI,KAAKslC,kBAAkBK,kBACzB3lC,KAAKslC,kBAAkBnD,UAAUC,aAAa+B,MAAQnkC,KAAKslC,kBAAkB9D,WAAWh5B,KACxF,GAGFo9B,GAAiC,EAErC5lC,KAAK4E,cAAcpC,KACjBxC,KAAKqlC,kBAAkBQ,UAAU/gC,WAAU,SAACf,GAErC6hC,IACCnhC,EAAK6gC,kBAAkBK,kBACzBlhC,EAAKqhC,iBACArhC,EAAK6gC,kBAAkB9D,WAAW94B,IAAG,KACrCjE,EAAK6gC,kBAAkB9D,WAAWh5B,KAAI,MAG3C/D,EAAKqhC,iBAAoB/hC,EAAMq+B,aAAagC,MAAK,KAASrgC,EAAMq+B,aAAa+B,MAAK,MAEpFyB,GAAwB,GAI1B,IAAMG,EAAgCthC,EAAKuhC,oBAAoBjiC,EAAMq+B,aAAc93B,GACnF7F,EAAKwhC,iBAAiBxhC,EAAKghC,iBAAkBM,EAAgB5B,MAAO4B,EAAgB3B,OACpF3/B,EAAK4gC,kBAAkB9C,kBAAoB99B,EAAKyhC,sBAAsBH,OA8C9E,OAzCUX,EAAAllC,UAAAwlC,oBAAR,SAA4B3sB,GACtB/Y,KAAKslC,kBAAkBK,mBACzB3lC,KAAKmmC,aAAaptB,EAAI/Y,KAAKslC,kBAAkB9D,WAAW14B,MAAO9I,KAAKslC,kBAAkB9D,WAAW34B,SAI7Fu8B,EAAAllC,UAAA4lC,iBAAR,SAAyBp9B,EAAaF,GAAtC,IAAA/D,EAAAzE,KACEA,KAAKgb,OAAOorB,KAAI,WACd3hC,EAAK8gC,gBAAkB,CAAErjC,MAAO,EAAGsjC,OAAQ,CAAE98B,IAAKA,EAAKF,KAAMA,QAIzD48B,EAAAllC,UAAA8lC,oBAAR,SAA4B5D,EAA4B93B,GACtD,MAAO,CAAE65B,MAAO/B,EAAa+B,MAAQ75B,EAAO9B,KAAM47B,MAAOhC,EAAagC,MAAQ95B,EAAO5B,MAG/E08B,EAAAllC,UAAAgmC,sBAAR,SAA8BH,GAC5B,OAAI/lC,KAAKslC,kBAAkBK,kBAClB,CACLxB,MAAO4B,EAAgB5B,MAAQnkC,KAAKslC,kBAAkB9D,WAAW14B,MAAQ,EACzEs7B,MAAO2B,EAAgB3B,MAAQpkC,KAAKslC,kBAAkB9D,WAAW34B,OAAS,GAGrEk9B,GAIHX,EAAAllC,UAAAimC,aAAR,SAAqBptB,EAAUjQ,EAAeD,GAC5C7I,KAAKsE,SAAS0I,SAAS+L,EAAI,QAAYjQ,EAAK,MAC5C9I,KAAKsE,SAAS0I,SAAS+L,EAAI,SAAalQ,EAAM,OAGxCu8B,EAAAllC,UAAA+lC,iBAAR,SAAyBltB,EAAUvQ,EAAcE,GAC/C1I,KAAKsE,SAAS0I,SAAS+L,EAAI,OAAWvQ,EAAI,MAC1CxI,KAAKsE,SAAS0I,SAAS+L,EAAI,MAAUrQ,EAAG,MACxC1I,KAAKsE,SAAS0I,SAAS+L,EAAI,aAAc,YAG3CqsB,EAAAllC,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,2DA9F1C8I,EAAAA,kBAC2Bw0B,GAAwBpiC,WAAA,CAAA,CAAAsG,KAA9DqI,EAAAA,kBACsCq1B,GAAwBhkC,WAAA,CAAA,CAAAsG,KAA9DqI,EAAAA,kBACiBvI,EAAAA,iBACF8U,EAAAA,UAPcnb,EAAA,CAA/Bmf,EAAAA,YAAY,0DALFmlB,EAAiBtkC,EAAA,CAZ7ByQ,EAAAA,UAAU,CACTvO,SAAU,sBACVqJ,SAAU,4BACVsN,WAAY,CACVC,EAAAA,QAAQ,iBAAkB,CACxBC,EAAAA,WAAW,SAAU,CACnBC,EAAAA,MAAM,CAAEtR,KAAM,IAAKE,IAAK,MACxBsR,EAAAA,QAAQ,mBAAoBF,EAAAA,MAAM,CAAEpR,IAAK,UAAWF,KAAM,qBAc7D/G,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,aAVQ01B,MCjBbiB,GAAA,WAEE,SAAAA,EACUh6B,EAGAD,EACYi5B,GALtB,IAAA5gC,EAAAzE,KAOE,GANQA,KAAAqM,SAAAA,EAGArM,KAAAoM,UAAAA,EACYpM,KAAAqlC,kBAAAA,EANdrlC,KAAA4E,cAAgC,IAQjC5E,KAAKqlC,oBAAsBrlC,KAAKoM,UACnC,MAAM,IAAImT,MAAM,oFAGlBvf,KAAK4E,cAAcpC,KACjBxC,KAAKqlC,kBAAkBiB,YAAYxhC,WAAU,SAACf,GAC5CU,EAAK2H,UAAUmB,mBAAmB9I,EAAK4H,cAG3CrM,KAAK4E,cAAcpC,KACjBxC,KAAKqlC,kBAAkBkB,UAAUzhC,WAAU,SAACf,GAC1CU,EAAK2H,UAAUkB,YAQvB,OAHE+4B,EAAAnmC,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,2DAvBpCkI,EAAAA,mBAGCD,EAAAA,iBAAgB/M,WAAA,CAAA,CAAAsG,KAFlCqI,EAAAA,UAAQ,CAAArI,KACR8J,EAAAA,kBAEsCgyB,GAAwBpiC,WAAA,CAAA,CAAAsG,KAA9DqI,EAAAA,cAPQ22B,EAAYvlC,EAAA,CADxBiC,EAAAA,UAAU,CAAEC,SAAU,mBAKlBvB,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA0P,EAAAA,YAEA1P,EAAA,EAAAiO,EAAAA,aAPQ22B,GAAb,GCJAG,GAAA,WAkBE,SAAAA,EAAoBnB,EAAwD/gC,GAAxDtE,KAAAqlC,kBAAAA,EAAwDrlC,KAAAsE,SAAAA,EA+B9E,OA7CE9E,OAAAgC,eAAIglC,EAAAtmC,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAKymC,sBAGd,SAAoB1tB,GAClB/Y,KAAKymC,iBAAmB1tB,EAInB/Y,KAAK0mC,iBACR1mC,KAAK2mC,kBAAkB3mC,KAAKymC,mDAMxBD,EAAAtmC,UAAAymC,kBAAR,SAA0B5tB,GACpB/Y,KAAKymC,kBAAoBzmC,KAAKymC,mBAAqB1tB,GAGrD/Y,KAAKsE,SAASyZ,YAAY/d,KAAKymC,iBAAkB,eAEnDzmC,KAAKqlC,kBAAkB/B,oBAAoBvqB,GAC3C/Y,KAAKsE,SAASmJ,SAASsL,EAAI,gBAG7BvZ,OAAAgC,eAAIglC,EAAAtmC,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAK0mC,iDAGPF,EAAAtmC,UAAA0mC,qBAAP,SAA4B7tB,GAC1B/Y,KAAKqlC,kBAAkB3B,sBACvB1jC,KAAK0mC,gBAAkB3tB,EACvB/Y,KAAK2mC,kBAAkB3mC,KAAK0mC,kBAGvBF,EAAAtmC,UAAA2mC,uBAAP,WACE7mC,KAAKqlC,kBAAkB3B,sBACvB1jC,KAAKsE,SAASyZ,YAAY/d,KAAK0mC,gBAAiB,sBACzC1mC,KAAK0mC,gBAER1mC,KAAKymC,kBACPzmC,KAAK2mC,kBAAkB3mC,KAAKymC,4DA5BOtD,UAA+Ch8B,EAAAA,aAlB3Eq/B,EAA0B1lC,EAAA,CADtCsD,EAAAA,cACYoiC,GAAb,GCHAM,GAAA,WACE,SAAAA,EAAoBxiC,GAAAtE,KAAAsE,SAAAA,EAStB,OAPEwiC,EAAA5mC,UAAA6mC,MAAA,WACE/mC,KAAKsE,SAASmJ,SAASjJ,SAAS6I,KAAM,YAGxCy5B,EAAA5mC,UAAA8mC,KAAA,WACEhnC,KAAKsE,SAASyZ,YAAYvZ,SAAS6I,KAAM,qDAPblG,EAAAA,aADnB2/B,EAAqBhmC,EAAA,CADjCsD,EAAAA,cACY0iC,GAAb,iBCsCE,SAAAG,EACUluB,EACAssB,EACA6B,EACAlQ,EACAzU,EACAF,EACAijB,EACA6B,GAPAnnC,KAAA+Y,GAAAA,EACA/Y,KAAAqlC,kBAAAA,EACArlC,KAAAknC,oBAAAA,EACAlnC,KAAAg3B,iBAAAA,EACAh3B,KAAAuiB,IAAAA,EACAviB,KAAAqiB,SAAAA,EACAriB,KAAAslC,kBAAAA,EACAtlC,KAAAmnC,eAAAA,EAZFnnC,KAAA4E,cAAgC,GAEjC5E,KAAAonC,QAAkB,EA0CDpnC,KAAAqnC,iBAAkD,IAAI56B,EAAAA,aACvDzM,KAAAsnC,gBAAiD,IAAI76B,EAAAA,aACtDzM,KAAAunC,eAAgD,IAAI96B,EAAAA,aAhCxEzM,KAAKujC,YAAcvjC,KAAK+Y,GAAGnS,cAC3B5G,KAAKwnC,iBAAmBxnC,KAAKuiB,IAAIG,wBAA8C0iB,IAoEnF,OA9DE5lC,OAAAgC,eAAIylC,EAAA/mC,UAAA,eAAY,KAAhB,SAAiBgC,GACflC,KAAKqlC,kBAAkB/C,iBAAmBpgC,mCAI5C1C,OAAAgC,eAAIylC,EAAA/mC,UAAA,QAAK,KAAT,SAAUgC,GACRlC,KAAKqlC,kBAAkBhD,MAAQngC,mCAGzB+kC,EAAA/mC,UAAAunC,mBAAR,SAA2B1jC,GACzB/D,KAAKslC,kBAAkBhgC,QAAQtF,KAAKujC,YAAax/B,GAGjD/D,KAAKg3B,iBAAiBvU,gBAAgBziB,KAAKwnC,iBAAkB,EAAGxnC,KAAKqiB,SAAU,CAC7E,CAACriB,KAAKujC,YAAYmE,WAAU,OAIxBT,EAAA/mC,UAAAynC,oBAAR,WACE3nC,KAAKg3B,iBAAiB1pB,QACtBtN,KAAKslC,kBAAkBH,WAOzB8B,EAAA/mC,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAKknC,oBAAoBU,gBAAkB5nC,KAAKujC,YAEhDvjC,KAAK4E,cAAcpC,KACjBxC,KAAKqlC,kBAAkBiB,YAAYxhC,WAAU,SAACf,GAC5CU,EAAK0iC,eAAeJ,QACpBtiC,EAAK2iC,QAAS,EACT3iC,EAAKojC,aACRpjC,EAAKgjC,mBAAmB1jC,GAG1BU,EAAK4iC,iBAAiBz5B,KAAK,IAAIs0B,GAAan+B,QAGhD/D,KAAK4E,cAAcpC,KACjBxC,KAAKqlC,kBAAkBQ,UAAU/gC,WAAU,SAACf,GAC1CU,EAAK6iC,gBAAgB15B,KAAK,IAAIs0B,GAAan+B,QAG/C/D,KAAK4E,cAAcpC,KACjBxC,KAAKqlC,kBAAkBkB,UAAUzhC,WAAU,SAACf,GAC1CU,EAAK0iC,eAAeH,OACpBviC,EAAK2iC,QAAS,EACT3iC,EAAKojC,aACRpjC,EAAKkjC,sBAEPljC,EAAK8iC,eAAe35B,KAAK,IAAIs0B,GAAan+B,SAKhDkjC,EAAA/mC,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,iBACtD7F,KAAKqlC,kBAAkB3B,gEA5EX/0B,EAAAA,kBACew0B,UACEqD,UACH14B,EAAAA,wBACb0U,EAAAA,gCACKwB,EAAAA,gBACS+gB,UACH+B,MAMEhmC,EAAA,CAA3B8gB,EAAAA,aAAaykB,uCAGdvlC,EAAA,CADCkN,EAAAA,MAAM,kDAMPlN,EAAA,CADCkN,EAAAA,MAAM,uCAmBiBlN,EAAA,CAAvBsN,EAAAA,OAAO,wDACetN,EAAA,CAAtBsN,EAAAA,OAAO,sDACctN,EAAA,CAArBsN,EAAAA,OAAO,oDAhDG64B,EAAYnmC,EAAA,CAXxBiC,EAAAA,UAAU,CACTC,SAAU,iBACVwO,UAAW,CACT2xB,GACAqD,GACAzB,GACA+B,GACAxF,IAEFv6B,KAAM,CAAE+gC,oBAAqB,OAAQC,wBAAyB,aAEnDd,oBCfX,SAAAe,EACUjvB,EACAqqB,EACA4B,EACA1gC,GAHAtE,KAAA+Y,GAAAA,EACA/Y,KAAAojC,SAAAA,EACApjC,KAAAglC,WAAAA,EACAhlC,KAAAsE,SAAAA,EAKVtE,KAAAioC,kBAA4B,EACpBjoC,KAAAkoC,kBAA4B,EAoB5BloC,KAAAmoC,eAA4C,CAAEz/B,IAAK,EAAGs5B,MAAO,EAAGD,OAAQ,EAAGv5B,KAAM,GA0BjExI,KAAAqnC,iBAAkD,IAAI56B,EAAAA,aACvDzM,KAAAsnC,gBAAiD,IAAI76B,EAAAA,aACtDzM,KAAAunC,eAAgD,IAAI96B,EAAAA,aAClDzM,KAAAooC,iBAAkD,IAAI37B,EAAAA,aACtDzM,KAAAqoC,iBAAkD,IAAI57B,EAAAA,aAC3DzM,KAAAsoC,YAA6C,IAAI77B,EAAAA,aAvDlEzM,KAAKuoC,YAAcvoC,KAAK+Y,GAAGnS,cA8L/B,OAxLEpH,OAAAgC,eAAIwmC,EAAA9nC,UAAA,kBAAe,KAAnB,SAAoBgC,GAGdA,EACFlC,KAAKsE,SAASmJ,SAASzN,KAAKuoC,YAAa,kBAEzCvoC,KAAKsE,SAASyZ,YAAY/d,KAAKuoC,YAAa,kBAE9CvoC,KAAKkoC,iBAAmBhmC,mCAM1B1C,OAAAgC,eAAIwmC,EAAA9nC,UAAA,QAAK,KAAT,SAAUgC,GACRlC,KAAKwoC,OAAStmC,mCAKR8lC,EAAA9nC,UAAAuoC,uBAAR,SAA+B//B,EAASs5B,EAAaD,EAAcv5B,GACjE,YAD6B,IAAAE,IAAAA,EAAA,QAAS,IAAAs5B,IAAAA,EAAAt5B,QAAa,IAAAq5B,IAAAA,EAAAr5B,QAAc,IAAAF,IAAAA,EAAAw5B,GAC1D,CAAEt5B,IAAGA,EAAEs5B,MAAKA,EAAED,OAAMA,EAAEv5B,KAAIA,IAInChJ,OAAAgC,eAAIwmC,EAAA9nC,UAAA,gBAAa,KAAjB,SAAkBgC,GAGhB,GAAqB,iBAAVA,EACTlC,KAAKmoC,eAAiBnoC,KAAKyoC,uBAAuBvmC,QAC7C,GAAqB,iBAAVA,EAAoB,CACpC,IAAMwmC,EAAkBxmC,EACrByb,OACAhN,MAAM,OACN4L,KAAI,SAAAosB,GAAa,OAAAlW,SAASkW,EAAW,OACxC3oC,KAAKmoC,eAAiBnoC,KAAKyoC,uBAAsB5nC,MAA3Bb,KAAI0C,EAA2BgmC,SAC5CxmC,IAITlC,KAAKmoC,eAAc/nC,EAAAA,EAAA,GAAQJ,KAAKyoC,uBAAuB,IAAOvmC,qCAW1D8lC,EAAA9nC,UAAA0oC,gBAAR,SAAwB9iB,GAClBA,GACFA,EAAajgB,eAITmiC,EAAA9nC,UAAA2oC,gBAAR,SAAwBC,GAKtB,SAAKA,GAAkB9oC,KAAKwoC,aAIvBxoC,KAAKwoC,QAAUM,MAKf9oC,KAAKwoC,SAAWM,IAQS,iBAAnBA,EACkB,iBAAhB9oC,KAAKwoC,OACPxoC,KAAKwoC,SAAWM,EAEhB9oC,KAAKwoC,OAAO53B,QAAQk4B,IAAmB,EAGrB,iBAAhB9oC,KAAKwoC,OACPM,EAAel4B,QAAQ5Q,KAAKwoC,SAAW,EAEtCxoC,KAAKwoC,OAAoBO,MAAK,SAAAC,GAAY,OAAAF,EAAel4B,QAAQo4B,IAAa,SAKpFhB,EAAA9nC,UAAA+oC,aAAR,SAAqBC,GACnB,QAAKA,IAIAlpC,KAAKwhC,aACRxhC,KAAKwhC,WAAaxhC,KAAKglC,WAAWxD,WAAWxhC,KAAKuoC,cAIlDW,EAAM/E,OAASnkC,KAAKwhC,WAAWh5B,KAAOxI,KAAKmoC,eAAe3/B,MAC1D0gC,EAAM/E,OAASnkC,KAAKwhC,WAAWQ,MAAQhiC,KAAKmoC,eAAenG,OAC3DkH,EAAM9E,OAASpkC,KAAKwhC,WAAW94B,IAAM1I,KAAKmoC,eAAez/B,KACzDwgC,EAAM9E,OAASpkC,KAAKwhC,WAAWO,OAAS/hC,KAAKmoC,eAAepG,SAQxDiG,EAAA9nC,UAAAipC,YAAR,SAAoBC,GAApB,IAAA3kC,EAAAzE,KAEEA,KAAKioC,iBAAmBjoC,KAAK6oC,gBAAgBO,EAAe/G,OAGxDriC,KAAKioC,mBACPjoC,KAAKqnC,iBAAiBz5B,KAAK,IAAIs0B,GAAakH,IAC5CppC,KAAKqpC,qBAAuBrpC,KAAKojC,SAASyC,UAAU/gC,WAAU,SAACwkC,GAC7D7kC,EAAK8kC,WAAWD,MAElBtpC,KAAKwpC,oBAAsBxpC,KAAKojC,SAASmD,UAAUzhC,WAAU,SAAC2kC,GAC5DhlC,EAAKilC,UAAUD,QAKbzB,EAAA9nC,UAAAqpC,WAAR,SAAmBD,GACjB,IAAML,EAAejpC,KAAKipC,aAAaK,EAAc/G,mBACrD,IAAKviC,KAAKkoC,kBAAoBe,EAAc,CAC1CjpC,KAAK2pC,iBAAkB,EACvB,IAAMC,EAAcxpC,EAAAA,EAAA,GAAQkpC,GAAa,CAAEjiC,KAAMq2B,GAAcmM,aAC/D7pC,KAAKojC,SAASN,UAAU8G,GACxB5pC,KAAKqoC,iBAAiBz6B,KAAK,IAAIs0B,GAAa0H,SACvC,GAAI5pC,KAAKkoC,mBAAqBe,EAAc,CACjDjpC,KAAK2pC,iBAAkB,EACvB,IAAMG,EAAc1pC,EAAAA,EAAA,GAAQkpC,GAAa,CAAEjiC,KAAMq2B,GAAcqM,aAC/D/pC,KAAKojC,SAASN,UAAUgH,GACxB9pC,KAAKooC,iBAAiBx6B,KAAK,IAAIs0B,GAAa4H,IAG9C9pC,KAAKsnC,gBAAgB15B,KAAK,IAAIs0B,GAAaoH,KAGrCtB,EAAA9nC,UAAAwpC,UAAR,SAAkBD,GAChB,GAAIzpC,KAAKkoC,iBAAkB,CACrBuB,EAAa9E,cAQf3kC,KAAKsE,SAASmJ,SAASg8B,EAAa9E,aAAc,WAGpD,IAAMqF,EAAS5pC,EAAAA,EAAA,GAAQqpC,GAAY,CAAEpiC,KAAMq2B,GAAcwF,OACzDljC,KAAKojC,SAASN,UAAUkH,GACxBhqC,KAAKsoC,YAAY16B,KAAK,IAAIs0B,GAAa8H,IACvChqC,KAAK2pC,iBAAkB,EAEzB3pC,KAAKunC,eAAe35B,KAAK,IAAIs0B,GAAauH,IAC1CzpC,KAAK4oC,gBAAgB5oC,KAAKqpC,sBAC1BrpC,KAAK4oC,gBAAgB5oC,KAAKwpC,qBAC1BxpC,KAAKioC,kBAAmB,SACjBjoC,KAAKwhC,YAGdwG,EAAA9nC,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAKiqC,sBAAwBjqC,KAAKojC,SAASkD,YAAYxhC,WAAU,SAACskC,GAChE3kC,EAAK0kC,YAAYC,OAIrBpB,EAAA9nC,UAAA8G,YAAA,WACEhH,KAAK4oC,gBAAgB5oC,KAAKiqC,uBAC1BjqC,KAAK4oC,gBAAgB5oC,KAAKqpC,sBAC1BrpC,KAAK4oC,gBAAgB5oC,KAAKwpC,+DAjMd76B,EAAAA,kBACM8zB,UACEnB,UACFn6B,EAAAA,aAsBpBrG,EAAA,CADCkN,EAAAA,MAAM,uCAYPlN,EAAA,CADCkN,EAAAA,MAAM,uDAoBiBlN,EAAA,CAAvBsN,EAAAA,OAAO,wDACetN,EAAA,CAAtBsN,EAAAA,OAAO,sDACctN,EAAA,CAArBsN,EAAAA,OAAO,oDACgBtN,EAAA,CAAvBsN,EAAAA,OAAO,wDACgBtN,EAAA,CAAvBsN,EAAAA,OAAO,wDACWtN,EAAA,CAAlBsN,EAAAA,OAAO,8CArEG45B,EAAYlnC,EAAA,CALxBiC,EAAAA,UAAU,CACTC,SAAU,iBACVwO,UAAW,CAAC8vB,IACZv6B,KAAM,CAAEmjC,oBAAqB,OAAQC,0BAA2B,uBAErDnC,oBCRX,SAAAoC,EAAoBrxB,EAAoCmuB,GACtD,GADkBlnC,KAAA+Y,GAAAA,EAAoC/Y,KAAAknC,oBAAAA,GACjDlnC,KAAKknC,oBAGR,MAAM,IAAI3nB,MAAM,oFAElBvf,KAAKknC,oBAAoBN,qBAAqB5mC,KAAK+Y,GAAGnS,eAM1D,OAHEwjC,EAAAlqC,UAAA8G,YAAA,WACEhH,KAAKknC,oBAAoBL,mEAVHl4B,EAAAA,kBAAqD63B,GAA0BzlC,WAAA,CAAA,CAAAsG,KAAlEqI,EAAAA,cAD1B06B,EAAatpC,EAAA,CADzBiC,EAAAA,UAAU,CAAEC,SAAU,kBAAmB+D,KAAM,CAAEsjC,sBAAuB,UAElC5oC,EAAA,EAAAiO,EAAAA,aAD1B06B,MCIAE,GAA4C,CACvDrD,GACAe,GACA3B,GACA+D,GACAhF,IASFmF,GAAA,WAAA,SAAAA,KAAmC,OAAtBA,EAAoBzpC,EAAA,CANhCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACgnC,IACf7vB,gBAAiB,CAAC2qB,IAClB7hC,QAAS,CAAC+mC,OAECC,GAAb,iBCUE,SAAAC,EAAoBz7B,EAA6Bi2B,GAA7BhlC,KAAA+O,QAAAA,EAA6B/O,KAAAglC,WAAAA,EAFjDhlC,KAAAyqC,YAAsB,EAoBxB,OAfEjrC,OAAAgC,eAAIgpC,EAAAtqC,UAAA,kBAAe,KAAnB,WACE,MAAO,CAAEgC,MAAOlC,KAAK0qC,iBAAkBlF,OAAQ,CAAEiF,YAAazqC,KAAKyqC,+CAIrED,EAAAtqC,UAAAyqC,cAAA,WAIE3qC,KAAK4qC,qBAGPJ,EAAAtqC,UAAA0qC,kBAAA,WACE5qC,KAAKyqC,YAAczqC,KAAKglC,WAAWrD,eAAe3hC,KAAK+O,QAAQnI,gBAAkB,4CAhBtD+H,EAAAA,kBAAgC2yB,MAJpDxgC,EAAA,CAARkN,EAAAA,gDAODlN,EAAA,CADCmf,EAAAA,YAAY,yDAMbnf,EAAA,CADCuN,EAAAA,aAAa,4DAZHm8B,EAAsB1pC,EAAA,CAtBlCyQ,EAAAA,UAAU,CACTvO,SAAU,2BACVqJ,SAAU,sCAUVsN,WAAY,CACVC,EAAAA,QAAQ,kBAAmB,CACzBC,EAAAA,WAAW,iBAAkB,CAC3BC,EAAAA,MAAM,CAAEjR,OAAQ,oBAAqBgiC,SAAU,WAC/C7wB,EAAAA,QAAQ,mBAAoBF,EAAAA,MAAM,CAAEjR,OAAQ,YAIlD2I,UAAW,CAAC8vB,YAdV,sDAgBSkJ,MCtBAM,GAA+C,CAACN,kBCI7D,SAAAO,KAA2C,OAA9BA,EAA4BjqC,EAAA,CALxCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACwnC,IACfvnC,QAAS,CAACunC,OAECC,oBCKX,SAAAC,EAAoBjyB,EAAwBoF,GAAxBne,KAAA+Y,GAAAA,EAAwB/Y,KAAAme,gBAAAA,EA8G9C,OA5GE6sB,EAAA9qC,UAAAyM,gBAAA,WACE3M,KAAKme,gBAAgBjD,SAASlb,KAAK+Y,GAAGnS,cAAe5G,KAAKirC,WAO5DzrC,OAAAgC,eAAIwpC,EAAA9qC,UAAA,eAAY,KAAhB,WACE,OAAO,mCAMTV,OAAAgC,eAAIwpC,EAAA9qC,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKkrC,yCAId1rC,OAAAgC,eAAIwpC,EAAA9qC,UAAA,YAAS,KAAb,SAAcgC,GACZlC,KAAKkrC,QAAUpU,GAAsB50B,oCAKvC1C,OAAAgC,eAAIwpC,EAAA9qC,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKmrC,0CAId3rC,OAAAgC,eAAIwpC,EAAA9qC,UAAA,aAAU,KAAd,SAAegC,GACblC,KAAKmrC,SAAWrU,GAAsB50B,oCAcxC1C,OAAAgC,eAAIwpC,EAAA9qC,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKorC,wCAId5rC,OAAAgC,eAAIwpC,EAAA9qC,UAAA,WAAQ,KAAZ,SAAagC,GACXlC,KAAKorC,OAAStU,GAAsB50B,oCAgBtC1C,OAAAgC,eAAIwpC,EAAA9qC,UAAA,cAAW,KAAf,WACE,OAAIF,KAAKorC,QAGFprC,KAAKqrC,yCAId7rC,OAAAgC,eAAIwpC,EAAA9qC,UAAA,YAAS,KAAb,SAAcgC,GACZlC,KAAKqrC,QAAUvU,GAAsB50B,oCAsBvC1C,OAAAgC,eAAIwpC,EAAA9qC,UAAA,WAAQ,KAAZ,WACE,OAAI42B,GAAsB92B,KAAKsrC,WACtBv0B,EAAAA,sBAAsBu0B,UAE3BxU,GAAsB92B,KAAKsb,KACtBvE,EAAAA,sBAAsBuE,IAExBvE,EAAAA,sBAAsBsE,iFA5GP1M,EAAAA,kBAAqCoM,MAU7Dja,EAAA,CADCmf,EAAAA,YAAY,mDAQbnf,EAAA,CADCmf,EAAAA,YAAY,yDAMbnf,EAAA,CADCkN,EAAAA,MAAM,4CAOPlN,EAAA,CADCmf,EAAAA,YAAY,2DAMbnf,EAAA,CADCkN,EAAAA,MAAM,8CAgBPlN,EAAA,CADCmf,EAAAA,YAAY,oDAMbnf,EAAA,CADCkN,EAAAA,MAAM,0CAkBPlN,EAAA,CADCmf,EAAAA,YAAY,qDASbnf,EAAA,CADCkN,EAAAA,MAAM,4CAqBgBlN,EAAA,CAAtBkN,EAAAA,MAAM,iDAEUlN,EAAA,CAAhBkN,EAAAA,MAAM,qCArGIg9B,EAAUlqC,EAAA,CAVtByQ,EAAAA,UAAU,CACTvO,SAAU,cACVwO,UAAW,CAACuJ,IACZ1O,SAAU,sCAGVtF,KAAM,CACJwkC,mBAAoB,WAGXP,MCVAQ,GAAsC,CAACR,IAOpDS,GAAA,WAAA,SAAAA,KAA+B,OAAlBA,EAAgB3qC,EAAA,CAL5BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACkoC,IACfjoC,QAAS,CAACioC,OAECC,GAAb,GCRaC,GAAqB,IAAIh1B,EAAAA,eAAwB,sBAIjDi1B,GAA8B,CACzCl6B,QAASi6B,GACTE,UAAU,GCUZC,GAAA,WACE,SAAAA,EACU9yB,EACqBrP,EACOoiC,EAClBtnC,EACVF,GAJAtE,KAAA+Y,GAAAA,EACqB/Y,KAAA0J,WAAAA,EACO1J,KAAA8rC,gBAAAA,EAE5B9rC,KAAAsE,SAAAA,EAYFtE,KAAA+rC,aAAc,EAVpB/rC,KAAKgsC,WAAahsC,KAAK8rC,gBAMvB9rC,KAAKwE,SAAWA,EA8CpB,OAvCEqnC,EAAA3rC,UAAA+rC,WAAA,WACOjsC,KAAK+rC,cAER/rC,KAAKsE,SAAS8U,gBAAgBpZ,KAAK+Y,GAAGnS,cAAe,YACrD5G,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,UAAW,QAM7DpH,OAAAgC,eAAIqqC,EAAA3rC,UAAA,YAAS,KAAb,SAAcgC,GACRlC,KAAK8rC,iBAAoC,kBAAV5pC,IACjClC,KAAKgsC,WAAa9pC,oCAItB2pC,EAAA3rC,UAAAyM,gBAAA,WACE3M,KAAKoG,SAGCylC,EAAA3rC,UAAAkG,MAAR,WACO4D,EAAAA,kBAAkBhK,KAAK0J,aAGvB1J,KAAKgsC,YAGNhsC,KAAKwE,UAAYxE,KAAKwE,SAASikB,gBAAkBzoB,KAAK+Y,GAAGnS,gBAC3D5G,KAAK+Y,GAAGnS,cAAcR,QAClBpG,KAAKwE,SAASikB,gBAAkBzoB,KAAK+Y,GAAGnS,gBAG1C5G,KAAK+rC,aAAc,EACnB/rC,KAAKsE,SAASgV,aAAatZ,KAAK+Y,GAAGnS,cAAe,WAAY,MAC9D5G,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,UAAW,QACzD5G,KAAK+Y,GAAGnS,cAAcR,oDAtDduI,EAAAA,kBAC6BnP,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,gDACP5E,EAAAA,OAAMC,KAAA,CAACmkC,sCACPpkC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBACUL,EAAAA,aAepBrG,EAAA,CADCuN,EAAAA,aAAa,4CAWdvN,EAAA,CADCkN,EAAAA,MAAM,qDA9BI69B,EAAkB/qC,EAAA,CAH9BiC,EAAAA,UAAU,CACTC,SAAU,yBAKPvB,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,cACPzK,EAAA,EAAA6F,EAAAA,OAAOokC,KACPjqC,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,YALCqkC,GAAb,GCdaK,GAA6C,CAACL,IAQ3DM,GAAA,WAAA,SAAAA,KAAuC,OAA1BA,EAAwBrrC,EAAA,CANpCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC4oC,IACf16B,UAAW,CAACm6B,IACZpoC,QAAS,CAAC2oC,OAECC,GAAb,GCbAC,GAAA,aCUAC,GAAA,WAAA,SAAAA,IAIUrsC,KAAAssC,QAAU,IAAI3oC,EAAAA,QASd3D,KAAAusC,UAAY,EAWtB,OAlBE/sC,OAAAgC,eAAW6qC,EAAAnsC,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKssC,QAAQzoC,gDAQfwoC,EAAAnsC,UAAAssC,YAAP,WACExsC,KAAKusC,aAGAF,EAAAnsC,UAAAusC,WAAP,WAC2B,KAAnBzsC,KAAKusC,WACTvsC,KAAKssC,QAAQrqC,QArBNoqC,EAAcvrC,EAAA,CAD1BsD,EAAAA,cACYioC,GAAb,iBCHE,SAAAK,EAAoBC,GAAA3sC,KAAA2sC,eAAAA,EAEZ3sC,KAAA4sC,aAAc,EACf5sC,KAAA6sC,WAAY,EAKX7sC,KAAA8sC,MAAQ,EAiER9sC,KAAAssC,QAAU,IAAI3oC,EAAAA,QAMd3D,KAAA+sC,YAAc,IAAIppC,EAAAA,QASlB3D,KAAAwlB,SAAW,EAsErB,OArJEhmB,OAAAgC,eAAWkrC,EAAAxsC,UAAA,OAAI,KAAf,WACE,OAAOF,KAAK8sC,WAEd,SAAgBrwB,GACd,IAAMuwB,EAAUhtC,KAAK8sC,MACjBrwB,IAASuwB,IACNhtC,KAAK4sC,aACR5sC,KAAK2sC,eAAeH,cAEtBxsC,KAAK8sC,MAAQrwB,EAEXzc,KAAKwlB,SADM,IAAT/I,EACc,EAIAmX,KAAKC,MAAMmZ,EAAUvwB,GAAQzc,KAAKwlB,SAAW,IAAM,EAIhExlB,KAAK4sC,cACR5sC,KAAKssC,QAAQrqC,KAAKjC,KAAKwlB,UACvBxlB,KAAK+sC,YAAY9qC,KAAKjC,KAAK8sC,OAC3B9sC,KAAK2sC,eAAeF,eAGxBzsC,KAAK4sC,aAAc,mCAOrBptC,OAAAgC,eAAWkrC,EAAAxsC,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKitC,aAAe,OAE7B,SAAsBC,GACpBltC,KAAKitC,YAAcC,EAEfltC,KAAKuL,QAAUvL,KAAKmtC,OACtBntC,KAAKuL,QAAUvL,KAAKmtC,uCAQxB3tC,OAAAgC,eAAWkrC,EAAAxsC,UAAA,OAAI,KAAf,WACE,OAAIF,KAAKotC,MACAptC,KAAKotC,MAGVptC,KAAKyc,KAAO,GAAKzc,KAAKqtC,WACjBzZ,KAAKoI,KAAKh8B,KAAKqtC,WAAartC,KAAKyc,MAEnC,OAET,SAAgB6wB,GACdttC,KAAKotC,MAAQE,mCAQf9tC,OAAAgC,eAAWkrC,EAAAxsC,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKssC,QAAQzoC,gDAKtBrE,OAAAgC,eAAWkrC,EAAAxsC,UAAA,aAAU,KAArB,WACE,OAAOF,KAAK+sC,YAAYlpC,gDAO1BrE,OAAAgC,eAAWkrC,EAAAxsC,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKwlB,cAEd,SAAmB8nB,GACbA,IAASttC,KAAKwlB,WAChBxlB,KAAK2sC,eAAeH,cACpBxsC,KAAKwlB,SAAW8nB,EAChBttC,KAAKssC,QAAQrqC,KAAKqrC,GAClBttC,KAAK2sC,eAAeF,+CAOjBC,EAAAxsC,UAAAkS,SAAP,WACMpS,KAAKuL,QAAU,GACjBvL,KAAKuL,WAOFmhC,EAAAxsC,UAAA+B,KAAP,WACMjC,KAAKuL,QAAUvL,KAAKmtC,MACtBntC,KAAKuL,WAOT/L,OAAAgC,eAAWkrC,EAAAxsC,UAAA,YAAS,KAApB,WACE,OAAyB,IAArBF,KAAKitC,aACC,EAGQ,IAAdjtC,KAAKyc,KACA,GAEDzc,KAAKuL,QAAU,GAAKvL,KAAKyc,sCAMnCjd,OAAAgC,eAAWkrC,EAAAxsC,UAAA,WAAQ,KAAnB,WACE,GAAyB,IAArBF,KAAKitC,YACP,OAAQ,EAGV,GAAkB,IAAdjtC,KAAKyc,KACP,OAAOzc,KAAKqtC,WAAa,EAE3B,IAAIE,EAAavtC,KAAKuL,QAAUvL,KAAKyc,KAAO,EAI5C,OAHIzc,KAAKqtC,aACPE,EAAa3Z,KAAKiM,IAAI0N,EAAYvtC,KAAKqtC,WAAa,IAE/CE,mCAMFb,EAAAxsC,UAAAstC,cAAP,SAAqBZ,QAAA,IAAAA,IAAAA,GAAA,GACnB5sC,KAAK4sC,YAAcA,EACnB5sC,KAAKyc,KAAO,4CA5JsB4vB,MADzBK,EAAI5rC,EAAA,CADhBsD,EAAAA,cACYsoC,oBCIX,SAAAe,EAAoBC,EAAqBf,GAArB3sC,KAAA0tC,MAAAA,EAAqB1tC,KAAA2sC,eAAAA,EAKjC3sC,KAAAssC,QAAU,IAAI3oC,EAAAA,QASd3D,KAAA2tC,KAA6D,GA4EvE,OAnFEnuC,OAAAgC,eAAWisC,EAAAvtC,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKssC,QAAQzoC,gDAWf4pC,EAAAvtC,UAAA0tC,iBAAP,uBAGE,IAAyB,IAAAC,EAAAjsC,EAAA5B,KAAK2tC,MAAIG,EAAAD,EAAA5rC,QAAA6rC,EAAA3rC,KAAA2rC,EAAAD,EAAA5rC,OAAE,CAAvB,IAAAwD,EAAAqoC,EAAA5rC,MAAAuD,OACX,GAAIA,GAAUA,EAAOsoC,WACnB,OAAO,oGAGX,OAAO,GAMFN,EAAAvtC,UAAA8tC,iBAAP,mBACQC,EAAuC,OAC7C,IAAyB,IAAAJ,EAAAjsC,EAAA5B,KAAK2tC,MAAIG,EAAAD,EAAA5rC,QAAA6rC,EAAA3rC,KAAA2rC,EAAAD,EAAA5rC,OAAE,CAAvB,IAAAwD,EAAAqoC,EAAA5rC,MAAAuD,OACPA,GAAUA,EAAOsoC,YACnBE,EAAIzrC,KAAKiD,qGAGb,OAAOwoC,GAMFR,EAAAvtC,UAAA8b,IAAP,SAAoDvW,GAApD,IAAAhB,EAAAzE,KACQ8lB,EAAergB,EAAOmS,QAAQ9S,WAAU,WAAM,OAAAL,EAAKypC,6BAA6B,CAACzoC,OACnF0oC,GAAkB,EAChBC,EAAa,IAAIC,GAAiB5oC,GAAQ,WAC9C,IAAI0oC,EAAJ,CAGAroB,EAAajgB,cACb,IAAMyoC,EAAa7pC,EAAKkpC,KAAKY,WAAU,SAAAC,GAAQ,OAAAA,EAAK/oC,SAAWA,KAC3D6oC,GAAc,GAChB7pC,EAAKkpC,KAAKz1B,OAAOo2B,EAAY,GAE3B7oC,EAAOsoC,YACTtpC,EAAKypC,6BAA6B,IAEpCC,GAAkB,MAMpB,OAJAnuC,KAAK2tC,KAAKnrC,KAAK4rC,GACX3oC,EAAOsoC,YACT/tC,KAAKkuC,6BAA6B,CAACzoC,IAE9B2oC,GAMFX,EAAAvtC,UAAAuuC,QAAP,SAAeD,eACb,IAAyB,IAAAX,EAAAjsC,EAAA5B,KAAK2tC,MAAIG,EAAAD,EAAA5rC,QAAA6rC,EAAA3rC,KAAA2rC,EAAAD,EAAA5rC,OAAE,CAAvB,IAAAwD,EAAAqoC,EAAA5rC,MAAAuD,OACX,GAAIA,GAAUA,EAAOsoC,aAAetoC,EAAOgpC,QAAQD,GACjD,OAAO,oGAGX,OAAO,GAGDf,EAAAvtC,UAAAguC,6BAAR,SAAqCQ,GACnC1uC,KAAK2sC,eAAeH,cAGpBxsC,KAAK0tC,MAAMniC,QAAU,EACrBvL,KAAKssC,QAAQrqC,KAAKysC,GAClB1uC,KAAK2sC,eAAeF,uDAxFKC,UAA8BL,MAD9CoB,EAAe3sC,EAAA,CAD3BsD,EAAAA,cACYqpC,MA6FbY,GACE,SAAmB5oC,EAAkBkpC,GAAlB3uC,KAAAyF,OAAAA,EAAkBzF,KAAA2uC,WAAAA,iBClGrC,SAAAC,EAAoBF,GAAA1uC,KAAA0uC,QAAAA,EA4BtB,OAxBElvC,OAAAgC,eAAWotC,EAAA1uC,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKouC,YAAcpuC,KAAKouC,WAAW3oC,wCAGrCmpC,EAAA1uC,UAAA2uC,UAAP,SAAiBppC,GAEfzF,KAAK8uC,eACDrpC,aAAkB4oC,GACpBruC,KAAKouC,WAAa3oC,EACTA,IACTzF,KAAKouC,WAAapuC,KAAK0uC,QAAQ1yB,IAAIvW,KAIhCmpC,EAAA1uC,UAAA4uC,aAAP,WACM9uC,KAAKouC,aACPpuC,KAAKouC,WAAWO,oBACT3uC,KAAKouC,aAITQ,EAAA1uC,UAAA8G,YAAP,WACEhH,KAAK8uC,gBAETF,KC8BAG,GAAA,SAAAjtB,GAKE,SAAAitB,EACEC,EACO13B,EACC23B,EACqBvlC,EACH2N,GAL5B,IAAA5S,EAOEqd,EAAAlhB,KAAAZ,KAAMgvC,IAAShvC,YALRyE,EAAA6S,cAAAA,EACC7S,EAAAwqC,mBAAAA,EACqBxqC,EAAAiF,WAAAA,EACHjF,EAAA4S,UAAAA,EARpB5S,EAAAyqC,KAAuB,GACxBzqC,EAAA0qC,cAAwB,EAsBxB1qC,EAAA2qC,cAAoC,CACzCzmC,KAAMlB,EAAAA,QAAQ+D,SACd5D,KAAMgP,EAAAA,QAAQM,MACd5O,OAAQzF,EAAAA,aAAawG,IACrBrB,QAASnF,EAAAA,aAAawG,KAGhB5E,EAAAhB,OAAiB,EAmBegB,EAAAI,WAAa,IAAI4H,EAAAA,cAAsB,GAtC7EhI,EAAKyqC,KAAK1sC,KACRysC,EAAmBpqC,WAAWC,WAAU,SAAA8H,GACtCnI,EAAKN,KAAOyI,EACZnI,EAAK0qC,aAAeviC,cAqD5B,OArEgD9M,EAAAivC,EAAAjtB,KAAnCitB,EAiCXvvC,OAAAgC,eAAWutC,EAAA7uC,UAAA,OAAI,KAAf,WACE,OAAOF,KAAKyD,WAId,SAAgBU,GACdA,IAASA,EACLnE,KAAKmE,OAASA,IAChBnE,KAAKivC,mBAAmB9qC,KAAOA,EAC/BnE,KAAK6E,WAAW+I,KAAKzJ,IAChBA,GAAQ6F,EAAAA,kBAAkBhK,KAAK0J,aAClC1J,KAAKsI,OAAO1B,cAAcR,QAG5BpG,KAAKyD,MAAQU,oCAOjB3E,OAAAgC,eAAWutC,EAAA7uC,UAAA,eAAY,KAAvB,SAAwBuF,GACtBzF,KAAK6uC,UAAUppC,oCAMjBjG,OAAAgC,eAAWutC,EAAA7uC,UAAA,SAAM,KAAjB,WACE,QAASF,KAAKyF,QAAUzF,KAAKyF,OAAOsoC,4CAGtCgB,EAAA7uC,UAAA8G,YAAA,WACE8a,EAAA5hB,UAAM8G,YAAWpG,KAAAZ,MACjBA,KAAKkvC,KAAKjoC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DA7DnB4nC,UACY93B,SACMnS,SACahE,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,+CACP5E,EAAAA,OAAMC,KAAA,CAACkP,QAYV3V,EAAA,CADCsQ,EAAAA,UAAU,SAAU,CAAEi+B,KAAM1gC,EAAAA,2CAiB7B7N,EAAA,CADCkN,EAAAA,MAAM,6CAc0BlN,EAAA,CAAhCsN,EAAAA,OAAO,2DAGRtN,EAAA,CADCkN,EAAAA,MAAM,iDArDI+gC,EAAiBO,EAAAxuC,EAAA,CAhC7ByQ,EAAAA,UAAU,CACTvO,SAAU,gBAEVwO,UAAW,CAAC,CAAEC,QAAS26B,GAAc16B,YAAa49B,GAAqBz4B,GACvExK,SAAU,klCAqCP5K,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,cACPzK,EAAA,EAAA6F,EAAAA,OAAOmP,KAVCs4B,GAAb,CAAgDH,IC3DhDW,GAAA,WAGE,SAAAA,EAAoBC,GAAAxvC,KAAAwvC,KAAAA,EACdA,EAAK5+B,QAAQ,MAAQ,IACvB5Q,KAAKyvC,UAAYD,EAAK7+B,MAAM,MAoBlC,OAdS4+B,EAAArvC,UAAAwvC,aAAP,SAAoBlB,WAClB,GAAIxuC,KAAKyvC,UAAW,CAClB,IAAIvtC,EAAQssC,MACZ,IAAyB,IAAAX,EAAAjsC,EAAA5B,KAAKyvC,WAAS3B,EAAAD,EAAA5rC,QAAA6rC,EAAA3rC,KAAA2rC,EAAAD,EAAA5rC,OAAE,CAApC,IAAM0tC,EAAU7B,EAAA5rC,MACnB,GAAa,MAATA,QAAkC,IAAVA,QAAsD,IAAtBA,EAAMytC,GAChE,OAEFztC,EAAQA,EAAMytC,qGAEhB,OAAOztC,EAEP,OAAOssC,EAAKxuC,KAAKwvC,OAGvBD,EAzBA,iBCEE,SAAAK,EAAmBJ,EAAqBK,QAAA,IAAAA,IAAAA,GAAA,GAArB7vC,KAAAwvC,KAAAA,EAAqBxvC,KAAA6vC,MAAAA,EACtC7vC,KAAK2vC,WAAa,IAAIJ,GAAeC,GAazC,OAVEI,EAAA1vC,UAAAuuC,QAAA,SAAQD,EAASsB,GACf,IAAMC,EAAY/vC,KAAK2vC,WAAWD,aAAalB,GAC/C,YAAyB,IAAduB,IAEA/vC,KAAK6vC,OACN,GAAKE,GAAWC,gBAAkBF,GAElC,GAAKC,GAAWC,cAAcp/B,QAAQk/B,IAAW,IAG/DF,KCpBAK,GAAA,WAME,SAAAA,EAAmBC,GAAAlwC,KAAAkwC,SAAAA,EAKXlwC,KAAA4P,SAAW,IAAIjM,EAAAA,QASf3D,KAAAmwC,UAAoB,GAOpBnwC,KAAAowC,gBAA0B,GAwDpC,OAtEE5wC,OAAAgC,eAAWyuC,EAAA/vC,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAK4P,SAAS/L,gDAOvBrE,OAAAgC,eAAWyuC,EAAA/vC,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAKmwC,eAYd,SAAiBjuC,GACVA,IACHA,EAAQ,IAENA,IAAUlC,KAAKmwC,YACjBnwC,KAAKmwC,UAAYjuC,EACjBlC,KAAKowC,gBAAkBluC,EAAM8tC,cAAcryB,OAC3C3d,KAAK4P,SAAS3N,KAAKC,qCAbvB1C,OAAAgC,eAAWyuC,EAAA/vC,UAAA,iBAAc,KAAzB,WACE,OAAOF,KAAKowC,iDAmBPH,EAAA/vC,UAAA6tC,SAAP,WACE,QAAS/tC,KAAKkC,OAMT+tC,EAAA/vC,UAAAuuC,QAAP,SAAeD,GAEb,OAAOxuC,KAAKkwC,SAASzB,QAAQD,EAAMxuC,KAAKqwC,iBAG1C7wC,OAAAgC,eAAWyuC,EAAA/vC,UAAA,QAAK,KAAhB,WACE,OAAIF,KAAKkwC,oBAAoBN,GACpB,CACLU,SAAUtwC,KAAKkwC,SAASV,KACxBttC,MAAOlC,KAAKkC,OAGTlC,sCAGFiwC,EAAA/vC,UAAAqwC,OAAP,SAAcC,GACZ,OAAIA,aAAiBP,IACfO,EAAMN,oBAAoBN,GAE1B5vC,KAAKkwC,oBAAoBN,IACzBY,EAAMN,SAASV,OAASxvC,KAAKkwC,SAASV,MACtCgB,EAAMtuC,QAAUlC,KAAKkC,MAGlBsuC,IAAUxwC,OAIvBiwC,EAnFA,kBCwBE,SAAAQ,EACE/B,EACQ1J,EACAiK,GAHV,IAAAxqC,EAKEqd,EAAAlhB,KAAAZ,KAAM0uC,IAAQ1uC,YAHNyE,EAAAugC,WAAAA,EACAvgC,EAAAwqC,mBAAAA,EAJFxqC,EAAAyqC,KAAuB,GAiCxBzqC,EAAAN,MAAgB,EAmDSM,EAAAisC,kBAAoB,IAAIjkC,EAAAA,qBAC1D,OAvFmD3M,EAAA2wC,EAAA3uB,KAAtC2uB,EAeXjxC,OAAAgC,eAAIivC,EAAAvwC,UAAA,qBAAkB,KAAtB,SACEgC,GAEIA,aAAiBmsC,GACnBruC,KAAK6uC,UAAU3sC,GAEflC,KAAK6uC,UAAU,IAAIoB,GAAyB/tC,IAE1ClC,KAAK2wC,kBACP3wC,KAAKkC,MAAQlC,KAAK2wC,uBAIX3wC,KAAK2wC,kDAkBhBF,EAAAvwC,UAAAyM,gBAAA,WAAA,IAAAlI,EAAAzE,KACEA,KAAKkvC,KAAK1sC,KACRxC,KAAKivC,mBAAmBpqC,WAAWC,WAAU,SAAAD,GAC3CJ,EAAKN,KAAOU,EAEZgX,YAAW,WACTpX,EAAKugC,WAAW5+B,MAAM3B,EAAK+6B,MAAM54B,uBAMzC6pC,EAAAvwC,UAAA8G,YAAA,WACE8a,EAAA5hB,UAAM8G,YAAWpG,KAAAZ,MACjBA,KAAKkvC,KAAKjoC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAQ/BrG,OAAAgC,eAAWivC,EAAAvwC,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAKyF,OAAOvD,WAGrB,SAAiBA,GACXlC,KAAKyF,QACFvD,IACHA,EAAQ,IAENA,IAAUlC,KAAKyF,OAAOvD,QACxBlC,KAAKyF,OAAOvD,MAAQA,EACpBlC,KAAK0wC,kBAAkB9iC,KAAK1L,KAG9BlC,KAAK2wC,gBAAkBzuC,4EA9EhBurC,UACWnM,UACQ99B,KAS9B1C,EAAA,CADCkN,EAAAA,MAAM,6DA0BalN,EAAA,CAAnBsQ,EAAAA,UAAU,sCAKmBtQ,EAAA,CAA7BsQ,EAAAA,UAAU29B,2CA2BXjuC,EAAA,CADCkN,EAAAA,MAAM,6CAeyBlN,EAAA,CAA/BsN,EAAAA,OAAO,iEAtFGqiC,EAAoBG,EAAA9vC,EAAA,CAThCyQ,EAAAA,UAAU,CACTvO,SAAU,uBACVwO,UAAW,CAAC,CAAEC,QAAS26B,GAAc16B,YAAak/B,IAClDvkC,SAAU,mNAMCokC,IAAsC7B,kBCfjD,SAAAiC,EAAmBrB,EAAqBK,QAAA,IAAAA,IAAAA,GAAA,GAArB7vC,KAAAwvC,KAAAA,EAAqBxvC,KAAA6vC,MAAAA,EACtC7vC,KAAK2vC,WAAa,IAAIJ,GAAeC,GAazC,OAVEqB,EAAA3wC,UAAAuuC,QAAA,SAAQD,EAASsC,EAAaC,GAC5B,IAAMhB,EAAY/vC,KAAK2vC,WAAWD,aAAalB,GAC/C,QAAY,OAARsC,GAAgBf,EAAYe,MAGnB,OAATC,GAAiBhB,EAAYgB,IAKrCF,KCpBAG,GAAA,WAME,SAAAA,EAAmBd,GAAAlwC,KAAAkwC,SAAAA,EAKXlwC,KAAA4P,SAAW,IAAIjM,EAAAA,QASf3D,KAAAixC,KAAe,KACfjxC,KAAAkxC,MAAgB,KAqF1B,OA7FE1xC,OAAAgC,eAAWwvC,EAAA9wC,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAK4P,SAAS/L,gDAevBrE,OAAAgC,eAAWwvC,EAAA9wC,UAAA,QAAK,KAAhB,WACE,MAAO,CAACF,KAAKixC,KAAMjxC,KAAKkxC,YAG1B,SAAiBC,GACf,IAAML,EAAMK,EAAK,GACXJ,EAAOI,EAAK,GACdL,IAAQ9wC,KAAKixC,MAAQF,IAAS/wC,KAAKkxC,QACrClxC,KAAKixC,KAAOH,EACZ9wC,KAAKkxC,MAAQH,EACb/wC,KAAK4P,SAAS3N,KAAK,CAACjC,KAAKixC,KAAMjxC,KAAKkxC,0CAIxC1xC,OAAAgC,eAAWwvC,EAAA9wC,UAAA,MAAG,KAcd,WACE,OAAOF,KAAKixC,UAfd,SAAeH,GACTA,IAAQ9wC,KAAKixC,OACfjxC,KAAKixC,KAAOH,EACZ9wC,KAAK4P,SAAS3N,KAAK,CAACjC,KAAKixC,KAAMjxC,KAAKkxC,0CAIxC1xC,OAAAgC,eAAWwvC,EAAA9wC,UAAA,OAAI,KAWf,WACE,OAAOF,KAAKkxC,WAZd,SAAgBH,GACVA,IAAS/wC,KAAKkxC,QAChBlxC,KAAKkxC,MAAQH,EACb/wC,KAAK4P,SAAS3N,KAAK,CAACjC,KAAKixC,KAAMjxC,KAAKkxC,0CAejCF,EAAA9wC,UAAA6tC,SAAP,WACE,OAAqB,OAAd/tC,KAAKixC,MAA+B,OAAdjxC,KAAK+wC,MAM7BC,EAAA9wC,UAAAuuC,QAAP,SAAeD,GAGb,OAAOxuC,KAAKkwC,SAASzB,QAAQD,EAAMxuC,KAAKixC,KAAMjxC,KAAKkxC,QAGrD1xC,OAAAgC,eAAWwvC,EAAA9wC,UAAA,QAAK,KAAhB,WACE,OAAIF,KAAKkwC,oBAAoBW,GACpB,CACLP,SAAUtwC,KAAKkwC,SAASV,KACxBsB,IAAK9wC,KAAKixC,KACVF,KAAM/wC,KAAKkxC,OAGRlxC,sCAGFgxC,EAAA9wC,UAAAqwC,OAAP,SAAcC,GACZ,OAAIA,aAAiBQ,IACfR,EAAMN,oBAAoBW,GAE1B7wC,KAAKkwC,oBAAoBW,IACzBL,EAAMN,SAASV,OAASxvC,KAAKkwC,SAASV,MACtCgB,EAAMM,MAAQ9wC,KAAKixC,MACnBT,EAAMO,OAAS/wC,KAAKkxC,MAGjBV,IAAUxwC,OAIvBgxC,EA1GA,kBC4BE,SAAAI,EACE1C,EACQ1J,EACD1tB,EACC+5B,GAJV,IAAA5sC,EAMEqd,EAAAlhB,KAAAZ,KAAM0uC,IAAQ1uC,YAJNyE,EAAAugC,WAAAA,EACDvgC,EAAA6S,cAAAA,EACC7S,EAAA4sC,qBAAAA,EAKF5sC,EAAAG,cAAgC,GAgCjCH,EAAAN,MAAgB,EA0FSM,EAAAisC,kBAAoB,IAAIjkC,EAAAA,qBAC1D,OAtIoD3M,EAAAsxC,EAAAtvB,KAAvCsvB,EAaXA,EAAAlxC,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GACzBA,EAAIrB,kBAQRrG,OAAAgC,eAAI4vC,EAAAlxC,UAAA,sBAAmB,KAAvB,SACEgC,GAEIA,aAAiBmsC,GACnBruC,KAAK6uC,UAAU3sC,GAEflC,KAAK6uC,UAAU,IAAImC,GAA0B9uC,IAE3ClC,KAAKsxC,mBACPtxC,KAAKkC,MAAQlC,KAAKsxC,wBAIXtxC,KAAKsxC,mDAkBhBF,EAAAlxC,UAAAyM,gBAAA,WAAA,IAAAlI,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAKqxC,qBAAqBxsC,WAAWC,WAAU,SAAAD,GAC7CJ,EAAKN,KAAOU,EAEZgX,YAAW,WACTpX,EAAKugC,WAAW5+B,MAAM3B,EAAK+6B,MAAM54B,uBAUzCpH,OAAAgC,eAAW4vC,EAAAlxC,UAAA,QAAK,KAAhB,WACE,MAAO,CAACF,KAAKyF,OAAOqrC,IAAK9wC,KAAKyF,OAAOsrC,WAIvC,SAAiBQ,GACXvxC,KAAKyF,QACH8rC,GAAWA,EAAO,KAAOvxC,KAAKyF,OAAOqrC,KAAOS,EAAO,KAAOvxC,KAAKyF,OAAOsrC,OAC/C,iBAAdQ,EAAO,GAChBvxC,KAAKyF,OAAOqrC,IAAMS,EAAO,GAEzBvxC,KAAKyF,OAAOqrC,IAAM,KAEK,iBAAdS,EAAO,GAChBvxC,KAAKyF,OAAOsrC,KAAOQ,EAAO,GAE1BvxC,KAAKyF,OAAOsrC,KAAO,KAErB/wC,KAAK0wC,kBAAkB9iC,KAAK2jC,IAG9BvxC,KAAKsxC,iBAAmBC,mCAI5B/xC,OAAAgC,eAAW4vC,EAAAlxC,UAAA,MAAG,KAAd,WACE,MAA+B,iBAApBF,KAAKyF,OAAOqrC,KAAoBU,SAASxxC,KAAKyF,OAAOqrC,KACvD9wC,KAAKyF,OAAOqrC,IAGZ,UAaX,SAAeA,GACM,iBAARA,GAAoBA,IAAQ9wC,KAAKyF,OAAOqrC,KACjD9wC,KAAKyF,OAAOqrC,IAAMA,EAClB9wC,KAAK0wC,kBAAkB9iC,KAAK,CAAC5N,KAAKyF,OAAOqrC,IAAK9wC,KAAKyF,OAAOsrC,QAClC,iBAARD,IAChB9wC,KAAKyF,OAAOqrC,IAAM,KAClB9wC,KAAK0wC,kBAAkB9iC,KAAK,CAAC5N,KAAKyF,OAAOqrC,IAAK9wC,KAAKyF,OAAOsrC,yCAf9DvxC,OAAAgC,eAAW4vC,EAAAlxC,UAAA,OAAI,KAAf,WACE,MAAgC,iBAArBF,KAAKyF,OAAOsrC,MAAqBS,SAASxxC,KAAKyF,OAAOsrC,MACxD/wC,KAAKyF,OAAOsrC,KAGZ,UAcX,SAAgBA,GACM,iBAATA,GAAqBA,IAAS/wC,KAAKyF,OAAOsrC,MACnD/wC,KAAKyF,OAAOsrC,KAAOA,EACnB/wC,KAAK0wC,kBAAkB9iC,KAAK,CAAC5N,KAAKyF,OAAOqrC,IAAK9wC,KAAKyF,OAAOsrC,QACjC,iBAATA,IAChB/wC,KAAKyF,OAAOsrC,KAAO,KACnB/wC,KAAK0wC,kBAAkB9iC,KAAK,CAAC5N,KAAKyF,OAAOqrC,IAAK9wC,KAAKyF,OAAOsrC,kFA9HnDtD,UACWnM,UACE3rB,SACQnS,KAiBhC1C,EAAA,CADCkN,EAAAA,MAAM,+DA0BiBlN,EAAA,CAAvBsQ,EAAAA,UAAU,0CAKmBtQ,EAAA,CAA7BsQ,EAAAA,UAAU29B,2CAsBXjuC,EAAA,CADCkN,EAAAA,MAAM,6CA2DyBlN,EAAA,CAA/BsN,EAAAA,OAAO,iEArIGgjC,EAAqBK,EAAA3wC,EAAA,CAbjCyQ,EAAAA,UAAU,CACTvO,SAAU,wBACVwO,UAAW,CAAC,CAAEC,QAAS26B,GAAc16B,YAAa+/B,IAClDplC,SAAU,koBAUC+kC,IAAuCxC,kBCpBlD,SAAA8C,EAAYC,EAAwBC,GAApC,IAAAntC,EAAAzE,KACEA,KAAK8lB,aAAe8rB,EAAWC,UAAU/sC,WAAU,WAC7CL,EAAKqtC,eAAiBrtC,EAAKstC,SAC7BH,EAAWI,uBAAwB,EACnCL,EAAIM,gBACJL,EAAWI,uBAAwB,MAkB3C,OAPEN,EAAAxxC,UAAAyN,sBAAA,WACE3N,KAAK8xC,aAAe9xC,KAAK+xC,QAG3BL,EAAAxxC,UAAA8G,YAAA,WACEhH,KAAK8lB,aAAajgB,eAEtB6rC,mBCzBA,SAAAQ,IACUlyC,KAAAmyC,gBAAkB,EAgB5B,OAdSD,EAAAhyC,UAAAkyC,SAAP,WACEpyC,KAAKmyC,mBAGAD,EAAAhyC,UAAAyuC,WAAP,WACE3uC,KAAKmyC,mBAMP3yC,OAAAgC,eAAW0wC,EAAAhyC,UAAA,mBAAgB,KAA3B,WACE,OAAOF,KAAKmyC,gBAAkB,mCAfrBD,EAAgBpxC,EAAA,CAD5BsD,EAAAA,cACY8tC,MCQbG,GAAA,WAAA,SAAAA,IACUryC,KAAAsyC,WAAa,IAAI3uC,EAAAA,QAMzB3D,KAAAgyC,uBAAwB,EAO1B,OAXExyC,OAAAgC,eAAW6wC,EAAAnyC,UAAA,YAAS,KAApB,WACE,OAAOF,KAAKsyC,WAAWzuC,gDAKzBwuC,EAAAnyC,UAAAqyC,mBAAA,WACOvyC,KAAKgyC,uBACRhyC,KAAKsyC,WAAWrwC,QAGtBowC,EAdA,kBCRA,SAAAG,mDAAoD,OAAZ1yC,EAAA0yC,EAAA1wB,GAA3B0wB,EAAkB1xC,EAAA,CAD9BiC,EAAAA,UAAU,CAAEC,SAAU,kBACVwvC,IAA2BH,mBCKtC,SAAAI,EAAYd,EAAoCC,EAAgCn/B,GAAhF,IAAAhO,EAAAzE,KACE,IAAK4xC,EACH,MAAM,IAAIryB,MAAM,kEAElB9a,EAAAqd,EAAAlhB,KAAAZ,KAAM2xC,EAAKC,IAAW5xC,MACjByS,WAAaA,IAMtB,OAd2C3S,EAAA2yC,EAAA3wB,GAWzCtiB,OAAAgC,eAAIixC,EAAAvyC,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKyS,WAAWigC,2FATRC,EAAAA,yBAA2CH,GAAkBzxC,WAAA,CAAA,CAAAsG,KAAzCqI,EAAAA,kBAAuDwiC,MAHjFO,EAAqB3xC,EAAA,CADjCiC,EAAAA,UAAU,CAAEC,SAAU,6BAIgBvB,EAAA,EAAAiO,EAAAA,aAH1B+iC,IAA8Bf,kBCD3C,SAAAkB,IACU5yC,KAAA6yC,aAAc,EACd7yC,KAAA8yC,OAA0C,IAAIj4B,EAAAA,gBAAyB7a,KAAK6yC,aAE5E7yC,KAAA+yC,UAAW,EAmDrB,OA/CEvzC,OAAAgC,eAAIoxC,EAAA1yC,UAAA,UAAO,KAAX,WACE,OAAOF,KAAK+yC,cAGd,SAAYjiC,GACV9Q,KAAK+yC,SAAWjiC,mCAGlBtR,OAAAgC,eAAWoxC,EAAA1yC,UAAA,cAAW,KAAtB,WACE,OAAOF,KAAK8yC,OAAOjvC,gDAGrB+uC,EAAA1yC,UAAA0R,MAAA,WACE5R,KAAK6yC,aAAc,EACnB7yC,KAAK8yC,OAAO7wC,KAAKjC,KAAK6yC,aAClB7yC,KAAK8P,SACP9P,KAAK8P,OAAO1J,QACZpG,KAAK8P,OAAS,OAIlB8iC,EAAA1yC,UAAAiE,KAAA,SAAKqqC,EAAW1+B,GACd9P,KAAKgzC,MAAQxE,EACbxuC,KAAK8P,OAASA,EACd9P,KAAK6yC,aAAc,EACnB7yC,KAAK8yC,OAAO7wC,KAAKjC,KAAK6yC,cAGxBD,EAAA1yC,UAAAwkB,OAAA,SAAO8pB,EAAW1+B,GACZ9P,KAAKizC,UAAUzE,KAAUA,EAC3BxuC,KAAK4R,QAEL5R,KAAKmE,KAAKqqC,EAAM1+B,IAIpBtQ,OAAAgC,eAAIoxC,EAAA1yC,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKgzC,uCAGdJ,EAAA1yC,UAAA+yC,UAAA,SAAUzE,GACR,SAAUxuC,KAAK6yC,aAAe7yC,KAAKgzC,QAAUxE,IAG/ChvC,OAAAgC,eAAIoxC,EAAA1yC,UAAA,SAAM,KAAV,WACE,OAA4B,IAArBF,KAAK6yC,6CArDHD,EAAa9xC,EAAA,CADzBsD,EAAAA,cACYwuC,oBCAX,SAAAM,EAAoBC,GAAAnzC,KAAAmzC,cAAAA,EAEZnzC,KAAAozC,gBAAkB,EAiB5B,OAfSF,EAAAhzC,UAAAkyC,SAAP,WACEpyC,KAAKozC,mBAGAF,EAAAhzC,UAAAyuC,WAAP,WACE3uC,KAAKozC,mBAOP5zC,OAAAgC,eAAW0xC,EAAAhzC,UAAA,mBAAgB,KAA3B,WACE,OAAQF,KAAKmzC,cAAcE,SAAWrzC,KAAKozC,gBAAkB,4EAjB5BR,MADxBM,EAAmBpyC,EAAA,CAD/BsD,EAAAA,cACY8uC,qBCKX,SAAAI,EACE3B,EACYC,EACZwB,GAHF,IAAA3uC,EAAAzE,KAKE,IAAK4xC,EACH,MAAM,IAAIryB,MAAM,kEAElB9a,EAAAqd,EAAAlhB,KAAAZ,KAAM2xC,EAAKC,IAAW5xC,MACjBozC,gBAAkBA,IAM3B,OAlB2CtzC,EAAAwzC,EAAAxxB,GAezCtiB,OAAAgC,eAAI8xC,EAAApzC,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKozC,gBAAgBG,2FAZvBZ,EAAAA,yBACmBH,GAAkBzxC,WAAA,CAAA,CAAAsG,KAAzCqI,EAAAA,kBACgBwjC,MANRI,EAAqBxyC,EAAA,CADjCiC,EAAAA,UAAU,CAAEC,SAAU,6BAMlBvB,EAAA,EAAAiO,EAAAA,aALQ4jC,IAA8B5B,kBCAzC,SAAA8B,EAAmBhE,GAAAxvC,KAAAwvC,KAAAA,EACjBxvC,KAAK2vC,WAAa,IAAIJ,GAAeC,GAiCzC,OA9BSgE,EAAAtzC,UAAAuzC,QAAP,SAAeC,EAAMn0C,GACnB,IAAIo0C,EAAQ3zC,KAAK2vC,WAAWD,aAAagE,GACrCE,EAAQ5zC,KAAK2vC,WAAWD,aAAanwC,GAUzC,MARqB,iBAAVo0C,IACTA,EAAQA,EAAM3D,eAGK,iBAAV4D,IACTA,EAAQA,EAAM5D,eAGZ,MAAO2D,EACL,MAAOC,EACF,EAEA,EAGL,MAAOA,GACD,EACCD,EAAQC,GACT,EACCD,EAAQC,EACV,EAEA,GAIfJ,MzChCYhR,GAAAA,EAAAA,uBAAAA,EAAAA,qBAAoB,KAC9BA,GAAA,SAAA,GAAA,WACAA,GAAAA,GAAA,IAAA,GAAA,MACAA,GAAAA,GAAA,MAAA,GAAA,W0CVUqR,GCAAC,iBCQV,SAAAC,EAAoBpH,GAAA3sC,KAAA2sC,eAAAA,EAmBZ3sC,KAAAg0C,UAAoB,EAcpBh0C,KAAAssC,QAAU,IAAI3oC,EAAAA,QA0CxB,OArEEnE,OAAAgC,eAAWuyC,EAAA7zC,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKi0C,iBAEd,SAAsB/xC,GACpBlC,KAAK2sC,eAAeH,cACpBxsC,KAAKi0C,YAAc/xC,EACnBlC,KAAKk0C,aACLl0C,KAAK2sC,eAAeF,8CAOtBjtC,OAAAgC,eAAWuyC,EAAA7zC,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKg0C,cAEd,SAAmB9xC,GACjBlC,KAAK2sC,eAAeH,cACpBxsC,KAAKg0C,SAAW9xC,EAChBlC,KAAKk0C,aACLl0C,KAAK2sC,eAAeF,8CAOdsH,EAAA7zC,UAAAg0C,WAAR,WACEl0C,KAAKssC,QAAQrqC,KAAKjC,OAGpBR,OAAAgC,eAAWuyC,EAAA7zC,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKssC,QAAQzoC,gDAUfkwC,EAAA7zC,UAAAwkB,OAAP,SAAcyvB,EAA2CC,GACvDp0C,KAAK2sC,eAAeH,cAEhBxsC,KAAKq0C,aAAeF,EACtBn0C,KAAKg0C,cAAmC,IAAjBI,GAA+BA,IAAkCp0C,KAAKg0C,UAE7Fh0C,KAAKi0C,YAAcE,EACnBn0C,KAAKg0C,cAAmC,IAAjBI,GAA+BA,GAExDp0C,KAAKk0C,aACLl0C,KAAK2sC,eAAeF,cAMfsH,EAAA7zC,UAAAoN,MAAP,WACEtN,KAAKq0C,WAAa,MAMbN,EAAA7zC,UAAAuzC,QAAP,SAAeC,EAAMn0C,GACnB,OAAQS,KAAKs0C,SAAW,EAAI,GAAKt0C,KAAKq0C,WAAWZ,QAAQC,EAAGn0C,6CAzE1B8sC,MADzB0H,EAAIjzC,EAAA,CADhBsD,EAAAA,cACY2vC,oBCIb,SAAAQ,IACEv0C,KAAA0hB,UAAW,EAab,OARE6yB,EAAAr0C,UAAAyM,gBAAA,WAEE3M,KAAKw0C,WAAax0C,KAAKy0C,YAAYlnC,mBAAmB,OAGxDgnC,EAAAr0C,UAAA8G,YAAA,WACEhH,KAAKw0C,WAAWE,WATS5zC,EAAA,CAA1BsQ,EAAAA,UAAU,mDAHAmjC,EAAazzC,EAAA,CARzByQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,gHAMCkoC,qBC0EX,SAAAI,EACUC,EACRlG,EACQtsB,EACA+wB,EACA0B,EACDv9B,GANT,IAAA7S,EAQEqd,EAAAlhB,KAAAZ,KAAM0uC,IAAQ1uC,YAPNyE,EAAAmwC,MAAAA,EAEAnwC,EAAA2d,IAAAA,EACA3d,EAAA0uC,cAAAA,EACA1uC,EAAAowC,kBAAAA,EACDpwC,EAAA6S,cAAAA,EAOF7S,EAAAqwC,eAAgB,EAKfrwC,EAAAG,cAAgC,GAoDhCH,EAAAswC,SAAgC,SAmFhCtwC,EAAAuwC,SAAU,EAqBkBvwC,EAAAwwC,aAAe,IAAIxoC,EAAAA,aAO/ChI,EAAAywC,WAAmC1S,EAAAA,qBAAqB2S,SA2CzB1wC,EAAA2wC,gBAAkB,IAAI3oC,EAAAA,aA4BtDhI,EAAA4wC,cAAe,EAkDU5wC,EAAAisC,kBAAoB,IAAIjkC,EAAAA,aArStDhI,EAAKG,cAAcpC,KAAKiC,EAAK6wC,2BAC7B7wC,EAAKG,cAAcpC,KAAKiC,EAAK8wC,gCA+SjC,OA3TgDz1C,EAAA60C,EAAA7yB,GAsB9C6yB,EAAAz0C,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAA1G,GAAK,OAAAA,EAAEsF,kBAG5B8uC,EAAAz0C,UAAAq1C,2BAAR,WAAA,IAAA9wC,EAAAzE,KACE,OAAOA,KAAKmzC,cAAcqC,YAAY1wC,WAAU,SAAAgM,GAC1CrM,EAAKqwC,iBAAmBhkC,IAC1BrM,EAAKqwC,eAAiBhkC,EAEtBrM,EAAKowC,kBAAkBY,oBAKrBd,EAAAz0C,UAAAo1C,wBAAR,WAAA,IAAA7wC,EAAAzE,KACE,OAAOA,KAAK40C,MAAMhoC,OAAO9H,WAAU,SAAA4wC,GAGjCjxC,EAAKowC,kBAAkBY,eAEnBhxC,EAAKkxC,YAAcnT,EAAAA,qBAAqB2S,UAAYO,EAAKrB,aAAe5vC,EAAKmxC,UAC/EnxC,EAAKywC,WAAa1S,EAAAA,qBAAqB2S,SACvC1wC,EAAK2wC,gBAAgBxnC,KAAKnJ,EAAKywC,YAE/BzwC,EAAKoxC,SAAW,MAGdpxC,EAAKqxC,QAAUJ,EAAKrB,aAAe5vC,EAAKmxC,UAC1CnxC,EAAKuwC,SAAU,EACfvwC,EAAKwwC,aAAarnC,MAAK,QAW7BpO,OAAAgC,eAAWmzC,EAAAz0C,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAK+1C,YAyBd,SAAiBC,GACM,iBAAVA,IACTh2C,KAAK+1C,OAASC,GACTh2C,KAAKq1C,cAAgBr1C,KAAK+0C,UAC7B/0C,KAAKi2C,mBAAmBj2C,KAAK+1C,OAAQ/1C,KAAK+0C,UAEvC/0C,KAAK41C,UACR51C,KAAK41C,QAAU,IAAIpC,GAA2BxzC,KAAK+1C,2CArBzDv2C,OAAAgC,eAAImzC,EAAAz0C,UAAA,UAAO,KAAX,WACE,OAAOF,KAAK+0C,cAKd,SAAY7yC,GACVlC,KAAK+0C,SAAW7yC,GACXlC,KAAKq1C,eAAiBr1C,KAAKyF,QAAUzF,KAAK+0C,UAAY/0C,KAAK+1C,QAC9D/1C,KAAKi2C,mBAAmBj2C,KAAK+1C,OAAQ/1C,KAAK+0C,2CAiBtCJ,EAAAz0C,UAAA+1C,mBAAR,SAA2BD,EAAeE,GACxB,WAAZA,EACFl2C,KAAK6uC,UAAU,IAAImC,GAA0B,IAAIH,GAA8BmF,KAC1D,WAAZE,GACTl2C,KAAK6uC,UAAU,IAAIoB,GAAyB,IAAIL,GAA6BoG,KAE3Eh2C,KAAKyF,QAAUzF,KAAK2wC,kBACtB3wC,KAAKm2C,kBAAoBn2C,KAAK2wC,uBAIvB3wC,KAAK2wC,kBAUhBnxC,OAAAgC,eAAWmzC,EAAAz0C,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAK41C,aAId,SAAkBvB,GACU,iBAAfA,EACTr0C,KAAK41C,QAAU,IAAIpC,GAA2Ba,GAE1CA,EACFr0C,KAAK41C,QAAUvB,EAEXr0C,KAAK+1C,OACP/1C,KAAK41C,QAAU,IAAIpC,GAA2BxzC,KAAK+1C,eAE5C/1C,KAAK41C,yCASpBp2C,OAAAgC,eAAWmzC,EAAAz0C,UAAA,WAAQ,KAAnB,WACE,QAASF,KAAK41C,yCAUhBp2C,OAAAgC,eAAWmzC,EAAAz0C,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKg1C,aAOd,SAAkB9yC,IACXA,GAASlC,KAAK81C,QACjB91C,KAAKg1C,SAAU,EACfh1C,KAAK40C,MAAMtnC,SACFpL,IAAUlC,KAAK81C,QACxB91C,KAAK01C,wCAeTl2C,OAAAgC,eAAWmzC,EAAAz0C,UAAA,YAAS,KAApB,WACE,OAAOF,KAAKk1C,gBAId,SAAqBhzC,GACnB,QAAqB,IAAVA,GAKPlC,KAAKk1C,aAAehzC,EAIxB,OAAQA,GAEN,QACA,KAAKsgC,EAAAA,qBAAqB2S,SACxBn1C,KAAK40C,MAAMtnC,QACX,MACF,KAAKk1B,EAAAA,qBAAqB4T,IACxBp2C,KAAK01C,MAAK,GACV,MACF,KAAKlT,EAAAA,qBAAqB6T,KACxBr2C,KAAK01C,MAAK,qCAKhBl2C,OAAAgC,eAAWmzC,EAAAz0C,UAAA,WAAQ,KAAnB,WACE,OAAQF,KAAKk1C,YACX,QACA,KAAK1S,EAAAA,qBAAqB2S,SACxB,MAAO,OACT,KAAK3S,EAAAA,qBAAqB4T,IACxB,MAAO,YACT,KAAK5T,EAAAA,qBAAqB6T,KACxB,MAAO,+CAUN1B,EAAAz0C,UAAAw1C,KAAP,SAAYpB,GACLt0C,KAAKs2C,WAIVt2C,KAAK40C,MAAMlwB,OAAO1kB,KAAK41C,QAAStB,GAGhCt0C,KAAKk1C,WAAal1C,KAAK40C,MAAMN,QAAU9R,EAAAA,qBAAqB6T,KAAO7T,EAAAA,qBAAqB4T,IAExFp2C,KAAK61C,SAAW71C,KAAKk1C,aAAe1S,EAAAA,qBAAqB6T,KAAO,aAAe,QAC/Er2C,KAAKo1C,gBAAgBxnC,KAAK5N,KAAKk1C,YAG/Bl1C,KAAKg1C,SAAU,EACfh1C,KAAKi1C,aAAarnC,MAAK,KAUzBpO,OAAAgC,eAAWmzC,EAAAz0C,UAAA,kBAAe,KAA1B,SAA2Bq2C,GACrBA,IACFv2C,KAAK8uC,eACL9uC,KAAKq1C,cAAe,oCAQxB71C,OAAAgC,eAAWmzC,EAAAz0C,UAAA,cAAW,KAAtB,WACE,GAAIF,KAAKyF,kBAAkBwqC,IAA4BjwC,KAAKyF,kBAAkBurC,GAC5E,OAAOhxC,KAAKyF,OAAOvD,WA2BvB,SAAuBs0C,IACjBx2C,KAAKyF,kBAAkBwqC,IAA4BjwC,KAAKyF,kBAAkBurC,MAC5EhxC,KAAKm2C,kBAAoBK,EACzBx2C,KAAK0wC,kBAAkB9iC,KAAK5N,KAAKyF,OAAOvD,yCAzB5C1C,OAAAgC,eAAWmzC,EAAAz0C,UAAA,oBAAiB,KAA5B,SAA6Bs2C,GACvBx2C,KAAKyF,OACHzF,KAAKyF,kBAAkBwqC,IACpBuG,GAAgC,iBAAbA,IACtBA,EAAW,IAETA,IAAax2C,KAAKyF,OAAOvD,QAC3BlC,KAAKyF,OAAOvD,MAAQs0C,IAEbx2C,KAAKyF,kBAAkBurC,KAC3BwF,GAAcA,aAAoB72C,QACrC62C,EAAW,CAAC,KAAM,OAEI,IAApBA,EAAS71C,QAAiB61C,EAAS,KAAOx2C,KAAKyF,OAAOvD,MAAM,IAAMs0C,EAAS,KAAOx2C,KAAKyF,OAAOvD,MAAM,KACtGlC,KAAKyF,OAAOvD,MAAQs0C,IAIxBx2C,KAAK2wC,gBAAkB6F,mCAe3B7B,EAAAz0C,UAAA2f,SAAA,WACE7f,KAAKy2C,gBAAkB,IAAIv0B,GAAYqyB,GAAev0C,KAAKoiB,MAG7D5iB,OAAAgC,eAAWmzC,EAAAz0C,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAKy2C,gBAAgBn0B,IAAIiyB,GAAev0C,KAAKoiB,KAAKoyB,qFAtT1CT,UACNtG,UACI3/B,EAAAA,wBACU8kC,UACID,EAAAA,yBACLh9B,KAwExB7U,EAAA,CADCkN,EAAAA,MAAM,6CASPlN,EAAA,CADCkN,EAAAA,MAAM,yCAuCPlN,EAAA,CADCkN,EAAAA,MAAM,2CAuCPlN,EAAA,CADCkN,EAAAA,MAAM,2CAasBlN,EAAA,CAA5BsN,EAAAA,OAAO,yDAaRtN,EAAA,CADCkN,EAAAA,MAAM,iDAsCyBlN,EAAA,CAA/BsN,EAAAA,OAAO,+DA+BRtN,EAAA,CADC8gB,EAAAA,aAAawqB,yCAmBdtrC,EAAA,CADCkN,EAAAA,MAAM,yDA8ByBlN,EAAA,CAA/BsN,EAAAA,OAAO,iEAhTGumC,EAAiB7zC,EAAA,CAjD7ByQ,EAAAA,UAAU,CACTvO,SAAU,gBACVqJ,SAAU,6iDAuCVmF,UAAW,CAAChI,EAA2BnF,EAAyBb,GAChEuD,KAAM,CACJ2vC,0BAA2B,OAC3BC,mBAAoB,WACpBC,KAAM,gBAERC,gBAAiBC,EAAAA,wBAAwBC,UAE9BpC,IAAmC/F,kBCzE9C,SAAAoI,EAAoBhI,EAAsC4F,EAAwBlH,GAA9D1tC,KAAAgvC,SAAAA,EAAsChvC,KAAA40C,MAAAA,EAAwB50C,KAAA0tC,MAAAA,EAK3E1tC,KAAA+Q,SAAU,EAMV/Q,KAAAi3C,QAA8B,SAACh/B,EAAeu2B,GAAY,OAAAA,GA2BzDxuC,KAAAk3C,QAAS,EA0DTl3C,KAAAm3C,WAAkB,GASlBn3C,KAAAssC,QAAU,IAAI3oC,EAAAA,QASd3D,KAAAo3C,YAAc,IAAIzzC,EAAAA,QA6D5B,OAzJSqzC,EAAA92C,UAAAw0C,QAAP,WACM10C,KAAKq3C,aACPr3C,KAAKq3C,YAAYxxC,cAEf7F,KAAKs3C,UACPt3C,KAAKs3C,SAASzxC,cAEZ7F,KAAKu3C,UACPv3C,KAAKu3C,SAAS1xC,eASlBrG,OAAAgC,eAAWw1C,EAAA92C,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAKk3C,wCAEPF,EAAA92C,UAAAs3C,UAAP,WAAA,IAAA/yC,EAAAzE,KACEA,KAAKk3C,QAAS,EAKdl3C,KAAKq3C,YAAcr3C,KAAKgvC,SAASpiC,OAAO9H,WAAU,WAAM,OAAAL,EAAKgzC,kBAC7Dz3C,KAAKs3C,SAAWt3C,KAAK40C,MAAMhoC,OAAO9H,WAAU,WAGrCL,EAAKmwC,MAAMP,WAGd5vC,EAAKizC,aAFLjzC,EAAKgzC,kBAKTz3C,KAAKu3C,SAAWv3C,KAAK0tC,MAAM9gC,OAAO9H,WAAU,WAAM,OAAAL,EAAKkzC,kBAOzDn4C,OAAAgC,eAAWw1C,EAAA92C,UAAA,MAAG,KAAd,WACE,OAAOF,KAAK2tC,UAEd,SAAeiK,GACb53C,KAAK2tC,KAAOiK,EACZ53C,KAAK63C,eAAeD,GAChB53C,KAAK83C,MACP93C,KAAKy3C,gBAELz3C,KAAKm3C,WAAaS,EAClB53C,KAAKk0C,+CAOF8C,EAAA92C,UAAA63C,QAAP,WACM/3C,KAAK83C,OACP93C,KAAKy3C,gBAaTj4C,OAAAgC,eAAWw1C,EAAA92C,UAAA,YAAS,KAApB,WAEE,OAAOF,KAAKm3C,4CAONH,EAAA92C,UAAAg0C,WAAR,WACEl0C,KAAKssC,QAAQrqC,KAAKjC,KAAKsf,YAGzB9f,OAAAgC,eAAWw1C,EAAA92C,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKssC,QAAQzoC,gDAIdmzC,EAAA92C,UAAA23C,eAAR,SAAuBD,GACrB53C,KAAKo3C,YAAYn1C,KAAK21C,IAGxBp4C,OAAAgC,eAAWw1C,EAAA92C,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKo3C,YAAYvzC,gDAM1BrE,OAAAgC,eAAYw1C,EAAA92C,UAAA,gBAAa,KAAzB,WACE,OAAQF,KAAK2tC,sCAMPqJ,EAAA92C,UAAAu3C,aAAR,WAAA,IAAAhzC,EAAAzE,KACMA,KAAKg4C,gBAGLh4C,KAAKgvC,SAASpB,mBAChB5tC,KAAKi4C,UAAYj4C,KAAK2tC,KAAKloC,QAAO,SAAA+oC,GAAQ,OAAA/pC,EAAKuqC,SAASP,QAAQD,MAGhExuC,KAAKi4C,UAAYj4C,KAAK2tC,KAAKrhB,QAE7BtsB,KAAK0tC,MAAML,WAAartC,KAAKi4C,UAAUt3C,OACvCX,KAAK03C,eAMCV,EAAA92C,UAAAw3C,WAAR,WAAA,IAAAjzC,EAAAzE,KACMA,KAAKg4C,gBAGLh4C,KAAK40C,MAAMP,YACbr0C,KAAKi4C,UAAUvC,MAAK,SAAChC,EAAGn0C,GAAM,OAAAkF,EAAKmwC,MAAMnB,QAAQC,EAAGn0C,MAEtDS,KAAK23C,gBAMCX,EAAA92C,UAAAy3C,YAAR,WAEM33C,KAAKg4C,eAAkBh4C,KAAK0tC,MAAMb,WAAiC,IAApB7sC,KAAK0tC,MAAMjxB,OAG1Dzc,KAAK0tC,MAAMjxB,KAAO,EACpBzc,KAAKm3C,WAAan3C,KAAKi4C,UAAU3rB,MAAMtsB,KAAK0tC,MAAMwK,UAAWl4C,KAAK0tC,MAAMyK,SAAW,GAEnFn4C,KAAKm3C,WAAan3C,KAAKi4C,UAEzBj4C,KAAKk0C,wDA7KuBzG,UAAmCsG,UAAwBrH,MAD9EsK,EAAKl2C,EAAA,CADjBsD,EAAAA,cACY4yC,oBCyBX,SAAAoB,EACS/rC,EACCgsC,EACAT,EACAx1B,GAJV,IAAA3d,EAAAzE,KACSA,KAAAqM,SAAAA,EACCrM,KAAAq4C,QAAAA,EACAr4C,KAAA43C,MAAAA,EACA53C,KAAAoiB,IAAAA,EAjBFpiB,KAAAs4C,OAAmC,KACnCt4C,KAAA4E,cAAgC,GAkBtCgzC,EAAMJ,YACNx3C,KAAKu4C,cAAgB,IAAIC,EAAAA,QAAWx4C,KAAKoiB,IAAKpiB,KAAKqM,SAAUrM,KAAKq4C,SAClEr4C,KAAK4E,cAAcpC,KACjBo1C,EAAMhrC,OAAO9H,WAAU,SAAA2zC,GACrBh0C,EAAK8zC,cAAcG,QAAUD,EAC7Bh0C,EAAK8zC,cAAcI,gBAsB3B,OA1CEn5C,OAAAgC,eAAW42C,EAAAl4C,UAAA,WAAQ,KAAnB,SAAoB03C,GAClB53C,KAAK44C,UAAYhB,GAAgB,oCAInCp4C,OAAAgC,eAAI42C,EAAAl4C,UAAA,UAAO,KAAX,SAAYgC,GACVlC,KAAKu4C,cAAcM,aAAe32C,mCAmBpCk2C,EAAAl4C,UAAAy4C,UAAA,YACO34C,KAAKs4C,SACRt4C,KAAKs4C,OAASt4C,KAAKq4C,QAAQp3B,KAAKjhB,KAAK44C,WAAWz4C,OAAOH,KAAKu4C,cAAcM,eAExE74C,KAAKs4C,UACSt4C,KAAKs4C,OAAOQ,KAAK94C,KAAK44C,aAIpC54C,KAAK43C,MAAMmB,IAAM/4C,KAAK44C,aAK5BR,EAAAl4C,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DA9BrBkI,EAAAA,mBACAirC,EAAAA,uBACFhC,UACFlpC,EAAAA,oBAbfhN,EAAA,CADCkN,EAAAA,MAAM,8CAMPlN,EAAA,CADCkN,EAAAA,MAAM,kDAXIoqC,EAAgBt3C,EAAA,CAH5BiC,EAAAA,UAAU,CACTC,SAAU,gCAECo1C,oBCHX,SAAAa,EAAoBrB,GAAA53C,KAAA43C,MAAAA,EAQtB,OAHEp4C,OAAAgC,eAAWy3C,EAAA/4C,UAAA,gBAAa,KAAxB,WACE,QAAQF,KAAK43C,MAAM7mC,SAAa/Q,KAAK43C,MAAMt4B,WAA6C,IAAhCtf,KAAK43C,MAAMt4B,UAAU3e,kFANpDq2C,MADhBiC,EAAsBn4C,EAAA,CAZlCyQ,EAAAA,UAAU,CACTvO,SAAU,qBACVqJ,SAAU,6RAQVtF,KAAM,CAAEmyC,yCAA0C,WAEvCD,MCZAE,GAAsB,IAAIziC,EAAAA,eAA2B,qCCClE,SAAA0iC,KAYA,OATE55C,OAAAgC,eAAI43C,EAAAl5C,UAAA,YAAS,KAAb,SAAcgC,GACZlC,KAAKq5C,WAAan3C,mCAGpBk3C,EAAAl5C,UAAAo5C,aAAA,WACMt5C,KAAKq5C,YACPr5C,KAAKq5C,WAAWjzC,SATTgzC,EAAoBt4C,EAAA,CADhCsD,EAAAA,cACYg1C,oBCGb,SAAAG,IACUv5C,KAAAuQ,IAAuB,IAAI5M,EAAAA,QASrC,OAPE41C,EAAAr5C,UAAAs5C,MAAA,SAAMz9B,GACJ/b,KAAKuQ,IAAItO,KAAK8Z,IAGhBvc,OAAAgC,eAAI+3C,EAAAr5C,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKuQ,IAAI1M,gDARP01C,EAAiBz4C,EAAA,CAD7BsD,EAAAA,cACYm1C,oBC4BX,SAAAE,EACUxpC,EACA8I,EACDzB,EACCoiC,EACAC,EACUn1C,EACWkF,GANrB1J,KAAAiQ,cAAAA,EACAjQ,KAAA+Y,GAAAA,EACD/Y,KAAAsX,cAAAA,EACCtX,KAAA05C,kBAAAA,EACA15C,KAAA25C,qBAAAA,EAEqB35C,KAAA0J,WAAAA,EAfvB1J,KAAA4E,cAAgC,GAiBtC5E,KAAKwE,SAAWA,EA+CpB,OA5CEi1C,EAAAv5C,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAK25C,qBAAqBC,UAAY55C,KAAK+Y,GAAGnS,cAC9C5G,KAAK4E,cAAcpC,KACjBxC,KAAKiQ,cAAcpL,WAAWC,WAAU,SAAC+0C,GACvCp1C,EAAK0qC,aAAe0K,EAEpB,IAAMC,EAAar1C,EAAKo1C,OACxBp1C,EAAKo1C,OAASA,GAKTp1C,EAAKo1C,QAAUC,GAClBr1C,EAAKs1C,kBAGT/5C,KAAK05C,kBAAkB39B,GAAGjX,WAAU,SAAAib,GAAY,OAACtb,EAAKu1C,YAAcj6B,OAIhE05B,EAAAv5C,UAAA65C,aAAR,WACO/vC,EAAAA,kBAAkBhK,KAAK0J,cAKvB1J,KAAK65C,QAAU75C,KAAKwE,SAASikB,gBAAkBzoB,KAAKwE,SAAS6I,MAChErN,KAAK25C,qBAAqBL,iBAI9BG,EAAAv5C,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,kBASxD4zC,EAAAv5C,UAAA+5C,uBAAA,SAAuBl2C,GACrB/D,KAAKiQ,cAAchM,gBAAgBF,6CArDZP,SACXmL,EAAAA,kBACUgH,SACK4jC,UACGH,mCAC7B9xC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBACiChI,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBA8CVpL,EAAA,CADCuN,EAAAA,aAAa,QAAS,CAAC,uDA7DborC,EAAkB34C,EAAA,CAlB9BiC,EAAAA,UAAU,CACTC,SAAU,uBACV+D,KAAM,CACJmzC,MAAO,mBACPC,oBAAqB,oCACrBC,uBAAwB,eACxBC,uBAAwB,cACxBC,iBAAkB,YA0BjB74C,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,WACP/F,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eAhBCutC,oBCiBX,SAAAc,EAAmBjjC,GAAAtX,KAAAsX,cAAAA,EASZtX,KAAAw6C,kBAA4B,EAarC,OAHEh7C,OAAAgC,eAAI+4C,EAAAr6C,UAAA,gBAAa,KAAjB,SAAkB0Z,GAChB5Z,KAAKw6C,mBAAqB5gC,4EApBMjE,KAmBlC7U,EAAA,CADC8gB,EAAAA,aAAa63B,uCAnBHc,EAAWz5C,EAAA,CAhCvByQ,EAAAA,UAAU,CACTvO,SAAU,eACVqJ,SAAU,oYAYVtF,KAAM,CAAE0zC,mBAAoB,QAC5BjpC,UAAW,CACThO,EACA41C,GACA,CAAE3nC,QAAS0nC,GAAqBznC,YAAa/C,EAAAA,YAC7C4qC,OAaSgB,oBC9Bb,SAAAG,IACE16C,KAAA0hB,UAAW,EAWb,OAPEg5B,EAAAx6C,UAAAyM,gBAAA,WACE3M,KAAK26C,SAAW36C,KAAKy0C,YAAYlnC,mBAAmB,OAGtDmtC,EAAAx6C,UAAA8G,YAAA,WACEhH,KAAK26C,SAASjG,WARS5zC,EAAA,CAAxBsQ,EAAAA,UAAU,iDAFAspC,EAAW55C,EAAA,CARvByQ,EAAAA,UAAU,CACTvO,SAAU,kBACVqJ,SAAU,8GAMCquC,oBCgBX,SAAAE,EAAoBx4B,GAAApiB,KAAAoiB,IAAAA,EAWtB,OAPEw4B,EAAA16C,UAAA2f,SAAA,WACE7f,KAAKy2C,gBAAkB,IAAIv0B,GAAYw4B,GAAa16C,KAAKoiB,MAG3D5iB,OAAAgC,eAAWo5C,EAAA16C,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAKy2C,gBAAgBn0B,IAAIo4B,GAAa16C,KAAKoiB,KAAKu4B,mFAThC7sC,EAAAA,oBAFKhN,EAAA,CAA7B4X,EAAAA,gBAAgB6hC,oCATNK,EAAe95C,EAAA,CAX3ByQ,EAAAA,UAAU,CACTvO,SAAU,cACVqJ,SAAU,4CAGVtF,KAAM,CACJ8zC,wBAAyB,OACzBC,oCAAqC,sBACrClE,KAAM,eAGGgE,OdhBb,SAAY/G,GACVA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YAFF,CAAYA,KAAAA,GAAmB,KCA/B,SAAYC,GACVA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,sBAAA,GAAA,wBALF,CAAYA,KAAAA,GAAkB,ScAlBiH,iBCOZ,SAAAC,IACYh7C,KAAAi7C,YAA2C,IAAIt3C,EAAAA,QASjD3D,KAAAk7C,cAAe,EAYzB,OApBE17C,OAAAgC,eAAWw5C,EAAA96C,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKi7C,YAAYp3C,gDAGnBm3C,EAAA96C,UAAAi7C,kBAAP,SAAyBC,GACvB,OAAOp7C,KAAKq7C,WAAW71C,KAAKC,EAAAA,QAAO,SAAA61C,GAAY,OAAAF,IAASE,OAKnDN,EAAA96C,UAAAq7C,OAAP,WACEv7C,KAAKi7C,YAAYh5C,KAAK6xC,GAAmB0H,mBACrCx7C,KAAKk7C,cACPl7C,KAAKi7C,YAAYh5C,KAAK6xC,GAAmB2H,cAE3Cz7C,KAAKi7C,YAAYh5C,KAAK6xC,GAAmB4H,uBACzC17C,KAAKi7C,YAAYh5C,KAAK6xC,GAAmB6H,eACzC37C,KAAKk7C,cAAe,EACpBl7C,KAAKi7C,YAAYh5C,KAAK6xC,GAAmB8H,qBApBhCZ,EAAuBl6C,EAAA,CADnCsD,EAAAA,cACY42C,oBCOX,SAAAa,EAAYC,GAAZ,IAAAr3C,EAAAzE,KALQA,KAAA4E,cAAgC,GAC9B5E,KAAA+7C,MAA8C,IAAIlhC,EAAAA,gBAC1Dg5B,GAAoBmI,SAIpBh8C,KAAK4E,cAAcpC,KACjBs5C,EACGX,kBAAkBrH,GAAmB0H,mBACrC12C,WAAU,WAAM,OAAAL,EAAKs3C,MAAM95C,KAAK4xC,GAAoBoI,eAGzDj8C,KAAK4E,cAAcpC,KACjBs5C,EACGX,kBAAkBrH,GAAmB8H,oBACrC92C,WAAU,WAAM,OAAAL,EAAKs3C,MAAM95C,KAAK4xC,GAAoBmI,aAW7D,OAPEx8C,OAAAgC,eAAWq6C,EAAA37C,UAAA,OAAI,KAAf,WACE,OAAOF,KAAK+7C,MAAMl4C,gDAGpBg4C,EAAA37C,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAnBXm1C,MANlBa,EAAkB/6C,EAAA,CAD9BsD,EAAAA,cACYy3C,OFRb,SAAYd,GACVA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,MAAA,GAAA,QAHF,CAAYA,KAAAA,GAAa,KGMzB,ICNYmB,GDMRC,GAAsB,EAG1BC,GAAA,WAOE,SAAAA,EAAoBC,EAA0BrN,GAA9C,IAAAvqC,EAAAzE,KAAoBA,KAAAq8C,OAAAA,EAA0Br8C,KAAAgvC,SAAAA,EALvChvC,KAAAs8C,mBAA6B,EAC5Bt8C,KAAAu8C,kBAAyB,GAEzBv8C,KAAAw8C,WAAkB,GAuJlBx8C,KAAAy8C,eAAgC1B,GAAc2B,KAiB/C18C,KAAA28C,kBAA4B,EAS3B38C,KAAA48C,UAAoB,EAKpB58C,KAAA4E,cAAgC,GA0DhC5E,KAAAssC,QAAU,IAAI3oC,EAAAA,QA7OpB3D,KAAK+b,GAAK,mBAAqBogC,KAE/Bn8C,KAAK4E,cAAcpC,KACjBxC,KAAKgvC,SAASpiC,OAAO9H,WAAU,WACxBL,EAAKo4C,cAAep4C,EAAK63C,mBAG9B73C,EAAKq4C,qBAIT98C,KAAK4E,cAAcpC,KACjBxC,KAAKq8C,OAAOU,WAAWj4C,WAAU,SAAAk4C,GAE/B,IAAMC,EAAuB,GAE7B,OAAQx4C,EAAKy4C,eACX,KAAKnC,GAAc2B,KACjB,MAGF,KAAK3B,GAAcoC,OACjB,IAAIC,EACEC,EAA8B54C,EAAK43C,OAAOpF,QAC5CqG,GAA4B,EAGhC,GAAI74C,EAAK84C,gBAAkB94C,EAAK+4C,wBAC1B/4C,EAAK43C,OAAOtD,KAAOt0C,EAAK43C,OAAOpF,QAAS,CAC1C,IAAMwG,EAASh5C,EAAK43C,OAAOtD,IAAIxK,WAAU,SAAAmP,GAAS,OAAAA,IAAUj5C,EAAK84C,iBACjE94C,EAAK+4C,uBAAyB/4C,EAAK43C,OAAOpF,QAAQwG,EAAQh5C,EAAK84C,eAInEP,EAAa/1C,SAAQ,SAACunC,EAAMv2B,GAC1B,IAAMxR,EAAM42C,EAAQplC,EAAOu2B,GAEvB/pC,EAAK+4C,yBAA2B/2C,IAClC22C,EAAY5O,EACZ8O,GAAmB,GAEjB74C,EAAK+3C,WAAW5rC,QAAQnK,IAAQ,GAClCw2C,EAAgBz6C,KAAKiE,MAQrBhC,EAAK43C,OAAOvE,QAAUsF,IACxBE,GAAmB,GAOrBzhC,YAAW,WACLyhC,IACF74C,EAAK84C,cAAgBH,KAEtB,GACH,MAGF,KAAKrC,GAAc4C,MACjB,IAAIC,EAAkBn5C,EAAK8G,QAAQ+gB,QAC7BuxB,EAAgCp5C,EAAK43C,OAAOpF,QAC9C6G,GAA4B,EAG5Br5C,EAAK8G,QAAQ5K,OAAS,GAAK8D,EAAK83C,kBAAkB57C,SAAW8D,EAAK8G,QAAQ5K,QACxE8D,EAAK43C,OAAOtD,KAAOt0C,EAAK43C,OAAOpF,UACjCxyC,EAAK83C,kBAAoB,GACzB93C,EAAK8G,QAAQtE,SAAQ,SAAAunC,GACnB,IAAMiP,EAASh5C,EAAK43C,OAAOtD,IAAIxK,WAAU,SAAAmP,GAAS,OAAAA,IAAUlP,KAC5D/pC,EAAK83C,kBAAkB/5C,KAAKiC,EAAK43C,OAAOpF,QAAQwG,EAAQjP,QAU9DwO,EAAa/1C,SAAQ,SAACunC,EAAMv2B,GAC1B,IAAMxR,EAAMo3C,EAAQ5lC,EAAOu2B,GACvB/pC,EAAK+3C,WAAW5rC,QAAQnK,IAAQ,GAClCw2C,EAAgBz6C,KAAKiE,MAOrBm3C,EAASj9C,OAAS,IACpBq8C,EAAa/1C,SAAQ,SAACunC,EAAMv2B,GAC1B,IAAMxR,EAAMo3C,EAAQ5lC,EAAOu2B,GAErBuP,EAAgBt5C,EAAK83C,kBAAkB3rC,QAAQnK,GACjDs3C,GAAiB,IACnBH,EAASG,GAAiBvP,EAC1BsP,GAAmB,MAMnBr5C,EAAK43C,OAAOvE,QACd8F,EAAWA,EAASn4C,QAAO,SAAAu4C,GAAY,OAAAhB,EAAapsC,QAAQotC,IAAa,KACrEv5C,EAAK8G,QAAQ5K,SAAWi9C,EAASj9C,SACnCm9C,GAAmB,IAQvBjiC,YAAW,WACLiiC,IACFr5C,EAAK8G,QAAUqyC,KAEhB,IAUTn5C,EAAK+3C,WAAaS,MA4Q1B,OAvQSb,EAAAl8C,UAAA48C,eAAP,WACE98C,KAAKuL,QAAQ5K,OAAS,EACtBX,KAAKu8C,kBAAoB,GACzBv8C,KAAKi+C,eAAiB,KACtBj+C,KAAKw9C,uBAAyB,KAC9Bx9C,KAAKk0C,cAIP10C,OAAAgC,eAAW46C,EAAAl8C,UAAA,gBAAa,KAAxB,WACE,OAAOF,KAAKy8C,oBAEd,SAAyBv6C,GACnBA,IAAUlC,KAAKk9C,gBAGnBl9C,KAAKy8C,eAAiBv6C,EAClBA,IAAU64C,GAAc2B,YACnB18C,KAAKuL,QAEZvL,KAAKk+C,cAAc,IAAI,qCAO3B1+C,OAAAgC,eAAY46C,EAAAl8C,UAAA,cAAW,KAAvB,WACE,OAAOF,KAAKy8C,iBAAmB1B,GAAc4C,OAAS39C,KAAKy8C,iBAAmB1B,GAAcoC,wCAgBvFf,EAAAl8C,UAAAw0C,QAAP,WACE10C,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAOxCrG,OAAAgC,eAAW46C,EAAAl8C,UAAA,gBAAa,KAAxB,WACE,OAAOF,KAAKi+C,oBAEd,SAAyB/7C,GAAzB,IAAAuC,EAAAzE,KACE,GAAIkC,IAAUlC,KAAKi+C,eAAnB,CAKA,GADAj+C,KAAKi+C,eAAiB/7C,EAClBlC,KAAKq8C,OAAOtD,KAAO/4C,KAAKq8C,OAAOpF,SAAW/0C,EAAO,CACnD,IAAMu7C,EAASz9C,KAAKq8C,OAAOtD,IAAIxK,WAAU,SAAAmP,GAAS,OAAAA,IAAUx7C,KAC5DlC,KAAKw9C,uBAAyBx9C,KAAKq8C,OAAOpF,QAAQwG,EAAQv7C,GAE5DlC,KAAKk0C,aAGLl0C,KAAK48C,UAAW,EAChB/gC,YAAW,WAAM,OAACpX,EAAKm4C,UAAW,uCAOpCp9C,OAAAgC,eAAW46C,EAAAl8C,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKwlB,cAEd,SAAmBtjB,GACjBlC,KAAKk+C,cAAch8C,GAAO,oCAGrBk6C,EAAAl8C,UAAAg+C,cAAP,SAAqBh8C,EAAY0L,GAAjC,IAAAnJ,EAAAzE,KACEA,KAAKwlB,SAAWtjB,EACZ0L,IACF5N,KAAKk0C,aAGLl0C,KAAK48C,UAAW,EAChB/gC,YAAW,WAAM,OAACpX,EAAKm4C,UAAW,OAQ9BR,EAAAl8C,UAAAg0C,WAAR,WACMl0C,KAAKy8C,iBAAmB1B,GAAcoC,OACxCn9C,KAAKssC,QAAQrqC,KAAKjC,KAAKu9C,eACdv9C,KAAKy8C,iBAAmB1B,GAAc4C,OAC/C39C,KAAKssC,QAAQrqC,KAAKjC,KAAKuL,UAI3B/L,OAAAgC,eAAW46C,EAAAl8C,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKssC,QAAQzoC,gDAMfu4C,EAAAl8C,UAAA8pB,WAAP,SAAkBwkB,GAChB,OAAIxuC,KAAKy8C,iBAAmB1B,GAAcoC,OACjCn9C,KAAKu9C,gBAAkB/O,EACrBxuC,KAAKy8C,iBAAmB1B,GAAc4C,OACxC39C,KAAKuL,QAAQqF,QAAQ49B,IAAS,GAQjC4N,EAAAl8C,UAAAi+C,WAAR,SAAmB3P,GAEjB,GADAxuC,KAAKuL,QAAQ/I,KAAKgsC,GACdxuC,KAAKq8C,OAAOpF,SAAWj3C,KAAKq8C,OAAOtD,IAAK,CAE1C,IAAM0E,EAASz9C,KAAKq8C,OAAOtD,IAAIxK,WAAU,SAAAmP,GAAS,OAAAA,IAAUlP,KAC5DxuC,KAAKu8C,kBAAkB/5C,KAAKxC,KAAKq8C,OAAOpF,QAAQwG,EAAQjP,MAOpD4N,EAAAl8C,UAAAk+C,aAAR,SAAqBC,GAEnB,GADAr+C,KAAKuL,QAAQ2M,OAAOmmC,EAAa,GAC7Br+C,KAAKq8C,OAAOpF,SAAWoH,EAAcr+C,KAAKu8C,kBAAkB57C,OAAQ,CAEtE,IAAM29C,EAAet+C,KAAKu8C,kBAAkBrkC,OAAOmmC,EAAa,GAEhEr+C,KAAKw8C,WAAax8C,KAAKw8C,WAAW/2C,QAAO,SAAA84C,GAAU,OAAAA,IAAWD,EAAa,QAOxElC,EAAAl8C,UAAAs+C,YAAP,SAAmBhQ,EAASwP,GAC1B,OAAQh+C,KAAKy8C,gBACX,KAAK1B,GAAc2B,KAEnB,KAAK3B,GAAcoC,OAEjB,MACF,KAAKpC,GAAc4C,MACjB,IAAM1lC,EAAQjY,KAAKuL,QAAQqF,QAAQ49B,GAC/Bv2B,GAAS,IAAM+lC,GACjBh+C,KAAKo+C,aAAanmC,GAClBjY,KAAKk0C,cACIj8B,EAAQ,GAAK+lC,IACtBh+C,KAAKm+C,WAAW3P,GAChBxuC,KAAKk0C,gBAWNkI,EAAAl8C,UAAAu+C,cAAP,WAAA,IAAAh6C,EAAAzE,KACE,GAAIA,KAAKy8C,iBAAmB1B,GAAc4C,QAAU39C,KAAKq8C,OAAO/8B,UAC9D,OAAO,EAGT,IAAMo/B,EAAsB1+C,KAAKq8C,OAAO/8B,UAAU7Z,QAAO,SAAA+oC,GACvD,OAA+B,IAAxB/pC,EAAKk6C,SAASnQ,MAIvB,QADoBkQ,EAAe/9C,OACjB,IAGA+9C,EAAej5C,QAAO,SAAA+oC,GAAQ,OAAA/pC,EAAK8G,QAAQqF,QAAQ49B,IAAS,KAClE7tC,SAAW+9C,EAAe/9C,QAUhCy7C,EAAAl8C,UAAA0+C,cAAR,WAEE,OAAO5+C,KAAKy8C,iBAAmB1B,GAAc2B,MAAQ/8C,MAAMk/C,QAAQ7+C,KAAKq8C,OAAOtD,MAM1EqD,EAAAl8C,UAAA4+C,SAAP,SAAgBtQ,EAASuQ,GACvB,GAAI/+C,KAAK4+C,gBAAiB,CACxB,IAAMI,EAAMh/C,KAAKq8C,OAAOpF,QAAQj3C,KAAKq8C,OAAOtD,IAAIxK,WAAU,SAAAmP,GAAS,OAAAA,IAAUlP,KAAOA,IACvE,IAATuQ,EAEF/+C,KAAKw8C,WAAWh6C,KAAKw8C,GAGrBh/C,KAAKw8C,WAAax8C,KAAKw8C,WAAW/2C,QAAO,SAAAw5C,GAAc,OAAAD,IAAQC,OAQ9D7C,EAAAl8C,UAAAy+C,SAAP,SAAgBnQ,GAKd,GAAIxuC,KAAK4+C,gBAAiB,CACxB,IAAMn4C,EAAMzG,KAAKq8C,OAAOpF,QAAQj3C,KAAKq8C,OAAOtD,IAAIxK,WAAU,SAAAmP,GAAS,OAAAA,IAAUlP,KAAOA,GACpF,OAAOxuC,KAAKw8C,WAAW5rC,QAAQnK,IAAQ,EAGzC,OAAO,GAMF21C,EAAAl8C,UAAAg/C,UAAP,WAAA,IAAAz6C,EAAAzE,KACMA,KAAKy8C,iBAAmB1B,GAAc2B,MAAQ18C,KAAKy8C,iBAAmB1B,GAAcoC,SAOpFn9C,KAAKy+C,gBACPz+C,KAAKq8C,OAAO/8B,UAAUrY,SAAQ,SAAAunC,GAC5B,IAAM2Q,EAAe16C,EAAK8G,QAAQqF,QAAQ49B,GACtC2Q,GAAgB,IAA6B,IAAxB16C,EAAKk6C,SAASnQ,IACrC/pC,EAAK25C,aAAae,MAItBn/C,KAAKq8C,OAAO/8B,UAAUrY,SAAQ,SAAAunC,GACxB/pC,EAAK8G,QAAQqF,QAAQ49B,GAAQ,IAA6B,IAAxB/pC,EAAKk6C,SAASnQ,IAClD/pC,EAAK05C,WAAW3P,MAItBxuC,KAAKk0C,wDAlZqB8C,UAA4BvJ,MAP7C2O,EAASt7C,EAAA,CADrBsD,EAAAA,cACYg4C,GAAb,iBEEA,SAAAgD,IACEp/C,KAAA0hB,UAAW,EAab,OARE09B,EAAAl/C,UAAAyM,gBAAA,WAEE3M,KAAKq/C,QAAUr/C,KAAKy0C,YAAYlnC,mBAAmB,OAGrD6xC,EAAAl/C,UAAA8G,YAAA,WACEhH,KAAKq/C,QAAQ3K,WATS5zC,EAAA,CAAvBsQ,EAAAA,UAAU,gDAHAguC,EAAUt+C,EAAA,CARtByQ,EAAAA,UAAU,CACTvO,SAAU,iBACVqJ,SAAU,6GAMC+yC,MCLTE,GAAQ,EAGZC,GAAA,SAAAz9B,GAGE,SAAAy9B,IAAA,IAAA96C,EACEqd,EAAAlhB,KAAAZ,OAAOA,YAHTyE,EAAA+6C,aAAe,GA6BP/6C,EAAAg7C,SAAqC,IAAI5kC,EAAAA,iBAAgB,GASzDpW,EAAAi7C,SAA6B,IAAI/7C,EAAAA,QAlCvC27C,KACA76C,EAAK+6C,aAAe,yBAA2BF,KAqCnD,OA3C6Cx/C,EAAAy/C,EAAAz9B,GAU3CtiB,OAAAgC,eAAI+9C,EAAAr/C,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKwmB,eAGd,SAAatkB,IACXA,IAAUA,KACIlC,KAAKwmB,YACjBxmB,KAAKwmB,UAAYtkB,EACjBlC,KAAK0/C,SAASz9C,OACdjC,KAAKymB,cAAcxkB,KAAKC,qCAI5Bq9C,EAAAr/C,UAAAsP,mBAAA,SAAmBsB,GACjBgR,EAAA5hB,UAAMsP,mBAAkB5O,KAAAZ,KAAC8Q,GACrBA,IAAUvH,EAAAA,gBAAgBgG,SAC5BvP,KAAK0/C,SAASz9C,QAKlBzC,OAAAgC,eAAI+9C,EAAAr/C,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKy/C,SAAS57C,gDAGvB07C,EAAAr/C,UAAAy/C,WAAA,SAAWC,GACT5/C,KAAKy/C,SAASx9C,KAAK29C,IAIrBpgD,OAAAgC,eAAI+9C,EAAAr/C,UAAA,UAAO,KAAX,WACE,OAAOF,KAAK0/C,SAAS77C,gDAzCZ07C,EAAuBz+C,EAAA,CADnCsD,EAAAA,cACYm7C,GAAb,CAA6Cl5B,ICyBzCi5B,GAAgB,EAiBpBO,GAAA,WAoBE,SAAAA,EACSC,EACAC,EACAC,EACAjuC,EACAohC,EACC8M,EACA79B,EACA9d,EACAyU,EACDzB,GAVT,IAAA7S,EAAAzE,KACSA,KAAA8/C,UAAAA,EACA9/C,KAAA+/C,iBAAAA,EACA//C,KAAAggD,iBAAAA,EACAhgD,KAAA+R,OAAAA,EACA/R,KAAAmzC,cAAAA,EACCnzC,KAAAigD,YAAAA,EACAjgD,KAAAoiB,IAAAA,EACApiB,KAAAsE,SAAAA,EACAtE,KAAA+Y,GAAAA,EACD/Y,KAAAsX,cAAAA,EAvBFtX,KAAAkgD,eAAiBnF,GAWjB/6C,KAAAmgD,wBAAkC,EAsCjCngD,KAAAogD,WAAY,EA+BWpgD,KAAAqgD,gBAAkB,IAAI5zC,EAAAA,cAAsB,GAkB5CzM,KAAA4mB,eAAiB,IAAIna,EAAAA,cAAsB,GAYlEzM,KAAAsgD,iBAAmB,GAQnBtgD,KAAAugD,kBAAoB,GA8DpBvgD,KAAA4E,cAAgC,GAMjC5E,KAAAwgD,cAAe,EAjKpBlB,KACAt/C,KAAK+b,GAAK,aAAeujC,GACzBt/C,KAAKygD,QAAU,gBAAkBnB,GACjCt/C,KAAK0gD,WAAa,gBAAkBpB,GACpCt/C,KAAKw/C,aAAeztC,EAAOytC,aAE3Bx/C,KAAK4E,cAAcpC,KACjBm+C,EAAAA,cAAc3gD,KAAK+R,OAAOuE,QAAStW,KAAK+R,OAAO+U,cAAchiB,WAC3D,SAAC6nB,OAAAkhB,EAAAxrC,EAAAsqB,EAAA,GAACi0B,EAAA/S,EAAA,GAAoBgT,EAAAhT,EAAA,GAChB+S,GAAsBC,GAExBp8C,EAAKq8C,UAAW,EAChBr8C,EAAKH,SAASmJ,SAAShJ,EAAKsU,GAAGnS,cAAe,2BAE9CnC,EAAKq8C,UAAW,EAGhBr8C,EAAKH,SAASyZ,YAAYtZ,EAAKsU,GAAGnS,cAAe,8BAkK7D,OAvJEpH,OAAAgC,eAAWq+C,EAAA3/C,UAAA,WAAQ,KAAnB,WACE,OAAIF,KAAK8/C,UAAU5C,gBAAkBnC,GAAc2B,KAC1C18C,KAAKogD,UAELpgD,KAAK8/C,UAAU91B,WAAWhqB,KAAKwuC,WAK1C,SAAoBtsC,GACdlC,KAAK8/C,UAAU5C,gBAAkBnC,GAAc2B,KACjD18C,KAAKogD,UAAYl+C,EAEjBlC,KAAK8/C,UAAUtB,YAAYx+C,KAAKwuC,KAAMtsC,oCAM1C1C,OAAAgC,eAAWq+C,EAAA3/C,UAAA,kBAAe,KAI1B,WACE,OAAQF,KAAK8/C,UAAUnB,SAAS3+C,KAAKwuC,WALvC,SAA2BtsC,GACzBlC,KAAK8/C,UAAUhB,SAAS9+C,KAAKwuC,MAAgB,IAAVtsC,oCAS9B29C,EAAA3/C,UAAAwkB,OAAP,SAAcs5B,QAAA,IAAAA,IAAAA,GAAYh+C,KAAKg+C,UACzBA,IAAah+C,KAAKg+C,WACpBh+C,KAAKg+C,SAAWA,EAChBh+C,KAAKqgD,gBAAgBzyC,KAAKowC,KAI9Bx+C,OAAAgC,eAAWq+C,EAAA3/C,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAK+R,OAAO2U,cAIrB,SAAoBxkB,GAClBlC,KAAK+R,OAAO2U,SAAWxkB,mCAKlB29C,EAAA3/C,UAAA6gD,aAAP,WACM/gD,KAAK+R,OAAOuU,aACdtmB,KAAKghD,gBAAgBpW,oBACrB5qC,KAAK0mB,UAAY1mB,KAAK0mB,SACtB1mB,KAAK4mB,eAAehZ,KAAK5N,KAAK0mB,YAQlClnB,OAAAgC,eAAIq+C,EAAA3/C,UAAA,uBAAoB,KAGxB,WACE,OAAOF,KAAKsgD,iBAAmBtgD,KAAKsgD,iBAAmBtgD,KAAKsX,cAAcnB,KAAKhS,UAJjF,SAAyB6c,GACvBhhB,KAAKsgD,iBAAmBt/B,mCAO1BxhB,OAAAgC,eAAIq+C,EAAA3/C,UAAA,wBAAqB,KAGzB,WACE,OAAOF,KAAKugD,kBAAoBvgD,KAAKugD,kBAAoBvgD,KAAKsX,cAAcnB,KAAKvE,WAJnF,SAA0BoP,GACxBhhB,KAAKugD,kBAAoBv/B,mCAe3B6+B,EAAA3/C,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAKihD,QAAQrpC,QAAQ9S,WAAU,WAC7BL,EAAKw8C,QAAQh6C,SAAQ,SAAAi6C,GACdA,EAAKnF,MAAMoF,WACd18C,EAAK28C,iBAAiBC,OAAOH,EAAKnF,cAM1C8D,EAAA3/C,UAAAyM,gBAAA,WAAA,IAAAlI,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAKigD,YAAYlzC,KAAKjI,WAAU,SAAAw8C,GAG9B,IAAK,IAAI9gD,EAAIiE,EAAK28C,iBAAiBzgD,OAAQH,EAAI,EAAGA,IAChDiE,EAAK28C,iBAAiBG,SAGxB,IAAS/gD,EAAIiE,EAAK+8C,iBAAiB7gD,OAAQH,EAAI,EAAGA,IAChDiE,EAAK+8C,iBAAiBD,SAEpBD,IAAezN,GAAoBoI,WACrCx3C,EAAK+7C,cAAe,EACpB/7C,EAAKw8C,QAAQh6C,SAAQ,SAAAi6C,GACdA,EAAKnF,MAAMoF,WACd18C,EAAK+8C,iBAAiBH,OAAOH,EAAKnF,YAItCt3C,EAAK+7C,cAAe,EACpB/7C,EAAKw8C,QAAQh6C,SAAQ,SAAAi6C,GACdA,EAAKnF,MAAMoF,WACd18C,EAAK28C,iBAAiBC,OAAOH,EAAKnF,cAK1C/7C,KAAK+R,OAAOiI,QAAQlV,WAAU,WAC5BL,EAAK07C,wBAA0B17C,EAAK07C,4BAO1CN,EAAA3/C,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,kBAcxDg6C,EAAA3/C,UAAA2f,SAAA,WACE7f,KAAKy2C,gBAAkB,IAAIv0B,GAAYk9B,GAAYp/C,KAAKoiB,MAG1D5iB,OAAAgC,eAAWq+C,EAAA3/C,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAKy2C,gBAAgBn0B,IAAI88B,GAAYp/C,KAAKoiB,KAAKi9B,kFA5LpCjD,UACOlK,UACAgB,UACVqM,UACO3M,UACDiJ,UACR/tC,EAAAA,wBACK3G,EAAAA,iBACNwH,EAAAA,kBACUgH,KArBW7U,EAAA,CAAlCsQ,EAAAA,UAAUo5B,2CAKS1pC,EAAA,CAAnBkN,EAAAA,MAAM,yCAuDPlN,EAAA,CADCkN,EAAAA,MAAM,+CAWPlN,EAAA,CADCkN,EAAAA,MAAM,wDASwBlN,EAAA,CAA9BsN,EAAAA,OAAO,8DAcRtN,EAAA,CADCkN,EAAAA,MAAM,+CAKwBlN,EAAA,CAA9BsN,EAAAA,OAAO,6DAUmBtN,EAAA,CAA1BsQ,EAAAA,UAAU,oDAIXtQ,EAAA,CADCkN,EAAAA,kDASDlN,EAAA,CADCkN,EAAAA,mDAeiClN,EAAA,CAAjC4X,EAAAA,gBAAgBkiC,mCAuDjB95C,EAAA,CADCsQ,EAAAA,UAAU,cAAe,CAAEi+B,KAAMvhC,EAAAA,uDAGlChN,EAAA,CADCsQ,EAAAA,UAAU,kBAAmB,CAAEi+B,KAAMvhC,EAAAA,2DAGtChN,EAAA,CADCsQ,EAAAA,UAAU,kBAAmB,CAAEi+B,KAAMvhC,EAAAA,2DAvM3B+xC,EAAc/+C,EAAA,CAf1ByQ,EAAAA,UAAU,CACTvO,SAAU,aACVqJ,SAAA,ykMACAtF,KAAM,CACJ06C,uBAAwB,OACxBC,4BAA6B,WAC7BC,mBAAoB,KACpB/K,KAAM,YAERplC,UAAW,CACT+tC,GACA,CAAE9tC,QAAS4U,GAAiB3U,YAAa6tC,IACzC,CAAE9tC,QAASvC,EAAiBwC,YAAa6tC,QAGhCM,GAAb,GCpCA+B,GAAA,WACE,SAAAA,EACUlT,EACAgH,EACApI,EACAuU,GAJV,IAAAp9C,EAAAzE,KACUA,KAAA0uC,QAAAA,EACA1uC,KAAA01C,KAAAA,EACA11C,KAAAstC,KAAAA,EACAttC,KAAA6hD,UAAAA,EAMV7hD,KAAA4M,OAAmD5M,KAAK6hD,UAAUj1C,OAAOpH,KAAK+W,EAAAA,KAAI,WAAM,OAAA9X,EAAKqM,UAyC/F,OAnCEtR,OAAAgC,eAAIogD,EAAA1hD,UAAA,QAAK,KAAT,mBACQ4Q,EAAsC,GACxC9Q,KAAKstC,KAAK7wB,KAAO,IACnB3L,EAAMw8B,KAAO,CACX5sB,KAAM1gB,KAAKstC,KAAK4K,UAChBprB,GAAI9sB,KAAKstC,KAAK6K,SACd17B,KAAMzc,KAAKstC,KAAK7wB,KAChBlR,QAASvL,KAAKstC,KAAK/hC,UAGnBvL,KAAK01C,KAAKrB,aACRr0C,KAAK01C,KAAKrB,sBAAsBb,GAKlC1iC,EAAM4kC,KAAO,CAAEoM,GAAoC9hD,KAAK01C,KAAKrB,WAAY7E,KAAM8E,QAASt0C,KAAK01C,KAAKpB,SAElGxjC,EAAM4kC,KAAO,CAAEoM,GAAI9hD,KAAK01C,KAAKrB,WAAYC,QAASt0C,KAAK01C,KAAKpB,UAIhE,IAAMyN,EAAgB/hD,KAAK0uC,QAAQV,mBACnC,GAAI+T,EAAcphD,OAAS,EAAG,CAC5BmQ,EAAM49B,QAAU,OAChB,IAAqB,IAAAsT,EAAApgD,EAAAmgD,GAAaE,EAAAD,EAAA//C,QAAAggD,EAAA9/C,KAAA8/C,EAAAD,EAAA//C,OAAE,CAA/B,IAAMwD,EAAMw8C,EAAA//C,MACXuD,EAAOqL,MACTA,EAAM49B,QAAQlsC,KAAKiD,EAAOqL,OAE1BA,EAAM49B,QAAQlsC,KAAKiD,sGAIzB,OAAOqL,4EAhDU28B,UACHsG,UACArH,UACKL,MALVuV,EAAa9gD,EAAA,CADzBsD,EAAAA,cACYw9C,GAAb,GCRAM,GAAA,WAWE,SAAAA,EAAyCx4C,GAAA1J,KAAA0J,WAAAA,EAc3C,OAtBElK,OAAAgC,eAAW0gD,EAAAhiD,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAKmiD,eAGd,SAAoBpzC,GAClB/O,KAAKmiD,UAAYpzC,mCAInBvP,OAAAgC,eAAW0gD,EAAAhiD,UAAA,QAAK,KAAhB,SAAiBkiD,GACXp4C,EAAAA,kBAAkBhK,KAAK0J,aAAe04C,EAAMx7C,gBAC9C5G,KAAKqiD,SAAWD,EAAMx7C,cAAcgpB,cAAc,qDAKtDsyB,EAAAhiD,UAAAoiD,oBAAA,WACE,GAAKtiD,KAAKqiD,SAGV,OAAUriD,KAAKqiD,SAASv3C,aAAY,+CAZetL,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBAXTg2C,EAAgBphD,EAAA,CAD5BsD,EAAAA,aAYc3C,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eAXTg2C,GAAb,ILPA,SAAYhG,GACVA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SAFF,CAAYA,KAAAA,GAAqB,SAKpBqG,GAA8C/iD,OAAO2W,KAAK+lC,IACpE3/B,KAAI,SAAAtb,GAAO,OAAAi7C,GAAsBj7C,MACjCwE,QAAO,SAAAxE,GAAO,OAAAA,IAAQwxB,SAASxxB,EAAK,qBMFvC,SAAAuhD,IACExiD,KAAAyiD,QAA0C,GAClCziD,KAAA0iD,OAAwB,GAyClC,OAvCEF,EAAAtiD,UAAA8yC,MAAA,WACEhzC,KAAK0iD,OAAS1iD,KAAKyiD,QAAQlmC,KAAI,SAAAomC,GAC7B,IAAMzgD,EAAK9B,EAAA,GAAQuiD,EAAQzgD,OAE3B,cADOA,EAAM0V,QACN1V,MAIXsgD,EAAAtiD,UAAA0iD,SAAA,WACE,QAAS5iD,KAAK0iD,OAAO/hD,QAGvB6hD,EAAAtiD,UAAA2iD,iBAAA,WAAA,IAAAp+C,EAAAzE,KACEA,KAAK0iD,OAAOz7C,SAAQ,SAAC6J,EAAOmH,GAE1BxT,EAAKg+C,QAAQxqC,GAAOhW,KAAI7B,EAAAA,EAAA,GAAM0Q,GAAK,CAAE8G,QAAS2qC,SAEhDviD,KAAK0iD,OAAS,IAGhBljD,OAAAgC,eAAIghD,EAAAtiD,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKyiD,QAAQlmC,KAAI,SAAAumC,GAAU,OAAAA,EAAO5gD,0CAG3C1C,OAAAgC,eAAIghD,EAAAtiD,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAK+iD,aAAat9C,QAAO,SAAAqL,GAAS,OAAAA,EAAMkyC,YAAUriD,OAAS,mCAIpE6hD,EAAAtiD,UAAA+iD,kBAAA,SAAkBC,EAAqBpK,GAChC94C,KAAKyiD,QAAQS,IAGlBljD,KAAKmjD,gBAAgBnjD,KAAKyiD,QAAQS,GAAcpK,IAGlD0J,EAAAtiD,UAAAijD,gBAAA,SAAgBL,EAAsChK,GACpDgK,EAAO7gD,KAAI7B,EAAAA,EAAA,GAAM0iD,EAAO5gD,OAAU42C,KAzCzB0J,EAAc1hD,EAAA,CAD1BsD,EAAAA,cACYo+C,oBC+DX,SAAAY,EACUC,EACDzL,EACA0L,EACAxD,EACAC,EACCwD,EACAtD,EACA37C,EACD6uC,EACYqQ,EACXzqC,EACAu0B,EACDh2B,GAZCtX,KAAAqjD,UAAAA,EACDrjD,KAAA43C,MAAAA,EACA53C,KAAAsjD,eAAAA,EACAtjD,KAAA8/C,UAAAA,EACA9/C,KAAA+/C,iBAAAA,EACC//C,KAAAujD,cAAAA,EACAvjD,KAAAigD,YAAAA,EACAjgD,KAAAsE,SAAAA,EACDtE,KAAAmzC,cAAAA,EAECnzC,KAAA+Y,GAAAA,EACA/Y,KAAAstC,KAAAA,EACDttC,KAAAsX,cAAAA,EAMFtX,KAAAkgD,eAAiBnF,GAiBO/6C,KAAA+3C,QAAU,IAAItrC,EAAAA,cAA2C,GA2BzDzM,KAAAqgD,gBAAkB,IAAI5zC,EAAAA,cAAkB,GAkBlCzM,KAAAyjD,sBAAwB,IAAIh3C,EAAAA,cAAgB,GAExEzM,KAAA0jD,8BAAwC1jD,KAAKsX,cAAcnB,KAAKtC,yBAChE7T,KAAA2jD,+BAAyC3jD,KAAKsX,cAAcnB,KAAKrC,0BACjE9T,KAAA4jD,6BAAuC5jD,KAAKsX,cAAcnB,KAAKpC,0BA0IhE/T,KAAA6mB,eAAiC,GAhNvC7mB,KAAKmzC,cAAcp3B,GAAKynC,EAkO5B,OAzNEhkD,OAAAgC,eAAW4hD,EAAAljD,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAK43C,MAAM7mC,aAIpB,SAAmB7O,GACjBlC,KAAK43C,MAAM7mC,QAAU7O,mCAWhBkhD,EAAAljD,UAAA2jD,YAAP,WACE7jD,KAAK43C,MAAMG,WAYbv4C,OAAAgC,eAAI4hD,EAAAljD,UAAA,WAAQ,KAAZ,SAAagC,GAETlC,KAAK8/C,UAAU5C,cADbh7C,EAC6B64C,GAAc4C,MAEd5C,GAAc2B,KAE/C18C,KAAK8/C,UAAU5B,cAAch8C,GAAO,oCAStC1C,OAAAgC,eAAI4hD,EAAAljD,UAAA,iBAAc,KAAlB,SAAmBgC,GACjBlC,KAAK8/C,UAAU5C,cAAgBnC,GAAcoC,OAIzCj7C,EACFlC,KAAK8/C,UAAUvC,cAAgBr7C,EACtBlC,KAAK8/C,UAAUvC,gBACxBv9C,KAAK8/C,UAAUvC,cAAgB,uCAWnC/9C,OAAAgC,eAAI4hD,EAAAljD,UAAA,yBAAsB,KAA1B,SAA2B4Q,GACzB9Q,KAAK8/C,UAAUxD,kBAAoBxrC,mCAQrCtR,OAAAgC,eAAI4hD,EAAAljD,UAAA,mBAAgB,KAApB,SAAqBgC,GACnBlC,KAAK8/C,UAAUnD,iBAAmBz6C,mCAMpC1C,OAAAgC,eAAW4hD,EAAAljD,UAAA,cAAW,KAAtB,WACE,OAAOF,KAAK8/C,UAAUrB,qBAOxB,SAAuBv8C,GAMrBlC,KAAK8/C,UAAUZ,6CA0BjBkE,EAAAljD,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACOA,KAAK43C,MAAME,QACd93C,KAAK43C,MAAMmB,IAAM/4C,KAAK8jD,KAAKvnC,KAAI,SAACwnC,GAA2B,OAAAA,EAAIvV,SAGjExuC,KAAK6mB,eAAerkB,KAClBxC,KAAK8jD,KAAKlsC,QAAQ9S,WAAU,WACrBL,EAAKmzC,MAAME,QACdrzC,EAAKmzC,MAAMmB,IAAMt0C,EAAKq/C,KAAKvnC,KAAI,SAACwnC,GAA2B,OAAAA,EAAIvV,SAEjE/pC,EAAKq/C,KAAK78C,SAAQ,SAAA88C,GAChBt/C,EAAKu/C,eAAe3C,OAAO0C,EAAIhI,eASvCqH,EAAAljD,UAAAyM,gBAAA,WAAA,IAAAlI,EAAAzE,KAEEA,KAAK+3C,QAAQnqC,KAAK5N,KAAKujD,cAAczyC,OACrC9Q,KAAK6mB,eAAerkB,KAClBxC,KAAKujD,cAAc32C,OAAO9H,WAAU,SAAAgM,GAAS,OAAArM,EAAKszC,QAAQnqC,KAAKkD,MAC/D9Q,KAAK8/C,UAAUlzC,OAAO9H,WAAU,SAAAvE,GAC1BkE,EAAKq7C,UAAU5C,gBAAkBnC,GAAcoC,OACjD14C,EAAKg/C,sBAAsB71C,KAAQrN,GAC1BkE,EAAKq7C,UAAU5C,gBAAkBnC,GAAc4C,OACxDl5C,EAAK47C,gBAAgBzyC,KAAUrN,MAGnCP,KAAKstC,KAAK1gC,OAAO9H,WAAU,WACzBL,EAAKw/C,cAAcr9C,cAAcR,WAGnCpG,KAAKigD,YAAYlzC,KAAKjI,WAAU,SAAAw8C,GAE9B,IAAK,IAAI9gD,EAAIiE,EAAKy/C,yBAAyBvjD,OAAQH,EAAI,EAAGA,IACxDiE,EAAKy/C,yBAAyB3C,SAGhC,IAAS/gD,EAAIiE,EAAK0/C,6BAA6BxjD,OAAQH,EAAI,EAAGA,IAC5DiE,EAAK0/C,6BAA6B5C,SAGpC,IAAS/gD,EAAIiE,EAAK2/C,iBAAiBzjD,OAAQH,EAAI,EAAGA,IAChDiE,EAAK2/C,iBAAiB7C,SAGxB,IAAS/gD,EAAIiE,EAAKu/C,eAAerjD,OAAQH,EAAI,EAAGA,IAC9CiE,EAAKu/C,eAAezC,SAElBD,IAAezN,GAAoBmI,SAErCv3C,EAAKH,SAASyZ,YAAYtZ,EAAKsU,GAAGnS,cAAe,2BACjDnC,EAAKg+C,QAAQx7C,SAAQ,SAAA67C,GACnBr+C,EAAKy/C,yBAAyB7C,OAAOyB,EAAO/G,UAE9Ct3C,EAAKq/C,KAAK78C,SAAQ,SAAA88C,GAChBt/C,EAAKu/C,eAAe3C,OAAO0C,EAAIhI,YAIjCt3C,EAAKH,SAASmJ,SAAShJ,EAAKsU,GAAGnS,cAAe,2BAC9CnC,EAAKg+C,QAAQx7C,SAAQ,SAAA67C,GACnBr+C,EAAK0/C,6BAA6B9C,OAAOyB,EAAO/G,UAElDt3C,EAAKq/C,KAAK78C,SAAQ,SAAA88C,GAChBt/C,EAAK2/C,iBAAiB/C,OAAO0C,EAAIhI,gBAY3CqH,EAAAljD,UAAA8G,YAAA,WACEhH,KAAK6mB,eAAe5f,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,kBAGzDu9C,EAAAljD,UAAAq7C,OAAA,WACEv7C,KAAKqjD,UAAU9H,mDArOIP,UACLhE,UACS9D,UACLkJ,UACOlK,UACF0P,UACF/F,UACH10C,EAAAA,iBACIyrC,mCACrBtrC,EAAAA,OAAMC,KAAA,CAACkP,YACI9H,EAAAA,kBACE+9B,UACQ/2B,KAgBxB7U,EAAA,CADCkN,EAAAA,MAAM,6CAQiBlN,EAAA,CAAvBsN,EAAAA,OAAO,+CAYwBtN,EAAA,CAA/B8gB,EAAAA,aAAaw2B,oCAMdt3C,EAAA,CADCkN,EAAAA,MAAM,+CAUwBlN,EAAA,CAA9BsN,EAAAA,OAAO,8DAMRtN,EAAA,CADCkN,EAAAA,MAAM,2DAa8BlN,EAAA,CAApCsN,EAAAA,OAAO,0EAECtN,EAAA,CAARkN,EAAAA,6DACQlN,EAAA,CAARkN,EAAAA,8DACQlN,EAAA,CAARkN,EAAAA,4DAGDlN,EAAA,CADCkN,EAAAA,oDAUDlN,EAAA,CADCkN,EAAAA,MAAM,2DA4B+BlN,EAAA,CAArC8gB,EAAAA,aAAaq3B,uCAKsBn4C,EAAA,CAAnC4X,EAAAA,gBAAgBi8B,mCAQgB7zC,EAAA,CAAhC4X,EAAAA,gBAAgBmnC,gCAEjB/+C,EAAA,CADCsQ,EAAAA,UAAU,oBAAqB,CAAEi+B,KAAMvhC,EAAAA,4DAIxChN,EAAA,CADCsQ,EAAAA,UAAU,gBAAiB,CAAEi+B,KAAM1gC,EAAAA,kDA6FpC7N,EAAA,CADCsQ,EAAAA,UAAU,0BAA2B,CAAEi+B,KAAMvhC,EAAAA,mEAG9ChN,EAAA,CADCsQ,EAAAA,UAAU,8BAA+B,CAAEi+B,KAAMvhC,EAAAA,uEAGlDhN,EAAA,CADCsQ,EAAAA,UAAU,gBAAiB,CAAEi+B,KAAMvhC,EAAAA,yDAGpChN,EAAA,CADCsQ,EAAAA,UAAU,kBAAmB,CAAEi+B,KAAMvhC,EAAAA,2DAhP3Bs1C,EAAWtiD,EAAA,CAzBvByQ,EAAAA,UAAU,CACTvO,SAAU,eACVqJ,SAAA,kxHACAmF,UAAW,CACT4qC,GACArI,GACAtG,GACAf,GACAsK,GACAgE,GACA9I,GACAgB,GACA7G,GACAuG,GACA/7B,EACA+qC,GACAM,GACAM,GACA3G,IAEF90C,KAAM,CACJs9C,wBAAyB,OACzBC,+BAAgC,0BAc/B7iD,EAAA,EAAA6F,EAAAA,OAAOmP,KAXC2sC,oBC3Db,SAAAmB,KAAmC,OAAtBA,EAAoBzjD,EAAA,CAPhCyQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,4CAGVtF,KAAM,CAAEy9C,8BAA+B,WAE5BD,MCMTE,GAAgB,EA+BpBC,GAAA,WASE,SAAAA,EACU3E,EACDzoC,EACsB5N,EACrBi7C,EACA1V,EACkB53B,GAN5B,IAAA5S,EAAAzE,KACUA,KAAA+/C,iBAAAA,EACD//C,KAAAsX,cAAAA,EACsBtX,KAAA0J,WAAAA,EACrB1J,KAAA2kD,KAAAA,EACA3kD,KAAAivC,mBAAAA,EACkBjvC,KAAAqX,UAAAA,EAdpBrX,KAAA4E,cAAgC,GACjC5E,KAAAovC,cAAoC,CACzCzmC,KAAMlB,EAAAA,QAAQiE,WACd9D,KAAMgP,EAAAA,QAAQM,MACd5O,OAAQzF,EAAAA,aAAauG,OACrBpB,QAASnF,EAAAA,aAAauG,QAgChBpJ,KAAAyD,OAAiB,EA6BuBzD,KAAA6E,WAAa,IAAI4H,EAAAA,cAAsB,GAlDrFzM,KAAK+/C,iBAAiB3N,WACtBpyC,KAAK4E,cAAcpC,KACjBxC,KAAKivC,mBAAmBpqC,WAAWC,WAAU,SAAA8/C,GAC3CngD,EAAKN,KAAOygD,EACRA,GACFngD,EAAKogD,uBAIX7kD,KAAKqX,UAAY,kBAAoBotC,KA0CzC,OAvCEC,EAAAxkD,UAAA8G,YAAA,WACEhH,KAAK+/C,iBAAiBpR,aACtB3uC,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAGxC6+C,EAAAxkD,UAAA4kD,qBAAA,SAAqB/gD,GACnB/D,KAAKivC,mBAAmBhrC,gBAAgBF,IAI1CvE,OAAAgC,eAAWkjD,EAAAxkD,UAAA,OAAI,KAAf,WACE,OAAOF,KAAKyD,WAiBd,SAAgBU,GACd,IAAMygD,IAAczgD,IACdygD,IAAc5kD,KAAKmE,OAEvBnE,KAAKivC,mBAAmB9qC,KAAOygD,EAC/B5kD,KAAK6E,WAAW+I,KAAKg3C,GACrB5kD,KAAKyD,MAAQmhD,oCApBTF,EAAAxkD,UAAA2kD,iBAAR,WACM76C,EAAAA,kBAAkBhK,KAAK0J,aACzB1J,KAAK2kD,KAAKjpC,mBAAkB,WAC1BG,YAAW,WACT,IAAMkpC,EAAiCvgD,SAASorB,cAAc,sBAC1Dm1B,GACFA,EAAY3+C,wDAvCM8rC,UACJv8B,SACmBnW,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,sBACM+P,EAAAA,cACczY,kCAC3B8D,EAAAA,OAAMC,KAAA,CAACkP,QA0CV3V,EAAA,CADCkN,EAAAA,MAAM,qDAWkClN,EAAA,CAAxCsN,EAAAA,OAAO,mEAnEGs2C,EAAyB5jD,EAAA,CA7BrCyQ,EAAAA,UAAU,CACTvO,SAAU,yBACVwO,UAAW,CAACqF,EAAoBrT,EAAyBa,EAAyBmF,GAClF6C,SAAU,+5BAsCP5K,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,cAGPzK,EAAA,EAAA6F,EAAAA,OAAOmP,KAfCiuC,GAAb,GClCAM,GAAA,WACE,SAAAA,EAAoBjsC,EAAwBisB,EAAgCqe,GAAxDrjD,KAAA+Y,GAAAA,EAAwB/Y,KAAAglC,WAAAA,EAAgChlC,KAAAqjD,UAAAA,EAIpErjD,KAAAilD,WAAqB,EA0C/B,OAxCEzlD,OAAAgC,eAAWwjD,EAAA9kD,UAAA,YAAS,KAApB,WACE,OAAOF,KAAKilD,4CAMdzlD,OAAAgC,eAAWwjD,EAAA9kD,UAAA,iBAAc,KAAzB,WACE,OAAOF,KAAKglC,WAAW/C,SAASjiC,KAAK+Y,GAAGnS,gBArBnB,oCAwBvBpH,OAAAgC,eAAWwjD,EAAA9kD,UAAA,iBAAc,KAAzB,WACE,OAAOF,KAAKklD,kBAAoBllD,KAAKmlD,gDAGhCH,EAAA9kD,UAAAklD,YAAP,WACEplD,KAAKilD,WAAa,EAClBjlD,KAAKqlD,wBAAyB,EAC9BrlD,KAAKklD,kBAAoBllD,KAAKglC,WAAWxD,WAAWxhC,KAAK+Y,GAAGnS,eAAekC,OAGtEk8C,EAAA9kD,UAAAolD,UAAP,WACEtlD,KAAKqjD,UAAU9H,UAGjB/7C,OAAAgC,eAAWwjD,EAAA9kD,UAAA,mBAAgB,KAA3B,WACE,OAAOF,KAAKklD,kBAAoBllD,KAAKilD,4CAGhCD,EAAA9kD,UAAAqlD,gBAAP,SAAuBxhD,GACrB,IAAM8gC,EAAQ9gC,EAAMq+B,aAAayC,MAE7BA,GAAS7kC,KAAKwlD,gBAChBxlD,KAAKilD,YAAcjlD,KAAKwlD,eACxBxlD,KAAKqlD,wBAAyB,IAE9BrlD,KAAKilD,WAAapgB,EAClB7kC,KAAKqlD,wBAAyB,6CA3CV12C,EAAAA,kBAAgC2yB,UAA+B0Z,MAD5EgK,EAAoBlkD,EAAA,CADhCsD,EAAAA,cACY4gD,GAAb,iBCeE,SAAAS,EACUC,EACAphD,EACAqhD,EACkBnhD,EACAohD,GAJlB5lD,KAAA0lD,qBAAAA,EACA1lD,KAAAsE,SAAAA,EACAtE,KAAA2lD,iBAAAA,EACkB3lD,KAAAwE,SAAAA,EACAxE,KAAA4lD,kBAAAA,EAoC9B,OAjCSH,EAAAvlD,UAAA2lD,YAAP,SAAmBC,GACjB9lD,KAAK0lD,qBAAqBN,cAC1B,IAAMW,EAAc/lD,KAAK2lD,iBAAiBrD,sBAC1CtiD,KAAKsE,SAAS0I,SAAS84C,EAAiB,SAAUC,GAClD/lD,KAAKsE,SAAS0I,SAAS84C,EAAiB,UAAW,UAG9CL,EAAAvlD,UAAA8lD,YAAP,SAAmBjiD,EAA0B+hD,GAC3C9lD,KAAK0lD,qBAAqBH,gBAAgBxhD,GAC1C/D,KAAKsE,SAAS0I,SAAS84C,EAAiB,YAAa,cAAc9lD,KAAK0lD,qBAAqBO,UAAS,OACtGjmD,KAAKsE,SAAS0I,SAAShN,KAAKwE,SAAS6I,KAAM,SAAU,cACrDrN,KAAKkmD,eAAeJ,IAGfL,EAAAvlD,UAAAimD,YAAP,SAAmBL,GACjB9lD,KAAK0lD,qBAAqBJ,YAC1BtlD,KAAKsE,SAAS0I,SAAS84C,EAAiB,UAAW,QACnD9lD,KAAKsE,SAAS0I,SAAS84C,EAAiB,YAAa,mBACrD9lD,KAAKsE,SAAS0I,SAAShN,KAAKwE,SAAS6I,KAAM,SAAU,SAG/Co4C,EAAAvlD,UAAAgmD,eAAR,SAAuBJ,GACrB,IAAIT,EAEAA,IAA2BrlD,KAAK0lD,qBAAqBL,0BACvDA,EAAyBrlD,KAAK0lD,qBAAqBL,wBAIjDrlD,KAAKsE,SAASyZ,YAAY+nC,EAAiB,gBAF3C9lD,KAAKsE,SAASmJ,SAASq4C,EAAiB,2DAlCdd,UACZ79C,EAAAA,iBACQ+6C,mCACzB56C,EAAAA,OAAMC,KAAA,CAACC,EAAAA,4CACPF,EAAAA,OAAMC,KAAA,CAACkP,QARCgvC,EAA0B3kD,EAAA,CAhBtCyQ,EAAAA,UAAU,CACTvO,SAAU,0BACVqJ,SAAU,uXASVtF,KAAM,CACJq/C,oCAAqC,QAEvC50C,UAAW,CAACqF,KASTpV,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,WACP/F,EAAA,EAAA6F,EAAAA,OAAOmP,KARCgvC,oBCjBb,SAAAY,KAA2C,OAA9BA,EAA4BvlD,EAAA,CALxCyQ,EAAAA,UAAU,CACTvO,SAAU,6BACVqJ,SAAU,+BAGCg6C,oBCYX,SAAAC,EAAoBC,GAAAvmD,KAAAumD,eAAAA,EAEZvmD,KAAAwmD,YAAgC,IAAI/5C,EAAAA,aAwB9C,OArBEjN,OAAAgC,eAAI8kD,EAAApmD,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKwmD,YAAY3iD,gDAGlByiD,EAAApmD,UAAAumD,gBAAR,WACE,OAAOzmD,KAAKumD,eAAe9D,QAAQh9C,QAAO,SAAAq9C,GAAU,OAAAA,EAAO5gD,MAAM8gD,aAGnExjD,OAAAgC,eAAI8kD,EAAApmD,UAAA,sBAAmB,KAAvB,WACE,OAA+E,IAAxEF,KAAKymD,kBAAkBhhD,QAAO,SAAAq9C,GAAU,OAAAA,EAAO5gD,MAAMwkD,UAAQ/lD,wCAGtE2lD,EAAApmD,UAAAiS,UAAA,WAAA,IAAA1N,EAAAzE,KACEA,KAAKymD,kBAAkBx/C,SAAQ,SAAA0/C,GAC7B,OAAAliD,EAAK8hD,eAAepD,gBAAgBwD,EAAgB,CAClDD,QAAQ,EACR9uC,QAAS,CAACskC,GAAsB0K,aAGpC5mD,KAAKwmD,YAAYvkD,MAAK,6CAxBYugD,MAKpC1hD,EAAA,CADCsN,EAAAA,OAAO,sDALGk4C,EAA6BxlD,EAAA,CAZzCyQ,EAAAA,UAAU,CACTvO,SAAU,8BACVqJ,SAAU,8NAUCi6C,oBCmFX,SAAAO,EACSvvC,EACCivC,EACkBO,EACGp9C,EACrBi7C,EACkBttC,GALnBrX,KAAAsX,cAAAA,EACCtX,KAAAumD,eAAAA,EACkBvmD,KAAA8mD,eAAAA,EACG9mD,KAAA0J,WAAAA,EACrB1J,KAAA2kD,KAAAA,EACkB3kD,KAAAqX,UAAAA,EA7BrBrX,KAAAovC,cAAoC,CACzCzmC,KAAMlB,EAAAA,QAAQ+D,SACd5D,KAAMgP,EAAAA,QAAQK,OACd3O,OAAQzF,EAAAA,aAAasG,MACrBnB,QAASnF,EAAAA,aAAasG,OAqE1B,OA1DE3J,OAAAgC,eAAWqlD,EAAA3mD,UAAA,oBAAiB,KAA5B,WACE,OAAOF,KAAK+mD,wBAGd,SAA6B7kD,GAC3BlC,KAAK+mD,mBAAqB7kD,mCAY5B1C,OAAAgC,eAAIqlD,EAAA3mD,UAAA,uBAAoB,KAAxB,WAEE,OADkBF,KAAKumD,eAAe9D,QAAQh9C,QAAO,SAAAq9C,GAAU,OAAAA,EAAO5gD,MAAM8gD,YAC3DzmC,KAAI,SAAAumC,GAAU,OAAAA,EAAO5gD,0CAGxC1C,OAAAgC,eAAIqlD,EAAA3mD,UAAA,0BAAuB,KAA3B,WAGE,OAC2B,IAHEF,KAAKumD,eAAe9D,QAAQ9hD,OAASX,KAAKgnD,qBAAqBrmD,QAGoB,IAAhFX,KAAKgnD,qBAAqBvhD,QAAO,SAAAwhD,GAAe,OAACA,EAAYP,UAAQ/lD,wCAIvGkmD,EAAA3mD,UAAAgnD,kBAAA,SAAkBD,EAA0BljD,GAC1C,IAAMojD,EAAiBnnD,KAAKumD,eAAe9D,QAAQh9C,QAAO,SAAAq9C,GAAU,OAAAA,EAAO5gD,QAAU+kD,KAAa,GAClGjnD,KAAKumD,eAAepD,gBAAgBgE,EAAgB,CAClDT,OAAQ3iD,EACR6T,QAAS,CAACskC,GAAsB0K,WAIpCC,EAAA3mD,UAAAknD,kBAAA,WAAA,IAAA3iD,EAAAzE,KACEA,KAAK4kD,WAAa5kD,KAAK4kD,UACnB5kD,KAAK4kD,WAAa56C,EAAAA,kBAAkBhK,KAAK0J,aAAe1J,KAAKqnD,wBAC/DrnD,KAAK2kD,KAAKjpC,mBAAkB,WAC1BG,YAAW,WACTpX,EAAK4iD,uBAAuBzgD,cAAcR,eAMlDygD,EAAA3mD,UAAAsT,mBAAA,WACExT,KAAKsnD,mBAAmB1gD,cAAcR,SAKxCygD,EAAA3mD,UAAAqnD,UAAA,SAAUtvC,GACR,OAAOA,4CA/CetC,SACE6sC,mCACvBl7C,EAAAA,OAAMC,KAAA,CAACkP,YACiCjX,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,sBACM+P,EAAAA,uCACb3U,EAAAA,OAAMC,KAAA,CAACkP,QArBkC3V,EAAA,CAA3C8gB,EAAAA,aAAaykC,6CAC+BvlD,EAAA,CAA5C8gB,EAAAA,aAAa0kC,8CAEdxlD,EAAA,CADCsQ,EAAAA,UAAU,kBAAmB,CAAEi+B,KAAM1gC,EAAAA,2DAGtC7N,EAAA,CADCsQ,EAAAA,UAAU,cAAe,CAAEi+B,KAAM1gC,EAAAA,uDAhBvBk4C,EAAuB/lD,EAAA,CAxDnCyQ,EAAAA,UAAU,CACTvO,SAAU,uBACVqJ,SAAU,+iFAkDVtF,KAAM,CAAEygD,gCAAiC,OAAQlN,iBAAkB,aACnE9oC,UAAW,CAACqF,EAAoBxS,EAAyBmF,EAA2BhG,KAiCjF/B,EAAA,EAAA6F,EAAAA,OAAOmP,IACPhV,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,cAEPzK,EAAA,EAAA6F,EAAAA,OAAOmP,KAjCCowC,MClEbY,GAAA,WACE,SAAAA,EAAgCC,GAAA1nD,KAAA0nD,oBAAAA,EAC1B1nD,KAAK0nD,qBACP1nD,KAAK0nD,oBAAoBtV,WAS/B,OALEqV,EAAAvnD,UAAA8G,YAAA,WACMhH,KAAK0nD,qBACP1nD,KAAK0nD,oBAAoB/Y,uDARwBuE,GAAmBnyC,WAAA,CAAA,CAAAsG,KAA3DqI,EAAAA,cADF+3C,EAAwB3mD,EAAA,CADpCiC,EAAAA,UAAU,CAAEC,SAAU,oBAERvB,EAAA,EAAAiO,EAAAA,aADF+3C,GAAb,iBCoBE,SAAAE,EAAmBxU,EAAqC77B,GAArCtX,KAAAmzC,cAAAA,EAAqCnzC,KAAAsX,cAAAA,EAC1D,OALE9X,OAAAgC,eAAImmD,EAAAznD,UAAA,UAAO,KAAX,WACE,OAAUF,KAAKmzC,cAAcp3B,GAAE,mFAGC62B,UAAqCj9B,KAL5DgyC,EAAuB7mD,EAAA,CAnBnCyQ,EAAAA,UAAU,CACTvO,SAAU,uBACV+D,KAAM,CACJ6gD,iCAAkC,QAEpCv7C,SAAU,2bAcCs7C,oBCCX,SAAAE,EAAmB1U,EAAqC77B,GAArCtX,KAAAmzC,cAAAA,EAAqCnzC,KAAAsX,cAAAA,EAM1D,OAHEuwC,EAAA3nD,UAAA4nD,WAAA,WACE9nD,KAAKmzC,cAAcvhC,kDAJaghC,UAAqCj9B,KAFhC7U,EAAA,CAAtC8gB,EAAAA,aAAa+lC,kCAKd7mD,EAAA,CADCuN,EAAAA,aAAa,sDALHw5C,EAAiB/mD,EAAA,CAhB7ByQ,EAAAA,UAAU,CACTvO,SAAU,gBACV+D,KAAM,CACJghD,+BAAgC,QAIlC17C,SAAU,wbASCw7C,oBCUX,SAAAG,EACUvT,EACAwT,EACA9U,GAFAnzC,KAAAy0C,YAAAA,EACAz0C,KAAAioD,cAAAA,EACAjoD,KAAAmzC,cAAAA,EAhBFnzC,KAAA4E,cAAgC,GAChC5E,KAAAkoD,MAAO,EAUqBloD,KAAAw1C,YAAc,IAAI/oC,EAAAA,aAAkB,MAOtEzM,KAAKmzC,cAAcE,SAAU,EA8BjC,OA5CE7zC,OAAAgC,eAAIwmD,EAAA9nD,UAAA,QAAK,KAAT,SAAUioD,GACHnoD,KAAKkoD,MACRloD,KAAKmzC,cAAczuB,OAAOyjC,GAE5BnoD,KAAKkoD,MAAO,mCAadF,EAAA9nD,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAKmzC,cAAcqC,YAAY1wC,WAAU,SAAAgM,IACzB,IAAVA,EACFrM,EAAK2jD,aAAY,GAEjB3jD,EAAK2jD,aAAY,QAMjBJ,EAAA9nD,UAAAkoD,YAAR,SAAoBC,GAClB,IAAIC,EAAoB,KACxBtoD,KAAKioD,cAAc36C,SACD,IAAd+6C,IACFroD,KAAKioD,cAAc16C,mBAAmBvN,KAAKy0C,YAAa,CAAE8T,UAAWvoD,KAAKmzC,cAAcriC,QACxF9Q,KAAKkoD,MAAO,EACZI,EAAoBtoD,KAAKmzC,cAAcriC,OAGzC9Q,KAAKw1C,YAAY5nC,KAAK06C,IAGxBN,EAAA9nD,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAhCjBkI,EAAAA,mBACED,EAAAA,wBACA8kC,MAZzB9xC,EAAA,CADCkN,EAAAA,MAAM,0CAQsBlN,EAAA,CAA5BsN,EAAAA,OAAO,wDAZG45C,EAAWlnD,EAAA,CAHvBiC,EAAAA,UAAU,CACTC,SAAU,mBAECglD,oBCJb,SAAAQ,KAAoC,OAAvBA,EAAqB1nD,EAAA,CAXjCyQ,EAAAA,UAAU,CACTvO,SAAU,qBACVqJ,SAAU,kGAKVtF,KAAM,CACJ0hD,+BAAgC,WAGvBD,oBCqBX,SAAAE,EACS5I,EACA3M,EACCoT,GAFDvmD,KAAA8/C,UAAAA,EACA9/C,KAAAmzC,cAAAA,EACCnzC,KAAAumD,eAAAA,EAIHvmD,KAAAkgD,eAAiBnF,GAO1B,OAHEv7C,OAAAgC,eAAIknD,EAAAxoD,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKumD,eAAeoC,6FAXTvM,UACIxJ,UACE4P,MAMa1hD,EAAA,CAAtC8gB,EAAAA,aAAailC,kCAVH6B,EAAiB5nD,EAAA,CAzB7ByQ,EAAAA,UAAU,CACTvO,SAAU,gBACVqJ,SAAU,+3BAmBVtF,KAAM,CACJ6hD,0BAA2B,WAGlBF,MC5BAG,GAAe,IAAInyC,EAAAA,eAA4B,gBAE5D,SAAgBoyC,KACd,OAAO,IAAIjuC,EAAAA,gBAA6B,CACtCjD,QAAS,KAIb,ICZYmxC,GAcAC,GCbAC,GFWCC,GAAwB,CACnCz3C,QAASo3C,GACT/xC,WAAYgyC,kBG2DZ,SAAAK,EACUC,EACApyB,EACAuvB,EAGAU,GAIR,GATQjnD,KAAAopD,iBAAAA,EACAppD,KAAAg3B,iBAAAA,EACAh3B,KAAAumD,eAAAA,EAGAvmD,KAAAinD,YAAAA,EAR0BjnD,KAAAqpD,aAAe,IAAI58C,EAAAA,aAiB/CzM,KAAA4E,cAAgC,GAPtC5E,KAAKg3B,iBAAiBzpB,mBAAmBvN,KAAKopD,mBAEzCppD,KAAKinD,YACR,MAAM,IAAI1nC,MAAM,4FA0BtB,OApDE/f,OAAAgC,eAAI2nD,EAAAjpD,UAAA,sBAAmB,KAAvB,SAAwBgC,GACtBlC,KAAKspD,eAAcpnD,IAASA,EAAMwkD,SAASxkD,EAAMwkD,wCAInDlnD,OAAAgC,eAAI2nD,EAAAjpD,UAAA,cAAW,KAAf,SAAgBwmD,GACd1mD,KAAKupD,QAAU7C,IAAkB,EACjC1mD,KAAKumD,eAAepD,gBAAgBnjD,KAAKinD,YAAa,CACpDP,OAAQ1mD,KAAKupD,QACb3xC,QAAS,CAACskC,GAAsB0K,2CAuBpCuC,EAAAjpD,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAKumD,eAAepD,gBAAgBnjD,KAAKinD,YAAa,CACpDjE,UAAU,EACVoG,iBAAkBppD,KAAKopD,iBACvB1C,OAAQ1mD,KAAKupD,QACb3xC,QAAS,CAACskC,GAAsB0K,UAGlC5mD,KAAK4E,cAAcpC,KACjBxC,KAAKinD,YAAYniD,WAAU,SAACgM,GACtBA,EAAM8G,SAAW9G,EAAM8G,QAAQhH,QAAQsrC,GAAsB0K,SAAW,GAC1EniD,EAAK4kD,aAAaz7C,KAAKkD,EAAM41C,aAMrCyC,EAAAjpD,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAlCZkI,EAAAA,mBACAD,EAAAA,wBACF00C,UAGH3nC,EAAAA,gBAAe9Z,WAAA,CAAA,CAAAsG,KAFnCqI,EAAAA,UAAQ,CAAArI,KACRC,EAAAA,OAAMC,KAAA,CAACshD,SApBV/nD,EAAA,CADCkN,EAAAA,MAAM,gEAMPlN,EAAA,CADCkN,EAAAA,MAAM,gDASsBlN,EAAA,CAA5BsN,EAAAA,OAAO,yDArCG+6C,EAAyBroD,EAAA,CAjBrCiC,EAAAA,UAAU,CAAEC,SAAU,0BA4DlBvB,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA6F,EAAAA,OAAOuhD,MA5CCM,oBC3BX,SAAAK,EAAgCnN,GAAAr8C,KAAAq8C,OAAAA,EAQlC,OALE78C,OAAAgC,eAAIgoD,EAAAtpD,UAAA,UAAO,KAAX,SAAYgC,GACNlC,KAAKq8C,SACPr8C,KAAKq8C,OAAOpF,QAAU/0C,6EALc80C,GAAKj2C,WAAA,CAAA,CAAAsG,KAAhCqI,EAAAA,cAGb5O,EAAA,CADCkN,EAAAA,MAAM,6CAHIw7C,EAAuB1oD,EAAA,CAHnCiC,EAAAA,UAAU,CACTC,SAAU,mBAGGvB,EAAA,EAAAiO,EAAAA,aADF85C,oBCUX,SAAAC,EAAmBnc,GAAAttC,KAAAstC,KAAAA,EAOrB,OALEmc,EAAAvpD,UAAA2f,SAAA,WACO7f,KAAK0pD,iBAAmD,IAAhC1pD,KAAK0pD,gBAAgB/oD,SAChDX,KAAK0pD,gBAAkB,CAAC1pD,KAAKstC,KAAK7wB,iDAJbiwB,MAFI5rC,EAAA,CAA5BkN,EAAAA,MAAM,6DADIy7C,EAAmB3oD,EAAA,CAX/ByQ,EAAAA,UAAU,CACTvO,SAAU,mBACVqJ,SAAU,uRASCo9C,oBCsGX,SAAAE,EAAmBrc,EAAmBh2B,EAA+C67B,GAAlEnzC,KAAAstC,KAAAA,EAAmBttC,KAAAsX,cAAAA,EAA+CtX,KAAAmzC,cAAAA,EA0F1DnzC,KAAA4pD,eAAiB,IAAIn9C,EAAAA,cAAqB,GAzFnEzM,KAAKstC,KAAKT,WAAY,EA8J1B,OAvJE8c,EAAAzpD,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KAMOA,KAAKstC,KAAK7wB,OACbzc,KAAKstC,KAAK7wB,KAAO,IAEnBzc,KAAK6pD,kBAAoB7pD,KAAKstC,KAAK1gC,OAAO9H,WAAU,SAAAyG,GAAW,OAAA9G,EAAKmlD,eAAeh8C,KAAKrC,OAQ1Fo+C,EAAAzpD,UAAA8G,YAAA,WACEhH,KAAKstC,KAAKE,eAAc,GACpBxtC,KAAK6pD,mBACP7pD,KAAK6pD,kBAAkBhkD,eAO3BrG,OAAAgC,eAAWmoD,EAAAzpD,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAKstC,KAAK7wB,UAMnB,SAAoBA,GACE,iBAATA,IACTzc,KAAKstC,KAAK7wB,KAAOA,oCAOrBjd,OAAAgC,eAAWmoD,EAAAzpD,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKstC,KAAKD,gBAInB,SAAsBH,GACC,iBAAVA,IACTltC,KAAKstC,KAAKD,WAAaH,oCAO3B1tC,OAAAgC,eAAWmoD,EAAAzpD,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAKstC,KAAKH,UAInB,SAAoBA,GACE,iBAATA,IACTntC,KAAKstC,KAAKH,KAAOA,oCAOrB3tC,OAAAgC,eAAWmoD,EAAAzpD,UAAA,cAAW,KAAtB,WACE,OAAOF,KAAKstC,KAAK/hC,aAInB,SAAuB+hC,GACD,iBAATA,IACTttC,KAAKstC,KAAK/hC,QAAU+hC,oCASjBqc,EAAAzpD,UAAAkS,SAAP,WACEpS,KAAKstC,KAAKl7B,YAMLu3C,EAAAzpD,UAAA+B,KAAP,WACEjC,KAAKstC,KAAKrrC,QAMZzC,OAAAgC,eAAWmoD,EAAAzpD,UAAA,YAAS,KAApB,WACE,OAAOF,KAAKstC,KAAK4K,2CAMnB14C,OAAAgC,eAAWmoD,EAAAzpD,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAKstC,KAAK6K,0CAMnB34C,OAAAgC,eAAWmoD,EAAAzpD,UAAA,cAAW,KAAtB,WACE,IAAM4pD,EAAwB,GAQ9B,OAPI9pD,KAAKstC,KAAK/hC,QAAU,GACtBu+C,EAAYtnD,KAAKxC,KAAKstC,KAAK/hC,QAAU,GAEvCu+C,EAAYtnD,KAAKxC,KAAKstC,KAAK/hC,SACvBvL,KAAKstC,KAAK/hC,QAAUvL,KAAKstC,KAAKH,MAChC2c,EAAYtnD,KAAKxC,KAAKstC,KAAK/hC,QAAU,GAEhCu+C,mCAOFH,EAAAzpD,UAAA6pD,kBAAP,SAAyBhmD,GACvB,IAAMimD,EAASv3B,SAAS1uB,EAAM/C,OAAOkB,MAAO,IAGvC8wB,MAAMg3B,KACLA,EAAS,EACXhqD,KAAKstC,KAAK/hC,QAAU,EACXy+C,EAAShqD,KAAKstC,KAAKH,KAC5BntC,KAAKstC,KAAK/hC,QAAUvL,KAAKstC,KAAKH,KAE9BntC,KAAKstC,KAAK/hC,QAAUy+C,GAQxBhqD,KAAKiqD,oBAAoBrjD,cAAc1E,MAAQlC,KAAKstC,KAAK/hC,kDA7JlCmhC,UAA4B/2B,SAA+Ci9B,MAHjE9xC,EAAA,CAAlC8gB,EAAAA,aAAa6nC,8CACiB3oD,EAAA,CAA9BsQ,EAAAA,UAAU,+DAyCsBtQ,EAAA,CAAhCkN,EAAAA,MAAM,yEAGPlN,EAAA,CADCkN,EAAAA,MAAM,+CAePlN,EAAA,CADCkN,EAAAA,MAAM,mDAePlN,EAAA,CADCkN,EAAAA,MAAM,+CAePlN,EAAA,CADCkN,EAAAA,MAAM,8CAOoBlN,EAAA,CAA1BsN,EAAAA,OAAO,yDA9FGu7C,EAAqB7oD,EAAA,CA/FjCyQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,gtGA2FVtF,KAAM,CAAEmjD,qBAAsB,WAEnBP,MCjFbQ,GAAA,WAIE,SAAAA,EACSrK,EACAC,EACAhuC,EACAuxC,EACAhsC,GAJAtX,KAAA8/C,UAAAA,EACA9/C,KAAA+/C,iBAAAA,EACA//C,KAAA+R,OAAAA,EACA/R,KAAAsjD,eAAAA,EACAtjD,KAAAsX,cAAAA,EAPFtX,KAAAkgD,eAAiBnF,GAgBhB/6C,KAAA4E,cAAgC,GACjC5E,KAAAoqD,aAAc,EA6BvB,OAjCE5qD,OAAAgC,eAAI2oD,EAAAjqD,UAAA,UAAO,KAAX,SAAYgC,GACVlC,KAAK+R,OAAO4tC,aAAaz9C,oCAK3BioD,EAAAjqD,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAK+R,OAAOuE,QAAQxR,WAAU,SAAAulD,GAC5B5lD,EAAK2lD,YAAcC,OAKzBF,EAAAjqD,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAIxCrG,OAAAgC,eAAW2oD,EAAAjqD,UAAA,uCAAoC,KAA/C,WACE,OACEF,KAAKsqD,uCACFtqD,KAAKsX,cAAcnB,KAAKZ,8BAA6B,IAAIvV,KAAKsX,cAAcnB,KAAKV,8DAKxFjW,OAAAgC,eAAW2oD,EAAAjqD,UAAA,iCAA8B,KAAzC,WACE,OACEF,KAAKuqD,iCACFvqD,KAAKsX,cAAcnB,KAAKX,wBAAuB,IAAIxV,KAAKsX,cAAcnB,KAAKV,uGAxC9D2mC,UACOlK,UACVqN,UACQrM,UACDv9B,KAGU7U,EAAA,CAAjC4X,EAAAA,gBAAgBkiC,iCAGjB95C,EAAA,CADCkN,EAAAA,MAAM,6CAmBiClN,EAAA,CAAvCkN,EAAAA,MAAM,8FAQ2BlN,EAAA,CAAjCkN,EAAAA,MAAM,kFAzCIm8C,EAAoBrpD,EAAA,CAhBhCyQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,sQAOVtF,KAAM,CACJyjD,4BAA6B,OAC7BC,8BAA+B,OAC/BC,6BAA8B,qBAC9BC,YAAa,0BAGJR,GAAb,iBCLE,SAAAS,EAAoB7xC,EAAwBzU,EAAqB++C,GAAjE,IAAA5+C,EAAAzE,KAAoBA,KAAA+Y,GAAAA,EAAwB/Y,KAAAsE,SAAAA,EAMpCtE,KAAA4E,cAAgC,GALtC5E,KAAK4E,cAAcpC,KACjB6gD,EAAUlI,kBAAkBrH,GAAmB2H,cAAc32C,WAAU,WAAM,OAAAL,EAAKomD,iBAuDxF,OAlEErrD,OAAAgC,eAAIopD,EAAA1qD,UAAA,cAAW,KAAf,SAAgB+mD,GAAhB,IAAAxiD,EAAAzE,KACMA,KAAK8qD,mBACP9qD,KAAK8qD,kBAAkBjlD,cAGzB7F,KAAK+qD,cAAgBxI,GACrBviD,KAAK8qD,kBAAoB7D,EAAYniD,WAAU,SAAAgM,GAAS,OAAArM,EAAKumD,aAAal6C,uCAW5E85C,EAAA1qD,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,iBAClC7F,KAAK8qD,mBACP9qD,KAAK8qD,kBAAkBjlD,eAInB+kD,EAAA1qD,UAAA8qD,aAAR,SAAqBl6C,GAArB,IAAArM,EAAAzE,KACMA,KAAK+qD,gBACPj6C,EAAM8G,QAAU5X,KAAK+qD,qBACd/qD,KAAK+qD,eAEVj6C,EAAM8G,SAAW9G,EAAM8G,QAAQjX,QACjCmQ,EAAM8G,QAAQ3Q,SAAQ,SAAA2F,GACpB,OAAQA,GACN,KAAKsvC,GAAsB+O,MACzBxmD,EAAKymD,SAASp6C,GACd,MACF,KAAKorC,GAAsB0K,OACzBniD,EAAK0mD,UAAUr6C,QASjB85C,EAAA1qD,UAAA2qD,WAAR,WACE7qD,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cC1DJ,wBD2D9B5G,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,QAAS,OAGjDgkD,EAAA1qD,UAAAgrD,SAAR,SAAiBp6C,GACXA,EAAMs6C,YACRprD,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cChEH,wBDkE5B5G,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cClEN,wBDoE9B5G,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,QAASkK,EAAMhI,MAAQ,OAG/D8hD,EAAA1qD,UAAAirD,UAAR,SAAkBr6C,GACZA,EAAM41C,OACR1mD,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cCxEF,0BD0E7B5G,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cC1EL,oEDoBT+H,EAAAA,kBAA8BxH,EAAAA,iBAAsB6zC,MAfjE4P,EAAoB9pD,EAAA,CADhCiC,EAAAA,UAAU,CAAEC,SAAU,iBACV4nD,oBEIX,SAAAS,EACUtyC,EACAzU,EACA++C,EACAre,EACA0gB,EACAa,EACsBU,GAPhC,IAAAxiD,EAAAzE,KACUA,KAAA+Y,GAAAA,EACA/Y,KAAAsE,SAAAA,EACAtE,KAAAqjD,UAAAA,EACArjD,KAAAglC,WAAAA,EACAhlC,KAAA0lD,qBAAAA,EACA1lD,KAAAumD,eAAAA,EACsBvmD,KAAAinD,YAAAA,EASHjnD,KAAAsrD,cAAsC,IAAI7+C,EAAAA,aAK/DzM,KAAAurD,UAAoB,EACpBvrD,KAAAwrD,SAAmB,EAEnBxrD,KAAA4E,cAAgC,GAftC5E,KAAK4E,cAAcpC,KACjBxC,KAAKqjD,UAAUlI,kBAAkBrH,GAAmB2H,cAAc32C,WAAU,WAAM,OAAAL,EAAKomD,iBAGzF7qD,KAAK4E,cAAcpC,KAAKykD,EAAYniD,WAAU,SAAAgM,GAAS,OAAArM,EAAKumD,aAAal6C,OAmG7E,OAtFEu6C,EAAAnrD,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAGhCwlD,EAAAnrD,UAAA8qD,aAAR,SAAqBl6C,GAArB,IAAArM,EAAAzE,KACM8Q,EAAM8G,SAAW9G,EAAM8G,QAAQjX,QACjCmQ,EAAM8G,QAAQ3Q,SAAQ,SAAA2F,GACpB,OAAQA,GACN,KAAKsvC,GAAsB+O,MACzBxmD,EAAKymD,SAASp6C,GACd,MACF,KAAKorC,GAAsB0K,OACzBniD,EAAK0mD,UAAUr6C,QASjBu6C,EAAAnrD,UAAA2qD,WAAR,WAEM7qD,KAAKurD,WAAavrD,KAAK0lD,qBAAqBO,WAC9CjmD,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,QAAS,MAErD5G,KAAKwrD,SACPxrD,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cD/DN,yBCmExBykD,EAAAnrD,UAAAurD,kBAAR,WACE,OAAIzrD,KAAK0lD,qBAAqBO,UACrBjmD,KAAK0lD,qBAAqBgG,iBACxB1rD,KAAKwrD,QACP,EAEAxrD,KAAKglC,WAAWzD,iBAAiBvhC,KAAK+Y,GAAGnS,gBAI5CykD,EAAAnrD,UAAAyrD,aAAR,SAAqBP,GACnB,IAAItiD,EAAgBsiD,EAIpB,OAHKtiD,IACHA,EAAQ9I,KAAKglC,WAAWtD,YAAY1hC,KAAK+Y,GAAGnS,gBAEvCkC,GAGFuiD,EAAAnrD,UAAA0rD,oBAAP,WACE,IAAMR,EAAcprD,KAAKyrD,oBACzB,MAAO,CACL3iD,MAAO9I,KAAK2rD,aAAaP,GACzBA,YAAaA,IAIVC,EAAAnrD,UAAA2rD,eAAP,SAAsB5zC,GACpBjY,KAAKumD,eAAe9D,QAAQxqC,GAASjY,KAAKinD,aAGpCoE,EAAAnrD,UAAAgrD,SAAR,SAAiBp6C,GACXA,EAAMs6C,aACJprD,KAAK0lD,qBAAqBO,YAC5BjmD,KAAKsrD,cAAc19C,KAAKkD,EAAMhI,OAC9B9I,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,QAASkK,EAAMhI,MAAQ,MACrE9I,KAAKurD,UAAW,GAGlBvrD,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cDzGH,wBC0G5B5G,KAAKwrD,SAAU,IAEfxrD,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cD5GN,wBC6G5B5G,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,QAASkK,EAAMhI,MAAQ,MACrE9I,KAAKurD,UAAW,EAChBvrD,KAAKwrD,SAAU,IAIXH,EAAAnrD,UAAAirD,UAAR,SAAkBr6C,GACZA,EAAM41C,OACR1mD,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cDpHF,0BCsH7B5G,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cDtHL,oECUnB+H,EAAAA,kBACMxH,EAAAA,iBACC6zC,UACC1Z,UACU0jB,UACNxC,UACmB3nC,EAAAA,gBAAe9Z,WAAA,CAAA,CAAAsG,KAAzDC,EAAAA,OAAMC,KAAA,CAACshD,SASmB/nD,EAAA,CAA5BsN,EAAAA,OAAO,0DAjBGi9C,EAAsBvqD,EAAA,CADlCiC,EAAAA,UAAU,CAAEC,SAAU,gBAAiBwO,UAAW,CAACwzC,GAAsBkE,MASrEznD,EAAA,EAAA6F,EAAAA,OAAOuhD,MARCwC,MCJbS,GAAA,WAAA,SAAAA,KAiCA,OAhCEA,EAAA5rD,UAAAqhC,iBAAA,SAAiBxyB,GACf,OAAO,GAGT+8C,EAAA5rD,UAAAuhC,eAAA,SAAe1yB,GACb,OAAO,GAGT+8C,EAAA5rD,UAAAwhC,YAAA,SAAY3yB,GACV,OAAO,GAGT+8C,EAAA5rD,UAAAyhC,eAAA,SAAe5yB,GACb,OAAO,GAGT+8C,EAAA5rD,UAAAshC,WAAA,SAAWzyB,GACT,MAAO,CACLrG,IAAK,EACLq5B,OAAQ,EACRv5B,KAAM,EACNw5B,MAAO,EACPl5B,MAAO,EACPD,OAAQ,IAIZijD,EAAA5rD,UAAA+hC,SAAA,SAASlzB,GACP,OAAO,GAGT+8C,EAAA5rD,UAAAkG,MAAA,SAAM2I,KAhCK+8C,EAAchrD,EAAA,CAD1BsD,EAAAA,cACY0nD,GAAb,iBCAE,SAAAC,EAAoBxF,GAAAvmD,KAAAumD,eAAAA,EAiBZvmD,KAAA4E,cAAgC,GAwB1C,OAvCEmnD,EAAA7rD,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAK6rD,iBACL7rD,KAAK4E,cAAcpC,KACjBxC,KAAKgsD,MAAMp0C,QAAQ9S,WAAU,WAC3BL,EAAKonD,sBAaXE,EAAA7rD,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAGjCkmD,EAAA7rD,UAAA2rD,eAAP,WAAA,IAAApnD,EAAAzE,KAUMA,KAAKgsD,MAAMrrD,SAAWX,KAAKumD,eAAe9D,QAAQ9hD,QACpDX,KAAKgsD,MAAM/kD,SAAQ,SAACi6C,EAAMjpC,GACpBxT,EAAK8hD,eAAe9D,QAAQxqC,KAC9BipC,EAAK+F,YAAcxiD,EAAK8hD,eAAe9D,QAAQxqC,iDApCnBuqC,MAFG1hD,EAAA,CAAtC4X,EAAAA,gBAAgBkyC,iCADNmB,EAAmBjrD,EAAA,CAD/BiC,EAAAA,UAAU,CAAEC,SAAU,mCACV+oD,MCyBAE,GAAoB,SAACviD,GAChC,OAAIM,EAAAA,kBAAkBN,GACb,IAAI43B,GAEJ,IAAIwqB,IAUfI,GAAA,WACE,SAAAA,EACU7I,EACAzL,EACAtK,EACAtI,EACAjsB,EACAzU,EACA6uC,EACAwS,EACAY,GATV,IAAA9hD,EAAAzE,KACUA,KAAAqjD,UAAAA,EACArjD,KAAA43C,MAAAA,EACA53C,KAAAstC,KAAAA,EACAttC,KAAAglC,WAAAA,EACAhlC,KAAA+Y,GAAAA,EACA/Y,KAAAsE,SAAAA,EACAtE,KAAAmzC,cAAAA,EACAnzC,KAAA2lD,iBAAAA,EACA3lD,KAAAumD,eAAAA,EA2DFvmD,KAAAmsD,YAAsB,EAmDtBnsD,KAAA4E,cAAgC,GAuChC5E,KAAAosD,oBAAqB,EAErBpsD,KAAAqsD,wBAAyB,EArJ/BrsD,KAAK4E,cAAcpC,KACjBxC,KAAKqjD,UACFlI,kBAAkBrH,GAAmB4H,uBACrC52C,WAAU,WAAM,OAAAL,EAAK6nD,0BAG1BtsD,KAAK4E,cAAcpC,KACjBxC,KAAKstC,KAAKif,WAAWznD,WAAU,WACzBL,EAAK0nD,YACP1nD,EAAK+nD,0BAIXxsD,KAAK4E,cAAcpC,KAAKxC,KAAKmzC,cAAcqC,YAAY1wC,WAAU,SAAAgM,GAAS,OAAArM,EAAKgoD,iBAAiB37C,OAChG9Q,KAAK4E,cAAcpC,KAAKxC,KAAK43C,MAAMhrC,OAAO9H,WAAU,WAAM,OAACL,EAAK4nD,wBAAyB,MAwJ7F,OAjJEH,EAAAhsD,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAK0sD,eAEL1sD,KAAK4E,cAAcpC,KACjBxC,KAAK2sD,QAAQ/0C,QAAQ9S,WAAU,WAG7BL,EAAKioD,eACLjoD,EAAK2nD,oBAAqB,EAC1B3nD,EAAKmoD,wBAMXV,EAAAhsD,UAAAyM,gBAAA,WACE3M,KAAK2lD,iBAAiBvD,MAAQpiD,KAAK+Y,IAGrCmzC,EAAAhsD,UAAAqyC,mBAAA,WAAA,IAAA9tC,EAAAzE,KACMA,KAAKqsD,wBACPrsD,KAAK4sD,mBAEH5sD,KAAK6sD,uBACPhxC,YAAW,WACTpX,EAAKqoD,4BAKHZ,EAAAhsD,UAAAwsD,aAAR,WACE1sD,KAAK2sD,QAAQ1lD,SAAQ,SAAC8lD,EAAQ90C,GAAU,OAAA80C,EAAOlB,eAAe5zC,MAC9DjY,KAAKumD,eAAe9D,QAAQvqC,OAAOlY,KAAK2sD,QAAQhsD,QAChDX,KAAK8jD,KAAK78C,SAAQ,SAAA88C,GAAO,OAAAA,EAAI8H,qBAKvBK,EAAAhsD,UAAA2sD,oBAAR,WACE,OAAK7sD,KAAKmsD,YAAcnsD,KAAKstC,KAAK7wB,KAAO,GACnCzc,KAAK43C,MAAMt4B,UAAU3e,SAAWX,KAAKstC,KAAK7wB,MAO3CyvC,EAAAhsD,UAAAusD,iBAAP,SAAwB37C,GAAxB,IAAArM,EAAAzE,KACMA,KAAK2sD,UACH77C,IAAU9Q,KAAKumD,eAAe3D,YAChC5iD,KAAKumD,eAAevT,QACpBhzC,KAAK2sD,QAAQ1lD,SAAQ,SAAC8lD,EAAQ90C,GACxBA,EAAQ,GACVxT,EAAK8hD,eAAetD,kBAAkBhrC,EAAO,CAC3CL,QAAS,CAACskC,GAAsB0K,QAChCF,OAAQ51C,QAIJA,GACV9Q,KAAKumD,eAAe1D,qBAelBqJ,EAAAhsD,UAAA4sD,sBAAR,WAEE,IAAM5qD,EAAgBlC,KAAKglC,WAAWxD,WAAWxhC,KAAK+Y,GAAGnS,eAAeiC,OACxE7I,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,SAAU1E,EAAQ,MAChElC,KAAKmsD,YAAa,GAGZD,EAAAhsD,UAAAssD,oBAAR,WACExsD,KAAKsE,SAAS0I,SAAShN,KAAK+Y,GAAGnS,cAAe,SAAU,IACxD5G,KAAKmsD,YAAa,GAKpBD,EAAAhsD,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAMhCqmD,EAAAhsD,UAAAosD,oBAAR,WAAA,IAAA7nD,EAAAzE,KACQgtD,EAAoBhtD,KAAK2sD,QAAQhsD,OACnCssD,GAAY,EAChBjtD,KAAK2sD,QAAQ1lD,SAAQ,SAAC8lD,EAAQ90C,GAK5B,IAAMnH,EAAK1Q,EAAA,CACTwX,QAAS,CAACskC,GAAsB+O,QAC7B8B,EAAOnB,uBAGP96C,EAAMs6C,cACT6B,GAAY,GAGVD,IAAc/0C,EAAQ,GAAKg1C,IAC7Bn8C,EAAMs6C,YAAc,GAGtB3mD,EAAK8hD,eAAetD,kBAAkBhrC,EAAOnH,OAgBzCo7C,EAAAhsD,UAAA0sD,iBAAR,WACE5sD,KAAKqsD,wBAAyB,EAC1BrsD,KAAKosD,oBAKLpsD,KAAK43C,MAAMt4B,UAAU3e,OAAS,IAChCX,KAAKqjD,UAAU9H,SACfv7C,KAAKosD,oBAAqB,6CA7KTpR,UACJhE,UACDtK,UACMpL,UACR3yB,EAAAA,kBACMxH,EAAAA,iBACKyrC,UACGsP,UACFM,MAmBe1hD,EAAA,CAAxC4X,EAAAA,gBAAgB2yC,mCAEjBvqD,EAAA,CADC4X,EAAAA,gBAAgBqzC,GAAqB,CAAE3qC,aAAa,gCA9B1C8qC,EAAoBprD,EAAA,CAJhCiC,EAAAA,UAAU,CACTC,SAAU,eACVwO,UAAW,CAAC,CAAEC,QAAS6vB,GAAYxqB,WAAYm1C,GAAmBiB,KAAM,CAAChhD,EAAAA,kBAE9DggD,GAAb,GCQaiB,GAAuC,CAElD/J,GACAmB,GACAG,GACA/P,GACA8Q,GACAoB,GACAsC,GACApa,GACAqJ,GACAoR,GACA3J,GACAsK,GACA1C,GACA7M,GACA8N,GACAiB,GACAF,GACAxQ,GACAqN,GACAD,GACAwB,GACAG,GACAL,GACAa,GACA9N,GACAnG,GACA6K,GAGA8M,GACAb,GACAU,GACAnB,GAGApY,GACAC,GACAa,GAGA7C,GACAW,IAuBFgc,GAAA,WAAA,SAAAA,KAAgC,OAAnBA,EAAiBtsD,EAAA,CApB7BqC,EAAAA,SAAS,CACRC,QAAS,CACPC,EAAAA,aACAH,EACA49B,GACAvD,EAAAA,YACAyD,GACAha,GACAqa,GACA0J,GACAR,GACAkB,GACAx8B,EACA0Z,GACAwjB,IAEF7oC,aAAc,CAAC6pD,IACf5pD,QAAS,CAAC4pD,IACV1yC,gBAAiB,CAACigC,GAAanG,GAAe6K,OAEnCgO,GAAb,iBCZE,SAAAC,EAGUC,EACkBC,EACnBj2C,GAFCtX,KAAAstD,OAAAA,EACkBttD,KAAAutD,SAAAA,EACnBvtD,KAAAsX,cAAAA,EAtDTtX,KAAA0mB,UAAoB,EACW1mB,KAAA4mB,eAAwC,IAAIna,EAAAA,cAAsB,GAGjGzM,KAAAsmB,YAAsB,EAEtBtmB,KAAAy4B,SAAmB,EACXz4B,KAAAwtD,iBAA2B,EAC3BxtD,KAAAytD,mBAA6B,EAC7BztD,KAAA0tD,UAAoB,EA+CtBJ,GACFA,EAAOK,WAqDb,OAlGEnuD,OAAAgC,eAAI6rD,EAAAntD,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAK0tD,UAAa1tD,KAAKwtD,iBAAmB,IAAMxtD,KAAK0mB,0CAI9DlnB,OAAAgC,eAAI6rD,EAAAntD,UAAA,kBAAe,KAAnB,SAAoBgC,GAClBlC,KAAK0tD,SAAWxrD,EAEZlC,KAAKstD,QAAUttD,KAAKytD,oBAClBvrD,EACFlC,KAAKstD,OAAOE,mBAEZxtD,KAAKstD,OAAOE,qDAqClBH,EAAAntD,UAAA2f,SAAA,WAGE7f,KAAKytD,mBAAoB,GAG3BJ,EAAAntD,UAAAytD,SAAA,WACE3tD,KAAKsmB,YAAa,GAGpB+mC,EAAAntD,UAAA6gD,aAAA,WACM/gD,KAAKsmB,aACPtmB,KAAK0mB,UAAY1mB,KAAK0mB,SACtB1mB,KAAK4mB,eAAehZ,KAAK5N,KAAK0mB,YAIlClnB,OAAAgC,eAAI6rD,EAAAntD,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAK0mB,SAAW,OAAS,yCAGlClnB,OAAAgC,eAAI6rD,EAAAntD,UAAA,aAAU,KAAd,WACE,OAAOF,KAAK0mB,SAAW1mB,KAAKsX,cAAcnB,KAAKnE,SAAWhS,KAAKsX,cAAcnB,KAAKpE,wCAGpFvS,OAAAgC,eAAI6rD,EAAAntD,UAAA,OAAI,KAAR,WACE,OAAOF,KAAKsmB,WAAa,SAAW,sCAGtC9mB,OAAAgC,eAAI6rD,EAAAntD,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKsmB,WAAa,IAAM,sCAIjC9mB,OAAAgC,eAAI6rD,EAAAntD,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAKsmB,aAAetmB,KAAK0mB,UAAY1mB,KAAKy4B,yCAGnDj5B,OAAAgC,eAAI6rD,EAAAntD,UAAA,eAAY,KAAhB,WACE,OAAKF,KAAKsmB,WAGDtmB,KAAK0mB,SAAW,OAAS,QAFzB,sCAMX2mC,EAAAntD,UAAA0tD,mBAAA,WACE,OAAO5tD,KAAK0mB,SAAW,sBAAsB1mB,KAAKutD,SAAa,+CAxD/CF,EAAatsD,WAAA,CAAA,CAAAsG,KAF5B8J,EAAAA,UAAQ,CAAA9J,KACRqI,EAAAA,2CAEApI,EAAAA,OAAMC,KAAA,CAACkP,YACcd,KAtDxB7U,EAAA,CAFCmf,EAAAA,YAAY,8BACZjS,EAAAA,MAAM,iDAEwBlN,EAAA,CAA9BsN,EAAAA,OAAO,6DAGRtN,EAAA,CAFCmf,EAAAA,YAAY,gCACZjS,EAAAA,MAAM,qDASPlN,EAAA,CADCmf,EAAAA,YAAY,kEAMbnf,EAAA,CADCkN,EAAAA,MAAM,0DAgBqBlN,EAAA,CAA3BkN,EAAAA,MAAM,sDAKuBlN,EAAA,CAA7BkN,EAAAA,MAAM,0DAKwBlN,EAAA,CAA9BkN,EAAAA,MAAM,4DAqDPlN,EAAA,CADCmf,EAAAA,YAAY,yDAjGFotC,EAAavsD,EAAA,CApDzByQ,EAAAA,UAAU,CACTvO,SAAU,kBACVqJ,SAAU,6iDA+CVtF,KAAM,CAAE8mD,sBAAuB,QAC/Br8C,UAAW,CAACqF,WARV,6DA+DCpV,EAAA,EAAA0P,EAAAA,YACA1P,EAAA,EAAAiO,EAAAA,YAEAjO,EAAA,EAAA6F,EAAAA,OAAOmP,KAxDC42C,oBCzCb,SAAAS,IAIE9tD,KAAA+tD,UAAoB,EAEI/tD,KAAAguD,KAA2B,IAAIvhD,EAAAA,cAAmB,GAElEzM,KAAAiuD,WAAqB,EAE7BjuD,KAAAkuD,cAAuC,IAAIzhD,EAAAA,cAAsB,GAkBnE,OAhBEjN,OAAAgC,eAAIssD,EAAA5tD,UAAA,UAAO,KAAX,WACE,OAAOF,KAAK+tD,UAAY/tD,KAAKiuD,eAG/B,SAAY/rD,GACNlC,KAAK+tD,WACP/tD,KAAKiuD,UAAY/rD,EACjBlC,KAAKkuD,cAActgD,KAAK1L,GACnBA,GACHlC,KAAKguD,KAAKpgD,KAAK,wCAfG9M,EAAA,CAAvBsN,EAAAA,OAAO,4CANG0/C,EAAYhtD,EAAA,CAbxByQ,EAAAA,UAAU,CACTvO,SAAU,iBACVqJ,SAAU,+IAMR,gDAKSyhD,oBCaX,SAAAK,EAAmBC,GAAApuD,KAAAouD,UAAAA,EACrB,gDADgCN,MADnBK,EAAcrtD,EAAA,CAxB1ByQ,EAAAA,UAAU,CACTvO,SAAU,mBACVqJ,SAAU,uqBAiBR,gDAKS8hD,MC3BbE,GAWE,SAAsBD,GAAtB,IAAA3pD,EAAAzE,KAAsBA,KAAAouD,UAAAA,EAFtBpuD,KAAAsuD,YAAiC,IAAI7hD,EAAAA,cAAkB,GAIrDzM,KAAKouD,UAAUL,UAAW,EAC1B/tD,KAAKouD,UAAUF,cAAcppD,WAAU,SAACypD,GAEjCA,GACH9pD,EAAK6pD,YAAY1gD,KAAKnJ,EAAK0jD,WCjBnCqG,GAAA,SAAA1sC,GAuBE,SAAA0sC,EAAmBJ,GAAnB,IAAA3pD,EACEqd,EAAAlhB,KAAAZ,KAAMouD,IAAUpuD,YADCyE,EAAA2pD,UAAAA,EAFnB3pD,EAAA4C,KAAe,SAKjB,OANmCvH,EAAA0uD,EAAA1sC,4CAGHgsC,MAHnBU,EAAa1tD,EAAA,CATzByQ,EAAAA,UAAU,CACTvO,SAAU,kBACVyrD,OAAQ,CAAC,kBAAmB,QAC5BC,QAAS,CAAC,+BACVriD,SAAU,qJAKCmiD,GApBb,CAoBmCH,ICpBnCM,GAAA,SAAA7sC,GAwBE,SAAA6sC,EAAmBP,GAAnB,IAAA3pD,EACEqd,EAAAlhB,KAAAZ,KAAMouD,IAAUpuD,YADCyE,EAAA2pD,UAAAA,IAGrB,OAJoCtuD,EAAA6uD,EAAA7sC,4CACJgsC,MADnBa,EAAc7tD,EAAA,CAb1ByQ,EAAAA,UAAU,CACTvO,SAAU,mBACVyrD,OAAQ,CAAC,mBACTC,QAAS,CAAC,+BACVriD,SAAU,4PASCsiD,GAvBb,CAuBoCN,kBCpBpC,SAAAO,KAGA,OAHaA,EAAsB9tD,EAAA,CADlCiC,EAAAA,UAAU,CAAEC,SAAU,wCACV4rD,oBCQX,SAAAC,EAAsCtB,GAAAvtD,KAAAutD,SAAAA,EACxC,yEADejmD,EAAAA,OAAMC,KAAA,CAACkP,QADTo4C,EAAoB/tD,EAAA,CAPhCiC,EAAAA,UAAU,CACTC,SAAU,kBACV+D,KAAM,CACJqd,oBAAqB,OACrB0qC,yBAA0B,cAIfrtD,EAAA,EAAA6F,EAAAA,OAAOmP,KADTo4C,MCKAE,GAAyC,CACpDjB,GACAK,GACAd,GACAwB,GACAD,GAIAJ,GACAG,IAWFK,GAAA,WAAA,SAAAA,KAAiC,OAApBA,EAAkBluD,EAAA,CAL9BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAck6B,EAAAA,YAAar6B,EAAe6nC,IACpDznC,aAAc,CAACyrD,IACfxrD,QAAS,CAACwrD,OAECC,GAAb,GCnCA,SAEgBC,GAAahuD,GAC3B,OAAIA,IAAQ8nD,GAASmG,SAAWjuD,IAAQ+nD,GAAWkG,QAC1CnG,GAASmG,QACPjuD,IAAQ8nD,GAASoG,WAAaluD,IAAQ+nD,GAAWmG,UACnDpG,GAASoG,UACPluD,IAAQ8nD,GAASqG,YAAcnuD,IAAQ+nD,GAAWoG,WACpDrG,GAASqG,WACPnuD,IAAQ8nD,GAASsG,WAAapuD,IAAQ+nD,GAAWqG,UACnDtG,GAASsG,UACPpuD,IAAQ8nD,GAASuG,OAASruD,IAAQ+nD,GAAWsG,MAC/CvG,GAASuG,MACPruD,IAAQ8nD,GAASwG,QAAUtuD,IAAQ+nD,GAAWuG,OAChDxG,GAASwG,OAETtuD,EAIX,SAAgBuuD,GAAsBzrD,GACpC,IAAM0rD,EAAWR,GAAalrD,EAAM9C,KAGlCwuD,IAAa1G,GAASmG,SACtBO,IAAa1G,GAASoG,WACtBM,IAAa1G,GAASsG,WACtBI,IAAa1G,GAASqG,YAKtBrrD,EAAMoxB,iBAIV,SAAgBu6B,GAAY3rD,GAI1B,YADyC8e,IAAf9e,EAAM4rD,KACL3G,GAAaD,IvBxC1C,SAAYA,GACVA,EAAA,UAAA,YACAA,EAAA,QAAA,UACAA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,UAAA,YACAA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MAXF,CAAYA,KAAAA,GAAQ,KAcpB,SAAYC,GACVA,EAAA,QAAA,KACAA,EAAA,UAAA,OACAA,EAAA,WAAA,QACAA,EAAA,UAAA,OACAA,EAAA,MAAA,WACAA,EAAA,OAAA,MACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,IAAA,MAVF,CAAYA,KAAAA,GAAU,MCbVC,GAAAA,EAAAA,mBAAAA,EAAAA,iBAAgB,KAI1BA,GAAA,WAAA,GAAA,aACAA,GAAAA,GAAA,SAAA,GAAA,WACAA,GAAAA,GAAA,cAAA,GAAA,gBuBJF,IAAA2G,GAAA,WAAA,SAAAA,IAGE5vD,KAAAg+C,SAAW,IAAInjC,EAAAA,gBAAkCouC,EAAAA,iBAAiB4G,YAiBlE7vD,KAAA+Q,SAAU,EA0EZ,OAxEE6+C,EAAA1vD,UAAAw0C,QAAA,WAEE10C,KAAKg+C,SAAS8R,YAIhBF,EAAA1vD,UAAAs+C,YAAA,SAAY1tC,EAAyBi/C,EAAsBC,GACrDl/C,IAAU9Q,KAAKg+C,SAAS97C,QAG5BlC,KAAKg+C,SAAS/7C,KAAK6O,GACfk/C,GAAiBl/C,IAAUm4C,EAAAA,iBAAiBgH,eAAiBjwD,KAAKkwD,UACpElwD,KAAKkwD,SAASjpD,SAAQ,SAAAkpD,GAAS,OAAAA,EAAM3R,YAAY1tC,GAAO,GAAO,MAE7Di/C,GAAe/vD,KAAKstD,QACtBttD,KAAKstD,OAAO8C,iCAIhBR,EAAA1vD,UAAAmwD,gBAAA,SAAgBC,GAEd,IAAMC,EACJvwD,KAAKg+C,SAAS97C,QAAU+mD,EAAAA,iBAAiBuH,SAAWvH,EAAAA,iBAAiB4G,WAAa5G,EAAAA,iBAAiBuH,SAGrGxwD,KAAKw+C,YAAY+R,GAAU,EAAMD,IAG3BV,EAAA1vD,UAAAuwD,kCAAR,mBACMC,GAAc,EACdC,GAAgB,MAEpB,IAAoB,IAAA9iB,EAAAjsC,EAAA5B,KAAKkwD,UAAQpiB,EAAAD,EAAA5rC,QAAA6rC,EAAA3rC,KAAA2rC,EAAAD,EAAA5rC,OAAE,CACjC,OADc6rC,EAAA5rC,MACA87C,SAAS97C,OACrB,KAAK+mD,EAAAA,iBAAiBgH,cACpB,OAAOhH,EAAAA,iBAAiBgH,cAC1B,KAAKhH,EAAAA,iBAAiBuH,SAEpB,GADAE,GAAc,EACVC,EACF,OAAO1H,EAAAA,iBAAiBgH,cAE1B,MACF,KAAKhH,EAAAA,iBAAiB4G,WACtB,QAGE,GADAc,GAAgB,EACZD,EACF,OAAOzH,EAAAA,iBAAiBgH,iHAKhC,OAAKS,EAEOC,OAAL,EACE1H,EAAAA,iBAAiBuH,SAFjBvH,EAAAA,iBAAiB4G,YAS5BD,EAAA1vD,UAAAkwD,6BAAA,WACE,IAAMG,EAAWvwD,KAAKywD,oCAClBF,IAAavwD,KAAKg+C,SAAS97C,QAG/BlC,KAAKg+C,SAAS/7C,KAAKsuD,GACfvwD,KAAKstD,QACPttD,KAAKstD,OAAO8C,iCAGlBR,EA9FA,GCGAgB,GAAA,SAAA9uC,GACE,SAAA8uC,EAAYtD,GAAZ,IAAA7oD,EACEqd,EAAAlhB,KAAAZ,OAAOA,YACPyE,EAAK6oD,OAASA,EACVA,GACFA,EAAOuD,UAAUpsD,GAEnBA,EAAKyrD,SAAW,KAwBpB,OA/BiDpwD,EAAA8wD,EAAA9uC,GAc/C8uC,EAAA1wD,UAAA2wD,UAAA,SAAUV,GACRnwD,KAAKkwD,SAAS1tD,KAAK2tD,IAGrBS,EAAA1wD,UAAA4wD,aAAA,SAAaX,GACX,IAAMl4C,EAAQjY,KAAKkwD,SAASt/C,QAAQu/C,GAChCl4C,GAAS,GACXjY,KAAKkwD,SAASh4C,OAAOD,EAAO,IAIhC24C,EAAA1wD,UAAAw0C,QAAA,WACM10C,KAAKstD,QACPttD,KAAKstD,OAAOwD,aAAa9wD,MAE3B8hB,EAAA5hB,UAAMw0C,QAAO9zC,KAAAZ,OAEjB4wD,EA/BA,CAAiDhB,kBCDjD,SAAAmB,IACE/wD,KAAAgxD,YAAa,EACbhxD,KAAAixD,OAAQ,EAKRjxD,KAAAkxD,gBAAiC,IAAIvtD,EAAAA,QACvC,OARaotD,EAAmBjwD,EAAA,CAD/BsD,EAAAA,cACY2sD,eAUGI,GAAuBC,GACrC,OAAOA,GAAY,IAAIL,GAGzB,IAAaM,GAAyB,CACpC5/C,QAASs/C,GACTj6C,WAAYq6C,GASZjE,KAAM,CAAC,CAAC,IAAIx9C,EAAAA,SAAY,IAAIyB,EAAAA,SAAY4/C,oBC1B1C,SAAAO,IAKUtxD,KAAAuxD,cAAiC,IAAI5tD,EAAAA,QAErC3D,KAAAwxD,aAAgC,IAAI7tD,EAAAA,QAoH9C,OAlHEnE,OAAAgC,eAAI8vD,EAAApxD,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKuxD,cAAc1tD,gDAG5BrE,OAAAgC,eAAI8vD,EAAApxD,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKwxD,aAAa3tD,gDAGnBytD,EAAApxD,UAAAuxD,aAAR,SAAqBtJ,GAEnB,OAAIA,EAAMmF,OACDnF,EAAMmF,OAAO4C,SAEblwD,KAAK0xD,gBAIRJ,EAAApxD,UAAAyxD,sBAAR,SAA8BxJ,GAE5B,GAAKA,EAAL,CAGA,GAAIA,EAAMzhC,UAAYyhC,EAAM+H,SAASvvD,OAAS,EAAG,CAC/C,IAAMuvD,EAAW/H,EAAM+H,SACjB0B,EAAY1B,EAASA,EAASvvD,OAAS,GAC7C,OAAOX,KAAK2xD,sBAAsBC,GAElC,OAAOzJ,IAIHmJ,EAAApxD,UAAA2xD,kBAAR,SAA0B1J,GACxB,GAAKA,EAAL,CAIA,IAAM2J,EAAW9xD,KAAKyxD,aAAatJ,GAC7B4J,EAAYD,EAASlhD,QAAQu3C,GAEnC,OAAI4J,EAAYD,EAASnxD,OAAS,EACzBmxD,EAASC,EAAY,GACnBA,IAAcD,EAASnxD,OAAS,EAClCX,KAAK6xD,kBAAkB1J,EAAMmF,aAD/B,IAKDgE,EAAApxD,UAAA8xD,sBAAR,WACE,IAAMC,EACJjyD,KAAK0xD,gBAAkB1xD,KAAK0xD,eAAe/wD,QAAUX,KAAK0xD,eAAe1xD,KAAK0xD,eAAe/wD,OAAS,GACxG,OAAOX,KAAK2xD,sBAAsBM,IAG5BX,EAAApxD,UAAAgyD,cAAR,SAAsB/J,GACpB,GAAKA,EAAL,CAIA,IAAM2J,EAAW9xD,KAAKyxD,aAAatJ,GAC7B4J,EAAYD,EAASlhD,QAAQu3C,GAEnC,OAAkB,IAAd4J,EACK5J,EAAMmF,OACJyE,EAAY,EACd/xD,KAAK2xD,sBAAsBG,EAASC,EAAY,SADlD,IAKDT,EAAApxD,UAAAiyD,cAAR,SAAsBhK,GACpB,GAAKA,EAIL,OAAIA,EAAMzhC,UAAYyhC,EAAM+H,SAASvvD,OAAS,EACrCwnD,EAAM+H,SAAS,GAEflwD,KAAK6xD,kBAAkB1J,IAIlCmJ,EAAApxD,UAAAkyD,UAAA,SAAUjK,GACJA,GACFnoD,KAAKuxD,cAActvD,KAAKkmD,EAAMkK,SAIlCf,EAAApxD,UAAAoyD,qBAAA,SAAqBD,GACfryD,KAAKuyD,gBAAkBF,IACzBryD,KAAKuyD,cAAgBF,EACrBryD,KAAKwxD,aAAavvD,KAAKowD,KAI3Bf,EAAApxD,UAAAsyD,YAAA,SAAYrK,GACNA,GACFnoD,KAAKoyD,UAAUjK,EAAMmF,SAIzBgE,EAAApxD,UAAAuyD,sBAAA,WACE,IAAMC,EAAa1yD,KAAK0xD,gBAAkB1xD,KAAK0xD,eAAe,GAC9D1xD,KAAKoyD,UAAUM,IAGjBpB,EAAApxD,UAAAyyD,qBAAA,WACE3yD,KAAKoyD,UAAUpyD,KAAKgyD,0BAGtBV,EAAApxD,UAAA0yD,eAAA,SAAezK,GACbnoD,KAAKoyD,UAAUpyD,KAAKkyD,cAAc/J,KAGpCmJ,EAAApxD,UAAA2yD,eAAA,SAAe1K,GACbnoD,KAAKoyD,UAAUpyD,KAAKmyD,cAAchK,KAzHzBmJ,EAAuBxwD,EAAA,CADnCsD,EAAAA,cACYktD,oBCEX,SAAAwB,EAAoB/5C,GAAA/Y,KAAA+Y,GAAAA,EAOtB,OALE+5C,EAAA5yD,UAAA6yD,SAAA,WACM/yD,KAAK+Y,GAAGnS,eAAiB5G,KAAK+Y,GAAGnS,cAAcosD,OACjDhzD,KAAK+Y,GAAGnS,cAAcosD,kDAJFrkD,EAAAA,cADbmkD,EAAehyD,EAAA,CAH3BiC,EAAAA,UAAU,CACTC,SAAU,wBAEC8vD,MCsDbG,GAAA,WAIE,SAAAA,EAC4BZ,EACG3oD,EAG7B4jD,EACO4F,EACAC,EACA77C,EACC87C,EACR/wC,GAT0BriB,KAAAqyD,OAAAA,EACGryD,KAAA0J,WAAAA,EAItB1J,KAAAkzD,gBAAAA,EACAlzD,KAAAmzD,cAAAA,EACAnzD,KAAAsX,cAAAA,EACCtX,KAAAozD,aAAAA,EAZVpzD,KAAAqzD,OAASpK,EAAAA,iBACDjpD,KAAAszD,gBAAiB,EAgEItzD,KAAAuzD,eAAiB,IAAI9mD,EAAAA,cAA+B,GAqBpDzM,KAAA4mB,eAAiB,IAAIna,EAAAA,aAE1CzM,KAAA4E,cAAgC,GAExC5E,KAAAwzD,0BAA4B,EA3EtBxzD,KAAKkzD,gBAAgBO,UAKbpxC,EAAUtV,KAClB/M,KAAK0zD,OAAerxC,EAAUtV,KAAK4mD,QAAQC,SAI3C5zD,KAAK0zD,OAAerxC,EAAUwxC,OAlDV,GAkDsCD,SAI5D5zD,KAAK0zD,OAAS,IAAI9C,GAAyBtD,EAAsCA,EAAOoG,OAAS,MAEnG1zD,KAAK0zD,OAAOrB,OAASryD,KAAKqyD,OAoM9B,OA/LEY,EAAA/yD,UAAA4zD,aAAA,WACE,YAA+B,IAApB9zD,KAAKsmB,WACPtmB,KAAKsmB,aAELtmB,KAAKmzD,cAAc7sC,YAAetmB,KAAK0zD,OAAOxD,UAAYlwD,KAAK0zD,OAAOxD,SAASvvD,OAAS,GAInGnB,OAAAgC,eAAIyxD,EAAA/yD,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK0zD,OAAO1V,SAAS97C,WAE9B,SAAaA,GACXlC,KAAKkzD,gBAAgBlC,YAAa,EAG9B9uD,MAAAA,IACFA,EAAQ+mD,EAAAA,iBAAiB4G,YAGN,kBAAV3tD,IACTA,EAAQA,EAAQ+mD,EAAAA,iBAAiBuH,SAAWvH,EAAAA,iBAAiB4G,YAI/D7vD,KAAKszD,gBAAiB,EACtBtzD,KAAK0zD,OAAOlV,YAAYt8C,EAAOlC,KAAKkzD,gBAAgBjC,MAAOjxD,KAAKkzD,gBAAgBjC,OAChFjxD,KAAKszD,gBAAiB,mCAKxB9zD,OAAAgC,eAAIyxD,EAAA/yD,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKkzD,gBAAgBlC,WAAahxD,KAAK0zD,OAAO1V,SAAS97C,QAAU+mD,EAAAA,iBAAiBuH,SAAW,sCAWtGhxD,OAAAgC,eAAIyxD,EAAA/yD,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKmzD,cAAczsC,cAE5B,SAAaxkB,GACXlC,KAAKmzD,cAAczsC,SAAWxkB,mCAWhC+wD,EAAA/yD,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAK0zD,OAAOhtC,SAAW1mB,KAAK0mB,SAC5B1mB,KAAK4E,cAAcpC,KACjBxC,KAAK0zD,OAAO1V,SAASx4C,KAAKC,EAAAA,QAAO,WAAM,OAAChB,EAAK6uD,mBAAiBxuD,WAAU,SAAA5C,GACtEuC,EAAK8uD,eAAe3lD,KAAK1L,OAG7BlC,KAAK4E,cAAcpC,KACjBxC,KAAKmzD,cAAcrsC,aAAahiB,WAAU,SAAA5C,GACxCuC,EAAKmiB,eAAehZ,KAAK1L,GACzBuC,EAAKivD,OAAOhtC,SAAWxkB,MAG3BlC,KAAK4E,cAAcpC,KACjBxC,KAAKozD,aAAaW,aAAajvD,WAAU,SAAAutD,GACnC5tD,EAAK4tD,SAAWA,GAClB5tD,EAAKuvD,mBAGTh0D,KAAKozD,aAAaz8B,YAAY7xB,WAAU,SAAAutD,GACtC5tD,EAAKwvD,cAAc5B,QAKzBY,EAAA/yD,UAAA8G,YAAA,WACEhH,KAAK0zD,OAAOhf,UACZ10C,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAQxCrG,OAAAgC,eAAIyxD,EAAA/yD,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKk0D,kBAAoBl0D,KAAKk0D,iBAAiBlkC,uCAGhDijC,EAAA/yD,UAAAi0D,YAAR,SAAoBjyD,GAClBlC,KAAKwzD,yBAA2BtxD,EAChClC,KAAKo0D,iBAAiBxtD,cAAc0S,aAAa,WAAYpX,IAGvD+wD,EAAA/yD,UAAA+zD,cAAR,SAAsB5B,GAChBroD,EAAAA,kBAAkBhK,KAAK0J,aAAe1J,KAAKqyD,SAAWA,IAA6C,IAAnCryD,KAAKwzD,0BACvExzD,KAAKm0D,aAAa,IAItBlB,EAAA/yD,UAAA8zD,cAAA,WACMhqD,EAAAA,kBAAkBhK,KAAK0J,aAAelF,SAASikB,gBAAkBzoB,KAAKo0D,iBAAiBxtD,gBACzF5G,KAAKm0D,YAAY,GACjBn0D,KAAKo0D,iBAAiBxtD,cAAcR,UAIxC6sD,EAAA/yD,UAAAm0D,0BAAA,WACEr0D,KAAKozD,aAAad,qBAAqBtyD,KAAKqyD,SAG9CY,EAAA/yD,UAAA+0B,UAAA,SAAUlxB,GAQR,OAHAyrD,GAAsBzrD,GAGdkrD,GAAalrD,EAAM9C,MACzB,KAAK8nD,GAASmG,QACZlvD,KAAKozD,aAAaR,eAAe5yD,KAAK0zD,QACtC,MACF,KAAK3K,GAASoG,UACZnvD,KAAKozD,aAAaP,eAAe7yD,KAAK0zD,QACtC,MACF,KAAK3K,GAASqG,WACZpvD,KAAKs0D,0BACL,MACF,KAAKvL,GAASsG,UACZrvD,KAAKu0D,wBACL,MACF,KAAKxL,GAASyL,KACZx0D,KAAKozD,aAAaX,wBAClB,MACF,KAAK1J,GAAS0L,IACZz0D,KAAKozD,aAAaT,uBAClB,MACF,KAAK5J,GAAS2L,MACZ10D,KAAK20D,uBACL,MACF,KAAK5L,GAASuG,MAEZvrD,EAAMoxB,iBACNn1B,KAAK20D,yBAOH1B,EAAA/yD,UAAAo0D,wBAAR,WACMt0D,KAAK0mB,SAEH1mB,KAAK0zD,OAAOxD,SAASvvD,OAAS,GAChCX,KAAKozD,aAAaP,eAAe7yD,KAAK0zD,QAKpC1zD,KAAK8zD,iBACP9zD,KAAKmzD,cAAczsC,UAAW,IAK5BusC,EAAA/yD,UAAAq0D,sBAAR,WACMv0D,KAAK0mB,SACP1mB,KAAKmzD,cAAczsC,UAAW,EAE9B1mB,KAAKozD,aAAaZ,YAAYxyD,KAAK0zD,SAI/BT,EAAA/yD,UAAAy0D,qBAAR,WACM30D,KAAK40D,aACP50D,KAAK40D,aAAa7B,WAEd/yD,KAAKkzD,gBAAgBlC,YACvBhxD,KAAK0zD,OAAOrD,gBAAgBrwD,KAAKkzD,gBAAgBjC,0EA3NpD3pD,EAAAA,OAAMC,KAAA,CAACkP,YACiCjX,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,sBAGA+mD,EAAWlyD,WAAA,CAAA,CAAAsG,KAFlBqI,EAAAA,UAAQ,CAAArI,KACR8J,EAAAA,kBAEuB4/C,UACF1qC,UACA1Q,SACA27C,UACZttC,EAAAA,YA+BZljB,EAAA,CADCkN,EAAAA,MAAM,6CAsBsBlN,EAAA,CAA5BsN,EAAAA,OAAO,2DAQgBtN,EAAA,CAAvBkN,EAAAA,MAAM,mDAMPlN,EAAA,CADCkN,EAAAA,MAAM,6CAQsBlN,EAAA,CAA5BsN,EAAAA,OAAO,2DAMRtN,EAAA,CADCsQ,EAAAA,UAAU,mBAAoB,CAAEi+B,KAAM1gC,EAAAA,WAAY0C,QAAQ,4CAoC3DvQ,EAAA,CADC4X,EAAAA,gBAAgBo6C,GAAiB,CAAE1xC,aAAa,4CA/HtC6xC,EAAWnyD,EAAA,CAtBvByQ,EAAAA,UAAU,CACTvO,SAAU,gBACVqJ,SAAA,yzEACAmF,UAAW,CACTqF,EACAw6C,GACAhrC,GACA,CAAE5U,QAASvC,EAAiBwC,YAAa2U,KAE3C1M,WAAY,CACVC,EAAAA,QAAQ,qBAAsB,CAC5BC,EAAAA,WAAW,wBAAyB,CAACC,EAAAA,MAAM,CAAEjR,OAAQ,IAAMmR,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEjR,OAAQ,SACxFgR,EAAAA,WAAW,wBAAyB,CAACC,EAAAA,MAAM,CAAEjR,OAAQ,MAAQmR,EAAAA,QAAQ,IAAKF,EAAAA,MAAM,CAAEjR,OAAQ,OAC1FiI,EAAAA,MAAM,WAAYgJ,EAAAA,MAAM,CAAEjR,OAAQ,IAAKgsD,aAAc,aACrD/jD,EAAAA,MAAM,YAAagJ,EAAAA,MAAM,CAAEjR,OAAQ,QAGvC9B,KAAM,CACJ+tD,cAAe,aACfC,wBAAyB,UAQxBtzD,EAAA,EAAA6F,EAAAA,OAAOmP,IACPhV,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,cACPzK,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA0P,EAAAA,aARQ8hD,GAAb,iBC7BE,SAAA+B,EACS9B,EACC+B,EACAl8C,GAFD/Y,KAAAkzD,gBAAAA,EACClzD,KAAAi1D,oBAAAA,EACAj1D,KAAA+Y,GAAAA,EAGF/Y,KAAA4E,cAAgC,GAOxC5E,KAAAk1D,SAAW,EAwCb,OA5CE11D,OAAAgC,eAAIwzD,EAAA90D,UAAA,OAAI,KAAR,SAASgC,GACPlC,KAAKkzD,gBAAgBjC,OAAS/uD,mCAKhC1C,OAAAgC,eAAIwzD,EAAA90D,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAKkzD,gBAAgBlC,YAAchxD,KAAKiN,UAAUtM,OAAS,mCAIpEq0D,EAAA90D,UAAAynB,UAAA,SAAU5jB,GACJA,EAAM/C,SAAWhB,KAAK+Y,GAAGnS,gBAG3B5G,KAAKi1D,oBAAoBxC,+BAIlBzyD,KAAKk1D,WAMhBF,EAAA90D,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAKm1D,eACLn1D,KAAK4E,cAAcpC,KACjBxC,KAAKiN,UAAU2K,QAAQ9S,WAAU,WAC/BL,EAAK0wD,oBAKHH,EAAA90D,UAAAi1D,aAAR,WAIEn1D,KAAKi1D,oBAAoBvD,eAAiB1xD,KAAKiN,UAAUsP,KAAI,SAAApP,GAAQ,OAAAA,EAAKumD,UAAQjuD,QAAO,SAAA0H,GAAQ,OAACA,EAAKmgD,WAGzG0H,EAAA90D,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAlDdkrD,UACKO,UACjB3iD,EAAAA,cAMd7N,EAAA,CADCkN,EAAAA,MAAM,qCAYPlN,EAAA,CADCuN,EAAAA,aAAa,UAAW,CAAC,0CAaIvN,EAAA,CAA7B4X,EAAAA,gBAAgBu6C,qCAjCN+B,EAAOl0D,EAAA,CAdnByQ,EAAAA,UAAU,CACTvO,SAAU,WACVqJ,SAAU,wMAKVmF,UAAW,CAAC6/C,GAAwBC,IACpCvqD,KAAM,CACJquD,kBAAmB,WACnBN,cAAe,SACfO,8BAA+B,wBAGtBL,MCnBb,ICVYM,GDUZC,GAAA,SAAAzzC,GACE,SAAAyzC,EACEpN,EACAmF,EACQkI,EACAtC,GAJV,IAAAzuD,EAMEqd,EAAAlhB,KAAAZ,OAAOA,YAHCyE,EAAA+wD,YAAAA,EACA/wD,EAAAyuD,gBAAAA,EASFzuD,EAAAysD,iBAAkB,EA0ClBzsD,EAAAgxD,UAAyC,GAhD/ChxD,EAAK0jD,MAAQA,EACb1jD,EAAK6oD,OAASA,IAgElB,OAzE+CxtD,EAAAy1D,EAAAzzC,GAgB7CyzC,EAAAr1D,UAAAw1D,cAAA,WACE11D,KAAKy1D,UAAUxuD,SAAQ,SAAAkpD,GAAS,OAAAA,EAAMzb,oBAC/B10C,KAAKy1D,UACZz1D,KAAKkxD,iBAAkB,GAGzBqE,EAAAr1D,UAAAy1D,cAAA,WAAA,IAAAlxD,EAAAzE,KACE,IAAIA,KAAKkxD,gBAAT,CAIA,IE3ByBrvD,EF2BnB+zD,EAAgB51D,KAAKw1D,YAAYx1D,KAAKmoD,QE3BnBtmD,EF4BX+zD,IE1BqB,mBAAZ/zD,EAAGg0D,MF2BxB71D,KAAK+Q,SAAU,EACf6kD,EAAcC,MAAK,SAAAC,GACjBrxD,EAAKgxD,UAAYhxD,EAAKsxD,aAAaD,GACnCrxD,EAAKsM,SAAU,MAERilD,EAAAA,aAAaJ,IACtB51D,KAAK+Q,SAAU,EACf/Q,KAAK8lB,aAAe8vC,EAAc9wD,WAAU,SAAAgxD,GAC1CrxD,EAAKgxD,UAAYhxD,EAAKsxD,aAAaD,GACnCrxD,EAAKsM,SAAU,MAIjB/Q,KAAKy1D,UAFIG,EAEQ51D,KAAK+1D,aAAaH,GAElB,GAEnB51D,KAAKkxD,iBAAkB,EACnBlxD,KAAKkzD,iBACPlzD,KAAKkzD,gBAAgBhC,gBAAgBjvD,SAIjCszD,EAAAr1D,UAAA61D,aAAR,SAAqBE,GAArB,IAAAxxD,EAAAzE,KACE,OAAOi2D,EAAU15C,KAAI,SAAAva,GAAK,OAAA,IAAIuzD,EAAuBvzD,EAAGyC,EAAMA,EAAK+wD,YAAa/wD,EAAKyuD,qBAIvF1zD,OAAAgC,eAAI+zD,EAAAr1D,UAAA,WAAQ,KAAZ,WAEE,OADAF,KAAK21D,gBACE31D,KAAKy1D,eAEd,SAAavzD,GACXlC,KAAKy1D,UAAYvzD,mCAKnBqzD,EAAAr1D,UAAAw0C,QAAA,WACM10C,KAAK8lB,cACP9lB,KAAK8lB,aAAajgB,cAEpBic,EAAA5hB,UAAMw0C,QAAO9zC,KAAAZ,OAEjBu1D,EAzEA,CAA+C3F,kBGI7C,SAAAsG,EACU7pD,EACA6mD,EACAvhB,GAFA3xC,KAAAqM,SAAAA,EACArM,KAAAkzD,gBAAAA,EACAlzD,KAAA2xC,IAAAA,EAoCZ,OAxBEukB,EAAAh2D,UAAAi2D,YAAA,WAAA,IACMC,EADN3xD,EAAAzE,KAGIo2D,EADEz2D,MAAMk/C,QAAQ7+C,KAAKq2D,OACXr2D,KAAKq2D,MAAM95C,KAAI,SAAApP,GAAQ,OAAA,IAAIooD,GAAuBpoD,EAAM,KAAM1I,EAAK+wD,YAAa/wD,EAAKyuD,oBAErF,CAAC,IAAIqC,GAAuBv1D,KAAKq2D,MAAO,KAAMr2D,KAAKw1D,YAAax1D,KAAKkzD,kBAE5ElzD,KAAKs2D,4BACRt2D,KAAKs2D,0BAA4Bt2D,KAAKkzD,gBAAgBhC,gBAAgBpsD,WAAU,WAC9EL,EAAKktC,IAAIM,oBAIbjyC,KAAKkzD,gBAAgBO,UAAY,CAC/BpnD,SAAUrM,KAAKqM,SACfkqD,KAAMH,IAIVF,EAAAh2D,UAAA8G,YAAA,WACMhH,KAAKs2D,2BACPt2D,KAAKs2D,0BAA0BzwD,wDAnCfkI,EAAAA,mBACOgjD,UACZpe,EAAAA,qBAIa7xC,EAAA,CAA3BkN,EAAAA,MAAM,kDAG8BlN,EAAA,CAApCkN,EAAAA,MAAM,iEAXIkoD,EAAiBp1D,EAAA,CAD7BiC,EAAAA,UAAU,CAAEC,SAAU,0CACVkzD,oBCcX,SAAAM,EAAmBtD,EAA6DC,GAAhF,IAAA1uD,EAAAzE,KAAmBA,KAAAkzD,gBAAAA,EAA6DlzD,KAAAmzD,cAAAA,EAC1EA,IACFnzD,KAAK8lB,aAAe9lB,KAAKmzD,cAAcrsC,aAAahiB,WAAU,SAAA5C,IACvDA,GAASuC,EAAK6oD,SAAW7oD,EAAKyuD,gBAAgBjC,OAASxsD,EAAKyuD,gBAAgBO,WAInDhvD,EAAK6oD,OAAQoI,oBAmCnD,OA7BEc,EAAAt2D,UAAAu2D,aAAA,WACE,OACEz2D,KAAKkzD,gBAAgBO,YAIpBzzD,KAAKkzD,gBAAgBjC,QAAUjxD,KAAKmzD,eAAiBnzD,KAAKmzD,cAAczsC,WAS7E8vC,EAAAt2D,UAAAw2D,WAAA,SAAWvpD,GACT,MAAO,CACLo7C,UAAWp7C,EAAKg7C,MAChByL,SAAUzmD,IAMdqpD,EAAAt2D,UAAA8G,YAAA,WACMhH,KAAK8lB,cACP9lB,KAAK8lB,aAAajgB,wDAvCckrD,UAA2D1qC,GAAetlB,WAAA,CAAA,CAAAsG,KAAjDqI,EAAAA,cAyB5C5O,EAAA,CAAhBkN,EAAAA,MAAM,wCACYlN,EAAA,CAAlBkN,EAAAA,MAAM,4CA3BIwoD,EAAiB11D,EAAA,CAjB7ByQ,EAAAA,UAAU,CACTvO,SAAU,yBACVqJ,SAAU,iSAOVtF,KAAM,CACJ+tD,cAAe,aAQ4CrzD,EAAA,EAAAiO,EAAAA,aADlD8mD,MCfAG,GAAwC,CAAC3B,GAAS/B,GAAaiD,GAAmBpD,IAO/F8D,GAAA,WAAA,SAAAA,KAAgC,OAAnBA,EAAiB91D,EAAA,CAL7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAe89B,IACvC19B,aAAc,CAACqzD,GAA0BH,IACzCjzD,QAAS,CAACozD,OAECC,GAAb,iBCZA,SAAAC,KAA4B,OAAfA,EAAa/1D,EAAA,CADzBqC,EAAAA,SAAS,CAAEI,QAAS,CAAC6pD,GAAmB4B,GAAoB4H,OAChDC,MCJbC,GAAA,aCDA,SAGgBC,GAA+BC,GAC7C,MAAO,CACLngD,EACAmgD,EACA,CACEvlD,QAASqlD,GACTplD,YAAaslD,KPVnB,SAAY1B,GACVA,EAAA,GAAA,KACAA,EAAA,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,MAAA,QAJF,CAAYA,KAAAA,GAAiB,uBQQ3B,SAAAlgC,EAAoB9wB,GAAAtE,KAAAsE,SAAAA,EAEZtE,KAAAi3D,eAAiB,GAiF3B,OA/EEz3D,OAAAgC,eAAW4zB,EAAAl1B,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKwlB,0CAGd4P,EAAAl1B,UAAAg3D,MAAA,SAAMlnC,GACJhwB,KAAKwlB,SAAWwK,GAGlBoF,EAAAl1B,UAAAi3D,kBAAA,SAAkBp+C,GAAlB,IAAAtU,EAAAzE,KAGEA,KAAKi3D,eAAez0D,KAAKxC,KAAKsE,SAAS6B,OAAO4S,EAAI,mBAAmB,SAAAhV,GAAS,OAACU,EAAK2yD,KAAK9B,GAAkB+B,QAC3Gr3D,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,qBAAqB,SAAAhV,GAAS,OAACU,EAAK2yD,KAAK9B,GAAkBgC,UAEtFt3D,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,qBAAqB,SAAAhV,GAAS,OAACU,EAAK2yD,KAAK9B,GAAkB5qD,UAEtF1K,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,sBAAsB,SAAAhV,GAAS,OAACU,EAAK2yD,KAAK9B,GAAkBpqD,YAIzFkqB,EAAAl1B,UAAAq3D,kBAAA,SAAkBx+C,GAAlB,IAAAtU,EAAAzE,KACEA,KAAKsE,SAASgV,aAAaP,EAAI,WAAY,KAC3C/Y,KAAKm3D,kBAAkBp+C,GAGvB/Y,KAAKi3D,eAAez0D,KAAKxC,KAAKsE,SAAS6B,OAAO4S,EAAI,iBAAiB,WAAM,OAACtU,EAAK+yD,sBAC/Ex3D,KAAKi3D,eAAez0D,KAAKxC,KAAKsE,SAAS6B,OAAO4S,EAAI,iBAAiB,WAAM,OAACtU,EAAK+yD,uBAGjFpiC,EAAAl1B,UAAAu3D,OAAA,SAAOjpB,QAMQ3rB,IAAT2rB,IAIAxuC,KAAKuL,SACPvL,KAAKuL,QAAQmsD,OAEflpB,EAAKpoC,QACLpG,KAAKwlB,SAAWgpB,IAGlBpZ,EAAAl1B,UAAAk3D,KAAA,SAAKO,GAAL,IAAAlzD,EAAAzE,KACM43D,GAAQ,EACZ,GAAI53D,KAAKuL,QAAS,CAChB,IAAMtJ,EAAOjC,KAAKuL,QAAQosD,GAC1B,GAAI11D,GAGc+zD,EAAAA,aAAa/zD,GAAQA,EAAOm3B,EAAAA,GAAGn3B,IACvC6C,WAAU,SAAA0pC,GACZA,IACF/pC,EAAKgzD,OAAOjpB,GACZopB,GAAQ,MAKhB,OAAOA,GAGTxiC,EAAAl1B,UAAAs3D,gBAAA,WACE,SAAIx3D,KAAKuL,UAAWvL,KAAKuL,QAAQwnD,YAC/B/yD,KAAKuL,QAAQwnD,YACN,IAKJ39B,EAAAl1B,UAAA23D,gBAAP,WACE73D,KAAKi3D,eAAehwD,SAAQ,SAAC6wD,GAAyB,OAAAA,iDAjF1B3wD,EAAAA,aADnBiuB,EAAYt0B,EAAA,CADxBsD,EAAAA,cACYgxB,eAsFG2iC,GAAuB3G,EAAwB9sD,GAC7D,OAAO8sD,GAAY,IAAIh8B,GAAa9wB,GAGtC,IAAa0zD,GAAyB,CACpCvmD,QAAS2jB,GACTte,WAAYihD,GACZ7K,KAAM,CAAC,CAAC,IAAIx9C,EAAAA,SAAY,IAAIyB,EAAAA,SAAYikB,IAAejuB,EAAAA,YChGzD8wD,GAAA,WAAA,SAAAA,KA6BA,OAzBSA,EAAAC,WAAP,SACEtgB,EACA0V,EACAqK,GAEA/f,EAAM3wC,SAAQ,SAAAunC,GAAQ,OAACA,EAAKmpB,GAAarK,MAMpC2K,EAAAE,aAAP,SAAoBvgB,EAAwBwgB,QAAA,IAAAA,IAAAA,GAAA,GAC1CxgB,EAAM3wC,SAAQ,SAACunC,EAAMv2B,GACfA,EAAQ,IACVu2B,EAAK6pB,GAAKzgB,EAAM3/B,EAAQ,IAEtBA,EAAQ2/B,EAAMj3C,OAAS,IACzB6tC,EAAK8pB,KAAO1gB,EAAM3/B,EAAQ,OAG1BmgD,GAAQxgB,EAAMj3C,OAAS,IACzBi3C,EAAM,GAAGygB,GAAKzgB,EAAMA,EAAMj3C,OAAS,GACnCi3C,EAAMA,EAAMj3C,OAAS,GAAG23D,KAAO1gB,EAAM,KAG3CqgB,EA7BA,GCJA,SAEgBM,GACdC,EACAC,EACAC,GAEA,OAAOC,EAAAA,WAAWx4D,QAAO,SAACy4D,GACxBH,EAAYG,GACZ,IAAM9yC,EAAe0yC,EAAW1zD,UAAU8zD,GAC1C,OAAO,WACL9yC,EAAajgB,cACT6yD,GACFA,EAAcE,yBCEpB,SAAAC,EAC4B98C,EAClBzX,EAGAgpD,EACAr9C,EACAwmB,EACqB/sB,GAPH1J,KAAA+b,GAAAA,EAClB/b,KAAAsE,SAAAA,EAGAtE,KAAAstD,OAAAA,EACAttD,KAAAiQ,cAAAA,EACAjQ,KAAAy2B,aAAAA,EACqBz2B,KAAA0J,WAAAA,EASvB1J,KAAAi3D,eAAiB,GAsBjBj3D,KAAA84D,oBAAqB,EA7B3B94D,KAAK+4D,gBACL/4D,KAAKg5D,0BACAh5D,KAAKstD,QACRttD,KAAKi5D,kBAgLX,OAvKEJ,EAAA34D,UAAA84D,wBAAA,WAAA,IAAAv0D,EAAAzE,KACEA,KAAKiQ,cAAcpL,WAAWC,WAAU,SAAAX,GAClCA,GAAQM,EAAKwL,cAAcipD,eAG7Br9C,YAAW,WACTpX,EAAKgyB,aAAaghC,OAAOhzD,GACrBA,EAAK6oD,OACP7oD,EAAKgyB,aAAa2gC,KAAK9B,GAAkBpqD,OAEzCzG,EAAKgyB,aAAa2gC,KAAK9B,GAAkBgC,aAYnDuB,EAAA34D,UAAA+4D,gBAAA,WAAA,IAAAx0D,EAAAzE,KACEA,KAAKiQ,cAAcpL,WAAWC,WAAU,SAAAX,GACjCA,IAEHM,EAAKgyB,aAAaygC,MAAMzyD,GAEpBA,EAAKq0D,oBACPr0D,EAAK2B,SAGT3B,EAAKq0D,mBAAqB30D,MAK9B3E,OAAAgC,eAAIq3D,EAAA34D,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKm5D,cAEd,SAAYpgD,GAAZ,IAAAtU,EAAAzE,KACEA,KAAKm5D,SAAWpgD,EAEZ/Y,KAAKstD,OACPttD,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,sBAAsB,SAAAhV,GAAS,OAAAU,EAAKwL,cAAchM,gBAAgBF,QAG7F/D,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,mBAAmB,SAAAhV,GAAS,OAAAU,EAAKwL,cAAchM,gBAAgBF,OAE1F/D,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,qBAAqB,SAAAhV,GAAS,OAAAU,EAAKwL,cAAchM,gBAAgBF,OAE5F/D,KAAKy2B,aAAa0gC,kBAAkBp+C,qCAKxCvZ,OAAAgC,eAAIq3D,EAAA34D,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKo5D,gBAEd,SAAcrgD,GAAd,IAAAtU,EAAAzE,KACEA,KAAKo5D,WAAargD,EAGlB/Y,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,eAAe,SAAAhV,GAAS,OAAAU,EAAKwL,cAAchM,gBAAgBF,OAGlF/D,KAAKstD,OAIPttD,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,eAAe,SAAAhV,GACtCU,EAAKgyB,aAAa2gC,KAAK9B,GAAkB5qD,MACzC3G,EAAMs1D,uBAKVr5D,KAAKy2B,aAAa8gC,kBAAkBx+C,GAGpC/Y,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,eAAe,SAAAhV,GAAS,OAAAU,EAAKwL,cAAchM,gBAAgBF,OAItF/D,KAAKi3D,eAAez0D,KAClBxC,KAAKsE,SAAS6B,OAAO4S,EAAI,QAAQ,SAAAhV,GAE/BU,EAAKyrD,SAAS1qD,KAAK8zD,EAAAA,KAAK,IAAIx0D,WAAU,SAAA8yC,GAAS,OAAAA,EAAM3wC,SAAQ,SAAAunC,GAAQ,OAAAA,EAAKkpB,aAK1E,IAAM12D,EAAS+C,EAAMw1D,eAAiB/0D,SAASikB,cAK3CznB,GAAUgJ,EAAAA,kBAAkBvF,EAAKiF,cAC/BqP,EAAG9S,SAASjF,IAAWA,IAAWyD,EAAKmV,WAK7CnV,EAAKq0D,oBAAqB,EAC1Br0D,EAAKwL,cAAc9L,MAAO,yCAMlC00D,EAAA34D,UAAAkG,MAAA,WACMpG,KAAK4Z,SAAW5P,EAAAA,kBAAkBhK,KAAK0J,aACzC1J,KAAK4Z,QAAQxT,SAGjByyD,EAAA34D,UAAAw3D,KAAA,WACM13D,KAAK4Z,SAAW5P,EAAAA,kBAAkBhK,KAAK0J,aACzC1J,KAAK4Z,QAAQ89C,QAIjBmB,EAAA34D,UAAA6yD,SAAA,WACM/oD,EAAAA,kBAAkBhK,KAAK0J,aACzB1J,KAAK4Z,QAAQo5C,SAST6F,EAAA34D,UAAAs5D,mBAAR,WAAA,IAAA/0D,EAAAzE,KACE,OAAOu4D,GAAev4D,KAAKkwD,UAAU,WAAM,OAACzrD,EAAKwL,cAAc9L,MAAO,MAEhE00D,EAAA34D,UAAAu5D,gBAAR,WAAA,IAAAh1D,EAAAzE,KACE,OAAOu4D,GAAen/B,EAAAA,GAAGp5B,OAAO,WAAM,OAACyE,EAAKwL,cAAc9L,MAAO,MAGnE00D,EAAA34D,UAAA64D,cAAA,WACE/4D,KAAKkwD,SAAW,IAAIwJ,EAAAA,cAA+B,GAC/C15D,KAAKstD,OACPttD,KAAKgiC,MAAQhiC,KAAKw5D,qBAAqBh0D,KAAK+W,EAAAA,KAAI,SAAAw8B,GAAO,OAAAA,EAAI,QAE3D/4C,KAAKs4D,KAAOt4D,KAAKw5D,qBAAqBh0D,KAAK+W,EAAAA,KAAI,SAAAw8B,GAAO,OAAAA,EAAI,OAC1D/4C,KAAKq4D,GAAKr4D,KAAKw5D,qBAAqBh0D,KAAK+W,EAAAA,KAAI,SAAAw8B,GAAO,OAAAA,EAAIA,EAAIp4C,OAAS,SAIzEk4D,EAAA34D,UAAAy5D,YAAA,SAAYzJ,GACV+H,GAAQE,aAAajI,GACjBlwD,KAAKstD,QACP2K,GAAQC,WAAWhI,EAAUlwD,KAAKy5D,kBAAmBnE,GAAkB5qD,MAEzE1K,KAAKkwD,SAASjuD,KAAKiuD,IAGrB2I,EAAA34D,UAAA8G,YAAA,WACEhH,KAAKi3D,eAAehwD,SAAQ,SAAC6wD,GAAyB,OAAAA,OACtD93D,KAAKy2B,aAAaohC,qFA1LjBvwD,EAAAA,OAAMC,KAAA,CAACkP,YACUtP,EAAAA,iBAGF0xD,EAAoB93D,WAAA,CAAA,CAAAsG,KAFnC8J,EAAAA,UAAQ,CAAA9J,KACRqI,EAAAA,kBAEsBlM,SACD4xB,UACmB51B,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBATC2sD,EAAoB/3D,EAAA,CADhCsD,EAAAA,aAGI3C,EAAA,EAAA6F,EAAAA,OAAOmP,IAEPhV,EAAA,EAAA0P,EAAAA,YACA1P,EAAA,EAAAiO,EAAAA,YAIAjO,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eATC2sD,MAgMAe,GAAkC7C,GAA4B8B,kBC1M3E,SAAAgB,IACU75D,KAAA4P,SAA6B,IAAIjM,EAAAA,QAS3C,OAPEnE,OAAAgC,eAAIq4D,EAAA35D,UAAA,UAAO,KAAX,WACE,OAAOF,KAAK4P,SAAS/L,gDAGvBg2D,EAAA35D,UAAA45D,WAAA,WACE95D,KAAK4P,SAAS3N,MAAK,IARV43D,EAAmB/4D,EAAA,CAD/BsD,EAAAA,cACYy1D,eAYGE,GAAuB3I,GACrC,OAAOA,GAAY,IAAIyI,GAGzB,ICZYG,GDYCC,GAAyB,CACpCxoD,QAASooD,GACT/iD,WAAYijD,GACZ7M,KAAM,CAAC,CAAC,IAAIx9C,EAAAA,SAAY,IAAIyB,EAAAA,SAAY0oD,oBEIxC,SAAAK,EAGS5M,EACAr9C,EACC0hC,EACRwoB,GANF,IAAA11D,EAAAzE,KAGSA,KAAAstD,OAAAA,EACAttD,KAAAiQ,cAAAA,EACCjQ,KAAA2xC,IAAAA,EAPF3xC,KAAA4E,cAAgC,GAcN5E,KAAAo6D,gBAA0B,EAJ1Dp6D,KAAK4E,cAAcpC,KAAK23D,EAAgBviD,QAAQ9S,WAAU,SAAA5C,GAAS,OAACuC,EAAKwL,cAAc9L,KAAOjC,MAC9FlC,KAAK4E,cAAcpC,KAAKyN,EAAcpL,WAAWC,WAAU,SAAA5C,GAAS,OAAAuC,EAAKktC,IAAI8D,mBAQjF,OAHEykB,EAAAh6D,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAZvBq0D,EAAWn5D,WAAA,CAAA,CAAAsG,KAFzB8J,EAAAA,UAAQ,CAAA9J,KACRqI,EAAAA,kBAEqBlM,SACTmvC,EAAAA,yBACIknB,MAMe/4D,EAAA,CAAjCkN,EAAAA,MAAM,iEAfIksD,EAAWp5D,EAAA,CAfvByQ,EAAAA,UAAU,CACTvO,SAAU,eACVqJ,SAAU,4BACVtF,KAAM,CACJszD,mBAAoB,OACpBC,eAAgB,sBAElB9oD,UAAW,CACTyoD,GACA,CAAExoD,QAAS0nC,GAAqBznC,YAAa/C,EAAAA,YAC7CqpD,GACAx0D,EACAo2D,MAOCn4D,EAAA,EAAA0P,EAAAA,YACA1P,EAAA,EAAAiO,EAAAA,aALQwqD,oBCjBX,SAAAK,EAC4Bx+C,EAClBhD,EACAzU,EACqBoF,GAHH1J,KAAA+b,GAAAA,EAClB/b,KAAA+Y,GAAAA,EACA/Y,KAAAsE,SAAAA,EACqBtE,KAAA0J,WAAAA,EAM/B1J,KAAAmZ,UAAW,EAJT7U,EAASgV,aAAaP,EAAGnS,cAAe,KAAMmV,GAC9CzX,EAASgV,aAAaP,EAAGnS,cAAe,WAAY,MAuBxD,OAlBE2zD,EAAAr6D,UAAAkG,MAAA,WACM4D,EAAAA,kBAAkBhK,KAAK0J,cACzB1J,KAAKsE,SAASgV,aAAatZ,KAAK+Y,GAAGnS,cAAe,WAAY,KAC9D5G,KAAK+Y,GAAGnS,cAAcR,UAG1Bm0D,EAAAr6D,UAAAw3D,KAAA,WACM1tD,EAAAA,kBAAkBhK,KAAK0J,cACzB1J,KAAKsE,SAASgV,aAAatZ,KAAK+Y,GAAGnS,cAAe,WAAY,MAC9D5G,KAAK+Y,GAAGnS,cAAc8wD,SAI1B6C,EAAAr6D,UAAA6yD,SAAA,WACM/oD,EAAAA,kBAAkBhK,KAAK0J,aACzB1J,KAAK+Y,GAAGnS,cAAcosD,2EA1BvB1rD,EAAAA,OAAMC,KAAA,CAACkP,YACI9H,EAAAA,kBACMxH,EAAAA,iBACuB3H,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBALCquD,EAAkBz5D,EAAA,CAD9BsD,EAAAA,aAGI3C,EAAA,EAAA6F,EAAAA,OAAOmP,IAGPhV,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eALCquD,MAiCAC,GAAgC,CAC3C3jD,EACA,CACEpF,QAASqlD,GACT2D,SAAUF,mBCxBZ,SAAAG,EACUC,EACA5hD,EACA6hD,EACAt2D,EACAu2D,GAJA76D,KAAA26D,SAAAA,EACA36D,KAAA+Y,GAAAA,EACA/Y,KAAA46D,iBAAAA,EACA56D,KAAAsE,SAAAA,EACAtE,KAAA66D,cAAAA,EAIH76D,KAAA86D,yBAAmC,EAkD5C,OA/CEt7D,OAAAgC,eAAIk5D,EAAAx6D,UAAA,WAAQ,KAKZ,WACE,OAAOF,KAAK66D,cAAc1hD,cAN5B,SAAajX,GAEXlC,KAAK66D,cAAc1hD,WAAajX,GAAmB,KAAVA,mCAW3C1C,OAAAgC,eAAIk5D,EAAAx6D,UAAA,qBAAkB,KAMtB,WACE,OAAOF,KAAK66D,cAAc1hD,cAP5B,SAAuBjX,GAErBlC,KAAK66D,cAAc1hD,WAAajX,GAAmB,KAAVA,EACzClC,KAAK86D,yBAA0B,mCAWjCt7D,OAAAgC,eAAIk5D,EAAAx6D,UAAA,iBAAc,KAGlB,WACE,OAAOF,KAAK66D,cAAc9+C,QAJ5B,SAAmB7Z,GACjBlC,KAAK66D,cAAc9+C,GAAK7Z,mCAM1Bw4D,EAAAx6D,UAAAyM,gBAAA,WAAA,IAAAlI,EAAAzE,KACEA,KAAK83D,SAAW93D,KAAKsE,SAAS6B,OAAOnG,KAAK+Y,GAAGnS,cAAe,SAAS,WAAM,OAAAnC,EAAKs2D,0BAGlFL,EAAAx6D,UAAA66D,oBAAA,WACM/6D,KAAK26D,SAASP,iBAAmBp6D,KAAK+Y,GAAGnS,cAAcd,UAAUG,SAAS,aAC5EjG,KAAK46D,iBAAiBd,cAI1BY,EAAAx6D,UAAA8G,YAAA,WACEhH,KAAK83D,qDAxDaoC,UACNvrD,EAAAA,kBACckrD,UACR1yD,EAAAA,iBACK2vD,MAOzBh2D,EAAA,CADCkN,EAAAA,MAAM,6CAcPlN,EAAA,CADCkN,EAAAA,MAAM,oDAePlN,EAAA,CADCkN,EAAAA,MAAM,0CAvCI0sD,EAAe55D,EAAA,CAZ3BiC,EAAAA,UAAU,CACTC,SAAU,oBACV+D,KAAM,CACJi0D,mBAAoB,WACpBC,wBAAyB,OACzBnG,cAAe,aACfoG,uBAAwB,WACxB/gD,kBAAmB,mDACnBwwC,YAAa,kBAEfn5C,UAAW,CAACgpD,OAEDE,OHVb,SAAYV,GACVA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,YAAA,IAAA,cAZF,CAAYA,KAAAA,GAAK,KAejB,IIvBYmB,GJ8BZC,GAAA,WAGE,SAAAA,EAAoBrsD,GAAA/O,KAAA+O,QAAAA,EA0NZ/O,KAAAq7D,mBAAoC,GAMpCr7D,KAAAs7D,sBAA6Bt7D,KAAKu7D,gBAAgBC,KAAKx7D,MA9N7D+O,EAAQ+K,MAAMnS,SAXQ,WAYtBoH,EAAQ+K,MAAMpR,IAAM,EACpBqG,EAAQ+K,MAAMioB,OAAS,OACvBhzB,EAAQ+K,MAAMtR,KAAO,EACrBuG,EAAQ+K,MAAMkoB,MAAQ,OAgQ1B,OA5PSo5B,EAAAl7D,UAAAoI,OAAP,SACEA,EACAmzD,EACAC,EACA/uC,OAAAkhB,OAAA,IAAAlhB,EAAA,GAAAA,EAAEmhB,EAAAD,EAAA8tB,QAAAA,OAAA,IAAA7tB,EAAA,EAAAA,EAAa8tB,EAAA/tB,EAAAguB,QAAAA,OAAA,IAAAD,EAAA,EAAAA,EAAaE,EAAAjuB,EAAAkuB,gBAAAA,OAAA,IAAAD,GAAAA,EAK5B97D,KAAKg8D,wBAAwB1zD,GACzByzD,IACFzzD,EAASA,EAAO+f,YAGlB/f,EAAOwR,MAAMnS,SAAW,SAExB,IAAMs0D,EAAa3zD,EAAO4B,wBACpBgyD,EAAcl8D,KAAK+O,QAAQ7E,wBAG7BiyD,EAAmBF,EAAWzzD,KAAO0zD,EAAY1zD,KAAOmzD,EACxDS,EAAkBH,EAAWvzD,IAAMwzD,EAAYxzD,IAAMmzD,EAGzD,OAAQJ,GACN,KAAKzB,GAAMqC,SACX,KAAKrC,GAAMsC,SACT,MACF,KAAKtC,GAAMuC,WACTJ,GAAYF,EAAWnzD,MAAQ,EAC/B,MACF,KAAKkxD,GAAMwC,UAGX,KAAKxC,GAAMyC,UACTN,GAAYF,EAAWnzD,MACvB,MACF,KAAKkxD,GAAM0C,YAGX,KAAK1C,GAAM2C,YACTP,GAAWH,EAAWpzD,OACtB,MACF,KAAKmxD,GAAM4C,cACTR,GAAWH,EAAWpzD,OACtBszD,GAAYF,EAAWnzD,MAAQ,EAC/B,MACF,KAAKkxD,GAAM6C,aAIX,KAAK7C,GAAM8C,aACTV,GAAWH,EAAWpzD,OACtBszD,GAAYF,EAAWnzD,MACvB,MACF,KAAKkxD,GAAM+C,YACTX,GAAWH,EAAWpzD,OAAS,EAC/B,MACF,KAAKmxD,GAAMgD,aACTZ,GAAWH,EAAWpzD,OAAS,EAC/BszD,GAAYF,EAAWnzD,MAM3B,OAAQ4yD,GACN,KAAK1B,GAAMqC,SACX,KAAKrC,GAAMsC,SACT,MACF,KAAKtC,GAAMuC,WACTJ,GAAYD,EAAYpzD,MAAQ,EAChC,MACF,KAAKkxD,GAAMwC,UAGX,KAAKxC,GAAMyC,UACTN,GAAYD,EAAYpzD,MACxB,MACF,KAAKkxD,GAAM0C,YAGX,KAAK1C,GAAM2C,YACTP,GAAWF,EAAYrzD,OACvB,MACF,KAAKmxD,GAAM4C,cACTR,GAAWF,EAAYrzD,OACvBszD,GAAYD,EAAYpzD,MAAQ,EAChC,MACF,KAAKkxD,GAAM6C,aAIX,KAAK7C,GAAM8C,aACTV,GAAWF,EAAYrzD,OACvBszD,GAAYD,EAAYpzD,MACxB,MACF,KAAKkxD,GAAM+C,YACTX,GAAWF,EAAYrzD,OAAS,EAChC,MACF,KAAKmxD,GAAMgD,aACTZ,GAAWF,EAAYrzD,OAAS,EAChCszD,GAAYD,EAAYpzD,MAgB5B,IAAMm0D,EAAuBr7B,iBAAiB5hC,KAAK+O,SAC7CmuD,EAAazqC,SAASwqC,EAAqBC,WAAY,IACvDC,EAAc1qC,SAASwqC,EAAqBE,YAAa,IACzDC,EAAY3qC,SAASwqC,EAAqBG,UAAW,IACrDC,EAAe5qC,SAASwqC,EAAqBI,aAAc,IAEjE,OAAQ5B,GACN,KAAKzB,GAAMqC,SACX,KAAKrC,GAAMsC,SACX,KAAKtC,GAAMwC,UACX,KAAKxC,GAAMyC,UACLf,IAAiB1B,GAAM6C,cAAgBnB,IAAiB1B,GAAM8C,eAChEV,GAAWiB,EACXlB,GAAYgB,GAEVzB,IAAiB1B,GAAM2C,aAAejB,IAAiB1B,GAAM0C,cAC/DN,GAAWgB,EACXjB,GAAYe,GAEVxB,IAAiB1B,GAAMsC,UAAYZ,IAAiB1B,GAAMqC,WAC5DD,GAAWgB,EACXjB,GAAYe,GAEVxB,IAAiB1B,GAAMwC,WAAad,IAAiB1B,GAAMyC,YAC7DL,GAAWgB,EACXjB,GAAYgB,GAEd,MACF,KAAKnD,GAAM0C,YACX,KAAK1C,GAAM2C,YACX,KAAK3C,GAAM6C,aACX,KAAK7C,GAAM8C,aACLpB,IAAiB1B,GAAM2C,aAAejB,IAAiB1B,GAAM0C,cAC/DN,GAAWiB,EACXlB,GAAYe,GAEVxB,IAAiB1B,GAAM6C,cAAgBnB,IAAiB1B,GAAM8C,eAChEV,GAAWiB,EACXlB,GAAYgB,GAEVzB,IAAiB1B,GAAMsC,UAAYZ,IAAiB1B,GAAMqC,WAC5DD,GAAWgB,EACXjB,GAAYe,GAEVxB,IAAiB1B,GAAMwC,WAAad,IAAiB1B,GAAMyC,YAC7DL,GAAWgB,EACXjB,GAAYgB,GAEd,MACF,KAAKnD,GAAMuC,WACTH,GAAWiB,EACXlB,GAAYe,EACZf,GAAYgB,EACZ,MACF,KAAKnD,GAAM4C,cACTR,GAAWgB,EACXjB,GAAYe,EACZf,GAAYgB,EACZ,MACF,KAAKnD,GAAM+C,YACTX,GAAWgB,EACXhB,GAAWiB,EACXlB,GAAYgB,EACZ,MACF,KAAKnD,GAAMgD,aACTZ,GAAWgB,EACXhB,GAAWiB,EACXlB,GAAYe,EAMhB,OADAl9D,KAAK+O,QAAQ+K,MAAMI,UAAY,cAAc0Z,KAAK0pC,MAAMnB,GAAS,kBAAkBvoC,KAAK0pC,MAAMlB,GAAQ,MAC/Fp8D,KAAKu9D,QAAQ15D,gBAGfu3D,EAAAl7D,UAAAs9D,QAAP,WACEx9D,KAAK+O,QAAQ+K,MAAMI,UAAY,GAC/Bla,KAAKy9D,8BAGCrC,EAAAl7D,UAAAw9D,aAAR,SAAqBtxD,GACnB,IAAMzE,EAAWi6B,iBAAiBx1B,GAAWzE,SAC7C,MA7NsB,aA6NfA,GA5Ne,aA4NmBA,GA3NtB,UA2NwDA,GASrEyzD,EAAAl7D,UAAAq7D,gBAAR,WACEv7D,KAAKu9D,QAAQt7D,QAKPm5D,EAAAl7D,UAAA87D,wBAAR,SAAgC15D,GAC9BtC,KAAKu9D,QAAU,IAAI55D,EAAAA,QAGnB,IAFA,IAAM2E,EAAchG,EAChBiJ,EAAejJ,EACZiJ,GAAWA,IAAY/G,WACxBxE,KAAK29D,QAAQpyD,KACfA,EAAQqyD,iBAAiB,SAAU59D,KAAKs7D,uBACxCt7D,KAAKq7D,mBAAmB74D,KAAK+I,IAE3BA,IAAYjD,IAAUtI,KAAK09D,aAAanyD,KAG5CA,EAAUA,EAAQ8c,YAId+yC,EAAAl7D,UAAAu9D,2BAAR,uBACE,IAAmB,IAAA5vB,EAAAjsC,EAAA5B,KAAKq7D,oBAAkBvtB,EAAAD,EAAA5rC,QAAA6rC,EAAA3rC,KAAA2rC,EAAAD,EAAA5rC,OAAE,CAA7B6rC,EAAA5rC,MACR27D,oBAAoB,SAAU79D,KAAKs7D,yHAE1Ct7D,KAAKq7D,mBAAmB16D,OAAS,EAC7BX,KAAKu9D,UACPv9D,KAAKu9D,QAAQzN,kBACN9vD,KAAKu9D,UAIRnC,EAAAl7D,UAAAy9D,QAAR,SAAgBvxD,GACd,IAAM0xD,EAAiBl8B,iBAAiBx1B,GACxC,MArQoB,WAsQlB0xD,EAAeC,WArQC,SAsQhBD,EAAeC,WAvQG,WAwQlBD,EAAeE,WAvQC,SAwQhBF,EAAeE,WAGrB5C,EAzQA,GKZA6C,GAAA,WACE,SAAAA,EAAY57C,EAA0C67C,GAAtD,IAAAz5D,EAAAzE,KAAsDA,KAAAk+D,WAAAA,EA8B9Cl+D,KAAAm+D,cAAe,EAKbn+D,KAAAo+D,eAAiC,GA+CpCp+D,KAAAq+D,qBAAsB,EAjF3Br+D,KAAK+Y,GAAKsJ,EAASC,IAAI3T,EAAAA,YACvB3O,KAAKiQ,cAAgBoS,EAASC,IAAI9e,GAClCxD,KAAKsE,SAAW+d,EAASC,IAAInb,EAAAA,WAE7BnH,KAAKs+D,WAAaJ,EAAWt3D,cAE7B5G,KAAKu+D,gBAAkB,IAAInD,GAAQp7D,KAAK+Y,GAAGnS,eAC3C5G,KAAK8lB,aAAe9lB,KAAKiQ,cAAcpL,WAAWC,WAAU,SAAA8H,GACtDA,GACFnI,EAAK6D,SACL7D,EAAK+5D,sBAEL/5D,EAAK+4D,UACL/4D,EAAKg6D,wBAGLz+D,KAAKiQ,cAAc9L,OACrBnE,KAAKsI,SACLtI,KAAKw+D,qBA6HX,OAzGYP,EAAA/9D,UAAAoI,OAAV,WACEtI,KAAKm+D,cAAe,EAEpBn+D,KAAK0+D,OAAS1+D,KAAKiQ,cAAcipD,eAGzB+E,EAAA/9D,UAAAs9D,QAAV,WACEx9D,KAAK2+D,6BACL3+D,KAAKu+D,gBAAgBf,WAGvBS,EAAA/9D,UAAAqyC,mBAAA,WAAA,IAAA9tC,EAAAzE,KACMA,KAAKm+D,eACPn+D,KAAKm+D,cAAe,EACpBn+D,KAAKu+D,gBACFj2D,OAAOtI,KAAKs+D,WAAYt+D,KAAK4+D,YAAa5+D,KAAK6+D,aAAc7+D,KAAKo+D,gBAClEt5D,WAAU,WAETL,EAAKwL,cAAc9L,MAAO,KAE9BnE,KAAK8+D,+BAITb,EAAA/9D,UAAA8G,YAAA,WACEhH,KAAKw9D,UACLx9D,KAAKy+D,oBACLz+D,KAAK8lB,aAAajgB,eAQpBrG,OAAAgC,eAAIy8D,EAAA/9D,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKiQ,cAAc9L,sCAcpB85D,EAAA/9D,UAAAs+D,kBAAR,WAAA,IAAA/5D,EAAAzE,KACOA,KAAKo+D,eAAeW,0BACvB/+D,KAAKg/D,oBAAsBh/D,KAAKsE,SAAS6B,OAAO,WAAY,WAAW,SAAApC,GACjEA,GAASA,EAAM9C,MACC,WAAd8C,EAAM9C,KAAkC,QAAd8C,EAAM9C,MAClCwD,EAAKwL,cAAc9L,MAAO,SAO5B85D,EAAA/9D,UAAAu+D,kBAAR,WACMz+D,KAAKg/D,sBACPh/D,KAAKg/D,6BACEh/D,KAAKg/D,sBAIRf,EAAA/9D,UAAA4+D,2BAAR,WAAA,IAAAr6D,EAAAzE,KACMA,KAAKq+D,sBACPr+D,KAAKi/D,kBAAoBj/D,KAAKsE,SAAS6B,OAAOnG,KAAK+Y,GAAGnS,cAAe,SAAS,SAAA7C,GAAS,OAACU,EAAKi6D,OAAS36D,KAClG/D,KAAKk/D,iBACPl/D,KAAKm/D,4BAA8Bn/D,KAAKsE,SAAS6B,OAC/CnG,KAAKk/D,eACL,SACA,SAAAn7D,GAAS,OAACU,EAAKi6D,OAAS36D,MAG5B/D,KAAKkG,sBAAwBlG,KAAKsE,SAAS6B,OAAO,WAAY,SAAS,SAAApC,GACjEA,IAAUU,EAAKi6D,cACVj6D,EAAKi6D,OAEZj6D,EAAKwL,cAAc9L,MAAO,OAM1B85D,EAAA/9D,UAAAy+D,2BAAR,WACM3+D,KAAKq+D,sBACHr+D,KAAKi/D,oBACPj/D,KAAKi/D,2BACEj/D,KAAKi/D,mBAEVj/D,KAAKm/D,8BACPn/D,KAAKm/D,qCACEn/D,KAAKm/D,6BAEVn/D,KAAKkG,wBACPlG,KAAKkG,+BACElG,KAAKkG,kEA5II8d,EAAAA,gBAA4CrV,EAAAA,WAAU5N,WAAA,CAAA,CAAAsG,KAA3C8J,EAAAA,cA0EjCrQ,EAAA,CADCmf,EAAAA,YAAY,wDA1EOg+C,EAAen9D,EAAA,CADpCsD,EAAAA,aAEkC3C,EAAA,EAAA0P,EAAAA,aADb8sD,GAAtB,kBCWE,SAAAmB,EACE/8C,EAGA67C,EAGAmB,EACAC,GARF,IAAA76D,EAAAzE,KAUE,IAAKk+D,EACH,MAAM,IAAI3+C,MAAM,yEAElB9a,EAAAqd,EAAAlhB,KAAAZ,KAAMqiB,EAAU67C,IAAWl+D,KACtBq/D,GAMH56D,EAAKm6D,YAAc5E,GAAMyC,UACzBh4D,EAAKo6D,aAAe7E,GAAMqC,WAL1B53D,EAAKm6D,YAAc5E,GAAM2C,YACzBl4D,EAAKo6D,aAAe7E,GAAMqC,UAM5B53D,EAAK25D,eAAemB,mBAAoB,EACxC96D,EAAK25D,eAAeW,yBAA0B,EAC9Ct6D,EAAK45D,qBAAsB,EAC3B55D,EAAK66D,aAAeA,IA4DxB,OAvFqCx/D,EAAAs/D,EAAAt9C,GA+BnCtiB,OAAAgC,eAAI49D,EAAAl/D,UAAA,WAAQ,KAAZ,SAAayH,GAEX,OAAQA,GACN,IAAK,YACH3H,KAAK4+D,YAAc5E,GAAMwC,UACzBx8D,KAAK6+D,aAAe7E,GAAM8C,aAC1B,MACF,IAAK,WACH98D,KAAK4+D,YAAc5E,GAAMsC,SACzBt8D,KAAK6+D,aAAe7E,GAAM0C,YAC1B,MACF,IAAK,eACH18D,KAAK4+D,YAAc5E,GAAM6C,aACzB78D,KAAK6+D,aAAe7E,GAAMyC,UAC1B,MACF,IAAK,cACHz8D,KAAK4+D,YAAc5E,GAAM2C,YACzB38D,KAAK6+D,aAAe7E,GAAMqC,SAC1B,MACF,IAAK,YACHr8D,KAAK4+D,YAAc5E,GAAMyC,UACzBz8D,KAAK6+D,aAAe7E,GAAMqC,SAC1B,MACF,IAAK,eACHr8D,KAAK4+D,YAAc5E,GAAM8C,aACzB98D,KAAK6+D,aAAe7E,GAAM0C,YAC1B,MACF,IAAK,WACH18D,KAAK4+D,YAAc5E,GAAMqC,SACzBr8D,KAAK6+D,aAAe7E,GAAMyC,UAC1B,MACF,IAAK,cACHz8D,KAAK4+D,YAAc5E,GAAM0C,YACzB18D,KAAK6+D,aAAe7E,GAAM8C,aAC1B,MACF,QACE98D,KAAK4+D,YAAc5E,GAAM2C,YACzB38D,KAAK6+D,aAAe7E,GAAMqC,2CAQhC+C,EAAAl/D,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAKs/D,aAAalzD,UAAYpM,KAAK+Y,GAAGnS,cACtC5G,KAAK43C,MAAMhgC,QAAQ9S,WAAU,WAAM,OAAAL,EAAK66D,aAAa3F,YAAYl1D,EAAKmzC,MAAM4nB,cAE5Ex/D,KAAK43C,MAAM6nB,mBAGbL,EAAAl/D,UAAA8G,YAAA,WACE8a,EAAA5hB,UAAM8G,YAAWpG,KAAAZ,MACjBA,KAAKs/D,aAAavG,0DAnFR/0C,EAAAA,gBAGErV,EAAAA,WAAU5N,WAAA,CAAA,CAAAsG,KAFrBqI,EAAAA,UAAQ,CAAArI,KACRC,EAAAA,OAAMC,KAAA,CAAC4xC,aAIAimB,EAAer+D,WAAA,CAAA,CAAAsG,KAFtBqI,EAAAA,UAAQ,CAAArI,KACR8J,EAAAA,kBAEa0nD,MAsBhB/3D,EAAA,CADCkN,EAAAA,MAAM,6CA4CyBlN,EAAA,CAA/B4X,EAAAA,gBAAgBo+C,iCA1ENsI,EAAet+D,EAAA,CAV3ByQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,4CAGVtF,KAAM,CACJ24D,wBAAyB,OACzB5K,cAAe,YAMdrzD,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA6F,EAAAA,OAAO6xC,KAEP13C,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA0P,EAAAA,aAPQiuD,IAAwBnB,kBCPnC,SAAA0B,EACEhF,EACQ1qD,EACR8I,EACAumD,GAFQt/D,KAAAiQ,cAAAA,EAJHjQ,KAAA4/D,mBAA6B,EAS9BjF,EAASrN,SACXttD,KAAK4/D,mBAAoB,GAE3BN,EAAa1lD,QAAUb,EAAGnS,cAW9B,OAREpH,OAAAgC,eAAIm+D,EAAAz/D,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKiQ,cAAc9L,sCAI5Bw7D,EAAAz/D,UAAA2/D,uBAAA,SAAuB97D,GACrB/D,KAAKiQ,cAAchM,gBAAgBF,6CAlBzBm2D,UACa12D,SACnBmL,EAAAA,kBACUkqD,MAchB/3D,EAAA,CADCuN,EAAAA,aAAa,QAAS,CAAC,uDApBbsxD,EAAkB7+D,EAAA,CAZ9BiC,EAAAA,UAAU,CAETC,SAAU,2CACV+D,KAAM,CACJ+4D,0BAA2B,oBAC3B7E,wBAAyB,qBACzB8E,qBAAsB,qBACtBzlB,iBAAkB,SAClB0lB,uBAAwB,SACxB5lB,uBAAwB,aAGfulB,MCPAM,GAAuC,CAAC/F,GAAakF,GAAiBO,GAAoBjF,IAOvGwF,GAAA,WAAA,SAAAA,KAAgC,OAAnBA,EAAiBp/D,EAAA,CAL7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC28D,IACf18D,QAAS,CAAC08D,GAAyBj5C,GAAsB9jB,MAE9Cg9D,GAAb,GCjBaC,GAAwB,CAAC,OAAQ,UAAW,SAAU,yBCOjE,SAAAC,EAAoB9oD,GAAAtX,KAAAsX,cAAAA,EAEZtX,KAAAqgE,iBAAmB,cACnBrgE,KAAAsgE,gBAAkB,GAClBtgE,KAAAugE,WAAa,OAyDvB,OAvDE/gE,OAAAgC,eAAI4+D,EAAAlgE,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKugE,gBAEd,SAAclhC,GACR8gC,GAAYvvD,QAAQyuB,IAAQ,IAC9Br/B,KAAKugE,WAAalhC,oCAItB7/B,OAAAgC,eAAI4+D,EAAAlgE,UAAA,iBAAc,KAAlB,WACE,MAAI,KAAOF,KAAKsgE,gBACPtgE,KAAKwgE,iBAAiBxgE,KAAKugE,YAAYE,MAEzCzgE,KAAKsgE,qBAEd,SAAmBjhC,GACZA,EAEMA,IAAQr/B,KAAKsgE,kBACtBtgE,KAAKsgE,gBAAkBjhC,GAFvBr/B,KAAKsgE,gBAAkB,oCAM3B9gE,OAAAgC,eAAI4+D,EAAAlgE,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKwgE,iBAAiBxgE,KAAKugE,YAAYG,uCAGzCN,EAAAlgE,UAAAsgE,iBAAP,SAAwBn5D,GACtB,IAAMs5D,EAAY,CAAEF,MAAO,GAAIG,SAAU,GAAIF,MAAO,IAEpD,OAAQr5D,GACN,IAAK,UACHs5D,EAAUF,MAAQ,uBAClBE,EAAUC,SAAW,gBACrBD,EAAUD,MAAQ1gE,KAAKsX,cAAcnB,KAAK5D,QAC1C,MACF,IAAK,SACHouD,EAAUF,MAAQ,qBAClBE,EAAUC,SAAW,eACrBD,EAAUD,MAAQ1gE,KAAKsX,cAAcnB,KAAK3D,OAC1C,MACF,IAAK,UACHmuD,EAAUF,MAAQ,eAClBE,EAAUC,SAAW,gBACrBD,EAAUD,MAAQ1gE,KAAKsX,cAAcnB,KAAK7D,QAC1C,MACF,QACEquD,EAAUF,MAAQzgE,KAAKqgE,iBACvBM,EAAUC,SAAW,aACrBD,EAAUD,MAAQ1gE,KAAKsX,cAAcnB,KAAK9D,KAI9C,OAAOsuD,4CA3D0BhrD,KADxByqD,EAAwBt/D,EAAA,CADpCsD,EAAAA,cACYg8D,oBCHb,SAAAS,IAQU7gE,KAAAssC,QAAU,IAAI3oC,EAAAA,QAuExB,OAtEEnE,OAAAgC,eAAWq/D,EAAA3gE,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKssC,QAAQzoC,gDAKtBrE,OAAAgC,eAAIq/D,EAAA3gE,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKwlB,cAEd,SAAYvN,GACNA,IAAUjY,KAAKwlB,WACjBxlB,KAAKwlB,SAAWvN,EAChBjY,KAAKssC,QAAQrqC,KAAKgW,qCAItBzY,OAAAgC,eAAIq/D,EAAA3gE,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAK8gE,WAAa9gE,KAAK8gE,UAAUr7D,QAAO,SAAAs7D,GAAS,OAACA,EAAMC,4CAGjExhE,OAAAgC,eAAIq/D,EAAA3gE,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKihE,cAAgBjhE,KAAKihE,aAAajhE,KAAKuL,cAGrD,SAAiBw1D,GACf/gE,KAAKuL,QAAUvL,KAAKihE,aAAarwD,QAAQmwD,oCAG3CvhE,OAAAgC,eAAIq/D,EAAA3gE,UAAA,QAAK,KAAT,WACE,OAAQF,KAAKihE,cAAgBjhE,KAAKihE,aAAatgE,QAAW,mCAG5DkgE,EAAA3gE,UAAAghE,OAAA,SAAOC,GAAP,IAAA18D,EAAAzE,KACMA,KAAK8lB,cACP9lB,KAAK8lB,aAAajgB,cAEpB7F,KAAK8gE,UAAYK,EAGjBnhE,KAAKuL,QAAmC,iBAAlBvL,KAAKwlB,SAAwBxlB,KAAKwlB,SAAW,EAEnExlB,KAAKssC,QAAQrqC,KAAKjC,KAAKuL,SAEvBvL,KAAK8lB,aAAe9lB,KAAK8gE,UAAUlpD,QAAQ9S,WAAU,WAC/CL,EAAK8G,SAAW9G,EAAKq8D,UAAUngE,SACjC8D,EAAK8G,QAAUqoB,KAAKmM,IAAI,EAAGt7B,EAAKq8D,UAAUngE,OAAS,QAKzDkgE,EAAA3gE,UAAA+B,KAAA,WACEjC,KAAKuL,QAAUvL,KAAKuL,UAAYvL,KAAKihE,aAAatgE,OAAS,EAAI,EAAIX,KAAKuL,QAAU,GAGpFs1D,EAAA3gE,UAAAkS,SAAA,WACmC,IAA7BpS,KAAKihE,aAAatgE,SAGtBX,KAAKuL,QAA2B,IAAjBvL,KAAKuL,QAAgBvL,KAAKihE,aAAatgE,OAAS,EAAIX,KAAKuL,QAAU,IAGpFs1D,EAAA3gE,UAAA0R,MAAA,WACE5R,KAAKoS,YAGPyuD,EAAA3gE,UAAAw0C,QAAA,WACM10C,KAAK8lB,cACP9lB,KAAK8lB,aAAajgB,eA5EXg7D,EAAiB//D,EAAA,CAD7BsD,EAAAA,cACYy8D,MCKbO,GAAA,WAAA,SAAAA,KAA2B,OAAdA,EAAYtgE,EAAA,CAHxBiC,EAAAA,UAAU,CACTC,SAAU,iBAECo+D,GAAb,iBCuBE,SAAAC,EACUC,EACA3vB,EACY4vB,EACZjqD,EACA6G,GAJAne,KAAAshE,YAAAA,EACAthE,KAAA2xC,IAAAA,EACY3xC,KAAAuhE,kBAAAA,EACZvhE,KAAAsX,cAAAA,EACAtX,KAAAme,gBAAAA,EAPFne,KAAA4E,cAAgC,GA6BZ5E,KAAAwhE,SAAmB,EACpBxhE,KAAAyhE,UAAoB,EACpBzhE,KAAA0hE,YAAsB,EAGxC1hE,KAAA2hE,wBAAkC3hE,KAAKsX,cAAcnB,KAAKlC,0BAE1CjU,KAAAghE,SAAmB,EACZhhE,KAAA4hE,eAAwC,IAAIn1D,EAAAA,cAAsB,GAiB9EzM,KAAAqb,QAAkB,EA4FxC,OAxIEgmD,EAAAnhE,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACMA,KAAKuhE,mBACPvhE,KAAK4E,cAAcpC,KACjBxC,KAAKuhE,kBAAkB3pD,QAAQ9S,WAAU,WACvCL,EAAKiiD,OAASjiD,EAAK88D,kBAAkBM,eAAiBp9D,OAM9D48D,EAAAnhE,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,kBAGxCw7D,EAAAnhE,UAAAyM,gBAAA,WAEE3M,KAAK8hE,2BAcPtiE,OAAAgC,eAAI6/D,EAAAnhE,UAAA,YAAS,KAIb,WACE,OAAOF,KAAKshE,YAAYS,eAL1B,SAAc1iC,GACZr/B,KAAKshE,YAAYS,UAAY1iC,mCA2B/B7/B,OAAAgC,eAAI6/D,EAAAnhE,UAAA,WAAQ,KAAZ,WACE,OAAI42B,GAAsB92B,KAAKsrC,WACtBv0B,EAAAA,sBAAsBu0B,UAE3BxU,GAAsB92B,KAAKsb,KACtBvE,EAAAA,sBAAsBuE,IAExBvE,EAAAA,sBAAsBsE,wCAI/B7b,OAAAgC,eAAI6/D,EAAAnhE,UAAA,iBAAc,KAAlB,SAAmBgC,GACjBlC,KAAKshE,YAAYU,eAAiB9/D,mCAGpC1C,OAAAgC,eAAI6/D,EAAAnhE,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKshE,YAAYd,iBAAiBxgE,KAAKshE,YAAYS,WAAWnB,0CAwB/DS,EAAAnhE,UAAA4hE,wBAAR,WACE,IAAK9hE,KAAK0mD,QAAU1mD,KAAKiiE,WAAWthE,OAAQ,CAC1C,IAAMwa,EAAUnb,KAAKiiE,WAAW1lD,KAAI,SAAA2lD,GAAa,OAAAA,EAAUt7D,cAAc6U,eAAa5K,KAAK,KAEvFsK,GACFnb,KAAKme,gBAAgBjD,SAASC,EAASnb,KAAKirC,YAOlDzrC,OAAAgC,eAAI6/D,EAAAnhE,UAAA,SAAM,KAOV,WACE,OAAOF,KAAKupD,aARd,SAAWrnD,GACLA,IAAUlC,KAAKupD,UACjBvpD,KAAKupD,QAAUrnD,EACflC,KAAK2xC,IAAIM,kDAQbovB,EAAAnhE,UAAA0R,MAAA,WACO5R,KAAKyhE,WAGVzhE,KAAKghE,SAAU,EACXhhE,KAAKuhE,mBACPvhE,KAAKuhE,kBAAkB3vD,QAEzB5R,KAAK4hE,eAAeh0D,MAAK,KAG3ByzD,EAAAnhE,UAAAiE,KAAA,WACEnE,KAAKghE,SAAU,EACfhhE,KAAK4hE,eAAeh0D,MAAK,6CA7IJwyD,UACRztB,EAAAA,yBAC0BkuB,GAAiB9/D,WAAA,CAAA,CAAAsG,KAAvDqI,EAAAA,kBACsBiG,SACEoF,MAsBCja,EAAA,CAA3BkN,EAAAA,MAAM,oDACoBlN,EAAA,CAA1BkN,EAAAA,MAAM,oDACoBlN,EAAA,CAA1BkN,EAAAA,MAAM,sDAGElN,EAAA,CAARkN,EAAAA,uDAEwBlN,EAAA,CAAxBkN,EAAAA,MAAM,iDACyBlN,EAAA,CAA/BsN,EAAAA,OAAO,8DAGRtN,EAAA,CADCkN,EAAAA,MAAM,+CAealN,EAAA,CAAnBkN,EAAAA,MAAM,2CAEgBlN,EAAA,CAAtBkN,EAAAA,MAAM,iDAEUlN,EAAA,CAAhBkN,EAAAA,MAAM,qCAqBPlN,EAAA,CADCkN,EAAAA,MAAM,oDAUPlN,EAAA,CADC4X,EAAAA,gBAAgB0oD,GAAc,CAAEhgD,aAAa,EAAMiuB,KAAM1gC,EAAAA,+CAxF/C0yD,EAAQvgE,EAAA,CANpByQ,EAAAA,UAAU,CACTvO,SAAU,YACVwO,UAAW,CAAC4uD,GAA0BrlD,IACtC1O,SAAA,6uBACS,+BAQN5K,EAAA,EAAAiO,EAAAA,aANQ2xD,oBCbX,SAAAc,EAAmBb,GAAAthE,KAAAshE,YAAAA,EACrB,gDADkClB,MADrB+B,EAAYrhE,EAAA,CAZxByQ,EAAAA,UAAU,CACTvO,SAAU,iBACVqJ,SAAU,gRAQVtF,KAAM,CAAEmzC,MAAO,iBAEJioB,oBCoEX,SAAAC,EAAmBb,GAAAvhE,KAAAuhE,kBAAAA,EAxDXvhE,KAAA4E,cAAgC,GAiBK5E,KAAAqiE,wBAA0B,IAAI51D,EAAAA,cAAqB,GAqBxDzM,KAAAsiE,mBAAqB,IAAI71D,EAAAA,cAAuB,GAiC1F,OApEEjN,OAAAgC,eAAI4gE,EAAAliE,UAAA,YAAS,KAAb,SAAcgC,GACZlC,KAAKuhE,kBAAkBL,OAAOh/D,oCAOhC1C,OAAAgC,eAAW4gE,EAAAliE,UAAA,qBAAkB,KAA7B,SAA8B+X,GACxBgF,OAAOC,UAAUjF,IAAUA,GAAS,IACtCjY,KAAKuhE,kBAAkBh2D,QAAU0M,oCAMrCzY,OAAAgC,eAAI4gE,EAAAliE,UAAA,oBAAiB,KAGrB,WACE,OAAOF,KAAKuhE,kBAAkBh2D,aAJhC,SAAsB0M,GACpBjY,KAAKuhE,kBAAkBh2D,QAAU0M,mCAUnCzY,OAAAgC,eAAI4gE,EAAAliE,UAAA,eAAY,KAKhB,WACE,OAAOF,KAAKuhE,kBAAkBM,kBANhC,SAAiBd,GACXA,IACF/gE,KAAKuhE,kBAAkBM,aAAed,oCAW1CvhE,OAAAgC,eAAI4gE,EAAAliE,UAAA,SAAM,KAAV,WACE,OAAOF,KAAK8gE,UAAUr7D,QAAO,SAAAs7D,GAC3B,OAAwB,IAAjBA,EAAMra,2CAIjBlnD,OAAAgC,eAAI4gE,EAAAliE,UAAA,mBAAgB,KAApB,WACE,OAAIF,KAAKuhE,kBAAkBM,aAClB7hE,KAAKuhE,kBAAkBM,aAAaE,UAEtC,oCAKTK,EAAAliE,UAAAwX,mBAAA,WAAA,IAAAjT,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAKuhE,kBAAkB3pD,QAAQ9S,WAAU,SAAAmT,GACvCxT,EAAK49D,wBAAwBpgE,KAAKgW,GAClCxT,EAAK69D,mBAAmBrgE,KAAKwC,EAAK88D,kBAAkBM,mBAK1DO,EAAAliE,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,iBACtC7F,KAAKuhE,kBAAkB7sB,oDAbamsB,MArDtC//D,EAAA,CADC4X,EAAAA,gBAAgB2oD,mCASjBvgE,EAAA,CADCkN,EAAAA,MAAM,gEAO+BlN,EAAA,CAArCsN,EAAAA,OAAO,6EAaRtN,EAAA,CADCkN,EAAAA,MAAM,qDAS0BlN,EAAA,CAAhCsN,EAAAA,OAAO,mEAvCGg0D,EAASthE,EAAA,CAbrByQ,EAAAA,UAAU,CACTvO,SAAU,aACVqJ,SAAA,kaACAmF,UAAW,CAACqvD,IACZ95D,KAAM,CACJw7D,iBAAkB,OAClBC,uBAAwB,oCACxBC,qBAAsB,kCACtBC,wBAAyB,qCACzBC,wBAAyB,8CAElB,+BAEEP,oBCgBX,SAAAQ,EAAmBrB,EAA6CjqD,GAA7CtX,KAAAuhE,kBAAAA,EAA6CvhE,KAAAsX,cAAAA,EAf/BtX,KAAAsiE,mBAAqB,IAAI71D,EAAAA,cAAuB,GAa3CzM,KAAAqiE,wBAA0B,IAAI51D,EAAAA,aAsBtE,OA5CEjN,OAAAgC,eAAIohE,EAAA1iE,UAAA,eAAY,KAKhB,WACE,OAAOF,KAAKuhE,kBAAkBM,kBANhC,SAAiBd,GACXA,IACF/gE,KAAKuhE,kBAAkBM,aAAed,oCAa1CvhE,OAAAgC,eAAIohE,EAAA1iE,UAAA,oBAAiB,KAGrB,WACE,OAAOF,KAAKuhE,kBAAkBh2D,aAJhC,SAAsB0M,GACpBjY,KAAKuhE,kBAAkBh2D,QAAU0M,mCAUnC2qD,EAAA1iE,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAK6iE,yBAA2B7iE,KAAKuhE,kBAAkB3pD,QAAQ9S,WAAU,SAAAmT,GACvExT,EAAK49D,wBAAwBz0D,KAAKqK,GAClCxT,EAAK69D,mBAAmB10D,KAAKnJ,EAAK88D,kBAAkBN,aAAahpD,QAIrE2qD,EAAA1iE,UAAA4iE,OAAA,WACE9iE,KAAKuhE,kBAAkBt/D,QAGzB2gE,EAAA1iE,UAAA6iE,SAAA,WACE/iE,KAAKuhE,kBAAkBnvD,YAGzBwwD,EAAA1iE,UAAA8G,YAAA,WACEhH,KAAK6iE,yBAAyBh9D,wDAlBMg7D,UAAyClrD,KAxB/E7U,EAAA,CADCkN,EAAAA,MAAM,qDAU0BlN,EAAA,CAAhCsN,EAAAA,OAAO,mEAMRtN,EAAA,CADCkN,EAAAA,MAAM,+DAQ+BlN,EAAA,CAArCsN,EAAAA,OAAO,6EA7BGw0D,EAAc9hE,EAAA,CAL1ByQ,EAAAA,UAAU,CACTvO,SAAU,mBACVqJ,SAAA,+1BACAtF,KAAM,CAAEi8D,uBAAwB,WAErBJ,MCCAK,GAAoC,CAAC5B,GAAUc,GAAcC,GAAWQ,GAAgBxB,IAOrG8B,GAAA,WAAA,SAAAA,KAA6B,OAAhBA,EAAcpiE,EAAA,CAL1BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAeg9D,IACvC58D,aAAc,CAAC2/D,IACf1/D,QAAS,CAAC0/D,OAECC,GAAb,iBChBA,SAAAC,KAAgC,OAAnBA,EAAiBriE,EAAA,CAD7BqC,EAAAA,SAAS,CAAEI,QAAS,CAAC2/D,OACTC,MCHbC,GAAA,WAAA,SAAAA,KAaA,OAZgBA,EAAAC,YAAsB,EACtBD,EAAAE,YAAsB,EACtBF,EAAAG,cAAwB,gBACxBH,EAAAI,SAAmB,WACnBJ,EAAAK,UAAoB,YACpBL,EAAAM,WAAqB,aACrBN,EAAAO,yBAAmC,sBACnCP,EAAAQ,wBAAkC,qBAClCR,EAAAS,oBAA8B,2BAC9BT,EAAAU,oBAA8B,0BAC9BV,EAAAW,kBAA4B,kBAC5BX,EAAAY,kBAA4B,kBAC5CZ,EAbA,GCAAa,GAAA,WACE,SAAAA,EAAoBC,EAA8BC,GAA9BnkE,KAAAkkE,aAAAA,EAA8BlkE,KAAAmkE,UAAAA,EASpD,OAPE3kE,OAAAgC,eAAIyiE,EAAA/jE,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKkkE,8CAGd1kE,OAAAgC,eAAIyiE,EAAA/jE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKmkE,2CAEhBF,EAVA,iBCoBE,SAAAG,IAZOpkE,KAAAqkE,kBAA8B,GAC7BrkE,KAAAskE,mBAAqB,IAAI5K,EAAAA,cACzB15D,KAAAukE,kBAAoB,IAAI5gE,EAAAA,QAW9B3D,KAAKwkE,sBATPhlE,OAAAgC,eAAI4iE,EAAAlkE,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKskE,mBAAmBzgE,gDAGjCrE,OAAAgC,eAAI4iE,EAAAlkE,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKukE,kBAAkB1gE,gDAOhCugE,EAAAlkE,UAAAukE,YAAA,SAAYC,GACLA,IAAY1kE,KAAK2kE,gBAAgBD,KAGtC1kE,KAAKqkE,kBAAkB7hE,KAAKkiE,GAC5B1kE,KAAKskE,mBAAmBriE,KAAKjC,KAAKqkE,qBAGpCD,EAAAlkE,UAAAykE,gBAAA,SAAgBD,GACd,OAAI1kE,KAAKqkE,kBAAkBzzD,QAAQ8zD,IAAa,IAC9C5xC,QAAQrwB,MAAM,0BAA4BiiE,EAAW,6DAC9C,IAKXN,EAAAlkE,UAAA0kE,cAAA,SAAcF,GACZ,IAAMzsD,EAAQjY,KAAKqkE,kBAAkBzzD,QAAQ8zD,GACzCzsD,GAAS,IACXjY,KAAKqkE,kBAAkBnsD,OAAOD,EAAO,GACrCjY,KAAKskE,mBAAmBriE,KAAKjC,KAAKqkE,qBAItCD,EAAAlkE,UAAA2kE,mBAAA,SAAmBC,EAAqBJ,GACtC,IAAMvpD,EAAuC,IAAI8oD,GAA4Ba,EAAaJ,GAC1F1kE,KAAKukE,kBAAkBtiE,KAAKkZ,IAG9BipD,EAAAlkE,UAAAskE,aAAA,WACE,IAAMrpD,EAAuC,IAAI8oD,GAC/Cb,GAAmBG,eAClB,KAEHvjE,KAAKukE,kBAAkBtiE,KAAKkZ,kGAnDnBipD,EAA2BtjE,EAAA,CADvCsD,EAAAA,WAAW,CAAEmS,WAAY,UACb6tD,oBCIX,SAAAW,EAAoBt1C,EAA2Bu1C,GAA3BhlE,KAAAyvB,MAAAA,EAA2BzvB,KAAAglE,qBAAAA,EAqCjD,OAnCED,EAAA7kE,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAKilE,WAAajlE,KAAKyvB,MAAM7oB,cAAcd,UAC3C9F,KAAKklE,cAAgBllE,KAAKglE,qBAAqBG,WAAWrgE,UAAU,CAClE7C,KAAM,SAACkZ,GACL1W,EAAK2gE,eAAejqD,OAK1B4pD,EAAA7kE,UAAAklE,eAAA,SAAejqD,GACb,IAAIkqD,EAAmBjC,GAAmBO,yBACtCxoD,EAAQ2pD,cAAgB1B,GAAmBG,eAC7CvjE,KAAKilE,WAAWniD,OAAOsgD,GAAmBO,0BAC1C3jE,KAAKilE,WAAWniD,OAAOsgD,GAAmBQ,0BACjCzoD,EAAQupD,WAAatB,GAAmBC,YACjDrjE,KAAKslE,WAAWnqD,EAAQ2pD,YAAaO,GAC5BlqD,EAAQupD,WAAatB,GAAmBE,cACjD+B,EAAWjC,GAAmBQ,wBAC9B5jE,KAAKslE,WAAWnqD,EAAQ2pD,YAAaO,KAIzCN,EAAA7kE,UAAAolE,WAAA,SAAWR,EAAqBO,GAC1BP,IAAgB1B,GAAmBI,SACrCxjE,KAAKilE,WAAWjpD,IAAIqpD,GACXP,IAAgB1B,GAAmBK,UAC5CzjE,KAAKilE,WAAWniD,OAAOuiD,GACdP,IAAgB1B,GAAmBM,YAC5C1jE,KAAKilE,WAAWvgD,OAAO2gD,IAI3BN,EAAA7kE,UAAA8G,YAAA,WACEhH,KAAKklE,cAAcr/D,wDAnCM8I,EAAAA,kBAA0Cy1D,MAJ1DW,EAAgBjkE,EAAA,CAD5BiC,EAAAA,UAAU,CAAEC,SAAU,qBAAsB+D,KAAM,CAAEw+D,yBAA0B,WAClER,MCDAS,GAAqC,CAACT,IAOnDU,GAAA,WAAA,SAAAA,KAAqC,OAAxBA,EAAsB3kE,EAAA,CALlCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,GACxBI,aAAc,CAACkiE,IACfjiE,QAAS,CAACiiE,OAECC,GAAb,kBCVA,SAAAC,mDAAyD,OAAZ5lE,EAAA4lE,EAAA5jD,GAAhC4jD,EAAuB5kE,EAAA,CADnCiC,EAAAA,UAAU,CAAEC,SAAU,wBACV0iE,IAAgCrzB,mBCK3C,SAAAszB,EACEh0B,EACYC,EACZozB,GAHF,IAAAvgE,EAAAzE,KAKE,IAAK4xC,EACH,MAAM,IAAIryB,MAAM,wEAElB9a,EAAAqd,EAAAlhB,KAAAZ,KAAM2xC,EAAKC,IAAW5xC,MACjBglE,qBAAuBA,IAQhC,OApB6CllE,EAAA6lE,EAAA7jD,GAiB3CtiB,OAAAgC,eAAImkE,EAAAzlE,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKglE,qBAAqBX,kBAAkBh5D,QAAO,SAACu6D,EAAKlB,GAAa,OAAAkB,EAAMlB,IAAU,6EAdxF/xB,EAAAA,yBACmB+yB,GAAuB3kE,WAAA,CAAA,CAAAsG,KAA9CqI,EAAAA,kBACqB00D,MANbuB,EAAuB7kE,EAAA,CADnCiC,EAAAA,UAAU,CAAEC,SAAU,eAMlBvB,EAAA,EAAAiO,EAAAA,aALQi2D,IAAgCj0B,kBCgC3C,SAAAm0B,EACUb,EACD1tD,GAFT,IAAA7S,EAAAzE,KACUA,KAAAglE,qBAAAA,EACDhlE,KAAAsX,cAAAA,EARTtX,KAAA8lE,mBAAoB,EACpB9lE,KAAA+lE,mBAAoB,EACpB/lE,KAAAgmE,aAAuB,KACvBhmE,KAAAimE,mBAAqB7C,GAOnBpjE,KAAKklE,cAAgBllE,KAAKglE,qBAAqBkB,eAAephE,UAAU,CACtE7C,KAAM,SAACkkE,GACL1hE,EAAK2hE,sBAAsBD,MAyCnC,OAnCEN,EAAA3lE,UAAAmmE,iBAAA,WACErmE,KAAK8lE,mBAAoB,EACzB9lE,KAAK+lE,mBAAoB,GAI3BF,EAAA3lE,UAAAkmE,sBAAA,SAAsBE,GAAtB,IAAA7hE,EAAAzE,KACEA,KAAKqmE,mBACDC,EAAQ3lE,OAAS,EACnBmyB,QAAQrwB,MAAM,oCAGhB6jE,EAAQr/D,SAAQ,SAAAy9D,GACVA,IAAatB,GAAmBC,YAClC5+D,EAAKqhE,mBAAoB,EAChBpB,IAAatB,GAAmBE,cACzC7+D,EAAKshE,mBAAoB,OAM/BF,EAAA3lE,UAAAqmE,aAAA,WACEvmE,KAAKglE,qBAAqBR,gBAI5BqB,EAAA3lE,UAAAsmE,UAAA,SAAU9B,GACR1kE,KAAKgmE,aAAehmE,KAAKgmE,eAAiBtB,EAAW,KAAOA,EAC5D1kE,KAAKglE,qBAAqBH,mBAAmBzB,GAAmBM,WAAYgB,IAG9EmB,EAAA3lE,UAAA8G,YAAA,WACEhH,KAAKklE,cAAcr/D,wDA5CWu+D,UACRzuD,KATbkwD,EAAS/kE,EAAA,CAxBrByQ,EAAAA,UAAU,CACTvO,SAAU,aACVqJ,SAAU,m2BAoBVtF,KAAM,CAAE0/D,iBAAkB,WAEfZ,oBCtBX,SAAAa,EAAoB1B,EAA2Dx2D,GAA3DxO,KAAAglE,qBAAAA,EAA2DhlE,KAAAwO,WAAAA,EA8DjF,OA5DEk4D,EAAAxmE,UAAA2f,SAAA,WACM7f,KAAK2mE,QAAUvD,GAAmBC,aAAerjE,KAAK2mE,QAAUvD,GAAmBE,aAIvFtjE,KAAKglE,qBAAqBP,YAAYzkE,KAAK2mE,OAC3C3mE,KAAK4mE,YAAY5mE,KAAK2mE,QAJpB7zC,QAAQrwB,MAAM,iCAOlBikE,EAAAxmE,UAAA0mE,YAAA,SAAYD,GACV,IAAME,EAAmB7mE,KAAKwO,WAAW5H,cAAcd,UACnD6gE,IAAUvD,GAAmBC,YAC/BwD,EAAiB7qD,IAAIonD,GAAmBW,mBAC/B4C,IAAUvD,GAAmBE,aACtCuD,EAAiB7qD,IAAIonD,GAAmBY,oBAI5CxkE,OAAAgC,eAAIklE,EAAAxmE,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK8mE,wCAIdtnE,OAAAgC,eAAIklE,EAAAxmE,UAAA,qBAAkB,KAAtB,WACE,OAAOkjE,oCAGTsD,EAAAxmE,UAAAiE,KAAA,WACEnE,KAAKglE,qBAAqBH,mBAAmBzB,GAAmBI,SAAUxjE,KAAK2mE,QAGjFD,EAAAxmE,UAAA0R,MAAA,WACE5R,KAAKglE,qBAAqBH,mBAAmBzB,GAAmBK,UAAWzjE,KAAK2mE,QAQlFD,EAAAxmE,UAAA6mE,aAAA,SAAa/lE,GAMX,IALA,IAAIuK,EAAevK,EACbgmE,EAAehnE,KAAKwO,WAAW5H,cAI9B2E,GAAS,CACd,GAAIA,IAAYy7D,EACd,OACK,GAAIz7D,EAAQzF,UAAUG,SAAS,YAEpC,YADAjG,KAAK4R,QAGPrG,EAAUA,EAAQ8c,aAItBq+C,EAAAxmE,UAAA8G,YAAA,WACEhH,KAAKglE,qBAAqBJ,cAAc5kE,KAAK2mE,iDA5DLvC,UAAiDz1D,EAAAA,cAFnE7N,EAAA,CAAvBkN,EAAAA,MAAM,+CA4CPlN,EAAA,CADCuN,EAAAA,aAAa,QAAS,CAAC,oDA5Cbq4D,EAAW5lE,EAAA,CADvBiC,EAAAA,UAAU,CAAEC,SAAU,qBACV0jE,MCMAO,GAAyC,CACpDpB,GACAa,GACAf,GACAD,IAQFwB,GAAA,WAAA,SAAAA,KAAkC,OAArBA,EAAmBpmE,EAAA,CAL/BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAeg9D,IACvC58D,aAAc,CAAC2jE,IACf1jE,QAAS,CAAC0jE,OAECC,GAAb,iBCfA,SAAAC,KAEA,OAD0BrmE,EAAA,CAAvBsQ,EAAAA,UAAUrD,EAAAA,6CADAo5D,EAAoBrmE,EAAA,CAPhCyQ,EAAAA,UAAU,CACTlF,SAAU,0FAMC86D,MCJAC,GAAuC,CAACD,kBCMrD,SAAAE,KAAmC,OAAtBA,EAAoBvmE,EAAA,CANhCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC8jE,IACf3sD,gBAAiB,CAAC2sD,IAClB7jE,QAAS,CAAC6jE,OAECC,qBCPb,SAAAC,mDAAgD,OAAZxnE,EAAAwnE,EAAAxlD,GAAvBwlD,EAAcxmE,EAAA,CAD1BiC,EAAAA,UAAU,CAAEC,SAAU,cACVskE,IAAuBj1B,mBCQlC,SAAAk1B,EACE51B,EACYC,EACU71B,EACtByrD,GAJF,IAAA/iE,EAAAzE,KAME,IAAK4xC,EACH,MAAM,IAAIryB,MAAM,kFAElB9a,EAAAqd,EAAAlhB,KAAAZ,KAAM2xC,EAAKC,IAAW5xC,MACjBwnE,SAAWA,EAChB/iE,EAAKsX,GAAKA,IAMd,OArBuCjc,EAAAynE,EAAAzlD,GAkBrCtiB,OAAAgC,eAAI+lE,EAAArnE,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKwnE,SAASj8D,UAAYvL,KAAK+b,6EAdjC42B,EAAAA,yBACmB20B,GAAcvmE,WAAA,CAAA,CAAAsG,KAArCqI,EAAAA,2CACApI,EAAAA,OAAMC,KAAA,CAAC4d,aACEG,MARDiiD,EAAiBzmE,EAAA,CAD7BiC,EAAAA,UAAU,CAAEC,SAAU,kCAOlBvB,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA6F,EAAAA,OAAO6d,MAPCoiD,IAA0B71B,ICJvC+1B,GAAA,WAAA,SAAAA,KAGA,OAHaA,EAAW3mE,EAAA,CADvBsD,EAAAA,cACYqjE,GAAb,I9BHA,SAAYtM,GACVA,EAAA,WAAA,aACAA,EAAA,SAAA,WAFF,CAAYA,KAAAA,GAAU,uB+BItB,SAAAuM,IACU1nE,KAAAy1D,UAAsB,GAE9Bz1D,KAAAqc,OAAqB8+C,GAAWzvD,WAgClC,OA9BEg8D,EAAAxnE,UAAAkyC,SAAA,SAASu1B,GACP3nE,KAAKy1D,UAAUjzD,KAAKmlE,IAGtBnoE,OAAAgC,eAAIkmE,EAAAxnE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKy1D,2CAGdj2D,OAAAgC,eAAIkmE,EAAAxnE,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKkwD,SAASjvC,MAAK,SAAC0mD,GACzB,OAAOA,EAAIC,2CAIfpoE,OAAAgC,eAAIkmE,EAAAxnE,UAAA,eAAY,KAAhB,WACE,OAAIF,KAAKqc,SAAW8+C,GAAW3vD,SACtB,GAEAxL,KAAKkwD,SAASzqD,QAAO,SAACkiE,GAAgB,OAA2B,IAA3BA,EAAIE,QAAQC,+CAI7DJ,EAAAxnE,UAAAyuC,WAAA,SAAWg5B,GACT,IAAM1vD,EAAQjY,KAAKkwD,SAASt/C,QAAQ+2D,GAChC1vD,GAAS,GACXjY,KAAKkwD,SAASh4C,OAAOD,EAAO,IA9BrByvD,EAAW5mE,EAAA,CADvBsD,EAAAA,cACYsjE,MCATK,GAAiC,EAgBrCC,GAAA,WACE,SAAAA,EACStiD,EACsB3J,EACrBksD,EACAC,GAHDloE,KAAA0lB,gBAAAA,EACsB1lB,KAAA+b,GAAAA,EACrB/b,KAAAioE,YAAAA,EACAjoE,KAAAkoE,YAAAA,EAEHloE,KAAKmoE,eACRnoE,KAAKmoE,aAAe,mBAAqBJ,MAuC/C,OA5BEvoE,OAAAgC,eAAYwmE,EAAA9nE,UAAA,cAAW,KAAvB,SAAwBgC,GACtBlC,KAAKooE,QAAUpoE,KAAKkoE,YAAYG,wBAAwB96D,mBAAmBrL,oCAI7E1C,OAAAgC,eAAIwmE,EAAA9nE,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKioE,YAAYK,gDAG1B9oE,OAAAgC,eAAIwmE,EAAA9nE,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKioE,YAAYM,kBAI1B,SAAiBxsD,GACf/b,KAAKioE,YAAYM,aAAexsD,mCAGlCvc,OAAAgC,eAAIwmE,EAAA9nE,UAAA,SAAM,KAAV,WACE,OAAOF,KAAK0lB,gBAAgBna,UAAYvL,KAAK+b,oCAG/CisD,EAAA9nE,UAAA8G,YAAA,WACE,IAAMiR,EAAQjY,KAAKkoE,YAAYG,wBAAwBz3D,QAAQ5Q,KAAKooE,SAChEnwD,GAAS,GACXjY,KAAKkoE,YAAYG,wBAAwBvlD,OAAO7K,6CA1C1BqN,mCACvBhe,EAAAA,OAAMC,KAAA,CAAC4d,aACasiD,UACAC,MAcvB5mE,EAAA,CADCsQ,EAAAA,UAAU,yBAA0B,CAAEC,QAAQ,qCAe/CvQ,EAAA,CADCkN,EAAAA,MAAM,wCAhCIg6D,EAAalnE,EAAA,CAdzByQ,EAAAA,UAAU,CACTvO,SAAU,kBACVqJ,SAAU,sZAeP5K,EAAA,EAAA6F,EAAAA,OAAO6d,MAHC6iD,GAAb,GCnBIQ,GAAkB,EAETC,GAAU,IAAI/xD,EAAAA,eAAuB,WAElD,SAAgB0O,KACd,MAAO,YAAcojD,KAGvB,ICTYE,GDSCC,GAAmB,CAC9Bl3D,QAASg3D,GACT3xD,WAAYsO,IEOVwjD,GAA8B,EAWlCC,GAAA,WAoBE,SAAAA,EACSnjD,EACuB3J,EACtBksD,EACDlvD,EACCwJ,EACAyU,EACAkxC,EACgBY,GAPjB9oE,KAAA0lB,gBAAAA,EACuB1lB,KAAA+b,GAAAA,EACtB/b,KAAAioE,YAAAA,EACDjoE,KAAA+Y,GAAAA,EACC/Y,KAAAuiB,IAAAA,EACAviB,KAAAg3B,iBAAAA,EACAh3B,KAAAkoE,YAAAA,EACgBloE,KAAA8oE,OAAAA,EAEnB9oE,KAAK+oE,YACR/oE,KAAK+oE,UAAY,gBAAkBH,MAMrC,IAAMjmD,EAAU3iB,KAAKuiB,IAAIG,wBAAwBykD,IACjDnnE,KAAKgpE,qBAAuBhpE,KAAKg3B,iBAAiBvU,gBAAgBE,OAASE,OAAWA,EAAW,CAC/F,CAAC7iB,KAAK+Y,GAAGnS,iBACRmc,SAiCP,OArEEvjB,OAAAgC,eAAIqnE,EAAA3oE,UAAA,aAAU,KAId,WACE,OAAOF,KAAKipE,aAAejpE,KAAKkoE,YAAY7rD,SAAW8+C,GAAW3vD,cALpE,SAAes8D,GACb9nE,KAAKipE,YAAcnB,mCASrBtoE,OAAAgC,eAAIqnE,EAAA3oE,UAAA,iBAAc,KAAlB,WACE,OAAQF,KAAK8nE,4CA6BftoE,OAAAgC,eAAIqnE,EAAA3oE,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKioE,YAAYM,8CAG1B/oE,OAAAgC,eAAIqnE,EAAA3oE,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKioE,YAAYK,oBAK1B,SAAcvsD,GACZ/b,KAAKioE,YAAYK,eAAiBvsD,mCAIpC8sD,EAAA3oE,UAAA6yD,SAAA,WACE/yD,KAAK0lB,gBAAgBna,QAAUvL,KAAK+b,IAKtCvc,OAAAgC,eAAIqnE,EAAA3oE,UAAA,SAAM,KAAV,WACE,OAAOF,KAAK0lB,gBAAgBna,UAAYvL,KAAK+b,oCAI/Cvc,OAAAgC,eAAIqnE,EAAA3oE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK4nE,OAAS,GAAK,4EAlDFtiD,mCACvBhe,EAAAA,OAAMC,KAAA,CAAC4d,aACasiD,UACV94D,EAAAA,kBACE6T,EAAAA,gCACa1U,EAAAA,wBACL45D,mCACpBpgE,EAAAA,OAAMC,KAAA,CAACkhE,SAxBV3nE,EAAA,CADCkN,EAAAA,MAAM,wDAWPlN,EAAA,CAFCmf,EAAAA,YAAY,kBACZA,EAAAA,YAAY,sDA+Bbnf,EAAA,CADCmf,EAAAA,YAAY,wDAWbnf,EAAA,CAFCmf,EAAAA,YAAY,MACZjS,EAAAA,MAAM,qCAMPlN,EAAA,CADCuN,EAAAA,aAAa,uCAOdvN,EAAA,CAFCmf,EAAAA,YAAY,gBACZA,EAAAA,YAAY,kDAMbnf,EAAA,CADCmf,EAAAA,YAAY,+CArEF4oD,EAAU/nE,EAAA,CATtBiC,EAAAA,UAAU,CACTC,SAAU,eACV+D,KAAM,CACJmiE,qBAAsB,QACtBC,cAAe,OACfvyB,KAAM,MACNvvC,KAAM,YAyBL5F,EAAA,EAAA6F,EAAAA,OAAO6d,KAMP1jB,EAAA,EAAA6F,EAAAA,OAAOmhE,MA5BCI,GAAb,iBCRE,SAAAO,EACS1jD,EACsB3J,EACrBmsD,GAFDloE,KAAA0lB,gBAAAA,EACsB1lB,KAAA+b,GAAAA,EACrB/b,KAAAkoE,YAAAA,EAERA,EAAY91B,SAASpyC,MAUzB,OAPEopE,EAAAlpE,UAAA8G,YAAA,WACEhH,KAAKkoE,YAAYv5B,WAAW3uC,OAG9BR,OAAAgC,eAAI4nE,EAAAlpE,UAAA,SAAM,KAAV,WACE,OAAOF,KAAK0lB,gBAAgBna,UAAYvL,KAAK+b,6EAZrBuJ,mCACvBhe,EAAAA,OAAMC,KAAA,CAAC4d,aACauiD,MAPvB5mE,EAAA,CADC8gB,EAAAA,aAAainD,GAAY,CAAEx3D,QAAQ,mCAGpCvQ,EAAA,CADC8gB,EAAAA,aAAaomD,GAAe,CAAE32D,QAAQ,sCAH5B+3D,EAAMtoE,EAAA,CAPlByQ,EAAAA,UAAU,CACTvO,SAAU,UACVqJ,SAAU,4CAGVmF,UAAW,CAAC6T,GAAuBoiD,MAUhChmE,EAAA,EAAA6F,EAAAA,OAAO6d,MARCikD,oBCLb,SAAAC,KAAoC,OAAvBA,EAAqBvoE,EAAA,CATjCyQ,EAAAA,UAAU,CACTvO,SAAU,2BACVqJ,SAAU,4CAGVtF,KAAM,CACJ24D,wBAAyB,WAGhB2J,OHVb,SAAYX,GACVA,EAAA,SAAA,WACAA,EAAA,WAAA,aACAA,EAAA,KAAA,OAHF,CAAYA,KAAAA,GAAiB,SIAjBY,GCAAC,iBCaV,SAAAC,EAAoBh7D,EAAqD9E,GAArD1J,KAAAwO,WAAAA,EAAqDxO,KAAA0J,WAAAA,EAO3E,OAXElK,OAAAgC,eAAIgoE,EAAAtpE,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKwO,WAAW5H,+CAKzB4iE,EAAAtpE,UAAAkG,MAAA,WACM4D,EAAAA,kBAAkBhK,KAAK0J,aACzB1J,KAAKwO,WAAW5H,cAAcR,kDAJFuI,EAAAA,kBAAqDnP,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBANtBpL,EAAA,CAA7Bmf,EAAAA,YAAY,iDADFupD,EAAe1oE,EAAA,CAH3BiC,EAAAA,UAAU,CACTC,SAAU,sBASmCvB,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eAPzCs9D,oBCiBX,SAAAC,EAAoBj7D,GAAAxO,KAAAwO,WAAAA,EACGxO,KAAA23D,UAAY+Q,GAAkBl9D,SAC5BxL,KAAA0pE,aAAc,EACL1pE,KAAA22B,YAAoC,IAAIlqB,EAAAA,aA4BlEzM,KAAAwlB,SAAmB,EAgCnBxlB,KAAA4E,cAAgC,GAkH1C,OAxKEpF,OAAAgC,eAAIioE,EAAAvpE,UAAA,iBAAc,KAclB,WACE,OAAIF,KAAK2pE,gBACA3pE,KAAK2pE,gBAEL3pE,KAAK4pE,iBAAiBpK,eAlBjC,SAAmBqK,GAIbA,GAAYA,EAASlpE,SACvBX,KAAK2pE,gBAAkBE,EACvB7pE,KAAK8pE,oDAITtqE,OAAAgC,eAAIioE,EAAAvpE,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKwO,WAAW5H,+CAazBpH,OAAAgC,eAAIioE,EAAAvpE,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKwlB,cAGd,SAAYtjB,GACNlC,KAAKwlB,WAAatjB,IACpBlC,KAAKwlB,SAAWtjB,oCAIpB1C,OAAAgC,eAAIioE,EAAAvpE,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK+pE,eAAe/pE,KAAKwlB,2CAGlChmB,OAAAgC,eAAIioE,EAAAvpE,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKgqE,YAAYpjE,cAAgB5G,KAAKgqE,YAAYpjE,cAA6B5G,KAAKgqE,6CAG7FP,EAAAvpE,UAAA+pE,aAAA,WACEjqE,KAAKgqE,YAAY5jE,QACjBpG,KAAK22B,YAAY10B,KAAKjC,KAAKwlB,WAG7BikD,EAAAvpE,UAAAu3D,OAAA,SAAO9vD,GACD3H,KAAKkqE,gBAAgBviE,KACvB3H,KAAKuL,QAAU5D,EACf3H,KAAKiqE,iBAMTR,EAAAvpE,UAAAwX,mBAAA,WACE1X,KAAK4E,cAAcpC,KAAKxC,KAAKmqE,wBAC7BnqE,KAAK8pE,mBAGPL,EAAAvpE,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAA1G,GAAK,OAAAA,EAAEsF,kBAIpC4jE,EAAAvpE,UAAAkqE,oBAAA,SAAoBrmE,GAElB,GAAI/D,KAAKqqE,qBAAuBtmE,EAAM/C,OAAQ,CAC5C,IAAM2G,EAAW3H,KAAKsqE,gBAA6BvmE,EAAM/C,QACrDhB,KAAKkqE,gBAAgBviE,KACvB3H,KAAKuL,QAAU5D,GAIf3H,KAAKuqE,eAAexmE,IAAU/D,KAAKwqE,6BACrCxqE,KAAKy3D,OAAOz3D,KAAKuL,QAAU,GAClBvL,KAAKyqE,eAAe1mE,IAAU/D,KAAK0qE,4BAC5C1qE,KAAKy3D,OAAOz3D,KAAKuL,QAAU,GAClBxH,EAAM4rD,OAAS5G,GAASyL,KACjCx0D,KAAKy3D,OAAO,GACH1zD,EAAM4rD,OAAS5G,GAAS0L,KACjCz0D,KAAKy3D,OAAOz3D,KAAK+pE,eAAeppE,OAAS,GAG3C6uD,GAAsBzrD,IAIxB0lE,EAAAvpE,UAAAyqE,sBAAA,SAAsB5mE,GACpB,IAAM4D,EAAW3H,KAAKsqE,gBAAgBvmE,EAAM/C,QAExC2G,GAAY,GACd3H,KAAKy3D,OAAO9vD,IAIR8hE,EAAAvpE,UAAAoqE,gBAAR,SAAwB97B,GACtB,OAAIxuC,KAAK2pE,gBACA3pE,KAAK+pE,eAAen5D,QAAQ49B,GAE5BxuC,KAAK+pE,eAAextD,KAAI,SAAAquD,GAAS,OAAAA,EAAMhkE,iBAAegK,QAAQ49B,IAIjEi7B,EAAAvpE,UAAAgqE,gBAAR,SAAwBviE,GACtB,OAAOA,GAAY,GAAKA,EAAW3H,KAAK+pE,eAAeppE,QAGjD8oE,EAAAvpE,UAAAsqE,2BAAR,WACE,OAAOxqE,KAAKwlB,SAAW,GAAK,GAGtBikD,EAAAvpE,UAAAwqE,0BAAR,WACE,OAAO1qE,KAAKwlB,SAAW,EAAIxlB,KAAK+pE,eAAeppE,QAGzC8oE,EAAAvpE,UAAA4pE,gBAAR,WACM9pE,KAAK+pE,gBAAkB/pE,KAAK+pE,eAAeppE,SAIzCX,KAAKwlB,UAAYxlB,KAAK+pE,eAAeppE,SACvCX,KAAKwlB,SAAWxlB,KAAK+pE,eAAeppE,OAAS,GAG3CX,KAAK0pE,cACP1pE,KAAKgqE,YAAY5jE,QACjBpG,KAAK22B,YAAY10B,UAKfwnE,EAAAvpE,UAAAiqE,qBAAR,WAAA,IAAA1lE,EAAAzE,KACE,OAAOA,KAAK4pE,iBAAiBhyD,QAAQ9S,WAAU,WAC7CL,EAAKqlE,sBAIDL,EAAAvpE,UAAAuqE,eAAR,SAAuB1mE,GACrB,IAAM8mE,EAAWnb,GAAY3rD,GAE7B,OAAQ/D,KAAK23D,WACX,KAAK+Q,GAAkBl9D,SACrB,OAAOzH,EAAM9C,MAAQ4pE,EAAS1b,UAChC,KAAKuZ,GAAkBh9D,WACrB,OAAO3H,EAAM9C,MAAQ4pE,EAASzb,WAChC,KAAKsZ,GAAkBoC,KACrB,OAAO/mE,EAAM9C,MAAQ4pE,EAAS1b,WAAaprD,EAAM9C,MAAQ4pE,EAASzb,WACpE,QACE,OAAO,IAILqa,EAAAvpE,UAAAqqE,eAAR,SAAuBxmE,GACrB,IAAM8mE,EAAWnb,GAAY3rD,GAE7B,OAAQ/D,KAAK23D,WACX,KAAK+Q,GAAkBl9D,SACrB,OAAOzH,EAAM9C,MAAQ4pE,EAAS3b,QAChC,KAAKwZ,GAAkBh9D,WACrB,OAAO3H,EAAM9C,MAAQ4pE,EAASxb,UAChC,KAAKqZ,GAAkBoC,KACrB,OAAO/mE,EAAM9C,MAAQ4pE,EAAS3b,SAAWnrD,EAAM9C,MAAQ4pE,EAASxb,UAClE,QACE,OAAO,6CA9KmB1gD,EAAAA,cACT7N,EAAA,CAAtBkN,EAAAA,MAAM,iDACkBlN,EAAA,CAAxBkN,EAAAA,MAAM,qDACmBlN,EAAA,CAAzBsN,EAAAA,OAAO,qDAERtN,EAAA,CADC4X,EAAAA,gBAAgB8wD,GAAiB,CAAEpoD,aAAa,4CAKjDtgB,EAAA,CADCkN,EAAAA,MAAM,mDAmEPlN,EAAA,CADCuN,EAAAA,aAAa,UAAW,CAAC,oDAwB1BvN,EAAA,CADCuN,EAAAA,aAAa,QAAS,CAAC,sDAlGbo7D,EAAW3oE,EAAA,CAJvByQ,EAAAA,UAAU,CACTvO,SAAU,gBACVqJ,SAAU,+BAECo9D,oBC2FX,SAAAsB,EACSrlD,EACAzV,EACAi4D,EACiBY,EACjBxxD,GAJAtX,KAAA0lB,gBAAAA,EACA1lB,KAAAiQ,cAAAA,EACAjQ,KAAAkoE,YAAAA,EACiBloE,KAAA8oE,OAAAA,EACjB9oE,KAAAsX,cAAAA,EA9CDtX,KAAA4E,cAAgC,GA+BhC5E,KAAAgrE,mBAAmC,GAK3ChrE,KAAAirE,gBAAiC,GAyEjCjrE,KAAAkrE,YAAa,EAqEf,OAhLE1rE,OAAAgC,eAAYupE,EAAA7qE,UAAA,mBAAgB,KAA5B,WACE,OAAOF,KAAKgrE,mBAAmBvlE,QAAO,SAAA0lE,GAAQ,OAACA,EAAKrD,cAAYnnE,wCAKlEnB,OAAAgC,eAAYupE,EAAA7qE,UAAA,0BAAuB,KAAnC,SAAoCgC,GAClClC,KAAKkoE,YAAYG,wBAA0BnmE,mCAK7C1C,OAAAgC,eAAIupE,EAAA7qE,UAAA,SAAM,KAWV,WACE,OAAOF,KAAKkoE,YAAY7rD,YAZ1B,SAAWA,GAEP7c,OAAO2W,KAAKglD,IACT5+C,KAAI,SAAAtb,GACH,OAAOk6D,GAAWl6D,MAEnB2P,QAAQyL,IAAW,IAEtBrc,KAAKkoE,YAAY7rD,OAASA,oCAU9B7c,OAAAgC,eAAIupE,EAAA7qE,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAKgrE,oDAgBdxrE,OAAAgC,eAAIupE,EAAA7qE,UAAA,sBAAmB,KAAvB,WACE,OAAOF,KAAKkoE,YAAYkD,aAAax6D,QAAQ5Q,KAAKkoE,YAAYmD,YAAc,mCAG9E7rE,OAAAgC,eAAIupE,EAAA7qE,UAAA,oBAAiB,KAArB,WACE,OAAOF,KAAKgrE,mBAAmBz8B,WAAU,SAAA48B,GAAQ,OAAAA,EAAKvD,2CAGxDpoE,OAAAgC,eAAIupE,EAAA7qE,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKkoE,YAAYhY,SAAS3zC,KAAI,SAAAorD,GAAO,OAAAA,EAAIE,QAAQkB,aAAWl4D,KAAK,sCAG1ErR,OAAAgC,eAAIupE,EAAA7qE,UAAA,sBAAmB,KAAvB,WACE,OAAOF,KAAKsrE,SAAS//D,SAAWvL,KAAKurE,kDAIvC/rE,OAAAgC,eAAIupE,EAAA7qE,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKqc,SAAW8+C,GAAW3vD,0CAGpCu/D,EAAA7qE,UAAAsrE,yBAAA,SAAyB7jE,GAGvB3H,KAAKiQ,cAAc9L,KAAOwD,GAAY3H,KAAKurE,kBAM7C/rE,OAAAgC,eAAIupE,EAAA7qE,UAAA,gBAAa,KAAjB,SAAkBgC,GAChBlC,KAAKyrE,eAAiBvpE,GAASA,EAAM0E,cACjC5G,KAAKiQ,cAAc9L,MAAQjC,GAG7BlC,KAAKsrE,SAASrB,gDAIlBc,EAAA7qE,UAAAwrE,6BAAA,SAA6B3nE,GACG/D,KAAKsrE,SAAS1kE,cAAcX,SAAsBlC,EAAMw1D,gBACxDv5D,KAAKsrE,SAAS//D,UAAYvL,KAAK2rE,oBAC3D3rE,KAAKsrE,SAAS//D,QAAUvL,KAAK2rE,oBAIjCZ,EAAA7qE,UAAA0rE,sBAAA,WACM5rE,KAAK6rE,qBAAuB7rE,KAAKiQ,cAAc9L,KACjDnE,KAAKsrE,SAAS7T,OAAOz3D,KAAKurE,iBAAmB,GAE7CvrE,KAAKsrE,SAAS7T,OAAOz3D,KAAKurE,kBAK5BvrE,KAAKkrE,YAAa,GAOpBH,EAAA7qE,UAAA4rE,oBAAA,WAGO9rE,KAAKkrE,YAAelrE,KAAKiQ,cAAc9L,MAC1CnE,KAAKsrE,SAAS7T,OAAOz3D,KAAK2rE,oBAI9BZ,EAAA7qE,UAAA6rE,gBAAA,SAAgBhoE,GAEX/D,KAAKyrE,eAAexlE,SAAsBlC,EAAMw1D,iBACjDv5D,KAAKiQ,cAAc9L,MAClBnE,KAAKkrE,aAENlrE,KAAKiQ,cAAc9L,MAAO,EAItBnE,KAAKirE,gBAAgBjrE,KAAK2rE,qBAAuB5nE,EAAMw1D,gBACzDv5D,KAAKsrE,SAAS//D,QAAUvL,KAAK2rE,qBAKnCZ,EAAA7qE,UAAA8rE,iBAAA,WAEEhsE,KAAKsrE,SAAS7T,OAAOz3D,KAAKurE,iBAAmB,IAG/CR,EAAA7qE,UAAAm+D,oBAAA,SAAoBt6D,EAAckoE,GAK5BloE,EAAM/C,SAAWirE,GAAsBA,EAAmBhmE,SAAsBlC,EAAM/C,UAKrFhB,KAAKyrE,eAAexlE,SAAsBlC,EAAM/C,SAAWhB,KAAK6rE,qBACnE7rE,KAAKsrE,SAAS7T,OAAOz3D,KAAKurE,iBAAmB,IAIzCR,EAAA7qE,UAAAgsE,wBAAR,WAAA,IAAAznE,EAAAzE,KACE,OAAOA,KAAKmsE,KAAKv0D,QAAQpS,KAAKme,EAAAA,UAAU3jB,KAAKmsE,KAAK5vD,KAAI,SAAAorD,GAAO,OAAAA,EAAIE,aAAW/iE,WAAU,WACpFL,EAAKumE,mBAAqBvmE,EAAK0nE,KAAK5vD,KAAI,SAAAorD,GAAO,OAAAA,EAAIE,WACnDpjE,EAAKwmE,gBAAkBxmE,EAAKumE,mBAAmBzuD,KAAI,SAAAorD,GAAO,OAAAA,EAAI5uD,GAAGnS,qBAIrEmkE,EAAA7qE,UAAAwX,mBAAA,WACE1X,KAAK4E,cAAcpC,KAAKxC,KAAKksE,gCAEe,IAAjClsE,KAAK0lB,gBAAgBna,SAA2BvL,KAAKosE,kBAAkB,IAChFpsE,KAAKosE,kBAAkB,GAAGrZ,WAI5B/yD,KAAKsrE,SAAS//D,QAAUvL,KAAK2rE,mBAG/BZ,EAAA7qE,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAAC,GACzBA,EAAIrB,2DArIkByf,UACF9hB,SACFkkE,mCACnBpgE,EAAAA,OAAMC,KAAA,CAACkhE,aACc9yD,KAtCxB7U,EAAA,CADCsQ,EAAAA,UAAU,0BAA2B,CAAEC,QAAQ,EAAMg+B,KAAMvhC,EAAAA,gEAO5DhN,EAAA,CADCkN,EAAAA,MAAM,yCAgBkBlN,EAAA,CAAxB4X,EAAAA,gBAAgB0wD,gCAUjBtoE,EAAA,CADCsQ,EAAAA,UAAUq4D,GAAa,CAAEp4D,QAAQ,oCA4BlCvQ,EAAA,CADCmf,EAAAA,YAAY,uDAcbnf,EAAA,CADCsQ,EAAAA,UAAUi4D,GAAuB,CAAEh6B,KAAM1gC,EAAAA,gDA/E/Bo8D,EAAOjqE,EAAA,CA9CnByQ,EAAAA,UAAU,CACTvO,SAAU,WACVqJ,SAAU,glFA0CVmF,UAAW,CAAC8T,GAAiB9hB,EAAyBkkE,GAAaiB,MAgDhElnE,EAAA,EAAA6F,EAAAA,OAAOmhE,MA9CCsC,MClEPsB,GAAoC,CAAC5C,GAAaD,IAOxD8C,GAAA,WAAA,SAAAA,KAAgC,OAAnBA,EAAiBxrE,EAAA,CAL7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC+oE,IACf9oE,QAAS,CAAC8oE,OAECC,GAAb,GCIaC,GAAmC,CAC9CvE,GACAoB,GACA2B,GACA1B,GACAR,GACAvB,GACAC,IAQFiF,GAAA,WAAA,SAAAA,KAA4B,OAAfA,EAAa1rE,EAAA,CALzBqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc2jB,GAAsB9jB,EAAemkE,GAAsBiF,IACnFhpE,aAAc,CAACipE,IACfhpE,QAAS,CAACgpE,GAAqBvlD,OAEpBwlD,GAAb,iBC5BA,SAAAC,IACSzsE,KAAA0sE,cAAwB,EASjC,OAPED,EAAAvsE,UAAAysE,iBAAA,WACE3sE,KAAK0sE,iBAGPD,EAAAvsE,UAAA0sE,mBAAA,WACE5sE,KAAK0sE,iBARID,EAAmC3rE,EAAA,CAD/CsD,EAAAA,cACYqoE,oBCAb,SAAAI,IACU7sE,KAAA8sE,OAAiB,EAa3B,OAXEttE,OAAAgC,eAAIqrE,EAAA3sE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK8sE,OAAS,mCAGvBD,EAAA3sE,UAAA6sE,aAAA,WACE/sE,KAAK8sE,UAGPD,EAAA3sE,UAAA8sE,eAAA,WACEhtE,KAAK8sE,UAZID,EAAsB/rE,EAAA,CADlCsD,EAAAA,cACYyoE,oBCEb,SAAAI,IACUjtE,KAAAktE,oBAAwC,IAAIvpE,EAAAA,QAM5C3D,KAAAmtE,kBAAsC,IAAIxpE,EAAAA,QAM1C3D,KAAAotE,YAAsB,EAatBptE,KAAAqtE,cAAwB,EAqBlC,OA5CE7tE,OAAAgC,eAAIyrE,EAAA/sE,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKktE,oBAAoBrpE,gDAKlCrE,OAAAgC,eAAIyrE,EAAA/sE,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAKmtE,kBAAkBtpE,gDAKhCrE,OAAAgC,eAAIyrE,EAAA/sE,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKotE,gBAGd,SAAclrE,GACZA,IAAUA,EACNlC,KAAKstE,aAAettE,KAAKotE,aAAelrE,GAC1ClC,KAAKutE,uBAAuBrrE,oCAMhC1C,OAAAgC,eAAIyrE,EAAA/sE,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKqtE,kBAGd,SAAgBnrE,GACdA,IAAUA,EACNlC,KAAKqtE,eAAiBnrE,KACnBA,GAASlC,KAAKwtE,WACjBxtE,KAAKutE,wBAAuB,GAE9BvtE,KAAKqtE,aAAenrE,oCAIhB+qE,EAAA/sE,UAAAqtE,uBAAR,SAA+BrrE,GAC7BlC,KAAKktE,oBAAoBjrE,KAAKC,GAC9BlC,KAAKotE,WAAalrE,EAClBlC,KAAKmtE,kBAAkBlrE,KAAKC,IA7CnB+qE,EAAkBnsE,EAAA,CAD9BsD,EAAAA,cACY6oE,oBCqDX,SAAAQ,EACUC,EACAC,EACAC,EACDt2D,GAJT,IAAA7S,EAAAzE,KACUA,KAAA0tE,YAAAA,EACA1tE,KAAA2tE,gBAAAA,EACA3tE,KAAA4tE,6BAAAA,EACD5tE,KAAAsX,cAAAA,EAvBDtX,KAAAmtE,kBAA2C,IAAI1gE,EAAAA,cAAsB,GAyB3EzM,KAAK6tE,KAAO7tE,KAAK0tE,YAAYI,iBAAiBhpE,WAAU,SAAA5C,GACtDuC,EAAK0oE,kBAAkBv/D,KAAK1L,MAWlC,OAxDE1C,OAAAgC,eAAIisE,EAAAvtE,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK0tE,YAAYJ,iBAI1B,SAAgBprE,GACdlC,KAAK0tE,YAAYJ,YAAcprE,mCAGjC1C,OAAAgC,eAAIisE,EAAAvtE,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK0tE,YAAYF,eAI1B,SAActrE,GACZlC,KAAK0tE,YAAYF,UAAYtrE,mCAM/B1C,OAAAgC,eAAIisE,EAAAvtE,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAK4tE,6BAA6BlB,cAAgB,mCAG3DltE,OAAAgC,eAAIisE,EAAAvtE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK2tE,gBAAgBI,0CAG9BvuE,OAAAgC,eAAIisE,EAAAvtE,UAAA,eAAY,KAAhB,WACE,OAAKF,KAAKstE,YAGFttE,KAAKwtE,UAAqB,QAAT,OAFhB,sCAkBXC,EAAAvtE,UAAA8tE,eAAA,WACEhuE,KAAKwtE,WAAaxtE,KAAKwtE,WAGzBC,EAAAvtE,UAAA8G,YAAA,WACEhH,KAAK6tE,KAAKhoE,wDAfWonE,UACIJ,UACaJ,UAChB92D,KArCxB7U,EAAA,CADCkN,EAAAA,MAAM,8DAUPlN,EAAA,CADCkN,EAAAA,MAAM,0DAMPlN,EAAA,CADCsN,EAAAA,OAAO,0EAnBGq/D,EAAc3sE,EAAA,CAX1ByQ,EAAAA,UAAU,CACTvO,SAAU,mBACVqJ,SAAA,kjCACAmF,UAAW,CAACy7D,GAAoBJ,GAAwBJ,IACxD1lE,KAAM,CACJmzC,MAAO,mBACP+zB,uBAAwB,YACxBC,yBAA0B,eAC1BC,oBAAqB,eAGZV,oBCdb,SAAAW,IACUpuE,KAAAymB,cAAkC,IAAI9iB,EAAAA,QAShD,OAPEnE,OAAAgC,eAAI4sE,EAAAluE,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKymB,cAAc5iB,gDAG5BuqE,EAAAluE,UAAA6R,OAAA,WACE/R,KAAKymB,cAAcxkB,MAAK,IARfmsE,EAAuBttE,EAAA,CADnCsD,EAAAA,cACYgqE,MCsBbC,GAAA,WACE,SAAAA,EACUC,EACAV,EACAW,EACAb,EACDp2D,GALT,IAAA7S,EAAAzE,KACUA,KAAAsuE,YAAAA,EACAtuE,KAAA4tE,6BAAAA,EACA5tE,KAAAuuE,iBAAAA,EACAvuE,KAAA0tE,YAAAA,EACD1tE,KAAAsX,cAAAA,EA+CDtX,KAAAwuE,aAAuB,EAyBcxuE,KAAA4mB,eAAwC,IAAIna,EAAAA,cAAsB,GAEvGzM,KAAA6mB,eAAiC,GAEjC7mB,KAAAyuE,sBAjGsB,YAuB5BzuE,KAAK4tE,6BAA6BjB,mBAQlC3sE,KAAK6mB,eAAerkB,KAClBxC,KAAKsuE,YAAYxnD,aAAahiB,WAAU,SAAA5C,GAClCA,GAjCoB,cAiCXuC,EAAKiqE,sBACZjqE,EAAKipE,YAAYF,YACnB/oE,EAAKipE,YAAYF,WAAY,GAE/B/oE,EAAKiqE,qBAtCgB,YAuCXxsE,GAvCW,aAuCFuC,EAAKiqE,uBACxBjqE,EAAKiqE,qBAvCiB,iBA8C5B1uE,KAAK6mB,eAAerkB,KAClBxC,KAAK0tE,YAAYiB,mBAAmB7pE,WAAU,SAAC8pE,GACzCA,GAAmBnqE,EAAKiiB,UAC1BjiB,EAAK+pE,aAAc,EACnB/pE,EAAKiqE,qBAlDiB,cAmDZE,GAAmBnqE,EAAK+pE,cAClC/pE,EAAKoqE,cACLpqE,EAAK+pE,aAAc,OAMzBxuE,KAAK6mB,eAAerkB,KAClBxC,KAAKuuE,iBAAiBznD,aAAahiB,WAAU,SAACiN,GACxCA,IAAWtN,EAAKiiB,UAClBjiB,EAAKoqE,kBA4Ff,OAnFErvE,OAAAgC,eAAI6sE,EAAAnuE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAKsuE,YAAY5nD,cAG1B,SAAaxkB,GACPlC,KAAKsuE,YAAY5nD,WAAaxkB,IAChClC,KAAKsuE,YAAY5nD,SAAWxkB,EAC5BlC,KAAK4mB,eAAehZ,KAAK1L,qCAK7B1C,OAAAgC,eAAI6sE,EAAAnuE,UAAA,oBAAiB,KAArB,SAAsBgC,GACpBA,IAAUA,EACNlC,KAAK0mB,WAAaxkB,GAIpBlC,KAAK+gD,gDAUTstB,EAAAnuE,UAAA2uE,YAAA,WACE7uE,KAAK0mB,UAAW,EAEhB1mB,KAAK0uE,qBAvGsB,YA0G7BL,EAAAnuE,UAAA4uE,cAAA,WAGE9uE,KAAK0uE,qBA5GuB,aAgH9BL,EAAAnuE,UAAA6uE,oBAAA,SAAoB99D,GAhHU,cAiHxBA,EAAO+9D,UACThvE,KAAK0mB,UAAW,IAIpBlnB,OAAAgC,eAAI6sE,EAAAnuE,UAAA,uBAAoB,KAAxB,WACE,OAAOF,KAAKyuE,2BAGd,SAAyBvsE,GACnBA,IAAUlC,KAAKyuE,wBACjBzuE,KAAKyuE,sBAAwBvsE,oCAIjCmsE,EAAAnuE,UAAA6gD,aAAA,WACM/gD,KAAK0mB,SACP1mB,KAAK8uE,iBAGD9uE,KAAK0tE,YAAYF,YACnBxtE,KAAK0tE,YAAYF,WAAY,GAG/BxtE,KAAK6uE,gBAITR,EAAAnuE,UAAAwX,mBAAA,WAGM1X,KAAK0tE,YAAYF,WAAaxtE,KAAK0mB,WACrC1mB,KAAKwuE,aAAc,EACnBxuE,KAAK0uE,qBAlJqB,cAsJ9BL,EAAAnuE,UAAA8G,YAAA,WACEhH,KAAK6mB,eAAe5f,SAAQ,SAACC,GAAsB,OAAAA,EAAIrB,iBACvD7F,KAAK4tE,6BAA6BhB,+DAvIbvmD,UACiBomD,UACZ2B,UACLnB,UACCt3D,KAkDxB7U,EAAA,CADCmf,EAAAA,YAAY,mDAabnf,EAAA,CADCkN,EAAAA,MAAM,sEAWsClN,EAAA,CAA5CsN,EAAAA,OAAO,2EA9EGigE,EAAmBvtE,EAAA,CAb/ByQ,EAAAA,UAAU,CACTvO,SAAU,yBACVqJ,SAAA,4zCACAmF,UAAW,CAAC6U,GAAiB+nD,IAC7Bz0D,WAAY,CACVC,EAAAA,QAAQ,YAAa,CACnB9I,EAAAA,MATyB,WASHgJ,EAAAA,MAAM,CAAEjR,OAAQ,OACtCiI,EAAAA,MAT0B,YASHgJ,EAAAA,MAAM,CAAEjR,OAAQ,EAAGgsD,aAAc,SAAUoa,WAAY,YAC9Ep1D,EAAAA,WAAcq1D,yBAAyCl1D,EAAAA,QAAQ,wBAGnEjT,KAAM,CAAEmzC,MAAO,gBAEJm0B,GAAb,iBCnBA,SAAAc,KAA0C,OAA7BA,EAA2BruE,EAAA,CANvCyQ,EAAAA,UAAU,CACTvO,SAAU,kCACVqJ,SAAU,+CAIC8iE,oBCJX,SAAAC,EAAoBC,GAAArvE,KAAAqvE,wBAAAA,EAClBrvE,KAAKqvE,wBAAwBtC,eAMjC,OAHEqC,EAAAlvE,UAAA8G,YAAA,WACEhH,KAAKqvE,wBAAwBrC,2DALcH,MADlCuC,EAAkBtuE,EAAA,CAD9BiC,EAAAA,UAAU,CAAEC,SAAU,uBAAwB+D,KAAM,CAAEmzC,MAAO,eACjDk1B,oBCUX,SAAAE,EAAgCf,GAAAvuE,KAAAuuE,iBAAAA,EAQlC,OALSe,EAAApvE,UAAAqvE,qBAAP,WACMvvE,KAAKuuE,kBACPvuE,KAAKuuE,iBAAiBx8D,mDALwBq8D,GAAuBrtE,WAAA,CAAA,CAAAsG,KAA5DqI,EAAAA,cAGb5O,EAAA,CADCuN,EAAAA,aAAa,mDAHHihE,EAAkBxuE,EAAA,CAV9ByQ,EAAAA,UAAU,CACTvO,SAAU,uBACVqJ,SAAU,uKAMVtF,KAAM,CAAEmzC,MAAO,cAGFz4C,EAAA,EAAAiO,EAAAA,aADF4/D,MCCAE,GAA2C,CACtD/B,GACA6B,GACAjB,GACAc,GACAC,IAQFK,GAAA,WAAA,SAAAA,KAAmC,OAAtBA,EAAoB3uE,EAAA,CALhCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAe8jB,GAAsBmlB,IAC7D7oC,aAAc,CAACksE,IACfjsE,QAAS,CAACisE,GAA6BxoD,GAAsB9jB,EAAeipC,OAEjEsjC,GAAb,iBCnBA,SAAAC,KAA8B,OAAjBA,EAAe5uE,EAAA,CAD3BqC,EAAAA,SAAS,CAAEI,QAAS,CAACkiE,GAAwByB,GAAqBsF,GAAeiD,OACrEC,oBCHX,SAAAC,EAAsC10D,GAAAjb,KAAAib,UAAAA,EAWxC,OATE00D,EAAAzvE,UAAA0vE,cAAA,WACE5vE,KAAKib,UAAU5N,KAAKvH,UAAUkW,IAAI,iBAGpC2zD,EAAAzvE,UAAA2vE,gBAAA,WACM7vE,KAAKib,UAAU5N,KAAKvH,UAAUG,SAAS,iBACzCjG,KAAKib,UAAU5N,KAAKvH,UAAUgd,OAAO,mFAR5Bxb,EAAAA,OAAMC,KAAA,CAACC,EAAAA,eADTmoE,EAAgB7uE,EAAA,CAD5BsD,EAAAA,aAEc3C,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,YADTmoE,oBCuDX,SAAAG,EACUC,EACDz4D,EACmB04D,GAFlBhwE,KAAA+vE,kBAAAA,EACD/vE,KAAAsX,cAAAA,EACmBtX,KAAAgwE,QAAAA,EAhB5BhwE,KAAAyD,OAAiB,EACazD,KAAAiwE,aAAsC,IAAIxjE,EAAAA,cAAsB,GAEnEzM,KAAAyhE,UAAoB,EAEdzhE,KAAAkwE,gBAA0B,EAC3BlwE,KAAAmwE,cAAwB,QAGhBnwE,KAAAowE,qBAA+B,EACxCpwE,KAAAqwE,WAAqB,EAClBrwE,KAAAswE,SAAkC,IAAI7jE,EAAAA,cAAsB,GAmDhG,OA1CEqjE,EAAA5vE,UAAAi2D,YAAA,SAAYv+C,IACL5X,KAAKowE,qBAAuBx4D,GAAWA,EAAQ/X,eAAe,WAC7D+X,EAAQnU,MAAM8sE,aAChBvwE,KAAK+vE,kBAAkBH,gBAEvB5vE,KAAK+vE,kBAAkBF,oBAK7BC,EAAA5vE,UAAA8G,YAAA,WACEhH,KAAK+vE,kBAAkBF,mBAGzBC,EAAA5vE,UAAAiE,KAAA,WACMnE,KAAKyD,QAGTzD,KAAKyD,OAAQ,EACbzD,KAAKiwE,aAAariE,MAAK,KAIzBkiE,EAAA5vE,UAAA0R,MAAA,WACM5R,KAAKqwE,UACPrwE,KAAKswE,SAAS1iE,MAAK,GAGhB5N,KAAKyhE,UAAazhE,KAAKyD,QAG5BzD,KAAKyD,OAAQ,EAEbzD,KAAKwwE,UAAUjoD,qBAGjBunD,EAAA5vE,UAAAuwE,SAAA,SAASnuE,GACW,SAAdA,EAAE0sE,SAEJhvE,KAAKiwE,aAAariE,MAAK,6CA7CE+hE,UACLh6D,kCACrBrO,EAAAA,OAAMC,KAAA,CAACkP,QApBqB3V,EAAA,CAA9BsQ,EAAAA,UAAUiW,qCAIXvmB,EAAA,CAFCmf,EAAAA,YAAY,cACZjS,EAAAA,MAAM,6CAEuBlN,EAAA,CAA7BsN,EAAAA,OAAO,0DAEmBtN,EAAA,CAA1BkN,EAAAA,MAAM,oDACgBlN,EAAA,CAAtBkN,EAAAA,MAAM,4CAC0BlN,EAAA,CAAhCkN,EAAAA,MAAM,gEACyBlN,EAAA,CAA/BkN,EAAAA,MAAM,8DAGiClN,EAAA,CAAvCkN,EAAAA,MAAM,4EACwBlN,EAAA,CAA9BkN,EAAAA,MAAM,yDAC2BlN,EAAA,CAAjCsN,EAAAA,OAAO,0DAgCRtN,EAAA,CADCuN,EAAAA,aAAa,gDA/CHyhE,EAAQhvE,EAAA,CAtBpByQ,EAAAA,UAAU,CACTvO,SAAU,YACV0tE,cAAe,CAACf,IAChBtjE,SAAA,0vDAOAsN,WAAY,CACVC,EAAAA,QAAQ,WAAY,CAClBC,EAAAA,WAAW,aAAc,CAACC,EAAAA,MAAM,CAAEC,QAAS,EAAGG,UAAW,uBAAyBF,EAAAA,QAAQ,sBAC1FH,EAAAA,WAAW,aAAc,CAACG,EAAAA,QAAQ,mBAAoBF,EAAAA,MAAM,CAAEC,QAAS,EAAGG,UAAW,4BAEvFN,EAAAA,QAAQ,OAAQ,CACdC,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEC,QAAS,IAAMC,EAAAA,QAAQ,mBAAoBF,EAAAA,MAAM,CAAEC,QAAS,SAC7FF,EAAAA,WAAW,YAAa,CAACG,EAAAA,QAAQ,mBAAoBF,EAAAA,MAAM,CAAEC,QAAS,UAG1EvI,UAAW,CAACqF,WAfV,uFAsCCpV,EAAA,EAAA6F,EAAAA,OAAOmP,KArBCq5D,MC1Bba,GAAA,WAAA,SAAAA,IACE3wE,KAAAk1D,SAAW,EAcb,OAXEyb,EAAAzwE,UAAA0wE,UAAA,kBAGS5wE,KAAKk1D,UAIdyb,EAAAzwE,UAAA2wE,QAAA,WAEE7wE,KAAKk1D,SAAW,GATlBp0D,EAAA,CADCuN,EAAAA,aAAa,4CAQdvN,EAAA,CADCuN,EAAAA,aAAa,wCAVHsiE,EAAY7vE,EAAA,CANxBiC,EAAAA,UAAU,CACTC,SAAU,cACV+D,KAAM,CACJquD,kBAAmB,eAGVub,GAAb,GCLaG,GAAoC,CAAChB,GAAUa,IAO5DI,GAAA,WAAA,SAAAA,KAA6B,OAAhBA,EAAcjwE,EAAA,CAL1BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAeylB,GAAoBwjB,IAC3D7oC,aAAc,CAACwtE,IACfvtE,QAAS,CAACutE,GAAsB5tE,EAAeipC,OAEpC4kC,GAAb,GCRaC,GAAoD,CAC/DC,WAAY,CAAErS,YAAa5E,GAAMuC,WAAYsC,aAAc7E,GAAM6C,aAAchB,SAAU,GAAIF,QAAS,GACtGuV,aAAc,CAAEtS,YAAa5E,GAAMuC,WAAYsC,aAAc7E,GAAM4C,cAAef,SAAU,GAAIF,QAAS,GACzGwV,YAAa,CAAEvS,YAAa5E,GAAMuC,WAAYsC,aAAc7E,GAAM2C,YAAad,SAAU,GAAIF,QAAS,GACtGyV,YAAa,CAAExS,YAAa5E,GAAMgD,aAAc6B,aAAc7E,GAAM0C,YAAab,QAAS,EAAGF,QAAS,IACtG0V,eAAgB,CAAEzS,YAAa5E,GAAMgD,aAAc6B,aAAc7E,GAAM+C,YAAalB,QAAS,EAAGF,QAAS,IACzG2V,eAAgB,CAAE1S,YAAa5E,GAAMgD,aAAc6B,aAAc7E,GAAMqC,SAAUR,SAAU,EAAGF,QAAS,IACvG4V,eAAgB,CAAE3S,YAAa5E,GAAM4C,cAAeiC,aAAc7E,GAAMsC,SAAUT,QAAS,EAAGF,SAAU,GACxG6V,gBAAiB,CAAE5S,YAAa5E,GAAM4C,cAAeiC,aAAc7E,GAAMuC,WAAYV,QAAS,EAAGF,QAAS,IAC1G8V,cAAe,CAAE7S,YAAa5E,GAAM4C,cAAeiC,aAAc7E,GAAMwC,UAAWX,QAAS,EAAGF,QAAS,GACvG+V,cAAe,CAAE9S,YAAa5E,GAAM+C,YAAa8B,aAAc7E,GAAMyC,UAAWZ,QAAS,EAAGF,SAAU,IACtGgW,cAAe,CAAE/S,YAAa5E,GAAM+C,YAAa8B,aAAc7E,GAAMgD,aAAcnB,QAAS,EAAGF,SAAU,IACzGiW,WAAY,CAAEhT,YAAa5E,GAAM+C,YAAa8B,aAAc7E,GAAM8C,aAAcjB,QAAS,EAAGF,SAAU,IACtGkW,QAAS,CAAEjT,YAAa5E,GAAMgD,aAAc6B,aAAc7E,GAAM+C,YAAalB,QAAS,EAAGF,QAAS,KCT9FmW,GAAsB,CAC1B,WACA,aACA,YACA,YACA,eACA,eACA,eACA,gBACA,cACA,cACA,cACA,YAsBFC,GAAA,SAAAjwD,GAGE,SAAAiwD,EACE1vD,EAGA67C,EACO5mD,EACmB06D,EAClBt4B,EACAC,EACqBjwC,EACXlF,GAVpB,IAAAC,EAYEqd,EAAAlhB,KAAAZ,KAAMqiB,EAAU67C,IAAWl+D,KAC3B,GAROyE,EAAA6S,cAAAA,EACmB7S,EAAAutE,kBAAAA,EAClBvtE,EAAAi1C,kBAAAA,EACAj1C,EAAAk1C,qBAAAA,EACqBl1C,EAAAiF,WAAAA,GAIxBw0D,EACH,MAAM,IAAI3+C,MAAM,4EAGlB9a,EAAKkD,SAAW,eAChBlD,EAAK45D,qBAAsB,EAC3B55D,EAAKi1C,kBAAkBF,MAAMw4B,GAE7BvtE,EAAKD,SAAWA,IAwEpB,OAhGwC1E,EAAAiyE,EAAAjwD,GAiCtCiwD,EAAA7xE,UAAA0R,MAAA,WACE5R,KAAKiQ,cAAc9L,MAAO,GAK5B3E,OAAAgC,eAAIuwE,EAAA7xE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK8J,eAiCd,SAAanC,GAEX3H,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cAAe5G,KAAK2H,UAClDA,GAAYmqE,GAAUlhE,QAAQjJ,IAAa,EAC7C3H,KAAK8J,UAAYnC,EAEjB3H,KAAK8J,UAAY,eAGnB9J,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cAAe5G,KAAK2H,UAEnD,IAAMsqE,EAAcjB,GAAmBhxE,KAAK2H,UAC5C3H,KAAK4+D,YAAcqT,EAAYrT,YAC/B5+D,KAAK6+D,aAAeoT,EAAYpT,aAChC7+D,KAAKo+D,eAAevC,QAAUoW,EAAYpW,QAC1C77D,KAAKo+D,eAAezC,QAAUsW,EAAYtW,yCAG5CoW,EAAA7xE,UAAA8G,YAAA,WACMgD,EAAAA,kBAAkBhK,KAAK0J,aAAe1J,KAAK+Y,GAAGnS,cAAcX,SAASjG,KAAKwE,SAASikB,gBACrFzoB,KAAK25C,qBAAqBL,yDAzFlBt1B,EAAAA,gBAGErV,EAAAA,WAAU5N,WAAA,CAAA,CAAAsG,KAFrBqI,EAAAA,UAAQ,CAAArI,KACRC,EAAAA,OAAMC,KAAA,CAAC4xC,aAEcxjC,kCACrBrO,EAAAA,OAAMC,KAAA,CAACkP,YACmB8iC,UACGH,UACW55C,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,+CACP5E,EAAAA,OAAMC,KAAA,CAACC,EAAAA,eA4DV1G,EAAA,CADCkN,EAAAA,MAAM,6CAxEI+jE,EAAkBjxE,EAAA,CAnB9ByQ,EAAAA,UAAU,CACTvO,SAAU,uBACVqJ,SAAU,ulBAcVtF,KAAM,CAAEmrE,2BAA4B,OAAQ7zD,OAAQ,qBACpD7M,UAAW,CAACqF,KAOTpV,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA6F,EAAAA,OAAO6xC,KAGP13C,EAAA,EAAA6F,EAAAA,OAAOmP,IAGPhV,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,cACPzK,EAAA,EAAA6F,EAAAA,OAAOE,EAAAA,YAbCuqE,GAAb,CAAwC9T,ICnC3BkU,GAAuC,CAAC53B,GAAaw3B,GAAoBt4B,IAOtF24B,GAAA,WAAA,SAAAA,KAAgC,OAAnBA,EAAiBtxE,EAAA,CAL7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAeipC,IACvC7oC,aAAc,CAAC6uE,IACf5uE,QAAS,CAAC4uE,GAAyBnrD,OAExBorD,GAAb,iBCdA,SAAAC,IACUryE,KAAAuQ,IAAuB,IAAI5M,EAAAA,QASrC,OAPE0uE,EAAAnyE,UAAAoyE,SAAA,SAASv2D,GACP/b,KAAKuQ,IAAItO,KAAK8Z,IAGhBvc,OAAAgC,eAAI6wE,EAAAnyE,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKuQ,IAAI1M,gDARPwuE,EAAgBvxE,EAAA,CAD5BsD,EAAAA,cACYiuE,oBCkBb,SAAAE,KAAyB,OAAZA,EAAUzxE,EAAA,CAjBtByQ,EAAAA,UAAU,CACTvO,SAAU,cACVqJ,SAAU,4CAGVtF,KAAM,CACJyrE,kBAAmB,QAErBhhE,UAAW,CACThO,EACA,CAAEiO,QAAS0nC,GAAqBznC,YAAa/C,EAAAA,YAG7CkI,EACAw7D,OAGSE,MChBPT,GAAsB,CAAC,cAAe,eAAgB,WAAY,YAAa,QAAS,QAExFW,GAAkB,CAAC,KAAM,KAAM,KAAM,MAc3CC,GAAA,SAAA5wD,GACE,SAAA4wD,EACErwD,EAGA67C,EAC0B3Q,EAClBolB,GANV,IAAAluE,EAQEqd,EAAAlhB,KAAAZ,KAAMqiB,EAAU67C,IAAWl+D,KAE3B,GAL0ByE,EAAA8oD,SAAAA,EAClB9oD,EAAAkuE,iBAAAA,GAIHzU,EACH,MAAM,IAAI3+C,MAAM,0EAIlB9a,EAAKkD,SAAW,QAChBlD,EAAKgY,KAAO,KAGZhY,EAAK6tE,SAAS/kB,KAuFlB,OA3GuCztD,EAAA4yE,EAAA5wD,GAyBrCtiB,OAAAgC,eAAIkxE,EAAAxyE,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK8J,eAmBd,SAAanC,GAYX,OAVA3H,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cAAe,WAAa5G,KAAK2H,UAC/DA,GAAYmqE,GAAUlhE,QAAQjJ,IAAa,EAC7C3H,KAAK8J,UAAYnC,EAEjB3H,KAAK8J,UAAY,QAGnB9J,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cAAe,WAAa5G,KAAK2H,UAGxDA,GACN,IAAK,YACH3H,KAAK4+D,YAAc5E,GAAMuC,WACzBv8D,KAAK6+D,aAAe7E,GAAM0C,YAC1B,MACF,IAAK,WACH18D,KAAK4+D,YAAc5E,GAAMuC,WACzBv8D,KAAK6+D,aAAe7E,GAAM8C,aAC1B,MACF,IAAK,eACH98D,KAAK4+D,YAAc5E,GAAM4C,cACzB58D,KAAK6+D,aAAe7E,GAAMqC,SAC1B,MACF,IAAK,cACHr8D,KAAK4+D,YAAc5E,GAAM4C,cACzB58D,KAAK6+D,aAAe7E,GAAMyC,UAC1B,MACF,IAAK,QACHz8D,KAAK4+D,YAAc5E,GAAMgD,aACzBh9D,KAAK6+D,aAAe7E,GAAMqC,SAC1B,MACF,IAAK,OACHr8D,KAAK4+D,YAAc5E,GAAM+C,YACzB/8D,KAAK6+D,aAAe7E,GAAMyC,UAC1B,MACF,QACEz8D,KAAK4+D,YAAc5E,GAAMgD,aACzBh9D,KAAK6+D,aAAe7E,GAAMqC,2CAvDhC78D,OAAAgC,eAAIkxE,EAAAxyE,UAAA,KAAE,KAAN,WACE,OAAOF,KAAKuQ,SAId,SAAOrO,GACLA,EAAQlC,KAAKsyE,SAASpwE,GAASlC,KAAKsyE,SAAS,qCAIvCI,EAAAxyE,UAAAoyE,SAAR,SAAiBv2D,GACf/b,KAAKuQ,IAAMwL,EACX/b,KAAK2yE,iBAAiBL,SAASv2D,IAkDjCvc,OAAAgC,eAAIkxE,EAAAxyE,UAAA,OAAI,KAAR,WACE,OAAOF,KAAK8sC,WAId,SAASrwB,GAEPzc,KAAKsE,SAASyZ,YAAY/d,KAAK+Y,GAAGnS,cAAe,WAAa5G,KAAKyc,MAC/DA,GAAQg2D,GAAM7hE,QAAQ6L,IAAS,EACjCzc,KAAK8sC,MAAQrwB,EAEbzc,KAAK8sC,MAAQ,KAGf9sC,KAAKsE,SAASmJ,SAASzN,KAAK+Y,GAAGnS,cAAe,WAAa5G,KAAKyc,gFAvGtDuH,EAAAA,gBAGErV,EAAAA,WAAU5N,WAAA,CAAA,CAAAsG,KAFrBqI,EAAAA,UAAQ,CAAArI,KACRC,EAAAA,OAAMC,KAAA,CAAC4xC,sCAEP7xC,EAAAA,OAAMC,KAAA,CAACkP,YACkB47D,MA2B5BvxE,EAAA,CADCkN,EAAAA,gCAYDlN,EAAA,CADCkN,EAAAA,MAAM,6CAoDPlN,EAAA,CADCkN,EAAAA,MAAM,qCA/FI0kE,EAAiB5xE,EAAA,CAZ7ByQ,EAAAA,UAAU,CACTvO,SAAU,sBACVqJ,SAAU,4CAGVtF,KAAM,CACJ6rE,0BAA2B,OAC3BC,kBAAmB,IACnB/d,cAAe,YACfz2C,OAAQ,QAMP5c,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAA6F,EAAAA,OAAO6xC,KAEP13C,EAAA,EAAA6F,EAAAA,OAAOmP,KANCi8D,GAAb,CAAuCzU,kBCLrC,SAAA6U,EAAoB7iE,EAAgD0iE,GAApE,IAAAluE,EAAAzE,KAAoBA,KAAAiQ,cAAAA,EAAgDjQ,KAAA2yE,iBAAAA,EAD5D3yE,KAAAkvC,KAAuB,GAG7BlvC,KAAKkvC,KAAK1sC,KAAKxC,KAAK2yE,iBAAiB52D,GAAGjX,WAAU,SAAAiuE,GAAa,OAACtuE,EAAKuuE,gBAAkBD,MAkB3F,OAbED,EAAA5yE,UAAA+yE,YAAA,WACEjzE,KAAKiQ,cAAc9L,MAAO,GAK5B2uE,EAAA5yE,UAAAgzE,YAAA,WACElzE,KAAKiQ,cAAc9L,MAAO,GAG5B2uE,EAAA5yE,UAAA8G,YAAA,WACEhH,KAAKkvC,KAAKjoC,SAAQ,SAAAC,GAAO,OAAAA,EAAIrB,2DAlBIrC,SAAmD6uE,MAOtFvxE,EAAA,CAFCuN,EAAAA,aAAa,cACbA,EAAAA,aAAa,0CAOdvN,EAAA,CAFCuN,EAAAA,aAAa,cACbA,EAAAA,aAAa,yCAfHykE,EAAiBhyE,EAAA,CAT7BiC,EAAAA,UAAU,CACTC,SAAU,sBACV+D,KAAM,CACJmuD,SAAU,IACVie,0BAA2B,OAC3BC,0BAA2B,kBAC3Bte,cAAe,eAGNge,MCJAO,GAAsC,CAACd,GAAYO,GAAmBJ,IAOnFY,GAAA,WAAA,SAAAA,KAA+B,OAAlBA,EAAgBxyE,EAAA,CAL5BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC+vE,IACf9vE,QAAS,CAAC8vE,GAAwBrsD,GAAsB9jB,MAE7CowE,GAAb,iBCXA,SAAAC,KAA+B,OAAlBA,EAAgBzyE,EAAA,CAD5BqC,EAAAA,SAAS,CAAEI,QAAS,CAAC28D,GAAmBkS,GAAmBkB,OAC/CC,oBCDb,SAAAC,IACSxzE,KAAAyzE,cAAwB,EAEvBzzE,KAAA0zE,oBAAsB,IAAI/vE,EAAAA,QAK1B3D,KAAA2zE,gBAAkB,IAAIhwE,EAAAA,QAKtB3D,KAAA4zE,kBAAoB,IAAIjwE,EAAAA,QAKxB3D,KAAA6zE,kBAAoB,IAAIlwE,EAAAA,QAKxB3D,KAAA8zE,kBAAoB,IAAInwE,EAAAA,QAKxB3D,KAAA+zE,kBAAoB,IAAIpwE,EAAAA,QAoBlC,OA5CEnE,OAAAgC,eAAWgyE,EAAAtzE,UAAA,qBAAkB,KAA7B,WACE,OAAOF,KAAK0zE,oBAAoB7vE,gDAIlCrE,OAAAgC,eAAWgyE,EAAAtzE,UAAA,iBAAc,KAAzB,WACE,OAAOF,KAAK2zE,gBAAgB9vE,gDAI9BrE,OAAAgC,eAAWgyE,EAAAtzE,UAAA,mBAAgB,KAA3B,WACE,OAAOF,KAAK4zE,kBAAkB/vE,gDAIhCrE,OAAAgC,eAAWgyE,EAAAtzE,UAAA,mBAAgB,KAA3B,WACE,OAAOF,KAAK6zE,kBAAkBhwE,gDAIhCrE,OAAAgC,eAAWgyE,EAAAtzE,UAAA,mBAAgB,KAA3B,WACE,OAAOF,KAAK8zE,kBAAkBjwE,gDAIhCrE,OAAAgC,eAAWgyE,EAAAtzE,UAAA,mBAAgB,KAA3B,WACE,OAAOF,KAAK+zE,kBAAkBlwE,gDAGzB2vE,EAAAtzE,UAAA8zE,cAAP,SAAqBC,GACf,aAAeA,EACjBj0E,KAAK0zE,oBAAoBzxE,OAChB,SAAWgyE,EACpBj0E,KAAK2zE,gBAAgB1xE,OACZ,WAAagyE,EACtBj0E,KAAK8zE,kBAAkB7xE,OACd,WAAagyE,EACtBj0E,KAAK4zE,kBAAkB3xE,OACd,WAAagyE,EACtBj0E,KAAK6zE,kBAAkB5xE,OAEvBjC,KAAK+zE,kBAAkB9xE,KAAKgyE,IA7CrBT,EAAgB1yE,EAAA,CAD5BsD,EAAAA,cACYovE,MCwBbU,GAAA,WAAA,SAAAA,IAmTUl0E,KAAAm0E,YAAc,IAAIxwE,EAAAA,QA2E5B,OA7WEnE,OAAAgC,eAAW0yE,EAAAh0E,UAAA,eAAY,KAAvB,WACE,OAAOF,KAAKo0E,MAAQp0E,KAAKo0E,MAAM5U,UAAY,oCAQ7ChgE,OAAAgC,eAAW0yE,EAAAh0E,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKo0E,MAAQp0E,KAAKo0E,MAAMzzE,OAAS,mCAS1CnB,OAAAgC,eAAW0yE,EAAAh0E,UAAA,kBAAe,KAA1B,WACE,IAAMm0E,EAAYr0E,KAAKs0E,WAEvB,KAAID,EAAY,GAIhB,OAAOr0E,KAAKu0E,aAAaF,EAAY,oCASvC70E,OAAAgC,eAAW0yE,EAAAh0E,UAAA,WAAQ,KAAnB,WACE,IAAMm0E,EAAYr0E,KAAKs0E,WAEvB,KAAID,EAAY,GAIhB,OAAOr0E,KAAKu0E,aAAaF,EAAY,oCASvC70E,OAAAgC,eAAW0yE,EAAAh0E,UAAA,YAAS,KAApB,WACE,GAAKF,KAAKs0E,WAIV,OAAOt0E,KAAKu0E,aAAa,oCAapBL,EAAAh0E,UAAAs0E,YAAP,SAAmBz4D,GACjB,IAAM04D,EAA8Bz0E,KAAKo0E,MAAM3uE,QAAO,SAAC6nC,GAAwB,OAAAvxB,IAAOuxB,EAAKvxB,MAC3F,OAAO/b,KAAK00E,aAAaD,EAAY14D,IAShCm4D,EAAAh0E,UAAAy0E,eAAP,SAAsB18D,GACpB,IAAMo8D,EAAYr0E,KAAKs0E,WACjBM,EAAyBP,EAAY,EAAIA,EAAY,EAAI,EAE/D,GAAIp8D,EAAQ,EACV,MAAM,IAAIsH,MAAM,sCAAwCtH,GAG1D,GAAIA,EAAQ28D,EACV,MAAM,IAAIr1D,MAAM,qDAGlB,OAAOvf,KAAKu0E,aAAat8D,IASpBi8D,EAAAh0E,UAAA20E,aAAP,SAAoBvnC,GAClB,IAAMr1B,EAAQjY,KAAKu0E,aAAa3jE,QAAQ08B,GAExC,GAAIr1B,EAAQ,EACV,MAAM,IAAIsH,MAAM,0DAGlB,OAAOtH,GASDi8D,EAAAh0E,UAAAw0E,aAAR,SAAqBI,EAA0BC,GAC7C,IAAMC,EAA0BF,EAAQn0E,QAAU,EAElD,GAAIq0E,EAAkB,EACpB,MAAM,IAAIz1D,MAAM,2CAA6Cw1D,EAAkB,KAC1E,GAAIC,EAAkB,EAC3B,MAAM,IAAIz1D,MAAM,oCAAsCw1D,EAAkB,KAExE,OAAOD,EAAQ,IAUZZ,EAAAh0E,UAAA+0E,UAAP,SAAiBC,EAAeC,GAC9B,IAAIf,EAAyB,GAE7B,OAAIc,EAAQ,GAAKC,EAAM,EACd,GAGLD,MAAAA,GAAkDliD,MAAMkiD,GACnD,GAGLC,MAAAA,GAA8CniD,MAAMmiD,GAC/C,IAGLA,EAAMn1E,KAAKs0E,aACba,EAAMn1E,KAAKs0E,YAGbF,EAAQp0E,KAAKu0E,aAETY,EAAMD,GAAU,EAEX,CAACl1E,KAAK20E,eAAeO,KAM9BC,GAAY,EAILf,EAAM9nD,MAAM4oD,EAAOC,MAUrBjB,EAAAh0E,UAAAk1E,sBAAP,SAA6B9nC,EAAqB+nC,GAChD,IAEIC,EACAC,EAHEC,EAAYx1E,KAAK60E,aAAavnC,GAC9BmoC,EAAiBz1E,KAAK60E,aAAaQ,GAWzC,OAPIG,GAAaC,GACfH,EAAaE,EACbD,EAAWE,IAEXH,EAAaG,EACbF,EAAWC,GAENx1E,KAAKi1E,UAAUK,EAAYC,IAU7BrB,EAAAh0E,UAAAw1E,gBAAP,SAAuBpoC,GACrB,IACMqoC,EADc31E,KAAK60E,aAAavnC,GACE,EACxC,OAAIqoC,EAAoB,EACf,KAEF31E,KAAK20E,eAAegB,IAStBzB,EAAAh0E,UAAA01E,wBAAP,SAA+BtoC,GAC7B,IAAIt6B,EAEJ,QAAKs6B,IAMD,QAFJt6B,EAAehT,KAAK01E,gBAAgBpoC,KAO7Bt6B,EAAa6iE,YAUf3B,EAAAh0E,UAAA41E,YAAP,SAAmBxoC,GACjB,IACMyoC,EADc/1E,KAAK60E,aAAavnC,GACF,EAEpC,OAAIyoC,GAAiB/1E,KAAKu0E,aAAa5zE,OAC9B,KAEFX,KAAK20E,eAAeoB,IAStB7B,EAAAh0E,UAAA81E,qBAAP,SAA4B1oC,GAC1B,IACM2oC,EADS3oC,EAAKvxB,GACOpL,MAAM,KAAK2jC,UAGtC,OADA2hC,EAAY,GAAK,OACVA,EAAY3hC,UAAUzjC,KAAK,MAW7BqjE,EAAAh0E,UAAAg2E,WAAP,SAAkB5oC,GAChB,IAAM6oC,EAAmB7oC,EAAK8oC,UAAY9oC,EAAKnY,eAC/CmY,EAAKuoC,WAAY,EAEZM,GAGH7oC,EAAK+oC,SAASzoE,KAAK0/B,EAAKvxB,KAqB5Bvc,OAAAgC,eAAW0yE,EAAAh0E,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKm0E,YAAYtwE,gDASnBqwE,EAAAh0E,UAAAg3D,MAAP,WACEl3D,KAAKu0E,aAAattE,SAAQ,SAACqmC,GACzBA,EAAKuoC,WAAY,KAEnB71E,KAAKm0E,YAAYlyE,MAAK,IAWjBiyE,EAAAh0E,UAAAo2E,sBAAP,WACE,IAAMC,EAAuBv2E,KAAKw2E,+BAE9BD,IAAyBv2E,KAAKu0E,aAAa5zE,OAAS,GAKxDX,KAAKu0E,aAAattE,SAAQ,SAACqmC,EAAqBr1B,GAC1CA,EAAQs+D,IACVjpC,EAAKuoC,WAAY,OAUhB3B,EAAAh0E,UAAAs2E,6BAAP,WACE,IAAIC,EAAsB,KAY1B,OAXAz2E,KAAKu0E,aAAattE,SAAQ,SAACqmC,EAAqBr1B,GAC1C,OAASw+D,IAAe,IAAUnpC,EAAKuoC,YACzCY,EAAcx+D,MAKd,OAASw+D,IACXA,EAAcz2E,KAAKs0E,WAAa,GAG3BmC,GAGFvC,EAAAh0E,UAAAw2E,wBAAP,WACE,IAAMC,EAAoB32E,KAAKw2E,+BAC/B,OAAOx2E,KAAKu0E,aAAaoC,IA5XhBzC,EAAqBpzE,EAAA,CADjCsD,EAAAA,cACY8vE,GAAb,GCCA0C,GAAA,WAgEE,SAAAA,EAAmBC,EAA8CC,GAAjE,IAAAryE,EAAAzE,KAAmBA,KAAA62E,eAAAA,EAA8C72E,KAAA82E,cAAAA,EAiEzD92E,KAAA+2E,gBAAkB,IAAIpzE,EAAAA,QAqBvB3D,KAAAg3E,kBAAmB,EAanBh3E,KAAAi3E,wBAAyB,EA2ExBj3E,KAAAk3E,iBAAmB,IAAIvzE,EAAAA,QAgBvB3D,KAAAm3E,gBAAkB,IAAIxzE,EAAAA,QA8JtB3D,KAAAo3E,qBAAuB,IAAIzzE,EAAAA,QA6C3B3D,KAAAq3E,cAAgB,IAAI1zE,EAAAA,QAsCrB3D,KAAAs3E,oBAA8B,EAU9Bt3E,KAAAu3E,kBAA4B,EAY5Bv3E,KAAAw3E,sBAAgC,EAQhCx3E,KAAAy3E,sBAAgC,EA5crCz3E,KAAK03E,2BAA6B13E,KAAK82E,cAAca,mBAAmB7yE,WAAU,WAChF,IAAMmO,EAAcxO,EAAKwO,YACrBxO,EAAKmzE,oBAAsB3kE,EAAY4kE,uBAG3C5kE,EAAY6kE,sBAAsBlqE,KAAKqF,GAClCA,EAAYkiB,gBACf1wB,EAAK2N,eAITpS,KAAK+3E,uBAAyB/3E,KAAK82E,cAAckB,eAAelzE,WAAU,WACxEL,EAAKwzE,0BAA0B,WAGjCj4E,KAAKk4E,yBAA2Bl4E,KAAK82E,cAAcqB,iBAAiBrzE,WAAU,WAC5EL,EAAKwzE,0BAA0B,aAGjCj4E,KAAKo4E,yBAA2Bp4E,KAAK82E,cAAcuB,iBAAiBvzE,WAAU,WAC5EL,EAAKwzE,0BAA0B,aAGjCj4E,KAAKs4E,yBAA2Bt4E,KAAK82E,cAAcyB,iBAAiBzzE,WAAU,SAACuC,GACxE5C,EAAK+yE,sBACR/yE,EAAKwO,YAAYulE,oBAAoB5qE,KAAKvG,MAI9CrH,KAAKy4E,yBAA2Bz4E,KAAK82E,cAAc4B,iBAAiB5zE,WAAU,WACxEL,EAAK+yE,uBAIL/yE,EAAKwO,YAAYkiB,eACnB1wB,EAAKwO,YAAY0lE,aAAa/qE,KAAKnJ,EAAKwO,aAExCxO,EAAKm0E,aAIT54E,KAAK64E,uBAAyB74E,KAAK62E,eAAeiC,WAAWh0E,WAAU,WACrEL,EAAKs0E,yBAskBX,OA9jBEnC,EAAA12E,UAAA8G,YAAA,WACEhH,KAAK03E,2BAA2B7xE,cAChC7F,KAAK+3E,uBAAuBlyE,cAC5B7F,KAAKk4E,yBAAyBryE,cAC9B7F,KAAKo4E,yBAAyBvyE,cAC9B7F,KAAKs4E,yBAAyBzyE,cAC9B7F,KAAKy4E,yBAAyB5yE,cAC9B7F,KAAK64E,uBAAuBhzE,eAgB9BrG,OAAAgC,eAAWo1E,EAAA12E,UAAA,qBAAkB,KAA7B,WAGE,OAAOF,KAAK+2E,gBAAgBlzE,gDA2B9BrE,OAAAgC,eAAWo1E,EAAA12E,UAAA,mBAAgB,KAA3B,WAEE,OAAKF,KAAKiT,YAGHjT,KAAKiT,YAAYytD,MAFf,sCAaXlhE,OAAAgC,eAAWo1E,EAAA12E,UAAA,qBAAkB,KAA7B,WACE,OAAOF,KAAK62E,eAAehkE,YAAc7S,KAAKiT,6CAWhDzT,OAAAgC,eAAWo1E,EAAA12E,UAAA,oBAAiB,KAA5B,WACE,OAAOF,KAAK62E,eAAe/jE,WAAa9S,KAAKiT,6CAa/CzT,OAAAgC,eAAIo1E,EAAA12E,UAAA,cAAW,KAAf,WACE,OAAKF,KAAKg5E,aAGHh5E,KAAKg5E,aAFH,UAeX,SAAgB1rC,GACVttC,KAAKg5E,eAAiB1rC,GAASttC,KAAKw3E,uBACtCx3E,KAAKg5E,aAAe1rC,EACpBA,EAAK2rC,OAAOrrE,KAAK0/B,EAAKvxB,IACtB/b,KAAK+2E,gBAAgB90E,KAAKqrC,qCAgB9B9tC,OAAAgC,eAAWo1E,EAAA12E,UAAA,kBAAe,KAA1B,WACE,OAAOF,KAAKk3E,iBAAiBrzE,gDAiB/BrE,OAAAgC,eAAWo1E,EAAA12E,UAAA,iBAAc,KAAzB,WACE,OAAOF,KAAKm3E,gBAAgBtzE,gDAevB+yE,EAAA12E,UAAA+B,KAAP,WACMjC,KAAKk5E,kBACPl5E,KAAKi4E,0BAA0B,UAE/Bj4E,KAAKi4E,0BAA0B,SAW5BrB,EAAA12E,UAAAi5E,UAAP,WACE,IAAMlmE,EAA6BjT,KAAKiT,YAClCF,EAA0B/S,KAAK62E,eAAef,YAAY7iE,GAGhE,IAAKF,EACH,MAAM,IAAIwM,MAAM,yCAGdvf,KAAKw3E,uBAIJvkE,EAAY4iE,WAEf71E,KAAK62E,eAAeX,WAAWjjE,GAEjCjT,KAAKiT,YAAcF,IAWd6jE,EAAA12E,UAAA+3E,0BAAP,SAAiChE,GAC/B,IACImF,EAEAC,EACAC,EACAC,EAEAC,EAPEvmE,EAA6BjT,KAAKiT,YASxC,GAAKA,EAAYwmE,kBAAmBz5E,KAAKw3E,uBAIzC4B,EAAiBp5E,KAAKk5E,kBAEtBG,EAAwB,SAAfpF,EAETsF,GADAD,EAA0B,WAAfrF,KACiBmF,IAE5BI,EAA0B,WAAfvF,GADMqF,GAAYF,IAGZA,GAcjB,GAVAnmE,EAAYymE,qBAAqB9rE,KAAKqmE,GAElCuF,EACFvmE,EAAY0mE,oBAAoB/rE,KAAKqF,GAC5BqmE,EACTrmE,EAAY2mE,oBAAoBhsE,OACvByrE,GACTpmE,EAAY4mE,kBAAkBjsE,OAG5BqF,EAAYmjE,UAAYnjE,EAAYkiB,eACtCliB,EAAYojE,SAASzoE,KAAKqF,EAAY8I,QADxC,CAcA,GARIy9D,IAEGx5E,KAAKu3E,kBACRv3E,KAAK62E,eAAeX,WAAWjjE,GAEjCjT,KAAKm3E,gBAAgBl1E,QAGnBjC,KAAKu3E,iBAOP,OANAv3E,KAAK62E,eAAeX,WAAWjjE,SAE3BomE,GAAUE,IACZv5E,KAAKk3E,iBAAiBj1E,MAAK,KAM3Bo3E,GAAUE,IACZv5E,KAAKm5E,YAGFn5E,KAAKu3E,kBAAqBv3E,KAAKw3E,sBAClCx3E,KAAKk3E,iBAAiBj1E,MAAK,KAgBxB20E,EAAA12E,UAAA45E,OAAP,WACE95E,KAAKi4E,0BAA0B,WAcjCz4E,OAAAgC,eAAWo1E,EAAA12E,UAAA,sBAAmB,KAA9B,WACE,OAAOF,KAAKo3E,qBAAqBvzE,gDAW5B+yE,EAAA12E,UAAAkS,SAAP,WACE,IAAIY,EAEAhT,KAAK43E,oBAAsB53E,KAAKw3E,uBAIpCxkE,EAAehT,KAAK62E,eAAenB,gBAAgB11E,KAAKiT,gBAMxDjT,KAAKo3E,qBAAqBn1E,MAAK,GAE3BjC,KAAKi3E,yBACPj3E,KAAKiT,YAAY4iE,WAAY,GAG/B71E,KAAKiT,YAAcD,IAarBxT,OAAAgC,eAAWo1E,EAAA12E,UAAA,qBAAkB,KAA7B,WACE,OAAOF,KAAKq3E,cAAcxzE,gDAkBrB+yE,EAAA12E,UAAA04E,OAAP,WACE54E,KAAKq3E,cAAcp1E,QA4Dd20E,EAAA12E,UAAA65E,KAAP,SAAYC,EAAqBC,GAC/B,IAAIC,EACAjnE,EACAknE,EACAC,EAEAC,EACAC,OAP2B,IAAAL,IAAAA,GAAA,GAU/BE,EAAUn6E,KAAK62E,eACfqD,EAAuC,iBAAnBF,EAA8BG,EAAQ3F,YAAYwF,GAAkBA,EACxF/mE,EAAcjT,KAAKiT,YAIfinE,IAAejnE,GAAejT,KAAKw3E,uBAIvC8C,EAAmBH,EAAQtF,aAAa5hE,GAExConE,EADgBF,EAAQtF,aAAaqF,GACNI,EAC/BF,EAAeD,EAAQ/E,sBAAsBp1E,KAAKiT,YAAainE,IAElDD,GAAgBj6E,KAAKu6E,QAAQH,MAMtCC,GAAgBJ,EAClBG,EAAanzE,SAAQ,SAACqmC,GAChBA,IAAS4sC,IACX5sC,EAAKuoC,WAAY,OAGXwE,GAAgBr6E,KAAKi3E,wBAC/BmD,EAAanzE,SAAQ,SAACqmC,GACpBA,EAAKuoC,WAAY,KAIrB71E,KAAKiT,YAAcinE,KASdtD,EAAA12E,UAAAq6E,QAAP,SAAeH,GACb,IAKII,EALAC,GAAa,EACXN,EAAUn6E,KAAK62E,eAMrB,SAAKuD,GAAgBA,EAAaz5E,OAAS,KAI3Cy5E,EAAanzE,SAAQ,SAACqmC,GACpB,IAAIt6B,EAECynE,IAIDntC,EAAKuoC,YAMT7iE,EAAemnE,EAAQtF,aAAavnC,GAAQ,EAAI6sC,EAAQzE,gBAAgBpoC,GAAQ,KAChFktC,EAAsC,OAAjBxnE,IAAoD,IAA3BA,EAAa6iE,UAItDvoC,EAAK/hC,SAAYivE,IACpBC,GAAa,QAKVA,IASF7D,EAAA12E,UAAAw6E,0BAAP,WACE,IAAMC,EAA4B36E,KAAK62E,eAAetC,aAClDqG,EAAiC,KAErCD,EAAS1zE,SAAQ,SAACqmC,EAAqBr1B,GACjCq1B,EAAKuoC,YACP+E,EAAyB3iE,MAIE,OAA3B2iE,EAEFA,EAAyB,EAChBA,EAAyB,EAAID,EAASh6E,SAC/Ci6E,GAAkD,GAGpD56E,KAAKiT,YAAc0nE,EAASC,IASvBhE,EAAA12E,UAAA64E,oBAAP,WACE/4E,KAAKiT,YAAcjT,KAAK62E,eAAetC,aAAa,IAS/CqC,EAAA12E,UAAA26E,iBAAP,WACE,IAAIC,EAGJ96E,KAAK62E,eAAeP,wBAECt2E,KAAK62E,eAAetC,aAAa3jE,QAAQ5Q,KAAKiT,aAAe,IAEhF6nE,EAAe96E,KAAK62E,eAAeH,0BACnC12E,KAAKiT,YAAc6nE,6CA9mBY5G,UAA6CV,MAhErEoD,EAAuB91E,EAAA,CADnCsD,EAAAA,cACYwyE,GAAb,iBCrBE,SAAAmE,EAAmBC,GAAAh7E,KAAAg7E,WAAAA,EAuBrB,OAnBEx7E,OAAAgC,eAAWu5E,EAAA76E,UAAA,yBAAsB,KAAjC,WACE,IAAM+6E,EAAmBj7E,KAAKk7E,oBAC9B,QAAKD,GAGEA,EAAiBzb,UAAU7+D,OAAS,mCAG7CnB,OAAAgC,eAAWu5E,EAAA76E,UAAA,8BAA2B,KAAtC,WACE,QAAOF,KAAKg7E,WAAW/nE,aAAcjT,KAAKg7E,WAAW/nE,YAAYkoE,kDAGnE37E,OAAAgC,eAAWu5E,EAAA76E,UAAA,0BAAuB,KAAlC,WACE,OAAQF,KAAKo7E,6BAA+Bp7E,KAAKq7E,wDAGnD77E,OAAAgC,eAAWu5E,EAAA76E,UAAA,8BAA2B,KAAtC,WACE,OAAOF,KAAKo7E,6BAA+Bp7E,KAAKq7E,iGArBnBzE,MAJpBmE,EAAmBj6E,EAAA,CAD/BsD,EAAAA,cACY22E,MCHTO,GAA0B,EAiB9BC,GAAA,WAAA,SAAAA,IAEkBv7E,KAAA0gE,MAAgB,GAGnB1gE,KAAAuQ,KAAe+qE,MAA2Bn6D,WAMRnhB,KAAAmZ,UAAoB,EAE1CnZ,KAAAw7E,oBAA4C,IAAI/uE,EAAAA,cAAa,GAaxF,OAnBEjN,OAAAgC,eAAW+5E,EAAAr7E,UAAA,KAAE,KAAb,WACE,MAAO,4BAA4BF,KAAKuQ,qCAO1CgrE,EAAAr7E,UAAA8yD,MAAA,WACMhzD,KAAKmZ,UAQTnZ,KAAKw7E,oBAAoB5tE,KAAK5N,KAAKuQ,MAtBrBzP,EAAA,CAAfkN,EAAAA,MAAM,sCAGMlN,EAAA,CAAZkN,EAAAA,MAAM,iCAMiClN,EAAA,CAAvCkN,EAAAA,MAAM,iEAEkBlN,EAAA,CAAxBsN,EAAAA,OAAO,4DAbGmtE,EAAqBz6E,EAAA,CAfjCyQ,EAAAA,UAAU,CACTvO,SAAU,2BACVqJ,SAAU,wSAWVtF,KAAM,CAAEmzC,MAAO,uCAEJqhC,GAAb,iBCfE,SAAAE,EAAmBC,GAAA17E,KAAA07E,uBAAAA,EACrB,gDAD6C3tE,EAAAA,eADhC0tE,EAAoB36E,EAAA,CADhCiC,EAAAA,UAAU,CAAEC,SAAU,sBACVy4E,oBCCX,SAAAE,EAAmBC,GAAA57E,KAAA47E,6BAAAA,EACrB,gDADmD7tE,EAAAA,eADtC4tE,EAA0B76E,EAAA,CADtCiC,EAAAA,UAAU,CAAEC,SAAU,4BACV24E,oBCCX,SAAAE,EAAmBC,GAAA97E,KAAA87E,wBAAAA,EACrB,gDAD8C/tE,EAAAA,eADjC8tE,EAAqB/6E,EAAA,CADjCiC,EAAAA,UAAU,CAAEC,SAAU,uBACV64E,oBCCX,SAAAE,EAAmBC,GAAAh8E,KAAAg8E,qBAAAA,EACrB,gDAD2CjuE,EAAAA,eAD9BguE,EAAkBj7E,EAAA,CAD9BiC,EAAAA,UAAU,CAAEC,SAAU,oBACV+4E,MCOTE,GAAkB,EAuBtBC,GAAA,WAME,SAAAA,EACUlB,EACDnE,EACAC,GAFC92E,KAAAg7E,WAAAA,EACDh7E,KAAA62E,eAAAA,EACA72E,KAAA82E,cAAAA,EAqDD92E,KAAAm8E,mBAAoB,EA0Cen8E,KAAAo8E,uBAAgD,IAAI3vE,EAAAA,aAOvFzM,KAAAq8E,uBAAwB,EA2CzBr8E,KAAAs8E,2BAAoD,IAAI7vE,EAAAA,aAOvDzM,KAAAu8E,WAAY,EAqCyBv8E,KAAAm1B,gBAA0B,EAO/Dn1B,KAAAw8E,aAAc,EAqC6Bx8E,KAAAy8E,iBAA0C,IAAIhwE,EAAAA,aAOzFzM,KAAA08E,WAAY,EA4Ca18E,KAAAq2E,SAAiC,IAAI5pE,EAAAA,cAAqB,GAS5DzM,KAAAi5E,OAA+B,IAAIxsE,EAAAA,aAiBjCzM,KAAA24E,aAA4C,IAAIlsE,EAAAA,aAmBlDzM,KAAA25E,oBAAmD,IAAIltE,EAAAA,aAmBrDzM,KAAA83E,sBAAqD,IAAIrrE,EAAAA,aAmB7DzM,KAAA65E,kBAAiD,IAAIptE,EAAAA,aAuBnDzM,KAAA45E,oBAAmD,IAAIntE,EAAAA,aAuBtDzM,KAAA05E,qBAA6C,IAAIjtE,EAAAA,aAE5CzM,KAAAw4E,oBAA4C,IAAI/rE,EAAAA,aAaxEzM,KAAAuQ,KAAY0rE,MAAmB96D,WA6CpCnhB,KAAA28E,WAAqB,EA6L/B,OAjlBEn9E,OAAAgC,eAAW06E,EAAAh8E,UAAA,mBAAgB,KAA3B,WACE,OAAOF,KAAKm8E,uBAUd,SAA4B98C,GAC1B,IAAMC,IAAYD,EACdC,IAAYt/B,KAAKm8E,oBACnBn8E,KAAKm8E,kBAAoB78C,EACzBt/B,KAAKo8E,uBAAuBxuE,KAAK0xB,qCAkCrC9/B,OAAAgC,eAAW06E,EAAAh8E,UAAA,uBAAoB,KAA/B,WACE,OAAOF,KAAKq8E,2BAUd,SAAgCh9C,GAC9B,IAAMC,IAAYD,EACdC,IAAYt/B,KAAKq8E,wBACnBr8E,KAAKq8E,sBAAwB/8C,EAC7Bt/B,KAAKs8E,2BAA2B1uE,KAAK0xB,qCA2BzC9/B,OAAAgC,eAAW06E,EAAAh8E,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAKu8E,eAYd,SAAoBl9C,GAClB,IAAMC,IAAYD,EACdC,IAAYt/B,KAAKu8E,YACnBv8E,KAAKu8E,UAAYj9C,oCA4BrB9/B,OAAAgC,eAAW06E,EAAAh8E,UAAA,aAAU,KAArB,WACE,OAAOF,KAAKw8E,iBAed,SAAsBn9C,GACpB,IAAMC,IAAYD,EACdC,IAAYt/B,KAAKw8E,cACnBx8E,KAAKw8E,YAAcl9C,EACnBt/B,KAAKy8E,iBAAiB7uE,KAAK0xB,qCAwB/B9/B,OAAAgC,eAAW06E,EAAAh8E,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAK08E,eAiBd,SAAoBr9C,GAClB,IAAMC,IAAYD,EACdC,IAAYt/B,KAAK08E,YACnB18E,KAAK08E,UAAYp9C,oCA6KrB9/B,OAAAgC,eAAW06E,EAAAh8E,UAAA,KAAE,KAAb,WAWE,QAR0BF,KAAKuQ,KAAoB,IAAbvQ,KAAKuQ,KAInBvQ,KAAKuQ,IAAM,KAEjCvQ,KAAKuQ,KAAO0rE,MAAmB96D,YAE1B,mBAAmBnhB,KAAKuQ,qCAWjC/Q,OAAAgC,eAAW06E,EAAAh8E,UAAA,kBAAe,KAA1B,WACE,OAAQF,KAAK48E,kDAsBfp9E,OAAAgC,eAAW06E,EAAAh8E,UAAA,YAAS,KAApB,WACE,OAAOF,KAAK28E,WAAa38E,KAAKy5E,qBAgBhC,SAAqBv3E,GACnBlC,KAAK28E,UAAYz6E,mCASnB1C,OAAAgC,eAAW06E,EAAAh8E,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKg7E,WAAW/nE,cAAgBjT,sCAGzCR,OAAAgC,eAAW06E,EAAAh8E,UAAA,WAAQ,KAAnB,WACE,OAAQF,KAAKqzC,yCAcf7zC,OAAAgC,eAAW06E,EAAAh8E,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKuL,SAAWvL,KAAK61E,WAAa71E,KAAK68E,mDAWhDr9E,OAAAgC,eAAW06E,EAAAh8E,UAAA,oBAAiB,KAA5B,WACE,IAAM8S,EAAehT,KAAK62E,eAAenB,gBAAgB11E,MAEzD,OAAKgT,GAIEA,EAAa6iE,2CAQtBr2E,OAAAgC,eAAW06E,EAAAh8E,UAAA,QAAK,KAAhB,WACE,OAAOF,KAAK88E,UAAUd,sDAQxBx8E,OAAAgC,eAAW06E,EAAAh8E,UAAA,WAAQ,KAAnB,WACE,OAAIF,KAAK+8E,aACA/8E,KAAK+8E,aAAajB,wBAEpB97E,KAAK88E,UAAUd,sDAQxBx8E,OAAAgC,eAAW06E,EAAAh8E,UAAA,gBAAa,KAAxB,WACE,GAAKF,KAAKg9E,eAGV,OAAOh9E,KAAKg9E,eAAepB,8DAQ7Bp8E,OAAAgC,eAAW06E,EAAAh8E,UAAA,mBAAgB,KAA3B,WACE,QAASF,KAAKg9E,gDAQhBx9E,OAAAgC,eAAW06E,EAAAh8E,UAAA,UAAO,KAAlB,WACE,GAAKF,KAAKi9E,SAGV,OAAOj9E,KAAKi9E,SAASvB,wDAYvBl8E,OAAAgC,eAAW06E,EAAAh8E,UAAA,aAAU,KAArB,WACE,QAASF,KAAKi9E,0CAcTf,EAAAh8E,UAAAg9E,YAAP,WACEl9E,KAAKg7E,WAAW/nE,YAAcjT,MASzBk8E,EAAAh8E,UAAA2f,SAAP,WACE,IAAMm7D,EAAah7E,KAAKg7E,WACnBA,EAAW/nE,aAAgB+nE,EAAWhE,mBACzCh3E,KAAKk9E,cACLl9E,KAAKg7E,WAAWhE,kBAAmB,IAYvCx3E,OAAAgC,eAAW06E,EAAAh8E,UAAA,aAAU,KAArB,WACE,OAAOF,KAAK62E,eAAeb,qBAAqBh2E,gFAtpB5B42E,UACG1C,UACDV,MAWxB1yE,EAAA,CADC8gB,EAAAA,aAAam6D,GAAoB,CAAE1qE,QAAQ,qCAc5CvQ,EAAA,CADC8gB,EAAAA,aAAai6D,GAAuB,CAAExqE,QAAQ,wCAY/CvQ,EAAA,CADC8gB,EAAAA,aAAa65D,GAAsB,CAAEpqE,QAAQ,oCAY9CvQ,EAAA,CADC8gB,EAAAA,aAAa+5D,GAA4B,CAAEtqE,QAAQ,0CAmCpDvQ,EAAA,CADCkN,EAAAA,MAAM,mEAgBoClN,EAAA,CAA1CsN,EAAAA,OAAO,iFAkCRtN,EAAA,CADCkN,EAAAA,MAAM,2EAiBPlN,EAAA,CADCsN,EAAAA,OAAO,yFA6BRtN,EAAA,CADCkN,EAAAA,MAAM,uDAiB+BlN,EAAA,CAArCkN,EAAAA,MAAM,qEA+BPlN,EAAA,CADCkN,EAAAA,MAAM,qEAc4ClN,EAAA,CAAlDsN,EAAAA,OAAO,mFAiCRtN,EAAA,CADCkN,EAAAA,MAAM,iEAmB0BlN,EAAA,CAAhCsN,EAAAA,OAAO,yDASuBtN,EAAA,CAA9BsN,EAAAA,OAAO,qDAiByBtN,EAAA,CAAhCsN,EAAAA,OAAO,6DAmBuBtN,EAAA,CAA9BsN,EAAAA,OAAO,kEAmByBtN,EAAA,CAAhCsN,EAAAA,OAAO,sEAmBqBtN,EAAA,CAA5BsN,EAAAA,OAAO,8DAuBuBtN,EAAA,CAA9BsN,EAAAA,OAAO,kEAuBwBtN,EAAA,CAA/BsN,EAAAA,OAAO,oEAE6BtN,EAAA,CAApCsN,EAAAA,OAAO,wEAaKtN,EAAA,CAAZkN,EAAAA,MAAM,iCArbIkuE,EAAap7E,EAAA,CAXzByQ,EAAAA,UAAU,CACTvO,SAAU,kBACVqJ,SAAU,4BACVtF,KAAM,CACJsX,OAAQ,KACR6qD,qBAAsB,WACtBpa,yBAA0B,aAC1BxU,iBAAkB,UAClB6iC,0BAA2B,WAGlBjB,GAAb,iBCsME,SAAAkB,EAC+B1zE,EACtBsxE,EACAnE,EACAC,EACAuG,EACC7uE,EACR6pC,GAN6Br4C,KAAA0J,WAAAA,EACtB1J,KAAAg7E,WAAAA,EACAh7E,KAAA62E,eAAAA,EACA72E,KAAA82E,cAAAA,EACA92E,KAAAq9E,oBAAAA,EACCr9E,KAAAwO,WAAAA,EAlMcxO,KAAAyc,KAAO,KAMHzc,KAAAyhE,UAAW,EAW/BzhE,KAAAs9E,eAAyB,EAKjCt9E,KAAAyD,OAAQ,EAwBAzD,KAAA08E,WAAqB,EAkBrB18E,KAAAw8E,aAAuB,EAkBvBx8E,KAAAu9E,iBAAkB,EAiBlBv9E,KAAAw9E,iBAA2B,EAWMx9E,KAAAy9E,sBAAgC,EAS1Cz9E,KAAAiwE,aAAsC,IAAIxjE,EAAAA,cAAsB,GAOlEzM,KAAA09E,SAA8B,IAAIjxE,EAAAA,cAAkB,GAOpDzM,KAAA29E,eAAoC,IAAIlxE,EAAAA,cAAkB,GAK3DzM,KAAA49E,QAA6B,IAAInxE,EAAAA,cAAkB,GAMxCzM,KAAA69E,mBAAwC,IAAIpxE,EAAAA,cAAkB,GAO1EzM,KAAA89E,WAAgC,IAAIrxE,EAAAA,cAAkB,GAOlDzM,KAAA+9E,eAAoC,IAAItxE,EAAAA,cAAkB,GA4BjFzM,KAAA4E,cAAgC,GAWtC5E,KAAK4E,cAAcpC,KACjBxC,KAAKg+E,2BACLh+E,KAAKi+E,+BACLj+E,KAAKk+E,yBACLl+E,KAAKm+E,2BACLn+E,KAAKo+E,wBAGPp+E,KAAKs4C,OAASD,EAAQp3B,KAAK,IAAI9gB,OAAO,MAmP1C,OAnbEX,OAAAgC,eAAI47E,EAAAl9E,UAAA,eAAY,KAKhB,WACE,OAAOF,KAAKs9E,mBANd,SAAiBp7E,GACflC,KAAKs9E,gBAAkBp7E,EACvBlC,KAAKg7E,WAAW/D,uBAAyB/0E,mCAa3C1C,OAAAgC,eAAI47E,EAAAl9E,UAAA,gBAAa,KAAjB,SAAkBiE,GACZA,IACFnE,KAAK82E,cAAcrD,cAAe,GAEpCzzE,KAAKyD,MAAQU,mCAUf3E,OAAAgC,eAAI47E,EAAAl9E,UAAA,WAAQ,KAKZ,WACE,OAAOF,KAAK08E,eANd,SAAax6E,GACXlC,KAAK08E,YAAcx6E,EACnBlC,KAAKg7E,WAAWzD,iBAAmBr1E,mCAgBrC1C,OAAAgC,eAAI47E,EAAAl9E,UAAA,aAAU,KAKd,WACE,OAAOF,KAAKw8E,iBANd,SAAet6E,GACblC,KAAKw8E,cAAgBt6E,EACrBlC,KAAKg7E,WAAW1D,mBAAqBp1E,mCAgBvC1C,OAAAgC,eAAI47E,EAAAl9E,UAAA,iBAAc,KAKlB,WACE,OAAOF,KAAKu9E,qBANd,SAAmBr7E,GACjBlC,KAAKu9E,kBAAoBr7E,EACzBlC,KAAKg7E,WAAWxD,qBAAuBt1E,mCAezC1C,OAAAgC,eAAI47E,EAAAl9E,UAAA,iBAAc,KAKlB,WACE,OAAOF,KAAKw9E,qBANd,SAAmBt7E,GACjBlC,KAAKw9E,kBAAoBt7E,EACzBlC,KAAKg7E,WAAWvD,qBAAuBv1E,mCAczC1C,OAAAgC,eAAI47E,EAAAl9E,UAAA,sBAAmB,KAAvB,WACE,OAAOF,KAAKy9E,qBAAuB,OAAS,yCAqD9Cj+E,OAAAgC,eAAW47E,EAAAl9E,UAAA,cAAW,KAAtB,WACE,OAAOF,KAAKg7E,WAAW/nE,iBAGzB,SAAuBq6B,GACrBttC,KAAKg7E,WAAWjB,KAAKzsC,GAAM,oCAG7B9tC,OAAAgC,eAAW47E,EAAAl9E,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAKg7E,WAAW9B,mDAGzB15E,OAAAgC,eAAW47E,EAAAl9E,UAAA,UAAO,KAAlB,WACE,OAAOF,KAAKg7E,WAAWpD,oDAGzBp4E,OAAAgC,eAAW47E,EAAAl9E,UAAA,WAAQ,KAAnB,WACE,OAAQF,KAAKwO,WAAW5H,cAA8Bd,UAAUG,SAAS,uDA0BpEm3E,EAAAl9E,UAAAwX,mBAAP,WACE1X,KAAK62E,eAAezC,MAAQp0E,KAAKo0E,MACjCp0E,KAAKq9E,oBAAoBnC,oBAAsBl7E,KAAKq+E,cACpDr+E,KAAK2X,qBAGAylE,EAAAl9E,UAAAy4C,UAAP,WACE34C,KAAKs+E,0BAGAlB,EAAAl9E,UAAA8G,YAAP,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAA1G,GAAK,OAAAA,EAAEsF,kBAa7Bu3E,EAAAl9E,UAAA45E,OAAP,SAAcyE,QAAA,IAAAA,IAAAA,GAAA,GACRA,EACFv+E,KAAKw+E,cAELx+E,KAAKg7E,WAAWlB,UASbsD,EAAAl9E,UAAAs+E,YAAP,WACMx+E,KAAKy+E,gBAITz+E,KAAK4R,SAMAwrE,EAAAl9E,UAAAiE,KAAP,WACEnE,KAAKyD,OAAQ,EAERzD,KAAKiT,aACRjT,KAAKg7E,WAAWjC,sBAIlB/4E,KAAK82E,cAAcrD,cAAe,EAElCzzE,KAAKiwE,aAAariE,MAAK,IAMlBwvE,EAAAl9E,UAAA0R,MAAP,WACM5R,KAAKy+E,iBAITz+E,KAAKyD,OAAQ,EACbzD,KAAKiwE,aAAariE,MAAK,KAQlBwvE,EAAAl9E,UAAAwkB,OAAP,SAAcvgB,GACRA,EACFnE,KAAKmE,OAELnE,KAAK4R,SAOFwrE,EAAAl9E,UAAAkS,SAAP,WACEpS,KAAKg7E,WAAW5oE,YAiBXgrE,EAAAl9E,UAAA+B,KAAP,SAAYs8E,QAAA,IAAAA,IAAAA,GAAA,GACNA,EACFv+E,KAAKm5E,YAELn5E,KAAKg7E,WAAW/4E,QASbm7E,EAAAl9E,UAAAi5E,UAAP,WACEn5E,KAAKg7E,WAAW7B,aASXiE,EAAAl9E,UAAA04E,OAAP,WACE54E,KAAKg7E,WAAWpC,UAOXwE,EAAAl9E,UAAAw+E,YAAP,WACM1+E,KAAKyhE,UACPzhE,KAAK2+E,kBASFvB,EAAAl9E,UAAAy+E,eAAP,WACE,IAAM1rE,EAAcjT,KAAKiT,YACnB2rE,EAA0B3rE,EAAY4rE,YAAc5rE,EAAYkiB,eAElEn1B,KAAKy+E,iBAITxrE,EAAY0lE,aAAa/qE,OACpBgxE,GACH5+E,KAAK09E,SAAS9vE,OAGX5N,KAAK6+E,YAAeD,GACvB5+E,KAAK4R,UAYFwrE,EAAAl9E,UAAA65E,KAAP,SAAY+E,GACLA,GAIL9+E,KAAKg7E,WAAWjB,KAAK+E,IAQhB1B,EAAAl9E,UAAAg3D,MAAP,WACEl3D,KAAK62E,eAAe3f,QACpBl3D,KAAK49E,QAAQ37E,QAGPm7E,EAAAl9E,UAAA89E,yBAAR,WAAA,IAAAv5E,EAAAzE,KACE,OAAOA,KAAKg7E,WAAW+D,gBAAgBv5E,KAAKC,EAAAA,QAAO,WAAM,OAAAuE,EAAAA,kBAAkBvF,EAAKiF,gBAAc5E,WAAU,WACtGL,EAAKq5E,WAAWlwE,OAChBnJ,EAAKu6E,YAAYp4E,cAAcR,YAI3Bg3E,EAAAl9E,UAAA+9E,6BAAR,WAAA,IAAAx5E,EAAAzE,KACE,OAAOA,KAAKg7E,WAAWiE,oBAAoBz5E,KAAKC,EAAAA,QAAO,WAAM,OAAAuE,EAAAA,kBAAkBvF,EAAKiF,gBAAc5E,WAAU,WAC1GL,EAAKs5E,eAAenwE,OACpBnJ,EAAKu6E,YAAYp4E,cAAcR,YAI3Bg3E,EAAAl9E,UAAAg+E,uBAAR,WAAA,IAAAz5E,EAAAzE,KACE,OAAOA,KAAKg7E,WAAWkE,mBAAmBp6E,WAAU,WAAM,OAAAL,EAAKk6E,qBAGzDvB,EAAAl9E,UAAAi+E,yBAAR,WAAA,IAAA15E,EAAAzE,KACE,OAAOA,KAAKg7E,WAAW2C,eAAe74E,WAAU,WAAM,OAAAL,EAAK06E,yBAGrD/B,EAAAl9E,UAAAk+E,qBAAR,WAAA,IAAA35E,EAAAzE,KACE,OAAOA,KAAKg7E,WAAW6C,mBAAmB/4E,WAAU,WAAM,OAAAL,EAAKo5E,mBAAmBjwE,WAG5EwvE,EAAAl9E,UAAAo+E,uBAAR,WAAA,IAAA75E,EAAAzE,KACQ4X,EAAU5X,KAAKs4C,OAAOQ,KAAK94C,KAAKo0E,OAClCx8D,IACFA,EAAQwnE,kBAAiB,WAAM,OAAA36E,EAAKu2E,WAAWH,sBAC/CjjE,EAAQynE,oBAAmB,WAAM,OAAA56E,EAAKu2E,WAAWH,wBAI7CuC,EAAAl9E,UAAAyX,kBAAR,WAEM3X,KAAKyD,QACPzD,KAAK82E,cAAcrD,cAAe,IAI9B2J,EAAAl9E,UAAAi/E,mBAAR,WACOn/E,KAAKo2E,UACRp2E,KAAKw+E,cAEPx+E,KAAK29E,eAAe/vE,iDAjQqBpO,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,sBACW0qE,UACI1C,UACDV,UACMuH,UACRpsE,EAAAA,kBACXqqC,EAAAA,mBAnMal4C,EAAA,CAAvBkN,EAAAA,MAAM,6CAMqBlN,EAAA,CAA3BkN,EAAAA,MAAM,qDAOPlN,EAAA,CADCkN,EAAAA,MAAM,qEAgBPlN,EAAA,CADCkN,EAAAA,MAAM,oDAePlN,EAAA,CADCkN,EAAAA,MAAM,6DAmBPlN,EAAA,CADCkN,EAAAA,MAAM,iEAmBPlN,EAAA,CADCkN,EAAAA,MAAM,kEAkBPlN,EAAA,CADCkN,EAAAA,MAAM,+DAgBkClN,EAAA,CAAxCkN,EAAAA,MAAM,8EASwBlN,EAAA,CAA9BsN,EAAAA,OAAO,2DAOqBtN,EAAA,CAA5BsN,EAAAA,OAAO,qDAOqBtN,EAAA,CAA5BsN,EAAAA,OAAO,2DAKoBtN,EAAA,CAA3BsN,EAAAA,OAAO,mDAM+BtN,EAAA,CAAtCsN,EAAAA,OAAO,yEAOmBtN,EAAA,CAA1BsN,EAAAA,OAAO,qDAOuBtN,EAAA,CAA9BsN,EAAAA,OAAO,6DAGRtN,EAAA,CADC4X,EAAAA,gBAAgBwjE,GAAe,CAAE96D,aAAa,iCAEPtgB,EAAA,CAAvC4X,EAAAA,gBAAgB6iE,yCACSz6E,EAAA,CAAzBsQ,EAAAA,UAAU,kDAvKAgsE,EAASt8E,EAAA,CAZrByQ,EAAAA,UAAU,CACTvO,SAAU,aACVwO,UAAW,CAAColE,GAAyB1C,GAAuBV,GAAkBuH,IAC9E1uE,SAAA,ivEACAtF,KAAM,CACJu4E,qBAAsB,OACtBC,oBAAqB,eACrBC,oBAAqB,eACrBC,oBAAqB,eACrBC,mBAAoB,kCAoMnBj+E,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eAjMCkxE,MClCAuC,GAA4B,CACvC/G,OAAQ,SACRxmE,SAAU,WACVnQ,KAAM,OACN63E,OAAQ,SACRtnE,OAAQ,UAGGotE,GAA2B,CACtChH,OAAQ,gBACRxmE,SAAU,kBACVnQ,KAAM,cACN63E,OAAQ,gBACRtnE,OAAQ,iBA0BVqtE,GAAA,WAUE,SAAAA,EAAmB7E,EAA4ClE,GAA5C92E,KAAAg7E,WAAAA,EAA4Ch7E,KAAA82E,cAAAA,EATzC92E,KAAAqH,KAAe,GAEIrH,KAAAmZ,UAAoB,EAEtBnZ,KAAA0mD,QAAkB,EAGvB1mD,KAAA8/E,WAAmC,IAAIrzE,EAAAA,cAAqB,GA4HhG,OAxHUozE,EAAA3/E,UAAA6/E,0BAAR,SAAkCC,EAA2BC,GAC3D,YADgC,IAAAD,IAAAA,EAAA,IAC5BL,GAAqBM,KAAkBD,GAGvCJ,GAAoBK,KAAkBD,GAM5CxgF,OAAAgC,eAAWq+E,EAAA3/E,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAK+/E,0BAA0B//E,KAAKqH,KAAM,2CAGnD7H,OAAAgC,eAAWq+E,EAAA3/E,UAAA,SAAM,KAAjB,WACE,OAAOF,KAAK+/E,0BAA0B//E,KAAKqH,KAAM,yCAGnD7H,OAAAgC,eAAWq+E,EAAA3/E,UAAA,aAAU,KAArB,WACE,OAAOF,KAAK+/E,0BAA0B//E,KAAKqH,KAAM,6CAGnD7H,OAAAgC,eAAWq+E,EAAA3/E,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAK+/E,0BAA0B//E,KAAKqH,KAAM,2CAGnD7H,OAAAgC,eAAWq+E,EAAA3/E,UAAA,WAAQ,KAAnB,WACE,OAAOF,KAAK+/E,0BAA0B//E,KAAKqH,KAAM,2CAGnD7H,OAAAgC,eAAWq+E,EAAA3/E,UAAA,kBAAe,KAA1B,WACE,OAAOF,KAAKq5E,QAAUr5E,KAAKs5E,UAAYt5E,KAAKw5E,0CAG9Ch6E,OAAAgC,eAAWq+E,EAAA3/E,UAAA,qBAAkB,KAA7B,WACE,OAAIF,KAAK+pB,WACA,GAEF,sCAGTvqB,OAAAgC,eAAWq+E,EAAA3/E,UAAA,aAAU,KAArB,WAEE,IACMggF,EAAMlgF,KAAKg7E,WACX1tC,EAAOttC,KAAKg7E,WAAW/nE,YAG7B,QAAKjT,KAAK82E,cAAcrD,kBAIpBzzE,KAAKmZ,WAAY+mE,EAAI1I,sBAAyBlqC,KAI9CttC,KAAKmgF,cAILngF,KAAKogF,aAAeF,EAAItI,qBAAsBtqC,EAAKuqC,2BAInD73E,KAAKs5E,UAAahsC,EAAKmsC,sBAIvBz5E,KAAKq5E,SAAW6G,EAAIhH,mBAAsB5rC,EAAKmsC,qBAI/Cz5E,KAAKw5E,UAAc0G,EAAIhH,mBAAsB5rC,EAAKmsC,sDAOxDj6E,OAAAgC,eAAWq+E,EAAA3/E,UAAA,WAAQ,KAAnB,WAEE,IACMggF,EAAMlgF,KAAKg7E,WAGjB,QAAKh7E,KAAK82E,cAAcrD,iBAIpBzzE,KAAK0mD,SAIL1mD,KAAKmgF,cAILngF,KAAKogF,aAAcF,EAAItI,yBAIvB53E,KAAKq5E,SAAU6G,EAAIhH,uBAInBl5E,KAAKw5E,UAAa0G,EAAIhH,uDAO5B2G,EAAA3/E,UAAA8yD,MAAA,WACMhzD,KAAK+pB,aAIT/pB,KAAK8/E,WAAWlyE,KAAK5N,KAAKqH,MAC1BrH,KAAK82E,cAAc9C,cAAch0E,KAAKqH,iDAxHTuvE,UAA+CpD,MAT/D1yE,EAAA,CAAdkN,EAAAA,MAAM,oCAE2BlN,EAAA,CAAjCkN,EAAAA,MAAM,2DAEyBlN,EAAA,CAA/BkN,EAAAA,MAAM,uDAG2BlN,EAAA,CAAjCsN,EAAAA,OAAO,4DARGyxE,EAAe/+E,EAAA,CAvB3ByQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,yqBAkBVtF,KAAM,CAAEmzC,MAAO,yBAA0BgvB,qBAAsB,oBACtD,8CAEE2W,GAAb,iBCzCA,SAAAQ,KAGA,OAHaA,EAAmBv/E,EAAA,CAD/BiC,EAAAA,UAAU,CAAEC,SAAU,4CACVq9E,oBCUX,SAAAC,EAAmBC,GAAAvgF,KAAAugF,YAAAA,EACrB,gDADkCrM,MADrBoM,EAAgBx/E,EAAA,CAT5ByQ,EAAAA,UAAU,CACTvO,SAAU,qBACVqJ,SAAU,sNAKVtF,KAAM,CAAEmzC,MAAO,yBAEJomC,oBCuBX,SAAAE,EAAmBxF,EAA4CnE,GAA5C72E,KAAAg7E,WAAAA,EAA4Ch7E,KAAA62E,eAAAA,EAgDjE,OA9CU2J,EAAAtgF,UAAAugF,UAAR,WACE,IAAKzgF,KAAKstC,KACR,MAAM,IAAI/tB,MAAM,8DAIpB/f,OAAAgC,eAAWg/E,EAAAtgF,UAAA,KAAE,KAAb,WAEE,OADAF,KAAKygF,YACEzgF,KAAK62E,eAAeb,qBAAqBh2E,KAAKstC,uCAGvD9tC,OAAAgC,eAAWg/E,EAAAtgF,UAAA,aAAU,KAArB,WAEE,OADAF,KAAKygF,YACEzgF,KAAKstC,KAAKn0B,UAAYnZ,KAAKg7E,WAAWxD,sBAAwBx3E,KAAKg7E,WAAWvD,sDAGvFj4E,OAAAgC,eAAWg/E,EAAAtgF,UAAA,YAAS,KAApB,WAEE,OADAF,KAAKygF,YACEzgF,KAAKstC,KAAK/hC,yCAGnB/L,OAAAgC,eAAWg/E,EAAAtgF,UAAA,aAAU,KAArB,WAEE,OADAF,KAAKygF,YACEzgF,KAAKstC,KAAKuoC,2CAGnBr2E,OAAAgC,eAAWg/E,EAAAtgF,UAAA,WAAQ,KAAnB,WAEE,OADAF,KAAKygF,YACEzgF,KAAKstC,KAAK7tB,UAAYzf,KAAK0gF,4CAGpClhF,OAAAgC,eAAWg/E,EAAAtgF,UAAA,cAAW,KAAtB,WAEE,OADAF,KAAKygF,YACEzgF,KAAK62E,eAAejB,wBAAwB51E,KAAKstC,uCAG1DkzC,EAAAtgF,UAAA8yD,MAAA,WACEhzD,KAAKygF,YAGDzgF,KAAK+pB,YAAc/pB,KAAK2gF,WAI5B3gF,KAAKg7E,WAAWjB,KAAK/5E,KAAKstC,gDA9CGspC,UAAgD1C,MAFhEpzE,EAAA,CAAdkN,EAAAA,MAAM,oCADIwyE,EAAoB1/E,EAAA,CA1BhCyQ,EAAAA,UAAU,CACTvO,SAAU,4BACVqJ,SAAU,8lBAWVtF,KAAM,CACJsX,OAAQ,KACRuiE,uBAAwB,YACxBvmC,uBAAwB,KACxBwmC,uBAAwB,OACxBC,mBAAoB,OACpBxmC,iBAAkB,YAClB0gB,mBAAoB,aACpB+lB,mBAAoB,eACpBC,mBAAoB,aACpBC,gBAAiB,eAGRT,MCdAU,GAA+B,CAC1C9D,GACAlB,GACAoE,GACAE,GACAX,GACAtE,GACA8E,GACAtE,GACAF,GACAJ,GACAE,IAQFwF,GAAA,WAAA,SAAAA,KAA8B,OAAjBA,EAAergF,EAAA,CAL3BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAc0tE,GAAgB7N,IACxC5/D,aAAc,CAAC49E,IACf39E,QAAS,CAAC29E,OAECC,GAAb,I9CrCA,SAAY7X,GACVA,EAAA,QAAA,UACAA,EAAA,MAAA,QAFF,CAAYA,KAAAA,GAAiB,KCA7B,SAAYC,GACVA,EAAA,SAAA,WACAA,EAAA,MAAA,QACAA,EAAA,SAAA,WAHF,CAAYA,KAAAA,GAAe,K8CG3B,IAAI6X,GAAiB,EAErBC,GAME,SAAmBtlE,EAAmBulE,GAAnBthF,KAAA+b,GAAAA,EAAmB/b,KAAAshF,YAAAA,EALtCthF,KAAAuhF,OAAShY,GAAgBiY,SACzBxhF,KAAAiY,MAAgB,KAChBjY,KAAAmZ,UAAW,EACXnZ,KAAAmE,MAAO,EACPnE,KAAAyhF,WAAgBzhF,KAAK+b,GAAE,IAAI/b,KAAKshF,aAIlCI,GAAA,WAAA,SAAAA,IACY1hF,KAAA2hF,SAAWrY,GAAkBsY,QAC7B5hF,KAAAohF,eAAiBA,KACjBphF,KAAA6hF,QAAiD,GA0C7D,OAxCEriF,OAAAgC,eAAIkgF,EAAAxhF,UAAA,SAAM,KAAV,WAAA,IAAAuE,EAAAzE,KACE,OAAOR,OAAO2W,KAAKnW,KAAK6hF,SAAStlE,KAAI,SAAAR,GAAM,OAAAtX,EAAKo9E,QAAQ9lE,uCAG1D2lE,EAAAxhF,UAAA4hF,YAAA,SAAYH,GACV3hF,KAAK2hF,SAAWA,GAGlBD,EAAAxhF,UAAA6hF,iBAAA,SAAiBC,GAAjB,IAAAv9E,EAAAzE,KACEgiF,EAAI/6E,SAAQ,SAAC8U,EAAI9D,GAAU,OAACxT,EAAKo9E,QAAQ9lE,GAAI9D,MAAQA,KACrDjY,KAAKiiF,gBAAgBD,IAGvBN,EAAAxhF,UAAAgiF,SAAA,SAASnmE,EAAY5X,QAAA,IAAAA,IAAAA,GAAA,GACnBnE,KAAK6hF,QAAQ9lE,GAAM,IAAIslE,GAAoBtlE,EAAI/b,KAAKohF,gBACpDphF,KAAK6hF,QAAQ9lE,GAAI5X,KAAOA,GAG1Bu9E,EAAAxhF,UAAAkoD,YAAA,SAAY+5B,EAAiBh+E,GAC3B,IAAMi+E,EAAcpiF,KAAK6hF,QAAQM,GAASh+E,KACtCnE,KAAK2hF,WAAarY,GAAkBsY,SACtC5hF,KAAKqiF,iBAGPriF,KAAK6hF,QAAQM,GAASh+E,UAAgB0e,IAAT1e,EAAqBA,GAAQi+E,GAG5DV,EAAAxhF,UAAAoiF,aAAA,SAAaH,EAAiBhpE,GAC5BnZ,KAAK6hF,QAAQM,GAAShpE,SAAWA,GAG3BuoE,EAAAxhF,UAAAmiF,eAAR,WAAA,IAAA59E,EAAAzE,KACEA,KAAKuiF,OAAOt7E,SAAQ,SAAAu7E,GAAS,OAAC/9E,EAAKo9E,QAAQW,EAAMzmE,IAAI5X,MAAO,MAGtDu9E,EAAAxhF,UAAA+hF,gBAAR,SAAwBD,GAAxB,IAAAv9E,EAAAzE,KACEA,KAAKuiF,OACF98E,QAAO,SAAA+8E,GAAS,YAAoC3/D,IAApCm/D,EAAI/gE,MAAK,SAAAlF,GAAM,OAAAA,IAAOymE,EAAMzmE,SAC5C9U,SAAQ,SAAAu7E,GAAS,cAAO/9E,EAAKo9E,QAAQW,EAAMzmE,QAElD2lE,EA7CA,iBCNA,SAAAe,IACYziF,KAAA0iF,UAAY,IAAIhB,GACP1hF,KAAA2iF,eAAiB,IAAI9nE,EAAAA,gBAAuC7a,KAAK0iF,UAAUH,QAiChG,OA/BEE,EAAAviF,UAAA0iF,gBAAA,SAAgBT,GACd,OAAOniF,KAAK2iF,eAAen9E,KAAK+W,EAAAA,KAAI,SAAAgmE,GAAU,OAAAA,EAAOthE,MAAK,SAAA1gB,GAAK,OAAAA,EAAEwb,KAAOomE,UAG1EM,EAAAviF,UAAA4hF,YAAA,SAAYH,GACV3hF,KAAK0iF,UAAUZ,YAAYH,IAG7Bc,EAAAviF,UAAAgiF,SAAA,SAASC,EAAiBh+E,QAAA,IAAAA,IAAAA,GAAA,GACxBnE,KAAK0iF,UAAUR,SAASC,EAASh+E,GACjCnE,KAAK6iF,qBAGPJ,EAAAviF,UAAAkoD,YAAA,SAAY+5B,EAAiBh+E,GAC3BnE,KAAK0iF,UAAUt6B,YAAY+5B,EAASh+E,GACpCnE,KAAK6iF,qBAGPJ,EAAAviF,UAAAoiF,aAAA,SAAaH,EAAiBhpE,GAC5BnZ,KAAK0iF,UAAUJ,aAAaH,EAAShpE,GACrCnZ,KAAK6iF,qBAGPJ,EAAAviF,UAAA6hF,iBAAA,SAAiBC,GACfhiF,KAAK0iF,UAAUX,iBAAiBC,GAChChiF,KAAK6iF,qBAGGJ,EAAAviF,UAAA2iF,kBAAV,WACE7iF,KAAK2iF,eAAe1gF,KAAKjC,KAAK0iF,UAAUH,SAjC/BE,EAAgB3hF,EAAA,CAD5BsD,EAAAA,cACYq+E,MCJAK,GAAiB,CAC5BlpE,EAAAA,QAAQ,oBAAqB,CAACC,EAAAA,WAAW,SAAU,MACnDD,EAAAA,QAAQ,SAAU,CAChBC,EAAAA,WAAW,YAAa,CACtBC,EAAAA,MAAM,CAAEipE,QAAS,QAASl6E,OAAQ,IAClCmR,EAAAA,QCTgC,mBDSAF,EAAAA,MAAM,CAAEjR,OAAQ,YAKzCm6E,GAAgB,CAC3BppE,EAAAA,QAAQ,oBAAqB,CAACC,EAAAA,WAAW,SAAU,MACnDD,EAAAA,QAAQ,SAAU,CAChBC,EAAAA,WAAW,YAAa,CACtBC,EAAAA,MAAM,CAAEipE,QAAS,QAASl6E,OAAQ,IAClCmR,EAAAA,QCnBgC,mBDmBAF,EAAAA,MAAM,CAAEjR,OAAQ,SAElDgR,EAAAA,WAAW,YAAa,CACtBC,EAAAA,MAAM,CAAEipE,QAAS,UACjB/oE,EAAAA,QCvBgC,mBDuBAF,EAAAA,MAAM,CAAEjR,OAAQ,EAAGk6E,QAAS,6BEflE,SAAAE,KAAsC,OAAzBA,EAAuBniF,EAAA,CANnCyQ,EAAAA,UAAU,CACTvO,SAAU,kDACVqJ,SAAU,4BACVtF,KAAM,CAAEm8E,oCAAqC,QAC7CrsC,gBAAiBC,EAAAA,wBAAwBC,UAE9BksC,oBCmCX,SAAAE,EACS7rE,EACC8rE,EACAC,EACkBtnE,GAHnB/b,KAAAsX,cAAAA,EACCtX,KAAAojF,iBAAAA,EACApjF,KAAAqjF,gBAAAA,EACkBrjF,KAAA+b,GAAAA,EAbQ/b,KAAAmZ,UAAW,EACfnZ,KAAAsjF,WAAY,EACLtjF,KAAAujF,gBAAkB,IAAI92E,EAAAA,aAIpDzM,KAAAupE,gBAAkBA,GAC3BvpE,KAAAwjF,aAAc,EAuDhB,OA9CEL,EAAAjjF,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACEA,KAAKwiF,MAAQxiF,KAAKojF,iBAAiBR,gBAAgB5iF,KAAK+b,IAAIvW,KAAKi+E,EAAAA,KAAI,SAAAjB,GAAS,OAAA/9E,EAAKi/E,gBAAgBlB,OACnGxiF,KAAKojF,iBAAiBlB,SAASliF,KAAK+b,GAAI/b,KAAKsjF,WAC7CtjF,KAAKojF,iBAAiBh7B,YAAYpoD,KAAK+b,GAAI/b,KAAKsjF,WAChDtjF,KAAKojF,iBAAiBd,aAAatiF,KAAK+b,GAAI/b,KAAKmZ,WAGnDgqE,EAAAjjF,UAAAi2D,YAAA,SAAYv+C,GACN5X,KAAKwiF,OAAS5qE,EAAQ0rE,WAAa1rE,EAAQ0rE,UAAU/S,eAAiB34D,EAAQ0rE,UAAUK,eAC1F3jF,KAAKojF,iBAAiBh7B,YAAYpoD,KAAK+b,GAAInE,EAAQ0rE,UAAU/S,cAG3DvwE,KAAKwiF,OAAS5qE,EAAQuB,UAAYvB,EAAQuB,SAASo3D,eAAiB34D,EAAQuB,SAASwqE,eACvF3jF,KAAKojF,iBAAiBd,aAAatiF,KAAK+b,GAAInE,EAAQuB,SAASo3D,eAIjE4S,EAAAjjF,UAAAkoD,YAAA,WACEpoD,KAAKojF,iBAAiBh7B,YAAYpoD,KAAK+b,KAGzConE,EAAAjjF,UAAA0jF,6BAAA,SAA6BpB,GACtBA,EAAMr+E,OACTnE,KAAKqjF,gBAAgB38D,UAAW,IAIpCy8D,EAAAjjF,UAAA2jF,qBAAA,SAAqBrB,GACnB,MAAO,uBAAuBA,EAAMjB,OAAM,KAAIiB,EAAMr+E,KAAO,2BAA6B,KAG1Fg/E,EAAAjjF,UAAA4jF,sBAAA,SAAsB/nE,GACpB,MAAO,yBAAyBA,EAAE,KAGpConE,EAAAjjF,UAAA6jF,qBAAA,SAAqBhoE,GACnB,MAAO,wBAAwBA,GAGzBonE,EAAAjjF,UAAAwjF,gBAAR,SAAwBlB,GACtBxiF,KAAKujF,gBAAgB31E,KAAK40E,EAAMr+E,MAE5Bq+E,EAAMr+E,OACRnE,KAAKqjF,gBAAgB38D,UAAW,6CAjDZ/Q,SACI8sE,UACDp8D,mCACxB/e,EAAAA,OAAMC,KAAA,CAACkP,QAb0B3V,EAAA,CAAnCkN,EAAAA,MAAM,6DACyBlN,EAAA,CAA/BkN,EAAAA,MAAM,0DACgClN,EAAA,CAAtCsN,EAAAA,OAAO,sEACkCtN,EAAA,CAAzC4X,EAAAA,gBAAgBuqE,gDAJNE,EAAiBriF,EAAA,CAR7ByQ,EAAAA,UAAU,CACTvO,SAAU,sBACVqJ,SAAA,g0EACAtF,KAAM,CAAEi9E,8BAA+B,QACvCntC,gBAAiBC,EAAAA,wBAAwBC,OACzCp9B,WAAYmpE,GACZtxE,UAAW,CAAC6U,GAAiBxP,KAgB1BpV,EAAA,EAAA6F,EAAAA,OAAOmP,KAdC0sE,oBCzBb,SAAAc,KAAgC,OAAnBA,EAAiBnjF,EAAA,CAN7ByQ,EAAAA,UAAU,CACTvO,SAAU,sCACVqJ,SAAU,4BACVtF,KAAM,CAAEm9E,8BAA+B,QACvCrtC,gBAAiBC,EAAAA,wBAAwBC,UAE9BktC,oBCwBX,SAAAE,EAAoBf,GAAApjF,KAAAojF,iBAAAA,EALapjF,KAAAokF,YAAa,EAG9CpkF,KAAA4E,cAAgC,GAgClC,OA5BEu/E,EAAAjkF,UAAA2f,SAAA,WACE7f,KAAKqkF,wBAGPF,EAAAjkF,UAAAi2D,YAAA,SAAYv+C,GACNA,EAAQwsE,WAAW7T,eAAiB34D,EAAQwsE,WAAWT,eACzD3jF,KAAKqkF,wBAITF,EAAAjkF,UAAAyM,gBAAA,WACE3M,KAAK4E,cAAcpC,KAAKxC,KAAKskF,wBAG/BH,EAAAjkF,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAA1G,GAAK,OAAAA,EAAEsF,kBAG5Bs+E,EAAAjkF,UAAAmkF,qBAAR,WACE,IAAM1C,EAAW3hF,KAAKokF,WAAa9a,GAAkB3rB,MAAQ2rB,GAAkBsY,QAC/E5hF,KAAKojF,iBAAiBtB,YAAYH,IAG5BwC,EAAAjkF,UAAAokF,oBAAR,WAAA,IAAA7/E,EAAAzE,KACE,OAAOA,KAAKuiF,OAAO3qE,QAChBpS,KAAKme,EAAAA,UAAU3jB,KAAKuiF,SACpBz9E,WAAU,SAAAy9E,GAAU,OAAA99E,EAAK2+E,iBAAiBrB,iBAAiBQ,EAAO/iB,UAAUjjD,KAAI,SAAA3c,GAAK,OAAAA,EAAEmc,oDA5BtD0mE,MALL3hF,EAAA,CAAhCkN,EAAAA,MAAM,4DAEPlN,EAAA,CADC4X,EAAAA,gBAAgByqE,GAAmB,CAAE/hE,aAAa,kCAFxC+iE,EAAYrjF,EAAA,CAPxByQ,EAAAA,UAAU,CACTvO,SAAU,gBACVqJ,SAAU,4BACVtF,KAAM,CAAEw9E,wBAAyB,QACjC/yE,UAAW,CAACixE,IACZ5rC,gBAAiBC,EAAAA,wBAAwBC,UAE9BotC,oBCnBb,SAAAK,KAAkC,OAArBA,EAAmB1jF,EAAA,CAL/ByQ,EAAAA,UAAU,CACTvO,SAAU,0CACVqJ,SAAU,4BACVwqC,gBAAiBC,EAAAA,wBAAwBC,UAE9BytC,qBCFb,SAAAC,mDAAqD,OAAZ3kF,EAAA2kF,EAAA3iE,GAA5B2iE,EAAmB3jF,EAAA,CAD/BiC,EAAAA,UAAU,CAAEC,SAAU,mBACVyhF,IAA4BpyC,mBCKvC,SAAAqyC,EAAY/yC,EAAoCC,EAAiCyxC,GAAjF,IAAA5+E,EAAAzE,KACE,IAAK4xC,EACH,MAAM,IAAIryB,MAAM,0EAElB9a,EAAAqd,EAAAlhB,KAAAZ,KAAM2xC,EAAKC,IAAW5xC,MACjB+R,OAASsxE,IAMlB,OAd0CvjF,EAAA4kF,EAAA5iE,GAWxCtiB,OAAAgC,eAAIkjF,EAAAxkF,UAAA,SAAM,KAAV,WACE,OAAOF,KAAK+R,OAAO2U,mFATJisB,EAAAA,yBAA2C8xC,GAAmB1jF,WAAA,CAAA,CAAAsG,KAA1CqI,EAAAA,kBAA6D2W,MAHvFq+D,EAAoB5jF,EAAA,CADhCiC,EAAAA,UAAU,CAAEC,SAAU,wBAIgBvB,EAAA,EAAAiO,EAAAA,aAH1Bg1E,IAA6BhzC,ICKpCpuC,GAAe,CACnB6gF,GACAhB,GACAc,GACAhB,GACAuB,GACAE,GACAD,IAQFE,GAAA,WAAA,SAAAA,KAAiC,OAApBA,EAAkB7jF,EAAA,CAL9BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,GACxBI,aAAYZ,EAAMY,IAClBC,QAAOb,EAAMY,OAEFqhF,GAAb,GCxBAC,GAAA,SAAA9iE,GAAA,SAAA8iE,IAAA,IAAAngF,EAAA,OAAAqd,GAAAA,EAAAjhB,MAAAb,KAAAU,YAAAV,YACUyE,EAAAogF,wBAAkC,IA8G5C,OA/GkC/kF,EAAA8kF,EAAA9iE,GAGhCtiB,OAAAgC,eAAIojF,EAAA1kF,UAAA,qBAAkB,KAAtB,WACE,OAAOF,KAAKuiF,OAAO5hF,QAAiD,IAAvCX,KAAK8kF,+BAAwE,IAAjC9kF,KAAK+kF,yDAGhFH,EAAA1kF,UAAAgiF,SAAA,SAASnmE,EAAY5X,QAAA,IAAAA,IAAAA,GAAA,GACnB2d,EAAA5hB,UAAMgiF,SAAQthF,KAAAZ,KAAC+b,EAAI5X,GACnBnE,KAAK6hF,QAAQ9lE,GAAI5C,UAAW,GAG9ByrE,EAAA1kF,UAAA6hF,iBAAA,SAAiBC,GACflgE,EAAA5hB,UAAM6hF,iBAAgBnhF,KAAAZ,KAACgiF,IACa,IAAhChiF,KAAK6kF,wBACP7kF,KAAKglF,kBAITJ,EAAA1kF,UAAAkoD,YAAA,SAAY+5B,GACNniF,KAAK6hF,QAAQM,GAASZ,SAAWhY,GAAgB0b,WACnDjlF,KAAK6hF,QAAQM,GAASh+E,MAAQnE,KAAK6hF,QAAQM,GAASh+E,OAIxDygF,EAAA1kF,UAAAglF,oBAAA,SAAoBC,EAAwBC,QAAA,IAAAA,IAAAA,GAAA,GACtCA,GACFplF,KAAKqlF,cAAcF,GACnBnlF,KAAKslF,cAActlF,KAAK6hF,QAAQsD,GAAgBppE,KAEhD/b,KAAKulF,cAAcJ,IAIvBP,EAAA1kF,UAAAslF,qBAAA,SAAqBrD,GAArB,IAAA19E,EAAAzE,KACEA,KAAKuiF,OAAO98E,QAAO,WAAM,YAA0Bod,IAA1Bpe,EAAKo9E,QAAQM,MAAwBl7E,SAAQ,SAAAu7E,GAChEA,EAAMvqE,MAAQxT,EAAKo9E,QAAQM,GAASlqE,MACtCxT,EAAK4gF,cAAc7C,EAAMzmE,IAChBymE,EAAMzmE,KAAOomE,EACtB19E,EAAKo9E,QAAQW,EAAMzmE,IAAI5X,MAAO,EAE9BM,EAAKo9E,QAAQW,EAAMzmE,IAAI5X,MAAO,MAKpCygF,EAAA1kF,UAAAulF,oBAAA,SAAoBzD,GAApB,IAAAv9E,EAAAzE,KACEgiF,EAAI/6E,SAAQ,SAAA8U,GAAM,OAAAtX,EAAK8gF,cAAcxpE,OAGvC6oE,EAAA1kF,UAAAwlF,YAAA,WAAA,IAAAjhF,EAAAzE,KAEEA,KAAK6kF,wBAAyB,EAC9B7kF,KAAKuiF,OAAOt7E,SAAQ,SAAArH,GAAK,OAAA6E,EAAKkhF,WAAW/lF,EAAEmc,OAC3C/b,KAAKglF,kBAGPJ,EAAA1kF,UAAA0lF,aAAA,SAAaT,GAAb,IAAA1gF,EAAAzE,KACE,OAAOA,KAAKuiF,OAAOthE,MAAK,SAAA1gB,GAAK,OAAAA,EAAE0X,QAAUxT,EAAKo9E,QAAQsD,GAAgBltE,MAAQ,MAGxE2sE,EAAA1kF,UAAA2lF,qBAAR,SAA6B1D,GAA7B,IAAA19E,EAAAzE,KACEA,KAAKuiF,OAAO98E,QAAO,SAAA+8E,GAAS,OAAAA,EAAMvqE,OAASxT,EAAKo9E,QAAQM,GAASlqE,SAAOhR,SAAQ,SAAAu7E,GAAS,OAAA/9E,EAAKkhF,WAAWnD,EAAMzmE,QAGzG6oE,EAAA1kF,UAAAylF,WAAR,SAAmBxD,GACjBniF,KAAK6hF,QAAQM,GAASZ,OAAShY,GAAgBiY,SAC/CxhF,KAAK6hF,QAAQM,GAASh+E,MAAO,EAC7BnE,KAAK6hF,QAAQM,GAAShpE,UAAW,GAG3ByrE,EAAA1kF,UAAA8kF,eAAR,WACE,IAAMc,EAAa9lF,KAAK+lF,gBACxB/lF,KAAK6hF,QAAQiE,EAAW/pE,IAAI5X,MAAO,EACnCnE,KAAK6hF,QAAQiE,EAAW/pE,IAAI5C,UAAW,EACvCnZ,KAAK6kF,wBAAyB,GAGxBD,EAAA1kF,UAAAmlF,cAAR,SAAsBlD,GACpBniF,KAAK6hF,QAAQM,GAASZ,OAAShY,GAAgB0b,SAC/CjlF,KAAK6hF,QAAQM,GAAShpE,UAAW,EACjCnZ,KAAK6hF,QAAQM,GAASh+E,MAAO,GAGvBygF,EAAA1kF,UAAAolF,cAAR,SAAsBH,GACpB,IAAMa,EAAYhmF,KAAK4lF,aAAaT,GAEhCa,IACFhmF,KAAK6lF,qBAAqBG,EAAUjqE,IACpC/b,KAAK6hF,QAAQmE,EAAUjqE,IAAI5X,MAAO,EAClCnE,KAAK6hF,QAAQmE,EAAUjqE,IAAI5C,UAAW,IAIlCyrE,EAAA1kF,UAAAqlF,cAAR,SAAsBpD,GACpBniF,KAAK6lF,qBAAqB1D,GAC1BniF,KAAK6hF,QAAQM,GAASh+E,MAAO,EAC7BnE,KAAK6hF,QAAQM,GAASZ,OAAShY,GAAgBhqD,OAGzCqlE,EAAA1kF,UAAA6lF,cAAR,WACE,OAAO/lF,KAAKuiF,OAAOthE,MAAK,SAAAuhE,GAAS,OAAgB,IAAhBA,EAAMvqE,UAGjC2sE,EAAA1kF,UAAA4kF,4BAAR,WACE,OAAO9kF,KAAKuiF,OAAOl3E,QAAO,SAACkiB,EAAMtrB,GAAS,OAACA,EAAKs/E,SAAWhY,GAAgB0b,SAAW13D,EAAO,EAAIA,IAAO,IAGlGq3D,EAAA1kF,UAAA6kF,sBAAR,WACE,OAAO/kF,KAAKuiF,OAAOl3E,QAAO,SAACkiB,EAAMtrB,GAAS,OAAe,IAAdA,EAAKkC,KAAiBopB,EAAO,EAAIA,IAAO,IAEvFq3D,EA/GA,CAAkClD,mBCKlC,SAAAuE,IAAA,IAAAxhF,EAAA,OAAAqd,GAAAA,EAAAjhB,MAAAb,KAAAU,YAAAV,YACWyE,EAAAyhF,gBAAkBzhF,EAAK0hF,8BACtB1hF,EAAAi+E,UAAY,IAAIkC,GAElBngF,EAAA2hF,mBAAqB,IAAIziF,EAAAA,QACxBc,EAAA4hF,WAAa5hF,EAAK2hF,mBAAmBviF,iBAoChD,OAzCoC/D,EAAAmmF,EAAAnkE,GAOlCmkE,EAAA/lF,UAAAwlF,YAAA,WACE1lF,KAAK0iF,UAAUgD,cACf1lF,KAAK6iF,qBAGPoD,EAAA/lF,UAAAulF,oBAAA,SAAoBzD,GAClBhiF,KAAK0iF,UAAU+C,oBAAoBzD,GACnChiF,KAAK6iF,qBAGPoD,EAAA/lF,UAAAglF,oBAAA,SAAoBC,EAAwBC,QAAA,IAAAA,IAAAA,GAAA,GAC1CplF,KAAK0iF,UAAUwC,oBAAoBC,EAAgBC,GACnDplF,KAAKsmF,eAAenB,EAAgBC,GACpCplF,KAAK6iF,qBAGPoD,EAAA/lF,UAAAslF,qBAAA,SAAqBrD,GACnBniF,KAAK0iF,UAAU8C,qBAAqBrD,GACpCniF,KAAK6iF,qBAGCoD,EAAA/lF,UAAAomF,eAAR,SAAuBnB,EAAwBC,GAC7C,IAAMY,EAAYhmF,KAAK0iF,UAAUkD,aAAaT,GAE1CC,GAAqBY,EACvBhmF,KAAKomF,mBAAmBnkF,KAAK+jF,EAAUjqE,IAC9BqpE,GACTplF,KAAKomF,mBAAmBnkF,KAAKkjF,IAIzBc,EAAA/lF,UAAAimF,4BAAR,WAAA,IAAA1hF,EAAAzE,KACE,OAAOA,KAAK2iF,eAAen9E,KAAK+W,EAAAA,KAAI,WAAM,OAAA9X,EAAKi+E,UAAU6D,sBAAqB3iE,EAAAA,yBAvCrEqiE,EAAcnlF,EAAA,CAD1BsD,EAAAA,cACY6hF,IAAuBxD,QCHxB+D,kBC4CV,SAAAC,EAC+B/8E,EACtB4N,EACaovE,EACAC,EACZC,EACRvD,EACmBtnE,GAPrB,IAAAtX,EASEqd,EAAAlhB,KAAAZ,KAAMsX,EAAesvE,EAAgBvD,EAAiBtnE,IAAG/b,YAR5ByE,EAAAiF,WAAAA,EACtBjF,EAAA6S,cAAAA,EACa7S,EAAAiiF,cAAAA,EACAjiF,EAAAkiF,aAAAA,EACZliF,EAAAmiF,eAAAA,EApBVniF,EAAA++E,aAAc,EAGN/+E,EAAAG,cAAgC,KAgD1C,OApDqC9E,EAAA2mF,EAAA3kE,GAMnCtiB,OAAAgC,eAAIilF,EAAAvmF,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK0mF,cAAgB1mF,KAAK0mF,cAAchoE,QAAU1e,KAAK2mF,aAAajoE,yCAG7Elf,OAAAgC,eAAIilF,EAAAvmF,UAAA,KAAE,KAAN,WACE,OAAOF,KAAK0mF,cAAgB1mF,KAAK0mF,cAAcrwE,KAAK8K,WAAanhB,KAAK2mF,aAAatwE,UAGrF,SAAOwwE,qCAcPJ,EAAAvmF,UAAA2f,SAAA,WAAA,IAAApb,EAAAzE,KACE8hB,EAAA5hB,UAAM2f,SAAQjf,KAAAZ,MACdA,KAAKwiF,MAAQxiF,KAAKwiF,MAAMh9E,KAAKi+E,EAAAA,KAAI,SAAAjB,GAAS,OAAA/9E,EAAKqiF,uCAAuCtE,OACtFxiF,KAAK4mF,eAAetE,aAAatiF,KAAK+b,IAAI,GAC1C/b,KAAK+mF,wBAGPN,EAAAvmF,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAA1G,GAAK,OAAAA,EAAEsF,kBAG5B4gF,EAAAvmF,UAAA6mF,qBAAR,WAAA,IAAAtiF,EAAAzE,KACEA,KAAK4E,cAAcpC,KACjBxC,KAAK4mF,eAAeP,WACjB7gF,KAAKC,EAAAA,QAAO,SAAA08E,GAAW,OAAAn4E,EAAAA,kBAAkBvF,EAAKiF,aAAey4E,IAAY19E,EAAKsX,OAC9EjX,WAAU,WAAM,OAAAL,EAAKuiF,aAAapgF,cAAcR,aAI/CqgF,EAAAvmF,UAAA4mF,uCAAR,SAA+CtE,GACzCA,EAAMjB,SAAWhY,GAAgBhqD,OCjFzC,SAEgB0nE,EAAgCC,GAC9C1nF,OAAO2W,KAAK+wE,EAAUC,UAAUlgF,SAAQ,SAAA+uC,GACtC,IAAMt3B,EAAUwoE,EAAU5kE,IAAI0zB,GAC1Bt3B,aAAmB0oE,EAAAA,aACrB1oE,EAAQ0B,gBACR1B,EAAQ8B,cACR9B,EAAQ4E,0BACC5E,aAAmB2oE,EAAAA,WAC5BJ,EAAgCvoE,MDwEhCuoE,CAAgCjnF,KAAKknF,qDAhCE1nF,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,sBACcyJ,SACa2xE,EAAAA,cAAavmF,WAAA,CAAA,CAAAsG,KAA/CqI,EAAAA,kBACiC63E,EAAAA,aAAYxmF,WAAA,CAAA,CAAAsG,KAA7CqI,EAAAA,kBACuBu2E,UACP5/D,mCAChB/e,EAAAA,OAAMC,KAAA,CAACkP,QApBiB3V,EAAA,CAA1BsQ,EAAAA,UAAU,oDAHAq1E,EAAe3lF,EAAA,CAR3ByQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAA,g0EACAtF,KAAM,CAAEi9E,8BAA+B,QACvCntC,gBAAiBC,EAAAA,wBAAwBC,OACzCp9B,WAAYqpE,GACZxxE,UAAW,CAAC6U,GAAiBxP,KAmB1BpV,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,cAEPzK,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,YAGAjO,EAAA,EAAA6F,EAAAA,OAAOmP,KAvBCgwE,IAAwBtD,KD5BzBqD,GAAAA,EAAAA,oBAAAA,EAAAA,kBAAiB,KAC3B,KAAA,OACAA,GAAA,OAAA,SAWF,IGlBYgB,GCAAC,GJkBZC,GAAA,WAIE,SAAAA,EAAoBC,EAAkCf,GAAlC5mF,KAAA2nF,QAAAA,EAAkC3nF,KAAA4mF,eAAAA,EAH9B5mF,KAAAqH,KAAmCm/E,EAAAA,kBAAkBoB,KAC3C5nF,KAAA6nF,cAAe,EAYnD,OAREH,EAAAxnF,UAAA2f,SAAA,WACE7f,KAAK6nF,aAAe7nF,KAAKqH,OAASm/E,EAAAA,kBAAkBsB,QAItDJ,EAAAxnF,UAAAglF,oBAAA,WACEllF,KAAK4mF,eAAe1B,oBAAoBllF,KAAK2nF,QAAQ5rE,GAAI/b,KAAK2nF,QAAQT,UAAUa,iDARrDtB,UAAyCR,MAH9CnlF,EAAA,CAAvBkN,EAAAA,MAAM,6CAC2BlN,EAAA,CAAjCmf,EAAAA,YAAY,yDASbnf,EAAA,CADCuN,EAAAA,aAAa,kDAVHq5E,EAAa5mF,EAAA,CARzBiC,EAAAA,UAAU,CACTC,SAAU,kBACV+D,KAAM,CACJihF,0BAA2B,OAC3B7e,cAAe,OACf8e,SAAU,eAGDP,GAAb,iBKoBE,SAAAQ,EACsBhB,EACAiB,EACZvB,GAFY5mF,KAAAknF,UAAAA,EACAlnF,KAAAmoF,OAAAA,EACZnoF,KAAA4mF,eAAAA,EANV5mF,KAAA4E,cAAgC,GA+DlC,OAtDEsjF,EAAAhoF,UAAA2f,SAAA,WACE,IAAK7f,KAAKknF,YAAclnF,KAAKmoF,OAC3B,MAAM,IAAI5oE,MAAM,2DAGlBvf,KAAKooF,KAAOpoF,KAAKknF,UAAYlnF,KAAKknF,UAAYlnF,KAAKmoF,OACnDnoF,KAAK4E,cAAcpC,KAAKxC,KAAKqoF,4BAC7BroF,KAAK4E,cAAcpC,KAAKxC,KAAKsoF,8BAG/BJ,EAAAhoF,UAAAi2D,YAAA,SAAYv+C,GACNA,EAAQ2wE,aAAahY,eAAiB34D,EAAQ2wE,aAAa5E,eAC7D3jF,KAAK4mF,eAAepB,qBAAqBxlF,KAAKuoF,eAIlDL,EAAAhoF,UAAAyM,gBAAA,WACE3M,KAAK4E,cAAcpC,KAAKxC,KAAKskF,wBAG/B4D,EAAAhoF,UAAA8G,YAAA,WACEhH,KAAK4E,cAAcqC,SAAQ,SAAA1G,GAAK,OAAAA,EAAEsF,kBAG5BqiF,EAAAhoF,UAAAooF,0BAAR,WAAA,IAAA7jF,EAAAzE,KACE,OAAOA,KAAKooF,KAAKppE,cACdxZ,KAAKC,EAAAA,QAAO,WAAM,OAAAhB,EAAK2jF,KAAKI,aAC5B1jF,WAAU,WAAM,OAAAL,EAAKmiF,eAAelB,kBAGjCwC,EAAAhoF,UAAAmoF,yBAAR,WAAA,IAAA5jF,EAAAzE,KACE,OAAOA,KAAK4mF,eAAeV,gBAAgBphF,WAAU,SAAAohF,GAC/CA,GAAmBzhF,EAAK2jF,KAAKL,MAC/BtjF,EAAK2jF,KAAKK,SAAS76E,QACTnJ,EAAK2jF,KAAKL,OAAStjF,EAAK2jF,KAAKlpE,SACvCza,EAAKikF,8BAKHR,EAAAhoF,UAAAwoF,wBAAR,WACE,IAAMC,EAAmB3oF,KAAKuiF,OAAOl3E,QAAO,SAACk3E,EAAQ3iF,GAAM,OAACA,EAAEsnF,UAAU3pE,QAAO7a,EAAO6/E,EAAM,CAAE3iF,EAAEmc,KAAMwmE,IAAS,IAC/GviF,KAAK4mF,eAAenB,oBAAoBkD,IAGlCT,EAAAhoF,UAAAokF,oBAAR,WAAA,IAAA7/E,EAAAzE,KACE,OAAOA,KAAKuiF,OAAO3qE,QAAQpS,KAAKme,EAAAA,UAAU3jB,KAAKuiF,SAASz9E,WAAU,SAAAy9E,GAChE99E,EAAKmiF,eAAe7E,iBAAiBQ,EAAO/iB,UAAUjjD,KAAI,SAAA3c,GAAK,OAAAA,EAAEmc,OAE7DtX,EAAK8jF,cACP9jF,EAAKmiF,eAAepB,qBAAqB/gF,EAAK8jF,2DAvDnBK,EAAAA,mBAAkB7nF,WAAA,CAAA,CAAAsG,KAAhDqI,EAAAA,kBAC2Bm5E,EAAAA,OAAM9nF,WAAA,CAAA,CAAAsG,KAAjCqI,EAAAA,kBACuBu2E,MATDnlF,EAAA,CAAxBkN,EAAAA,MAAM,sDAEPlN,EAAA,CADC4X,EAAAA,gBAAgB+tE,GAAiB,CAAErlE,aAAa,kCAFtC8mE,EAAUpnF,EAAA,CAVtByQ,EAAAA,UAAU,CACTvO,SAAU,mBACVqJ,SAAU,4BACVtF,KAAM,CACJw9E,wBAAyB,OACzBuE,4BAA6B,QAE/Bt3E,UAAW,CAACy0E,GAAgB,CAAEx0E,QAASgxE,GAAkB/wE,YAAau0E,KACtEpvC,gBAAiBC,EAAAA,wBAAwBC,SAUtCt1C,EAAA,EAAAiO,EAAAA,YACAjO,EAAA,EAAAiO,EAAAA,aATQw4E,qBC1Bb,SAAAa,mDAAmD,OAAZjpF,EAAAipF,EAAAjnE,GAA1BinE,EAAiBjoF,EAAA,CAD7BiC,EAAAA,UAAU,CAAEC,SAAU,sBACV+lF,IAA0B12C,mBCKrC,SAAA22C,EAAYr3C,EAAoCC,EAA+ByxC,GAA/E,IAAA5+E,EAAAzE,KACE,IAAK4xC,EACH,MAAM,IAAIryB,MAAM,qEAElB9a,EAAAqd,EAAAlhB,KAAAZ,KAAM2xC,EAAKC,IAAW5xC,MACjB+R,OAASsxE,IAMlB,OAdwCvjF,EAAAkpF,EAAAlnE,GAWtCtiB,OAAAgC,eAAIwnF,EAAA9oF,UAAA,SAAM,KAAV,WACE,OAAOF,KAAK+R,OAAO2U,mFATJisB,EAAAA,yBAA2Co2C,GAAiBhoF,WAAA,CAAA,CAAAsG,KAAxCqI,EAAAA,kBAA2D2W,MAHrF2iE,EAAkBloF,EAAA,CAD9BiC,EAAAA,UAAU,CAAEC,SAAU,uCAIgBvB,EAAA,EAAAiO,EAAAA,aAH1Bs5E,IAA2Bt3C,ICIlCpuC,GAAe,CAAC4kF,GAAYR,GAAejB,GAAiBuC,GAAoBD,IAOtFE,GAAA,WAAA,SAAAA,KAA+B,OAAlBA,EAAgBnoF,EAAA,CAL5BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAeyhF,IACvCrhF,aAAYZ,EAAMY,IAClBC,QAAOb,EAAMY,GAAY,CAAEqhF,QAEhBsE,GAAb,iBCNE,SAAAC,EAAoB/qE,GAAAne,KAAAme,gBAAAA,EAMIne,KAAAmpF,WAAqB,GAW5BnpF,KAAA+/B,IAAc,IAGvB//B,KAAA6mF,OAAiB,EAoI3B,OAhJErnF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,KAAE,KAIN,WACE,OAAOF,KAAKopF,SALd,SAAOlnF,GACLlC,KAAKopF,IAAMlnF,EACXlC,KAAKmpF,WAAa,sCAYpB3pF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK6mF,YAGd,SAAU3kF,GACRlC,KAAK6mF,OAAS3kF,EACVlC,KAAKqpF,mBACPrpF,KAAKme,gBAAgBjD,SAASlb,KAAKspF,aAActpF,KAAKirC,2CAM1DzrC,OAAAgC,eAAI0nF,EAAAhpF,UAAA,gBAAa,KAAjB,WACE,OAAO,mCAKTV,OAAAgC,eAAI0nF,EAAAhpF,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKupF,0CAId/pF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,aAAU,KAAd,SAAegC,GACblC,KAAKupF,SAAWzyD,GAAsB50B,oCAKxC1C,OAAAgC,eAAI0nF,EAAAhpF,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKwpF,uCAIdhqF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,UAAO,KAAX,SAAYgC,GACVlC,KAAKwpF,MAAQ1yD,GAAsB50B,oCAKrC1C,OAAAgC,eAAI0nF,EAAAhpF,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKypF,uCAIdjqF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,UAAO,KAAX,SAAYgC,GACVlC,KAAKypF,MAAQ3yD,GAAsB50B,oCAKrC1C,OAAAgC,eAAI0nF,EAAAhpF,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAK0pF,0CAKdlqF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,aAAU,KAAd,SAAegC,GACblC,KAAK0pF,SAAW5yD,GAAsB50B,oCAKxC1C,OAAAgC,eAAI0nF,EAAAhpF,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK2pF,yCAKdnqF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,YAAS,KAAb,SAAcgC,GACZlC,KAAK2pF,QAAU7yD,GAAsB50B,oCAKvC1C,OAAAgC,eAAI0nF,EAAAhpF,UAAA,aAAU,KAAd,WACE,OAAOF,KAAK4pF,wCAIdpqF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,WAAQ,KAAZ,SAAagC,GACXlC,KAAK4pF,OAAS9yD,GAAsB50B,oCAKtC1C,OAAAgC,eAAI0nF,EAAAhpF,UAAA,mBAAgB,KAApB,WACE,OAAOF,KAAK6pF,8CAKdrqF,OAAAgC,eAAI0nF,EAAAhpF,UAAA,iBAAc,KAAlB,SAAmBgC,GACjBlC,KAAK6pF,aAAe/yD,GAAsB50B,oCAa5C1C,OAAAgC,eAAI0nF,EAAAhpF,UAAA,eAAY,KAAhB,WACE,OAAIF,KAAK8pF,WACA9pF,KAAK8pF,WAEJ9pF,KAAKkC,MAAK,qCAMtBgnF,EAAAhpF,UAAAmpF,gBAAA,WACE,YAAuBxmE,IAAf7iB,KAAKkC,OAAsC,IAAflC,KAAKkC,QAAgBlC,KAAKkC,QAAUlC,KAAK+/B,KAG/EvgC,OAAAgC,eAAI0nF,EAAAhpF,UAAA,WAAQ,KAAZ,WACE,OAAI42B,GAAsB92B,KAAKsrC,WACtBv0B,EAAAA,sBAAsBu0B,UAE3BxU,GAAsB92B,KAAKsb,KACtBvE,EAAAA,sBAAsBuE,IAExBvE,EAAAA,sBAAsBsE,iFAtJMN,MAMbja,EAAA,CAAvBmf,EAAAA,YAAY,6CAEbnf,EAAA,CADCkN,EAAAA,gCAUgBlN,EAAA,CAAhBkN,EAAAA,MAAM,qCACiBlN,EAAA,CAAvBkN,EAAAA,MAAM,mDAIPlN,EAAA,CADCkN,EAAAA,MAAM,uCAcPlN,EAAA,CADCmf,EAAAA,YAAY,qDAObnf,EAAA,CADCmf,EAAAA,YAAY,mDAMbnf,EAAA,CADCkN,EAAAA,MAAM,8CAOPlN,EAAA,CADCmf,EAAAA,YAAY,sDAMbnf,EAAA,CADCkN,EAAAA,MAAM,wCAOPlN,EAAA,CADCmf,EAAAA,YAAY,6CAMbnf,EAAA,CADCkN,EAAAA,MAAM,wCAOPlN,EAAA,CADCmf,EAAAA,YAAY,mDAObnf,EAAA,CADCkN,EAAAA,MAAM,8CAOPlN,EAAA,CADCmf,EAAAA,YAAY,iDAObnf,EAAA,CADCkN,EAAAA,MAAM,4CAOPlN,EAAA,CADCmf,EAAAA,YAAY,+CAMbnf,EAAA,CADCkN,EAAAA,MAAM,0CAOPlN,EAAA,CADCmf,EAAAA,YAAY,4DAObnf,EAAA,CADCkN,EAAAA,MAAM,sDAOgBlN,EAAA,CAAtBkN,EAAAA,MAAM,iDAEUlN,EAAA,CAAhBkN,EAAAA,MAAM,qCA5HIk7E,EAAcpoF,EAAA,CAR1ByQ,EAAAA,UAAU,CACTC,UAAW,CAACuJ,IACZ/X,SAAU,mBACVqJ,SAAU,0LAKC68E,MCRAa,GAA2C,CAACb,IAOzDc,GAAA,WAAA,SAAAA,KAAmC,OAAtBA,EAAoBlpF,EAAA,CALhCqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACymF,IACfxmF,QAAS,CAACwmF,OAECC,GAAb,IPVYxC,GAAAA,EAAAA,oBAAAA,EAAAA,kBAAiB,KAC3B,WAAA,aACAA,GAAA,SAAA,YCFUC,GAAAA,EAAAA,uBAAAA,EAAAA,qBAAoB,KAC9B,YAAA,cACAA,GAAA,QAAA,UACAA,GAAA,WAAA,aACAA,GAAA,QAAA,UACAA,GAAA,MAAA,0BOIA,SAAAwC,EAAY3yE,GAFJtX,KAAAkqF,aAA0D,IAAIC,IAGpEnqF,KAAKkqF,aAAaE,IAAI3C,EAAAA,qBAAqB4C,YAAa,CACtDC,UAAW,SACXC,UAAWjzE,EAAcnB,KAAKjB,yBAEhClV,KAAKkqF,aAAaE,IAAI3C,EAAAA,qBAAqB+C,QAAS,CAClDF,UAAW,aACXC,UAAWjzE,EAAcnB,KAAKhB,sBAEhCnV,KAAKkqF,aAAaE,IAAI3C,EAAAA,qBAAqBgD,WAAY,CACrDH,eAAWznE,EACX0nE,UAAWjzE,EAAcnB,KAAKb,yBAEhCtV,KAAKkqF,aAAaE,IAAI3C,EAAAA,qBAAqBluE,QAAS,CAClD+wE,UAAW,mBACXC,UAAWjzE,EAAcnB,KAAKf,sBAEhCpV,KAAKkqF,aAAaE,IAAI3C,EAAAA,qBAAqBjuE,MAAO,CAChD8wE,UAAW,iBACXC,UAAWjzE,EAAcnB,KAAKd,oBAWpC,OAPS40E,EAAA/pF,UAAAwqF,aAAP,SAAoBtvC,GAClB,OAAOp7C,KAAKkqF,aAAa5nE,IAAI84B,GAAMmvC,WAG9BN,EAAA/pF,UAAAyqF,aAAP,SAAoBvvC,GAClB,OAAOp7C,KAAKkqF,aAAa5nE,IAAI84B,GAAMkvC,oDA5BV30E,KAHhBs0E,EAA4BnpF,EAAA,CADxCsD,EAAAA,cACY6lF,oBCOb,SAAAW,IACsB5qF,KAAAqc,OAA4BmrE,EAAAA,kBAAkB97E,WAMpE,OAHElM,OAAAgC,eAAIopF,EAAA1qF,UAAA,aAAU,KAAd,WACE,OAAOF,KAAKqc,SAAWmrE,EAAAA,kBAAkBh8E,0CAJvB1K,EAAA,CAAnBkN,EAAAA,MAAM,2CAGPlN,EAAA,CADCmf,EAAAA,YAAY,+DAHF2qE,EAAW9pF,EAAA,CARvByQ,EAAAA,UAAU,CACTvO,SAAU,eACVqJ,SAAU,sCAGVtF,KAAM,CAAE8jF,uBAAwB,QAChCr5E,UAAW,CAACy4E,OAEDW,MCMbE,GAAA,WAAA,SAAAA,KAAmC,OAAtBA,EAAoBhqF,EAAA,CAPhCyQ,EAAAA,UAAU,CACTvO,SAAU,0BACVqJ,SAAU,4CAGVtF,KAAM,CAAEgkF,kCAAmC,OAAQ7hB,qBAAsB,WAE9D4hB,GAAb,iBCkBE,SAAAE,EACUC,EACqBvhF,GADrB1J,KAAAirF,qBAAAA,EACqBjrF,KAAA0J,WAAAA,EARZ1J,KAAA8Q,MAA8B22E,EAAAA,qBAAqB4C,YAgCxE,OArBEW,EAAA9qF,UAAAwX,mBAAA,WACM1X,KAAKkrF,WAAalhF,EAAAA,kBAAkBhK,KAAK0J,cAC3C1J,KAAKmrF,cAAgBnrF,KAAKkrF,UAAUtkF,cAAcwkF,YAItD5rF,OAAAgC,eAAIwpF,EAAA9qF,UAAA,kBAAe,KAAnB,WACE,OAAOF,KAAK8Q,QAAU22E,EAAAA,qBAAqB+C,yCAG7ChrF,OAAAgC,eAAIwpF,EAAA9qF,UAAA,gBAAa,KAAjB,WACE,OAAOF,KAAKirF,qBAAqBP,aAAa1qF,KAAK8Q,wCAGrDtR,OAAAgC,eAAIwpF,EAAA9qF,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKirF,qBAAqBN,aAAa3qF,KAAK8Q,wCAGrDtR,OAAAgC,eAAIwpF,EAAA9qF,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAK8Q,QAAU22E,EAAAA,qBAAqBgD,qFAvBbR,UACWzqF,OAAMuB,WAAA,CAAA,CAAAsG,KAA9CC,EAAAA,OAAMC,KAAA,CAAC2E,EAAAA,kBARSpL,EAAA,CAAlBkN,EAAAA,MAAM,yCAIPlN,EAAA,CADC8gB,EAAAA,aAAakpE,GAAsB,CAAEz7C,KAAM1gC,EAAAA,8CAJjCq8E,EAAelqF,EAAA,CAvB3ByQ,EAAAA,UAAU,CACTvO,SAAU,oBACVqJ,SAAU,yxBAmBVtF,KAAM,CAAEskF,4BAA6B,UAWlC5pF,EAAA,EAAA6F,EAAAA,OAAO4E,EAAAA,eATC8+E,oBCrBb,SAAAM,KAAyC,OAA5BA,EAA0BxqF,EAAA,CAPtCyQ,EAAAA,UAAU,CACTvO,SAAU,gCACVqJ,SAAU,sCAGVtF,KAAM,CAAEwkF,wCAAyC,WAEtCD,oBCAb,SAAAE,KAAoC,OAAvBA,EAAqB1qF,EAAA,CAPjCyQ,EAAAA,UAAU,CACTvO,SAAU,2BACVqJ,SAAU,sCAGVtF,KAAM,CAAE0kF,mCAAoC,WAEjCD,MCGPE,GAAuC,CAC3Cd,GACAI,GACAM,GACAE,GACAV,IAQFa,GAAA,WAAA,SAAAA,KAAgC,OAAnBA,EAAiB7qF,EAAA,CAL7BqC,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,aAAcH,EAAeuoC,IACvCloC,QAAOb,EAAMgpF,GAAuB,CAAExoF,EAAeuoC,KACrDnoC,aAAc,CAACooF,OAEJC,GAAb,iBCmBA,SAAAC,KAA4B,OAAfA,EAAa9qF,EAAA,CAvBzBqC,EAAAA,SAAS,CACRI,QAAS,CACP4/D,GACAtM,GACA3zD,EACA6tE,GACA/vC,GACAha,GACA2B,GACAwjB,GACA7xB,GACAwmB,GACA4uC,GACA6D,GACA4N,GACA52C,GACA0+C,GACAx9C,GACAu+C,GACA/6E,EACA08E,OAGSC,iUC7C+B,CAC1C,cACA,eACA,WACA,YACA,cACA,WACA,eACA,s8JCRF,WAME,MAAO,CACL96E,EAAAA,MAAM,OAAQgJ,EAAAA,MAAM,CAAEjR,OAAQ,EAAGgsD,aAAc,YAC/Ch7C,EAAAA,WAAW,gBAAiB,CAACG,EAAAA,Q/BPK,mB+BO2BF,EAAAA,MAAM,CAAEjR,OAAQ,IAAKgsD,aAAc,cAChGh7C,EAAAA,WAAW,gBAAiB,CAACC,EAAAA,MAAM,CAAEjR,OAAQ,IAAKgsD,aAAc,WAAa76C,EAAAA,Q/BR3C,wDgCDtC,SAIqBD,GACnB,YADmB,IAAAA,IAAAA,EAAA,GACZ,CACLF,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEC,QAAS,IAAMC,EAAAA,QhCLd,mBgCK8CF,EAAAA,MAAM,CAAEC,QAASA,OACjGF,EAAAA,WAAW,YAAa,CAACG,EAAAA,QhCNS,mBgCMuBF,EAAAA,MAAM,CAAEC,QAAS,qBCP9E,SAI0B49C,GACxB,IAAIz9C,EAAoB,KACxB,GAAkB,OAAdy9C,EACFz9C,EAAY,yBACP,GAAkB,SAAdy9C,EACTz9C,EAAY,0BACP,GAAkB,SAAdy9C,EACTz9C,EAAY,wBACP,CAAA,GAAkB,UAAdy9C,EAGT,MAAM,IAAIp4C,MAAM,qBAAuBo4C,EAAY,yBAFnDz9C,EAAY,qBAId,MAAO,CACLL,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEC,QAAS,EAAGG,UAAWA,IAAcF,EAAAA,QjCjBpC,sBiCkBlCH,EAAAA,WAAW,YAAa,CAACG,EAAAA,QjClBS,mBiCkBuBF,EAAAA,MAAM,CAAEC,QAAS,EAAGG,UAAWA,sCCnB5F,SAIsBy9C,GACpB,IAAIz9C,EAAoB,KACxB,GAAkB,OAAdy9C,EACFz9C,EAAY,yBACP,GAAkB,SAAdy9C,EACTz9C,EAAY,0BACP,GAAkB,SAAdy9C,EACTz9C,EAAY,wBACP,CAAA,GAAkB,UAAdy9C,EAGT,MAAM,IAAIp4C,MAAM,qBAAuBo4C,EAAY,yBAFnDz9C,EAAY,qBAId,MAAO,CACLL,EAAAA,WAAW,YAAa,CAACC,EAAAA,MAAM,CAAEI,UAAWA,IAAcF,EAAAA,QlCjBxB,sBkCkBlCH,EAAAA,WAAW,YAAa,CAACG,EAAAA,QlClBS,mBkCkBuBF,EAAAA,MAAM,CAAEI,UAAWA,m/BlClB1C","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrViewportViolation {\n  BOTTOM = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  TOP = 3,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAlignment {\n  START = 0,\n  CENTER = 0.5,\n  END = 1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-icon' })\nexport class ClrIconCustomTag {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrIconCustomTag } from './icon';\n\nexport const CLR_ICON_DIRECTIVES: Type<any>[] = [ClrIconCustomTag];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_ICON_DIRECTIVES], exports: [CLR_ICON_DIRECTIVES] })\nexport class ClrIconModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverToggleService {\n  /**\n   *  Popovers might need to ignore click events on an element\n   *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)\n   */\n  private _open: boolean = false;\n  private _openChange: Subject<boolean> = new Subject<boolean>();\n  private _openEvent: Event;\n  private _openEventChange: Subject<Event> = new Subject<Event>();\n\n  public get openChange(): Observable<boolean> {\n    return this._openChange.asObservable();\n  }\n\n  public set openEvent(event: Event) {\n    this._openEvent = event;\n    this._openEventChange.next(event);\n  }\n\n  public get openEvent(): Event {\n    return this._openEvent;\n  }\n\n  public getEventChange(): Observable<Event> {\n    return this._openEventChange.asObservable();\n  }\n\n  public set open(value: boolean) {\n    value = !!value;\n    if (this._open !== value) {\n      this._open = value;\n      this._openChange.next(value);\n    }\n  }\n\n  public get open(): boolean {\n    return this._open;\n  }\n\n  get originalEvent(): Event {\n    return this._openEvent;\n  }\n\n  /**\n   * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n   * This is for instance the case of components that open on a click, but close on a click outside.\n   */\n  public toggleWithEvent(event: any) {\n    this.openEvent = event;\n    this.open = !this.open;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ElementRef, Injectable, Renderer2, Inject, OnDestroy } from '@angular/core';\nimport { ClrPopoverToggleService } from './popover-toggle.service';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Injectable()\nexport class ClrPopoverEventsService implements OnDestroy {\n  public outsideClickClose = true;\n  public scrollToClose = true;\n  private documentClickListener: () => void;\n  public ignoredEvent: any;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private smartOpenService: ClrPopoverToggleService,\n    @Inject(DOCUMENT) private document: HTMLDocument\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.subscribe(open => {\n        if (open) {\n          this.addEscapeListener();\n          this.addClickListener();\n          this.addScrollListener();\n        } else {\n          this.removeAllEventListeners();\n        }\n      }),\n      smartOpenService.getEventChange().subscribe(event => {\n        // Remember the event that was used to open the content\n        this.ignoredEvent = event;\n      })\n    );\n  }\n\n  private scrollSubscription: Subscription;\n  public addScrollListener() {\n    if (this.scrollToClose) {\n      this.documentScroller = fromEvent(this.document, 'scroll', { capture: true });\n      this.scrollSubscription = this.documentScroller\n        .pipe(filter(this.testForSmartPopoverContentContainer))\n        .subscribe(() => {\n          this.smartOpenService.open = false;\n          this.setAnchorFocus();\n        });\n    } else {\n      // I think this is where dynamic re-positioning will be added\n      // Instead of testing like we do in the close pipe below\n      // we need to switch positioning to use an observable and then\n      // debounce the scroll events to recalculate content position in a performant way\n      // For now, ignore scrolling events.\n      return;\n    }\n  }\n\n  public removeScrollListener() {\n    if (this.documentScroller) {\n      this.scrollSubscription.unsubscribe();\n      delete this.documentScroller;\n    }\n  }\n\n  private testForSmartPopoverContentContainer(event: Event): boolean {\n    // Filter for the documentScroller observable event targets\n    let target: Element = <Element>event.target;\n\n    // Walk up the DOM tree until we get to the element that is a direct child of the body.\n    while (target.classList && target.parentElement.localName !== 'body') {\n      target = target.parentElement;\n    }\n\n    // Target is the child element of body where the scroll events originated.\n    // Return false and prevent the popover content container from closing for any scroll events inside a popover\n    // content container.\n    if (target.classList) {\n      // check scroll events to see if they are happening in popover content or elsewhere\n      return target.classList.contains('clr-popover-content') ? false : true;\n    } else {\n      // prevents it from closing right after first opening\n      return false;\n    }\n  }\n\n  public addClickListener() {\n    if (this.outsideClickClose) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', (event: MouseEvent) => {\n        if (event === this.ignoredEvent) {\n          // Here we ignore the opening click event (w/o this content opens and immediately closes.\n          delete this.ignoredEvent;\n        } else {\n          this.smartOpenService.open = false;\n          // Rather than a complex change to the focus trap I put focus on the element that was clicked\n          const clickedElement: HTMLElement = <HTMLElement>event.target;\n          clickedElement.focus();\n        }\n      });\n    }\n  }\n\n  public removeClickListener() {\n    if (this.outsideClickClose) {\n      delete this.ignoredEvent;\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n\n  private escapeListener: () => void;\n  public addEscapeListener() {\n    this.escapeListener = this.renderer.listen(this.document, 'keydown.escape', event => {\n      this.smartOpenService.open = false;\n      this.setAnchorFocus();\n    });\n  }\n\n  public removeEscapeListener() {\n    if (this.escapeListener) {\n      this.escapeListener();\n      delete this.escapeListener;\n    }\n  }\n\n  private _anchorButtonRef: ElementRef;\n  public set anchorButtonRef(ref: ElementRef) {\n    this._anchorButtonRef = ref;\n  }\n  public get anchorButtonRef(): ElementRef {\n    return this._anchorButtonRef;\n  }\n\n  private _closeButtonRef: ElementRef;\n  public set closeButtonRef(ref: ElementRef) {\n    this._closeButtonRef = ref;\n  }\n  public get closeButtonRef(): ElementRef {\n    return this._closeButtonRef;\n  }\n\n  public setCloseFocus(): void {\n    this._closeButtonRef.nativeElement.focus();\n  }\n\n  public setAnchorFocus(): void {\n    this.anchorButtonRef.nativeElement.focus();\n  }\n\n  private _contentRef: ElementRef;\n  public set contentRef(host: ElementRef) {\n    this._contentRef = host;\n  }\n  public get contentRef(): ElementRef {\n    return this._contentRef;\n  }\n\n  private documentScroller: Observable<Event>;\n\n  private removeAllEventListeners() {\n    this.removeScrollListener();\n    this.removeClickListener();\n    this.removeEscapeListener();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.removeAllEventListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from './interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from './enums/viewport-violation.enum';\nimport { ClrVisibilityCoords } from './interfaces/visibility-coords.interface';\nimport { ClrAlignment } from './enums/alignment.enum';\n\n// Put the forward arg here but it is only needed when nudging content or anchors.\nexport type ClrTransform = (position: ClrPopoverPosition, back?: boolean) => ClrPopoverPosition;\n\nexport const flipSides: ClrTransform = position => {\n  return {\n    ...position,\n    side: -1 * position.side,\n  };\n};\n\n// This could be used in more advanced positioning algorithms.\n// flipAxisFlipSideAndNudgeContent(flipAxis, flipSide, nudge, nudgeForward?): ClrTransform {...}\n// I would like to keep it for now.\nexport const flipAxis: ClrTransform = position => {\n  return {\n    ...position,\n    axis: position.axis === 0 ? 1 : 0,\n  };\n};\n\nexport const nudgeContent: ClrTransform = (position, forward) => {\n  const nextAlignment = position.content + (forward ? 0.5 : -0.5);\n  if (nextAlignment < 0 || nextAlignment > 1) {\n    return position;\n  } else {\n    return {\n      ...position,\n      content: nextAlignment,\n    };\n  }\n};\n\nexport function flipSidesAndNudgeContent(flip: ClrTransform, nudge: ClrTransform, nudgeBack?: boolean): ClrTransform {\n  return (position: ClrPopoverPosition): ClrPopoverPosition => nudge(flip(position), nudgeBack);\n}\n\nexport function align(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): ClrPopoverContentOffset {\n  let xDiff = anchor.left;\n  let yDiff = anchor.top;\n\n  // When ClrAxis is VERTICAL BEFORE = left, AFTER = right\n  // When ClrAxis is HORIZONTAL BEFORE is top, AFTER is bottom\n  switch (position.axis + position.side) {\n    case -1: {\n      // ClrAxis.VERTICAL + ClrSide.BEFORE\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff -= content.height; // pull content up to the top of the anchor\n      break;\n    }\n    case 1: {\n      // ClrAxis.VERTICAL + ClrSide.AFTER\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff += anchor.height; // push the content down to below the anchor\n      break;\n    }\n    case 0: {\n      // ClrAxis.HORIZONTAL + ClrSide.BEFORE\n      xDiff -= content.width; // pull the content left of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    case 2: {\n      // ClrAxis.HORIZONTAL + ClrSide.AFTER\n      xDiff += anchor.width; // push the content right of of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return { xOffset: xDiff, yOffset: yDiff };\n}\n\nfunction alignHorizontal(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  let horizontalOffset = 0;\n  // horizontal offset for the anchor position\n  switch (position.anchor /*calculate for the anchor alignment*/) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset += anchor.width / 2; // push content over 1/2 anchor width\n      break;\n    }\n    case ClrAlignment.END: {\n      horizontalOffset += anchor.width; //  push content over width of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // horizontal offsets for anchor alignment\n  switch (\n    position.content // calculate for the content alignment\n  ) {\n    case ClrAlignment.START: {\n      // Nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset -= content.width / 2; // pull content left by a value of 1/2 content width\n      break;\n    }\n    case ClrAlignment.END: {\n      // subtract the width of currentContent from horizontalOffset to pull it back\n      horizontalOffset -= content.width;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return horizontalOffset;\n}\n\nfunction alignVertical(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  // y axis offsets for anchor alignment\n  let verticalOffset = 0;\n\n  // Calculate y offset for anchor position\n  switch (position.anchor) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset += anchor.height / 2; // push content down to the middle of the anchor rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset += anchor.height; // push content down to the bottom of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // Calculate y offsets for content alignment\n  switch (position.content) {\n    case ClrAlignment.START: {\n      // aligned to the top of the content rect\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset -= content.height / 2; // pull content back up to the middle of the content rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset -= content.height; // pull content back up to the bottom of the content rect\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return verticalOffset;\n}\n\nexport function testVisibility(offset: ClrPopoverContentOffset, content: ClientRect): ClrViewportViolation[] {\n  const violations: ClrViewportViolation[] = [];\n  const mockCoords: ClrVisibilityCoords = {\n    bottom: offset.yOffset + content.height,\n    left: offset.xOffset,\n    right: offset.xOffset + content.width,\n    top: offset.yOffset,\n  };\n\n  if (!(mockCoords.top >= 0)) {\n    violations.push(ClrViewportViolation.TOP);\n  }\n  if (!(mockCoords.left >= 0)) {\n    violations.push(ClrViewportViolation.LEFT);\n  }\n  if (!(mockCoords.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {\n    violations.push(ClrViewportViolation.BOTTOM);\n  }\n  if (!(mockCoords.right <= (window.innerWidth || document.documentElement.clientWidth))) {\n    violations.push(ClrViewportViolation.RIGHT);\n  }\n\n  return violations;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAxis {\n  VERTICAL,\n  HORIZONTAL,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, OnDestroy, Optional } from '@angular/core';\n\nimport { LoadingListener } from './loading-listener';\n\nexport enum ClrLoadingState {\n  DEFAULT,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\n@Directive({ selector: '[clrLoading]' })\nexport class ClrLoading implements OnDestroy {\n  // We find the first parent that handles something loading\n  constructor(@Optional() private listener: LoadingListener) {}\n\n  private _loadingState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  public get loadingState() {\n    return this._loadingState;\n  }\n\n  @Input('clrLoading')\n  public set loadingState(value: boolean | ClrLoadingState) {\n    if (value === true) {\n      value = ClrLoadingState.LOADING;\n    } else if (!value) {\n      value = ClrLoadingState.DEFAULT;\n    }\n\n    if (value === this._loadingState) {\n      return;\n    }\n\n    this._loadingState = value;\n    if (this.listener) {\n      this.listener.loadingStateChange(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this.loadingState = ClrLoadingState.DEFAULT;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { ClrPopoverEventsService } from './popover-events.service';\nimport { ClrPopoverPosition } from '../interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from '../interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from '../enums/viewport-violation.enum';\nimport { align, flipSidesAndNudgeContent, flipSides, nudgeContent, testVisibility } from '../position-operators';\nimport { ClrAxis } from '../enums/axis.enum';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverPositionService {\n  private currentAnchorCoords: ClientRect;\n  private currentContentCoords: ClientRect;\n  private contentOffsets: ClrPopoverContentOffset;\n  private _position: ClrPopoverPosition;\n\n  private _shouldRealign: Subject<void> = new Subject();\n  shouldRealign: Observable<void> = this._shouldRealign.asObservable();\n\n  realign() {\n    this._shouldRealign.next();\n  }\n\n  set position(position: ClrPopoverPosition) {\n    this._position = position;\n  }\n  get position(): ClrPopoverPosition {\n    return this._position;\n  }\n\n  constructor(private eventService: ClrPopoverEventsService, @Inject(PLATFORM_ID) public platformId: Object) {}\n\n  public alignContent(content: HTMLElement): ClrPopoverContentOffset {\n    if (!isPlatformBrowser(this.platformId)) {\n      // Only position when in a browser.\n      // Default to the browser origin and prevent getBoundingClientRect from running.\n      return {\n        xOffset: 0,\n        yOffset: 0,\n      };\n    }\n\n    this.currentAnchorCoords = this.eventService.anchorButtonRef.nativeElement.getBoundingClientRect();\n    this.currentContentCoords = content.getBoundingClientRect();\n    this.contentOffsets = align(this.position, this.currentAnchorCoords, this.currentContentCoords);\n\n    const visibilityViolations: ClrViewportViolation[] = testVisibility(this.contentOffsets, this.currentContentCoords);\n    /**\n     * Calculate the sum of viewport errors. This calculation is used below with the provided Axis in the given\n     * ClrPopoverPosition. Its worth putting the ClrViewportViolation enum values here:\n     *\n     *   BOTTOM = 0,\n     *   LEFT = 1,\n     *   RIGHT = 2,\n     *   TOP = 3,\n     *\n     *   So, this.visibilityViolations.length tells us how many sides of the viewport that the popover content was\n     *   clipped on. We can only help when the content has an issue on one or two sides.\n     *   errorSum is calculated to determine _how_ to change the position. Looking at both the axis and the number\n     *   of violations I can use the errorSum to determine how to transform the position (on the fly) and adjust\n     *   where it can be improved.\n     *\n     *   Note, more than 3 viewport violations and there isn't anything we can do to help. Also when there are two\n     *   violations, we can't help if the violations are TOP+BOTTOM || LEFT+RIGHT => There is no transformation we\n     *   can make to the postion that will help.\n     *\n     *   Some examples:\n     *   There is only one error and Primary axis is VERTICAL\n     *   - this.handleVerticalAxisOneViolation has a switch that will use the error sum to apply the correct\n     *   transform to the postion based on the reduction of visibilityViolations.\n     *\n     *   There are two errors and Primary axis is HORIZONTAL\n     *   - handleHorizontalAxisTwoViolations has a switch that uses the error sum to apply both transforms needed to\n     *   improve the content position based on the reduction of visibilityViolations.\n     */\n\n    const errorSum = visibilityViolations.reduce((count, current) => {\n      return count + current;\n    }, 0);\n\n    if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there is one viewport violation\n      this.handleVerticalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there is one viewport violation\n      this.handleHorizontalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there are two viewport violations\n      this.handleVerticalAxisTwoViolations(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there are two viewport violations\n      this.handleHorizontalAxisTwoViolations(errorSum);\n    }\n    return this.contentOffsets;\n  }\n\n  private handleVerticalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 0:\n      case 3: {\n        // BOTTOM(0) or TOP(3) are primary violations and we can just flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 1: {\n        // LEFT(1) is secondary and needs to nudge content right\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 2: {\n        // RIGHT(2) is secondary and  needs to nudge content left\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleVerticalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      // We know there are two violations. We can use the errorSum to determine which combination of sides were\n      // violated and handle appropriately.\n      case 5: {\n        // TOP(3)+RIGHT(2) is case 5. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 4: {\n        //TOP(3)+LEFT(1) is case 4, we need to flip sides and nudge content to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2: {\n        // BOTTOM(0)+RIGHT(2) is case 2. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 1: {\n        // BOTTOM(0)+LEFT(1) is case 1. We need to flip sides and nudge to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 1:\n      case 2: {\n        // LEFT(1) and RIGHT(2) are primary violations so we can flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 0: {\n        // BOTTOM(0) is a secondary violation and we need to nudge content up\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3) is a secondary violation and we need to nudge content down\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      case 5:\n      case 4: {\n        // TOP(3)+LEFT(1) is case 4.\n        // TOP(3)+RIGHT(2) is case 5.\n        // In both of these cases we need to flip sides and nudge content down\n        const flipAndNudgeDown = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeDown(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2:\n      case 1: {\n        // BOTTOM(0)+RIGHT(2) is case 2.\n        // BOTTOM(0)+LEFT(1) is case 1.\n        // In both cases we  need to flip sides and nudge content up\n        const flipAndNudgeUp = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(flipAndNudgeUp(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport {\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  AfterContentChecked,\n  EventEmitter,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverPositionService } from './providers/popover-position.service';\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { debounceTime } from 'rxjs/operators';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Directive({ selector: '[clrPopoverContent]' })\nexport class ClrPopoverContent implements AfterContentChecked, OnDestroy {\n  private view: EmbeddedViewRef<void>;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrPopoverContent')\n  public set open(value: boolean) {\n    this.smartOpenService.open = !!value;\n  }\n\n  @Input('clrPopoverContentAt')\n  set contentAt(position: ClrPopoverPosition) {\n    this.smartPositionService.position = position;\n  }\n\n  @Input('clrPopoverContentOutsideClickToClose')\n  set outsideClickClose(clickToClose) {\n    this.smartEventsService.outsideClickClose = !!clickToClose;\n  }\n\n  @Input('clrPopoverContentScrollToClose')\n  set scrollToClose(scrollToClose) {\n    this.smartEventsService.scrollToClose = !!scrollToClose;\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private document: HTMLDocument,\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private renderer: Renderer2,\n    private smartPositionService: ClrPopoverPositionService,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        if (change) {\n          this.addContent();\n        } else {\n          this.removeContent();\n        }\n      }),\n      this.smartPositionService.shouldRealign.subscribe(() => {\n        this.shouldRealign = true;\n        // Avoid flickering on initialization, caused by the asynchronous nature of the\n        // check-collector pattern.\n        if (this.view) {\n          this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n        }\n      }),\n      // Here we collect subsequent synchronously received content-check events and only take action\n      // at the end of the cycle. See below for details on the check-collector pattern.\n      this.checkCollector.pipe(debounceTime(0)).subscribe(() => {\n        this.alignContent();\n        this.shouldRealign = false;\n        if (this.view) {\n          this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '1');\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.removeContent();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private removeContent(): void {\n    if (!this.view) {\n      return;\n    }\n    this.view.rootNodes.forEach(node => this.renderer.removeChild(this.document.body, node));\n    this.container.clear();\n    delete this.view;\n  }\n\n  /**\n   * TODO(matt): investigate why DebugElement retains a reference to the nodes and causes a memory leak.\n   * A note about the use of appendChild/removeChild\n   * The DebugElement is keeping a reference to the detached node and its unclear why.\n   * This does warrant further investigation. But, since it doesn't happen in production mode\n   * it is a low priority issue for now.\n   */\n  private addContent() {\n    // Create the view container\n    this.view = this.container.createEmbeddedView(this.template);\n    this.smartEventsService.contentRef = this.view.rootNodes[0]; // So we know where/what to set close focus on\n    this.renderer.addClass(this.view.rootNodes[0], 'clr-popover-content');\n    // Reset to the begining of the document to be available for sizing/positioning calculations.\n    // If we add new content to the bottom it triggers changes in the layout that may lead to false anchor\n    // coordinates values.\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', '0px');\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', '0px');\n    // We need to hide it during the calculation phase, while it's not yet finally positioned.\n    this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n    this.renderer.listen(this.view.rootNodes[0], 'click', event => {\n      this.smartOpenService.openEvent = event;\n    });\n    this.view.rootNodes.forEach(node => {\n      this.renderer.appendChild(this.document.body, node);\n    });\n    // Mark for realingment on the next content-check cycle.\n    this.shouldRealign = true;\n  }\n\n  private shouldRealign = false;\n\n  // Check-collector pattern:\n  // In order to get accurate content height/width values, we cannot calculate alignment offsets until\n  // after the projected content has stabilized.\n  // As multiple check events may happen in the same rendering cycle, we need to collect all events\n  // and only act after the content is really stable. Or we may get wrong intermediate positioning values.\n  // We will channel subsequent content check events through this observable.\n  private checkCollector: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentChecked(): void {\n    if (this.smartOpenService.open && this.view && this.shouldRealign) {\n      // Channel content-check event through the check-collector\n      this.checkCollector.emit();\n    }\n  }\n\n  private alignContent() {\n    if (!this.view) {\n      return;\n    }\n    const positionCoords = this.smartPositionService.alignContent(this.view.rootNodes[0]);\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', `${positionCoords.yOffset}px`);\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', `${positionCoords.xOffset}px`);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, EventEmitter, HostListener, OnDestroy, Output } from '@angular/core';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrPopoverOpenCloseButton]',\n  host: {\n    '[class.clr-smart-open-close]': 'true',\n  },\n})\nexport class ClrPopoverOpenCloseButton implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(private smartOpenService: ClrPopoverToggleService) {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        this.openCloseChange.next(change);\n      })\n    );\n  }\n\n  @Output('clrPopoverOpenCloseChange') openCloseChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef, EventEmitter, Output, HostListener, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[clrPopoverCloseButton]',\n  host: {\n    '[class.clr-smart-close-button]': 'true',\n  },\n})\nexport class ClrPopoverCloseButton implements OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.pipe(filter(value => !value)).subscribe(() => {\n        this.closeChange.next();\n      })\n    );\n  }\n\n  @Output('clrPopoverOnCloseChange') closeChange: EventEmitter<void> = new EventEmitter<void>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n    this.smartEventsService.setAnchorFocus();\n  }\n\n  ngAfterViewInit() {\n    this.smartEventsService.closeButtonRef = this.elementRef;\n    this.smartEventsService.setCloseFocus();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef } from '@angular/core';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\n\n@Directive({\n  selector: '[clrPopoverAnchor]',\n  host: {\n    '[class.clr-anchor]': 'true',\n  },\n})\nexport class ClrPopoverAnchor {\n  constructor(smartEventService: ClrPopoverEventsService, element: ElementRef) {\n    smartEventService.anchorButtonRef = element;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrPopoverContent } from './popover-content';\nimport { ClrPopoverOpenCloseButton } from './popover-open-close-button';\nimport { ClrPopoverCloseButton } from './popover-close-button';\nimport { ClrPopoverAnchor } from './popover-anchor';\n\n@NgModule({\n  imports: [],\n  declarations: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n  exports: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n})\nexport class ClrPopoverModuleNext {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrLoadingState } from './loading';\n\n/**\n * This is an abstract class because we need it to still be a valid token for dependency injection after transpiling.\n * This does not mean you should extend it, simply implementing it is fine.\n */\nexport abstract class LoadingListener {\n  abstract loadingStateChange(state: ClrLoadingState): void;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrButton } from '../button-group/button';\n\n@Injectable()\nexport class ButtonInGroupService {\n  private _changes: Subject<ClrButton> = new Subject<ClrButton>();\n\n  get changes(): Observable<ClrButton> {\n    return this._changes.asObservable();\n  }\n\n  updateButtonGroup(button: ClrButton): void {\n    this._changes.next(button);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Optional, Output, SkipSelf, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-button',\n  template: `\n        <ng-template #buttonProjectedRef>\n            <button\n                [class]=\"classNames\"\n                (click)=\"emitClick($event)\"\n                [attr.type]=\"type\"\n                [attr.name]=\"name\"\n                [attr.disabled]=\"disabled\"\n                [attr.id]=\"id\">\n                <span class=\"spinner spinner-inline\" *ngIf=\"loading\"></span>\n                <ng-content></ng-content>\n            </button>\n        </ng-template>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrButton }],\n})\nexport class ClrButton implements LoadingListener {\n  private _enableService: boolean = false;\n\n  @ViewChild('buttonProjectedRef', { static: true })\n  templateRef: TemplateRef<ClrButton>;\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public buttonInGroupService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService\n  ) {}\n\n  private _inMenu: boolean = false;\n\n  get inMenu(): boolean {\n    return this._inMenu;\n  }\n\n  @Input('clrInMenu')\n  set inMenu(value: boolean) {\n    value = !!value;\n    if (this._inMenu !== value) {\n      this._inMenu = value;\n      // We check if the service flag is enabled\n      // and if the service exists because the service is optional\n      if (this._enableService && this.buttonInGroupService) {\n        this.buttonInGroupService.updateButtonGroup(this);\n      }\n    }\n  }\n\n  private _classNames: string = 'btn';\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  @Input('class')\n  set classNames(value: string) {\n    if (typeof value === 'string') {\n      const classNames: string[] = value.split(' ');\n      if (classNames.indexOf('btn') === -1) {\n        classNames.push('btn');\n      }\n      this._classNames = classNames.join(' ');\n    }\n  }\n\n  private _name: string = null;\n\n  get name(): string {\n    return this._name;\n  }\n\n  @Input('name')\n  set name(value: string) {\n    if (typeof value === 'string') {\n      this._name = value;\n    }\n  }\n\n  private _type: string = null;\n\n  get type(): string {\n    return this._type;\n  }\n\n  @Input('type')\n  set type(value: string) {\n    if (typeof value === 'string') {\n      this._type = value;\n    }\n  }\n\n  private _id: string = null;\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input('id')\n  set id(value: string) {\n    if (typeof value === 'string') {\n      this._id = value;\n    }\n  }\n\n  private _disabled: any = null;\n\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  @Input('disabled')\n  set disabled(value: any) {\n    if (value !== null && value !== false) {\n      this._disabled = '';\n    } else {\n      this._disabled = null;\n    }\n  }\n\n  public loading: boolean;\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.loading = state === ClrLoadingState.LOADING;\n  }\n\n  @Output('click') _click: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  emitClick($event): void {\n    if (this.inMenu) {\n      this.toggleService.toggleWithEvent($event);\n    }\n    this._click.emit(true);\n  }\n\n  ngAfterViewInit() {\n    this._enableService = true;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrCommonStrings } from './common-strings.interface';\n\nexport const commonStringsDefault: ClrCommonStrings = {\n  open: 'Open',\n  close: 'Close',\n  show: 'Show',\n  hide: 'Hide',\n  expand: 'Expand',\n  collapse: 'Collapse',\n  more: 'More',\n  select: 'Select',\n  selectAll: 'Select All',\n  previous: 'Previous',\n  next: 'Next',\n  current: 'Jump to current',\n  info: 'Info',\n  success: 'Success',\n  warning: 'Warning',\n  danger: 'Error',\n  rowActions: 'Available actions',\n  pickColumns: 'Show or hide columns',\n  showColumns: 'Show Columns',\n  sortColumn: 'Sort Column',\n  firstPage: 'First Page',\n  lastPage: 'Last Page',\n  nextPage: 'Next Page',\n  previousPage: 'Previous Page',\n  currentPage: 'Current Page',\n  totalPages: 'Total Pages',\n  minValue: 'Min value',\n  maxValue: 'Max value',\n  modalContentStart: 'Beginning of Modal Content',\n  modalContentEnd: 'End of Modal Content',\n  showColumnsMenuDescription: 'Show or hide columns menu',\n  allColumnsSelected: 'All columns selected',\n  signpostToggle: 'Signpost Toggle',\n  signpostClose: 'Signpost Close',\n  loading: 'Loading',\n  // Datagrid\n  detailPaneStart: 'Start of row details',\n  detailPaneEnd: 'End of row details',\n  singleSelectionAriaLabel: 'Single selection header',\n  singleActionableAriaLabel: 'Single actionable header',\n  detailExpandableAriaLabel: 'Toggle more row content',\n  datagridFilterAriaLabel: 'Toggle column filter',\n  // Alert\n  alertCloseButtonAriaLabel: 'Close alert',\n  // Date Picker\n  datepickerToggle: 'Toggle datepicker',\n  datepickerPreviousMonth: 'Previous month',\n  datepickerCurrentMonth: 'Current month',\n  datepickerNextMonth: 'Next month',\n  datepickerPreviousDecade: 'Previous decade',\n  datepickerNextDecade: 'Next decade',\n  datepickerCurrentDecade: 'Current decade',\n  datepickerSelectMonthText: 'Select month, the current month is {CALENDAR_MONTH}',\n  datepickerSelectYearText: 'Select year, the current year is {CALENDAR_YEAR}',\n  daypickerSRCurrentMonthPhrase: 'The current month is {CURRENT_MONTH}',\n  daypickerSRCurrentYearPhrase: 'The current year is {CURRENT_YEAR}',\n  daypickerSRCurrentDecadePhrase: 'The current decade is {DECADE_RANGE}',\n  // Stack View\n  stackViewChanged: 'Value changed.',\n  // Forms\n  formErrorSummary: 'The form has {ERROR_NUMBER} errors.',\n  //Vertical Nav\n  verticalNavToggle: 'Toggle vertical navigation',\n  verticalNavGroupToggle: 'Toggle vertical navigation group',\n  // Timeline steps\n  timelineStepNotStarted: 'Not started',\n  timelineStepCurrent: 'Current',\n  timelineStepSuccess: 'Completed',\n  timelineStepError: 'Error',\n  timelineStepProcessing: 'In progress',\n\n  // Datagrid expandable rows\n  dategridExpandableBeginningOf: 'Beginning of',\n  dategridExpandableEndOf: 'End of',\n  dategridExpandableRowContent: 'Expandable row content',\n  dategridExpandableRowsHelperText: `Screen reader table commands may not work for viewing expanded content, please use your screen reader's browse mode to read the content exposed by this button`,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { commonStringsDefault } from './../../utils/i18n/common-strings.default';\nimport { ClrCommonStrings } from './../../utils/i18n/common-strings.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrCommonStringsService {\n  private _strings = commonStringsDefault;\n\n  /**\n   * Allows you to pass in new overrides for localization\n   */\n  localize(overrides: Partial<ClrCommonStrings>) {\n    this._strings = { ...this._strings, ...overrides };\n  }\n\n  /**\n   * Access to all of the keys as strings\n   */\n  get keys(): Readonly<ClrCommonStrings> {\n    return this._strings;\n  }\n\n  /**\n   * Parse a string with a set of tokens to replace\n   */\n  parse(source: string, tokens: { [key: string]: string } = {}) {\n    const names = Object.keys(tokens);\n    let output = source;\n    if (names.length) {\n      names.forEach(name => {\n        output = output.replace(`{${name}}`, tokens[name]);\n      });\n    }\n    return output;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nlet NB_INSTANCES = 0;\n\nexport const UNIQUE_ID = new InjectionToken<string>('UNIQUE_ID');\n\nexport function uniqueIdFactory() {\n  return 'clr-id-' + NB_INSTANCES++;\n}\n\nexport const UNIQUE_ID_PROVIDER = {\n  provide: UNIQUE_ID,\n  useFactory: uniqueIdFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrSide {\n  BEFORE = -1,\n  AFTER = 1,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrAxis } from './axis.enum';\nimport { ClrSide } from './side.enum';\nimport { ClrAlignment } from './alignment.enum';\n\ninterface ClrPopoverPositionsInterface {\n  axis: ClrAxis;\n  side: ClrSide;\n  anchor: ClrAlignment;\n  content: ClrAlignment;\n}\n\nexport class ClrPopoverPositions {\n  static 'top-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'top-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'bottom-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'bottom-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'right-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'right-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'left-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'left-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { uniqueIdFactory } from '../id-generator/id-generator.service';\n\nexport enum ClrAriaLivePoliteness {\n  off = 'off',\n  polite = 'polite',\n  assertive = 'assertive',\n}\n\n/**\n * Time in milliseconds before inserting the content into the container\n */\nconst ARIA_LIVE_TICK: number = 100;\n\n/**\n * This service handle `aria-live` accessibility attribute. The issue is that you need\n * to have the DOM Element with attribute `aria-live` before you could insert content\n * and SR (Screen Reader) pick the change and announce it.\n *\n * ```typescript\n * import { ClrAriaLiveService } from 'src/clr-angular/utils/a11y/aria-live.service';\n *\n * @Component({\n * selector: 'clr-demo-component',\n * providers: [ClrAriaLiveService],\n * template: `\n *   <ng-content></ng-content>\n * `,\n * })\n * export class DemoComponent {\n *  constructor(ariaLiveService: ClrAriaLiveService) {}\n *\n *  public actionThatWillTriggerChange() {\n *    this.ariaLiveService.announce('message that I want to announce to SR');\n *  }\n * }\n * ```\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrAriaLiveService implements OnDestroy {\n  private ariaLiveElement: HTMLElement;\n  private document: Document;\n  private previousTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DOCUMENT) _document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = _document;\n  }\n\n  private _id: string = `clr-aria-live-element-${uniqueIdFactory()}`;\n  /**\n   * get access to the internal HTML `id` that gonna be used for the AriaLive container.\n   * @return ID of the DOM Element as string.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Append text content inside the AriaLive Container. This method will check if the\n   * DOM Element is existing if not it will create one for us and the will apply the text.\n   *\n   * ```typescript\n   * this.ariaLiveService.announce(this.el.nativeElement);\n   * // or\n   * this.ariaLiveService.announce('Message to announce to SR');\n   * ```\n   *\n   * @remark\n   * When second argument is `AriaLivePoliteness.off` we won't create aria container or update it.\n   * The reason for that is that we don't want to do additional work if the SR will ignore it.\n   *\n   * @param message - This could be simple string or HTMLElement\n   * @param politeness - 'polite', 'assertive' or 'off'\n   */\n  public announce(\n    message: string | HTMLElement,\n    politeness: ClrAriaLivePoliteness = ClrAriaLivePoliteness.polite\n  ): void {\n    if (politeness === ClrAriaLivePoliteness.off) {\n      return;\n    }\n\n    if (!this.ariaLiveElement && isPlatformBrowser(this.platformId)) {\n      this.ariaLiveElement = this.createContainer();\n    }\n\n    message = typeof message !== 'string' && isPlatformBrowser(this.platformId) ? message.textContent : message;\n\n    // when there is no message do NOTHING!\n    if (!message) {\n      return;\n    }\n\n    this.ariaLiveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    this.ngZone.runOutsideAngular(() => {\n      // This clearTimeout will stop all older messages from announcing\n      // in the case where the messages are comming too fast we gonna try to append only\n      // the last one. That's what the SR will try to do anyway.\n      clearTimeout(this.previousTimeout);\n      this.previousTimeout = setTimeout(() => {\n        this.ariaLiveElement.textContent = <string>message;\n      }, ARIA_LIVE_TICK);\n    });\n  }\n\n  /**\n   * onDestroy life cycle - must stop all active setTimeouts and remove the AriaLive\n   * container from the document.\n   */\n  public ngOnDestroy() {\n    clearTimeout(this.previousTimeout);\n    if (isPlatformBrowser(this.platformId) && this.ariaLiveElement) {\n      this.document.body.removeChild(this.ariaLiveElement);\n      this.ariaLiveElement = null;\n    }\n  }\n\n  /**\n   * Create AriaLive DOM element as a last child of the document.\n   * After the element is created, we gonna apply Clarity class to hide it from\n   * the screen and set the `aria-live` politness.\n   *\n   * `clr-sr-only` is the CSS class that is used to hide the element from the screen.\n   *\n   * @remark\n   * Calling this method multiple times will create multiple DOM Elements, that\n   * won't be tracked and will be GC after the service is destroyed.\n   *\n   * @return AriaLive container as HTMLElement\n   *\n   */\n  private createContainer(): HTMLElement {\n    const ariaLiveElement = this.document.createElement('div');\n\n    ariaLiveElement.setAttribute('id', this.id);\n    // Use clarity screen reader class to hide the dom element\n    // and fix the scrollbar shake\n    ariaLiveElement.classList.add('clr-sr-only');\n\n    ariaLiveElement.setAttribute('aria-atomic', 'true');\n    ariaLiveElement.setAttribute('aria-live', ClrAriaLivePoliteness.polite);\n\n    this.document.body.appendChild(ariaLiveElement);\n\n    return ariaLiveElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\n\nimport { ClrButton } from './button';\n\n@Component({\n  selector: 'clr-button-group',\n  templateUrl: 'button-group.html',\n  providers: [\n    ButtonInGroupService,\n    UNIQUE_ID_PROVIDER,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n  ],\n  host: { '[class.btn-group]': 'true' },\n})\nexport class ClrButtonGroup {\n  @ContentChildren(ClrButton) buttons: QueryList<ClrButton>;\n\n  constructor(\n    public buttonGroupNewService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  public popoverPosition: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  inlineButtons: ClrButton[] = [];\n  menuButtons: ClrButton[] = [];\n\n  /**\n   * 1. Initializes the initial Button Group View\n   * 2. Subscribes to changes on the ContentChildren\n   *    in case the user content projection changes\n   */\n  ngAfterContentInit() {\n    this.initializeButtons();\n    this.buttonGroupNewService.changes.subscribe(button => this.rearrangeButton(button));\n    this.buttons.changes.subscribe(() => {\n      this.initializeButtons();\n    });\n  }\n\n  /**\n   * Moves the button into the other ViewContainer\n   * when an update is received.\n   *\n   * @param button\n   */\n  rearrangeButton(button: ClrButton): void {\n    let fromView: ClrButton[];\n    let toView: ClrButton[];\n    if (button.inMenu) {\n      fromView = this.inlineButtons;\n      toView = this.menuButtons;\n    } else {\n      fromView = this.menuButtons;\n      toView = this.inlineButtons;\n    }\n    const index: number = fromView.indexOf(button);\n    if (index > -1) {\n      fromView.splice(index, 1);\n      const moveIndex = this.getMoveIndex(button);\n      if (moveIndex <= toView.length) {\n        toView.splice(moveIndex, 0, button);\n      }\n    }\n  }\n\n  /**\n   * Author: Eudes\n   *\n   * Finds the order of a button w.r.t other buttons\n   *\n   * @param buttonToMove\n   * @returns\n   */\n  getMoveIndex(buttonToMove: ClrButton): number {\n    const tempArr: ClrButton[] = this.buttons.filter(button => button.inMenu === buttonToMove.inMenu);\n    return tempArr.indexOf(buttonToMove);\n  }\n\n  initializeButtons(): void {\n    const tempInlineButtons: ClrButton[] = [];\n    const tempInMenuButtons: ClrButton[] = [];\n    this.buttons.forEach(button => {\n      if (button.inMenu) {\n        tempInMenuButtons.push(button);\n      } else {\n        tempInlineButtons.push(button);\n      }\n    });\n    this.inlineButtons = tempInlineButtons;\n    this.menuButtons = tempInMenuButtons;\n  }\n\n  /**\n   * Overflow Menu\n   *\n   */\n\n  // Indicates the position of the overflow menu\n  private _menuPosition: string;\n\n  get menuPosition(): string {\n    return this._menuPosition;\n  }\n\n  @Input('clrMenuPosition')\n  set menuPosition(pos: string) {\n    if (pos && ClrPopoverPositions[pos]) {\n      this._menuPosition = pos;\n    } else {\n      this._menuPosition = 'bottom-left';\n    }\n\n    this.popoverPosition = ClrPopoverPositions[this._menuPosition];\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrButton } from './button';\nimport { ClrButtonGroup } from './button-group';\n\nexport const CLR_BUTTON_GROUP_DIRECTIVES: Type<any>[] = [ClrButton, ClrButtonGroup];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrPopoverModuleNext],\n  declarations: [CLR_BUTTON_GROUP_DIRECTIVES],\n  exports: [CLR_BUTTON_GROUP_DIRECTIVES],\n})\nexport class ClrButtonGroupModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\n@Component({\n  selector: 'button[clrLoading]',\n  template: `\n        <ng-container [ngSwitch]=\"state\">\n            <span *ngSwitchCase=\"buttonState.LOADING\">\n                <span @spinner class=\"spinner spinner-inline\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.SUCCESS\">\n                <span @validated (@validated.done)=\"this.loadingStateChange(this.buttonState.DEFAULT)\" class=\"spinner spinner-inline spinner-check\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.DEFAULT\" @defaultButton>\n                <ng-content></ng-content>\n            </span>\n        </ng-container>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrLoadingButton }],\n  animations: [\n    trigger('defaultButton', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      // TODO: see if we can get leave animation to work before spinner's enter animation\n      transition(':leave', [style({ opacity: 0 })]),\n    ]),\n    trigger('spinner', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n    trigger('validated', [\n      transition(':enter', [\n        animate(\n          '600ms',\n          keyframes([\n            style({ transform: 'scale(0,0)', offset: 0 }),\n            style({ opacity: 1, offset: 0.2 }),\n            style({ transform: 'scale(1.2,1.2)', offset: 0.4 }),\n            style({ transform: 'scale(.9,.9)', offset: 0.6 }),\n            style({ transform: 'scale(1,1)', offset: 1 }),\n          ])\n        ),\n      ]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  host: { '[attr.disabled]': \"disabled? '' : null\" },\n})\nexport class ClrLoadingButton implements LoadingListener {\n  public buttonState = ClrLoadingState;\n  public state: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  @Input('disabled') public disabled: boolean;\n\n  @Output('clrLoadingChange')\n  public clrLoadingChange: EventEmitter<ClrLoadingState> = new EventEmitter<ClrLoadingState>(false);\n\n  constructor(public el: ElementRef, private renderer: Renderer2) {}\n\n  loadingStateChange(state: ClrLoadingState): void {\n    if (state === this.state) {\n      return;\n    }\n    this.state = state;\n\n    switch (state) {\n      case ClrLoadingState.DEFAULT:\n        this.renderer.removeStyle(this.el.nativeElement, 'width');\n        this.renderer.removeStyle(this.el.nativeElement, 'transform'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        if (!this.disabled) {\n          this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n        }\n        break;\n      case ClrLoadingState.LOADING:\n        this.setExplicitButtonWidth();\n        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translatez(0)'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        this.renderer.setAttribute(this.el.nativeElement, 'disabled', '');\n        break;\n      case ClrLoadingState.SUCCESS:\n        this.setExplicitButtonWidth();\n        break;\n      case ClrLoadingState.ERROR:\n        this.loadingStateChange(ClrLoadingState.DEFAULT);\n        break;\n      default:\n        break;\n    }\n    this.clrLoadingChange.emit(state);\n  }\n\n  private setExplicitButtonWidth() {\n    if (this.el.nativeElement && this.el.nativeElement.getBoundingClientRect) {\n      const boundingClientRect = this.el.nativeElement.getBoundingClientRect();\n      this.renderer.setStyle(this.el.nativeElement, 'width', `${boundingClientRect.width}px`);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoadingButton } from './loading-button';\n\nexport const CLR_LOADING_BUTTON_DIRECTIVES: Type<any>[] = [ClrLoadingButton];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_LOADING_BUTTON_DIRECTIVES],\n  exports: [CLR_LOADING_BUTTON_DIRECTIVES],\n})\nexport class ClrLoadingButtonModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonGroupModule } from './button-group/button-group.module';\nimport { ClrLoadingButtonModule } from './button-loading/loading-button.module';\n\n@NgModule({\n  exports: [ClrLoadingButtonModule, ClrButtonGroupModule],\n})\nexport class ClrButtonModule {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class EmptyAnchor {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * Internal module, please do not export!\n */\n@NgModule({ declarations: [EmptyAnchor], exports: [EmptyAnchor], entryComponents: [EmptyAnchor] })\nexport class ClrHostWrappingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class ControlIdService {\n  private _id = 'clr-form-control-' + ++counter;\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport enum Layouts {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  COMPACT = 'compact',\n}\n\n@Injectable()\nexport class LayoutService {\n  readonly minLabelSize = 1;\n  readonly maxLabelSize = 12;\n  layout: Layouts = Layouts.HORIZONTAL;\n\n  // This is basically a replacement for Object.values(), which IE11 and Node <9 don't support :(\n  // String enums cannot be reverse-mapped, meaning Layouts['COMPACT'] does not return 'compact' so\n  // this exists to deal with this little caveat to get the list of the values as an array.\n  private layoutValues: string[] = Object.keys(Layouts).map(key => Layouts[key]);\n  private _labelSize: number = 2;\n\n  set labelSize(size: number) {\n    if (this.labelSizeIsValid(size)) {\n      this._labelSize = size;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  isVertical(): boolean {\n    return this.layout === Layouts.VERTICAL;\n  }\n\n  isHorizontal(): boolean {\n    return this.layout === Layouts.HORIZONTAL;\n  }\n\n  isCompact(): boolean {\n    return this.layout === Layouts.COMPACT;\n  }\n\n  get layoutClass(): string {\n    return `clr-form-${this.layout}`;\n  }\n\n  isValid(layout: string): boolean {\n    return this.layoutValues.indexOf(layout) > -1;\n  }\n\n  labelSizeIsValid(labelSize: number): boolean {\n    return Number.isInteger(labelSize) && labelSize >= this.minLabelSize && labelSize <= this.maxLabelSize;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional } from '@angular/core';\nimport { LayoutService } from './layout.service';\n\n@Injectable()\nexport class ControlClassService {\n  className = '';\n\n  constructor(@Optional() private layoutService: LayoutService) {}\n\n  controlClass(invalid = false, grid = false, additional = '') {\n    const controlClasses = [this.className, additional];\n    if (invalid) {\n      controlClasses.push('clr-error');\n    }\n    if (grid && this.layoutService && this.className.indexOf('clr-col') === -1) {\n      controlClasses.push(`clr-col-md-${this.layoutService.maxLabelSize - this.layoutService.labelSize} clr-col-12`);\n    }\n    return controlClasses.join(' ').trim();\n  }\n\n  // We want to remove the column classes from the input up to the container\n  initControlClass(renderer, element: HTMLElement) {\n    if (element && element.className) {\n      this.className = element.className;\n      const klasses = element.className.split(' ');\n      klasses.forEach(klass => {\n        if (klass.startsWith('clr-col')) {\n          renderer.removeClass(element, klass);\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional, ElementRef, AfterViewInit } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-control-error',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-error\"',\n  },\n})\nexport class ClrControlError implements AfterViewInit {\n  constructor(\n    @Optional() public controlIdService: ControlIdService,\n    @Optional() public controlClassService: ControlClassService,\n    private ariaLiveService: ClrAriaLiveService,\n    private el: ElementRef\n  ) {}\n\n  /** @deprecated since 3.0, remove in 4.0 - ariaLiveService */\n  ngAfterViewInit() {\n    /**\n     * The way we render elements inside the `clr-control-container make this\n     * component announce itself without been visible on the screen.\n     *\n     * The check below try to guess is clr-controll-error used in some of the\n     * cases mention above and prevent us from announcing without the need of that.\n     *\n     * This change won't create breaking change - but will make aria live announcment\n     * work only when the component is used outside forms or some of the components.\n     *\n     * This is temporary solution - until better is found.\n     *\n     */\n    if (this.controlClassService === null) {\n      this.ariaLiveService.announce(this.el.nativeElement);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-helper',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-helper\"',\n  },\n})\nexport class ClrControlHelper {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class NgControlService {\n  // Observable to subscribe to the control, since its not available immediately for projected content\n  private _controlChanges: Subject<NgControl> = new Subject<NgControl>();\n  get controlChanges(): Observable<NgControl> {\n    return this._controlChanges.asObservable();\n  }\n\n  setControl(control: NgControl) {\n    this._controlChanges.next(control);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { NgControlService } from '../providers/ng-control.service';\n\n@Injectable()\nexport class IfErrorService implements OnDestroy {\n  // Implement our own status changes observable, since Angular controls don't\n  // fire on events like blur, and we want to return the boolean state instead of a string\n  private _statusChanges: Subject<boolean> = new Subject();\n  get statusChanges(): Observable<boolean> {\n    return this._statusChanges.asObservable();\n  }\n\n  private subscriptions: Subscription[] = [];\n  private control: NgControl;\n\n  constructor(private ngControlService: NgControlService) {\n    // Wait for the control to be available\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.control = control;\n          this.listenForChanges();\n        }\n      })\n    );\n  }\n\n  // Subscribe to the status change events, only after touched and emit the control\n  private listenForChanges() {\n    this.subscriptions.push(\n      this.control.statusChanges.subscribe(() => {\n        this.sendValidity();\n      })\n    );\n  }\n\n  private sendValidity() {\n    if (this.control.touched && this.control.invalid) {\n      this._statusChanges.next(true);\n    } else {\n      this._statusChanges.next(false);\n    }\n  }\n\n  // Allows a control to push a status check upstream, such as on blur\n  triggerStatusChange() {\n    if (this.control) {\n      this.sendValidity();\n    }\n  }\n\n  // Clean up subscriptions\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfErrorService } from './if-error.service';\nimport { NgControlService } from '../providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrIfError]' })\nexport class ClrIfError {\n  constructor(\n    @Optional() private ifErrorService: IfErrorService,\n    @Optional() private ngControlService: NgControlService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    if (!this.ifErrorService) {\n      throw new Error('clrIfError can only be used within a form control container element like clr-input-container');\n    } else {\n      this.displayError(false);\n    }\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        // If there is a specific error to track, check it, otherwise check overall validity\n        if (this.error && this.control) {\n          this.displayError(this.control.hasError(this.error));\n        } else {\n          this.displayError(invalid);\n        }\n      })\n    );\n  }\n\n  @Input('clrIfError') error: string;\n\n  private subscriptions: Subscription[] = [];\n  private displayed: boolean = false;\n  private control: NgControl;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private displayError(invalid: boolean) {\n    if (invalid && !this.displayed) {\n      this.container.createEmbeddedView(this.template, { error: this.control.getError(this.error) });\n      this.displayed = true;\n    } else if (!invalid) {\n      this.container.clear();\n      this.displayed = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { LayoutService } from './providers/layout.service';\nimport { NgControlService } from './providers/ng-control.service';\n\n@Directive({ selector: 'label' })\nexport class ClrLabel implements OnInit, OnDestroy {\n  constructor(\n    @Optional() private controlIdService: ControlIdService,\n    @Optional() private layoutService: LayoutService,\n    @Optional() private ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  @HostBinding('attr.for')\n  @Input('for')\n  forAttr: string;\n\n  private subscriptions: Subscription[] = [];\n  private enableGrid = true;\n\n  get labelText(): string {\n    return this.el.nativeElement && this.el.nativeElement.textContent;\n  }\n\n  ngOnInit() {\n    // Only add the clr-control-label if it is inside a control container\n    if (this.controlIdService || this.ngControlService) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-control-label');\n    }\n    // Only set the grid column classes if we are in the right context and if they aren't already set\n    if (\n      this.enableGrid &&\n      this.layoutService &&\n      !this.layoutService.isVertical() &&\n      this.el.nativeElement &&\n      this.el.nativeElement.className.indexOf('clr-col') < 0\n    ) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-col-12');\n      this.renderer.addClass(this.el.nativeElement, `clr-col-md-${this.layoutService.labelSize}`);\n    }\n    if (this.controlIdService && !this.forAttr) {\n      this.subscriptions.push(this.controlIdService.idChange.subscribe(id => (this.forAttr = id)));\n    }\n  }\n\n  disableGrid() {\n    this.enableGrid = false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class MarkControlService {\n  private _touched: Subject<void> = new Subject();\n\n  get touchedChange(): Observable<void> {\n    return this._touched.asObservable();\n  }\n\n  markAsTouched() {\n    this._touched.next();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ContentChildren,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  PLATFORM_ID,\n  QueryList,\n  Input,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { LayoutService } from './providers/layout.service';\nimport { MarkControlService } from './providers/mark-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrLabel } from './label';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Directive({\n  selector: '[clrForm]',\n  providers: [LayoutService, MarkControlService, ClrAriaLiveService],\n  host: {\n    '[class.clr-form]': 'true',\n    '[class.clr-form-horizontal]': 'layoutService.isHorizontal()',\n    '[class.clr-form-compact]': 'layoutService.isCompact()',\n  },\n})\nexport class ClrForm {\n  private invalidControls = [];\n\n  @Input('clrLabelSize')\n  set labelSize(size: number) {\n    this.layoutService.labelSize = size;\n  }\n\n  constructor(\n    public layoutService: LayoutService,\n    private markControlService: MarkControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private el: ElementRef,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  /** @deprecated since 2.0 */\n  markAsDirty(updateAriaLiveText?: boolean) {\n    this.markAsTouched((updateAriaLiveText = true));\n  }\n\n  // Trying to avoid adding an input and keep this backwards compatible at the same time\n  markAsTouched(updateAriaLiveText?: boolean) {\n    this.markControlService.markAsTouched();\n\n    // I don't think consumers will call this with undefined, null or other values but\n    // want to make sure this only guards against when this is called with false\n    if (updateAriaLiveText !== false && isPlatformBrowser(this.platformId)) {\n      this.invalidControls = Array.from(this.el.nativeElement.querySelectorAll('.ng-invalid'));\n      if (this.invalidControls.length > 0) {\n        this.invalidControls[0].focus();\n        this.updateAriaLive();\n      }\n    }\n  }\n\n  @ContentChildren(ClrLabel, { descendants: true })\n  labels: QueryList<ClrLabel>;\n\n  @HostListener('submit')\n  onFormSubmit() {\n    this.markAsTouched();\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  private updateAriaLive(): void {\n    if (this.invalidControls.length === 0) {\n      return;\n    }\n\n    const errorList = this.labels.filter(label => this.invalidControls.find(control => label.forAttr === control.id));\n\n    this.ariaLiveService.announce(\n      this.commonStrings.parse(this.commonStrings.keys.formErrorSummary, { ERROR_NUMBER: errorList.length.toString() })\n    );\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Input, OnInit } from '@angular/core';\nimport { Layouts, LayoutService } from './providers/layout.service';\n\n@Directive({\n  selector: '[clrForm][clrLayout]',\n})\nexport class ClrLayout implements OnInit {\n  @Input('clrLayout') layout: Layouts;\n\n  constructor(public layoutService: LayoutService) {}\n\n  ngOnInit() {\n    // Only set the layout if it is a valid option\n    if (this.layout && this.layoutService.isValid(this.layout)) {\n      this.layoutService.layout = this.layout;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ContentChild, Directive, OnDestroy, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { LayoutService } from './providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ClrLabel } from './label';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Directive()\nexport abstract class ClrAbstractContainer implements DynamicWrapper, OnDestroy {\n  protected subscriptions: Subscription[] = [];\n  invalid = false;\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  control: NgControl;\n\n  constructor(\n    protected ifErrorService: IfErrorService,\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Component({\n  selector: 'clr-control-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrControlContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  InjectionToken,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { DynamicWrapper } from './dynamic-wrapper';\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * HostWrapper must be called in OnInit to ensure that the Views are ready. If its called in a constructor the view is\n * still undefined.\n * TODO - make sure these comment annotations do not break ng-packgr.\n */\nexport class HostWrapper<W extends DynamicWrapper> implements Injector {\n  constructor(containerType: Type<W>, vcr: ViewContainerRef, index: number = 0) {\n    this.injector = vcr.injector;\n    // If the host is already wrapped, we don't do anything\n    if (!this.injector.get(containerType, null)) {\n      const cfr = this.injector.get(ComponentFactoryResolver);\n      const el = this.injector.get(ElementRef);\n\n      // We need a new anchor, since we're projecting the current one.\n      vcr.createComponent(cfr.resolveComponentFactory(EmptyAnchor));\n      const factory: ComponentFactory<W> = cfr.resolveComponentFactory(containerType);\n      // Craft the element array based on what slot to use. Angular only uses the index to determine\n      // which ng-content to project into, so if you have more than one ng-content you'll need to set\n      // the index in the constructor appropriately\n      const element = [];\n      element[index] = [el.nativeElement];\n      // We're assuming only one projection slot, but in more complex cases we might want to provide\n      // a different array of projected elements.\n      const containerRef = vcr.createComponent(factory, undefined, undefined, element);\n      // We can now remove the useless anchor\n      vcr.remove(0);\n\n      // We note that the container was dynamically created\n      containerRef.instance._dynamic = true;\n\n      // We keep the wrapper's injector to access the dependencies that weren't available before.\n      this.injector = containerRef.injector;\n    }\n  }\n\n  private injector: Injector;\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    return this.injector.get(token, notFoundValue);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  HostBinding,\n  InjectionToken,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  Directive,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControl } from '@angular/forms';\nimport { ControlClassService } from './providers/control-class.service';\nimport { MarkControlService } from './providers/mark-control.service';\n\n@Directive()\nexport class WrappedFormControl<W extends DynamicWrapper> implements OnInit, OnDestroy {\n  protected ngControlService: NgControlService;\n  private ifErrorService: IfErrorService;\n  private controlClassService: ControlClassService;\n  private markControlService: MarkControlService;\n  protected renderer: Renderer2;\n  protected el: ElementRef<any>;\n\n  protected subscriptions: Subscription[] = [];\n  protected index = 0;\n  protected controlIdService: ControlIdService;\n\n  _id: string;\n\n  // I lost way too much time trying to make this work without injecting the ViewContainerRef and the Injector,\n  // I'm giving up. So we have to inject these two manually for now.\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected wrapperType: Type<W>,\n    injector: Injector,\n    private ngControl: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    this.renderer = renderer;\n    this.el = el;\n    try {\n      this.ngControlService = injector.get(NgControlService);\n      this.ifErrorService = injector.get(IfErrorService);\n      this.controlClassService = injector.get(ControlClassService);\n      this.markControlService = injector.get(MarkControlService);\n    } catch (e) {}\n\n    if (this.controlClassService) {\n      this.controlClassService.initControlClass(renderer, el.nativeElement);\n    }\n    if (this.markControlService) {\n      this.subscriptions.push(\n        this.markControlService.touchedChange.subscribe(() => {\n          this.ngControl.control.markAsTouched();\n          this.ngControl.control.updateValueAndValidity();\n        })\n      );\n    }\n  }\n\n  @HostBinding()\n  @Input()\n  get id() {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    if (this.controlIdService) {\n      this.controlIdService.id = value;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    if (this.ifErrorService) {\n      this.ifErrorService.triggerStatusChange();\n    }\n  }\n\n  private _containerInjector: Injector;\n\n  // @TODO This method has a try/catch due to an unknown issue that came when building the clrToggle feature\n  // We need to figure out why this fails for the ClrToggle scenario but works for Date picker...\n  // To see the error, remove the try/catch here and run the ClrToggle suite to see issues getting the container\n  // injector in time, and this ONLY HAPPENS in tests and not in dev/prod mode.\n  protected getProviderFromContainer<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    try {\n      return this._containerInjector.get(token, notFoundValue);\n    } catch (e) {\n      return notFoundValue;\n    }\n  }\n\n  ngOnInit() {\n    this._containerInjector = new HostWrapper(this.wrapperType, this.vcr, this.index);\n    this.controlIdService = this._containerInjector.get(ControlIdService);\n\n    if (this._id) {\n      this.controlIdService.id = this._id;\n    } else {\n      this._id = this.controlIdService.id;\n    }\n\n    if (this.ngControlService) {\n      this.ngControlService.setControl(this.ngControl);\n    }\n\n    this.listenForErrorStateChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private listenForErrorStateChanges() {\n    if (this.ifErrorService) {\n      this.subscriptions.push(\n        this.ifErrorService.statusChanges\n          .pipe(startWith(false), filter(() => this.renderer && !!this.el), distinctUntilChanged())\n          .subscribe(error => this.setAriaDescribedBy(error))\n      );\n    }\n  }\n\n  private setAriaDescribedBy(error: boolean) {\n    this.renderer.setAttribute(this.el.nativeElement, 'aria-describedby', this.getAriaDescribedById(error));\n  }\n\n  private getAriaDescribedById(error: boolean): string {\n    return this.controlIdService.id.concat(error ? '-error' : '-helper');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { WrappedFormControl } from './wrapped-control';\nimport { ClrControlContainer } from './control-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrControl]', host: { '[class.clr-input]': 'true' } })\nexport class ClrControl extends WrappedFormControl<ClrControlContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrControlContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrControlError } from './error';\nimport { ClrControlHelper } from './helper';\nimport { ClrIfError } from './if-error/if-error';\nimport { ClrLabel } from './label';\nimport { ClrForm } from './form';\nimport { ClrLayout } from './layout';\nimport { ClrControlContainer } from './control-container';\nimport { ClrControl } from './control';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  exports: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  entryComponents: [ClrControlContainer],\n})\nexport class ClrCommonFormsModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, OnInit, ContentChild, Inject, InjectionToken, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\nexport const IS_TOGGLE = new InjectionToken<BehaviorSubject<boolean>>('IS_TOGGLE');\nexport function isToggleFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const IS_TOGGLE_PROVIDER = { provide: IS_TOGGLE, useFactory: isToggleFactory };\n\n@Component({\n  selector: 'clr-checkbox-wrapper,clr-toggle-wrapper',\n  template: `\n    <ng-content select=\"[clrCheckbox],[clrToggle]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-checkbox-wrapper]': '!toggle',\n    '[class.clr-toggle-wrapper]': 'toggle',\n  },\n  providers: [ControlIdService, IS_TOGGLE_PROVIDER],\n})\nexport class ClrCheckboxWrapper implements DynamicWrapper, OnInit, OnDestroy {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n  toggle = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(@Inject(IS_TOGGLE) toggleService: BehaviorSubject<boolean>) {\n    this.subscriptions.push(\n      toggleService.subscribe(state => {\n        this.toggle = state;\n      })\n    );\n  }\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Renderer2, ElementRef, Injector, Self, Optional, ViewContainerRef, Attribute } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ClrCheckboxWrapper, IS_TOGGLE } from './checkbox-wrapper';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n/**\n * This implements both the clrCheckbox and clrToggle functionality, since they are both just checkboxes with different\n * visual styling. The challenge is that the container needs to know which selector was used, which the @Attribute\n * decorator gets for us to determine if the toggle is used, and emits a value to the wrapper container to tell it\n * there is a toggle switch instead.\n */\n@Directive({ selector: '[clrCheckbox],[clrToggle]' })\nexport class ClrCheckbox extends WrappedFormControl<ClrCheckboxWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Attribute('clrToggle') private toggle: string\n  ) {\n    super(vcr, ClrCheckboxWrapper, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const toggleService = this.getProviderFromContainer<BehaviorSubject<boolean>>(IS_TOGGLE, null);\n\n    if (toggleService && this.toggle !== null) {\n      toggleService.next(true);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-checkbox-container,clr-toggle-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-checkbox-wrapper,clr-toggle-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrCheckboxContainer extends ClrAbstractContainer {\n  private inline = false;\n  // private formGroup: AbstractControl;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrCheckbox } from './checkbox';\nimport { ClrCheckboxContainer } from './checkbox-container';\nimport { ClrCheckboxWrapper } from './checkbox-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrCommonFormsModule, ClrHostWrappingModule],\n  declarations: [ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  exports: [ClrCommonFormsModule, ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  entryComponents: [ClrCheckboxWrapper],\n})\nexport class ClrCheckboxModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nlet activeCounter = 0;\n\nexport const IF_ACTIVE_ID = new InjectionToken<number>('IF_ACTIVE_ID');\n\nexport function tokenFactory() {\n  return ++activeCounter;\n}\n\nexport const IF_ACTIVE_ID_PROVIDER = {\n  provide: IF_ACTIVE_ID,\n  useFactory: tokenFactory,\n};\n\n@Injectable()\n\n/*********\n * @class IfActiveService\n *\n * @description\n * An injectable service used by IfActive structural directives and the components that implement IfActive in their\n * templates. It holds the value of the current state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on current value changes.\n *\n */\nexport class IfActiveService {\n  /********\n   * @property _currentChange\n   *\n   * @description\n   * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n   * implemting the IfActive structural directive.\n   *\n   */\n  private _currentChange: Subject<number> = new Subject<number>();\n\n  /*********\n   * @property _current\n   *\n   * @description\n   * A property holding the current value for current/closed state of an IfActive structural directive.\n   */\n  private _current: number;\n\n  /*********\n   *\n   * @description\n   * A getter function that provides an observable for the _current Subject.\n   *\n   */\n  public get currentChange(): Observable<number> {\n    return this._currentChange.asObservable();\n  }\n\n  /*********\n   *\n   * @description\n   * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n   * And, broadcasts the new value to all subscribers.\n   *\n   * @param value\n   */\n  public set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n      this._currentChange.next(value);\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A getter that returns the current value of this IfActive instance.\n   * @returns\n   */\n  public get current(): number {\n    return this._current;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IF_ACTIVE_ID, IfActiveService } from './if-active.service';\n\n@Directive({ selector: '[clrIfActive]' })\n\n/**********\n *\n * @class ClrIfActive\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfActiveService to maintain state between itself and\n * the component using it in the component template.\n *\n */\nexport class ClrIfActive implements OnDestroy {\n  private subscription: Subscription;\n  private wasActive: boolean = false;\n\n  constructor(\n    private ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.checkAndUpdateView(ifActiveService.current);\n\n    this.subscription = this.ifActiveService.currentChange.subscribe(newCurrentId => {\n      this.checkAndUpdateView(newCurrentId);\n    });\n  }\n\n  private checkAndUpdateView(currentId: number) {\n    const isNowActive = currentId === this.id;\n    // only emit if the new active state is changed since last time.\n    if (isNowActive !== this.wasActive) {\n      this.updateView(isNowActive);\n      this.activeChange.emit(isNowActive);\n      this.wasActive = isNowActive;\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A setter that updates IfActiveService.active with value.\n   *\n   * @param value\n   */\n  @Input('clrIfActive')\n  public set active(value: boolean) {\n    if (value) {\n      this.ifActiveService.current = this.id;\n    }\n  }\n\n  /**********\n   * @property activeChange\n   *\n   * @description\n   * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   *\n   */\n  @Output('clrIfActiveChange') activeChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current IfActiveService.active value.\n   */\n  public get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../popover/providers/popover-toggle.service';\n\n@Directive({ selector: '[clrIfOpen]' })\n\n/**********\n *\n * @class ClrIfOpen\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: ClrPopoverToggleService to maintain state between itself and the component\n * using it in the component template.\n *\n */\nexport class ClrIfOpen implements OnDestroy {\n  private subscription: Subscription;\n\n  /*********\n   *\n   * @description\n   * A setter that updates ClrPopoverToggleService.open with value.\n   *\n   * @param value\n   */\n  @Input('clrIfOpen')\n  public set open(value: boolean) {\n    this.toggleService.open = value;\n  }\n\n  /**********\n   * @property openChange\n   *\n   * @description\n   * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   */\n  @Output('clrIfOpenChange') openChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current ClrPopoverToggleService.open value.\n   *\n   */\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      this.updateView(change);\n      this.openChange.emit(change);\n    });\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { LoadingListener } from '../loading/loading-listener';\nimport { ClrLoadingState } from '../loading/loading';\n\n@Injectable()\nexport class IfExpandService implements LoadingListener {\n  public expandable: number = 0;\n\n  protected _loading: boolean = false;\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    value = !!value;\n    if (value !== this._loading) {\n      this._loading = value;\n    }\n  }\n\n  protected _expanded: boolean = false;\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._expandChange.next(value);\n    }\n  }\n\n  public toggle() {\n    this.expanded = !this._expanded;\n  }\n\n  protected _expandChange: Subject<boolean> = new Subject<boolean>();\n  public get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  loadingStateChange(state: ClrLoadingState): void {\n    switch (state) {\n      case ClrLoadingState.LOADING:\n        this.loading = true;\n        break;\n      default:\n        this.loading = false;\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from './if-expanded.service';\n\n@Directive({ selector: '[clrIfExpanded]' })\nexport class ClrIfExpanded implements OnInit, OnDestroy {\n  private _expanded: boolean = false;\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input('clrIfExpanded')\n  set expanded(value: boolean) {\n    if (typeof value === 'boolean') {\n      this.expand.expanded = value;\n      this._expanded = value;\n    }\n  }\n\n  @Output('clrIfExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  constructor(\n    @Optional() private template: TemplateRef<any>,\n    private container: ViewContainerRef,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private expand: IfExpandService\n  ) {\n    expand.expandable++;\n    this._subscriptions.push(\n      expand.expandChange.subscribe(() => {\n        this.updateView();\n        this.expandedChange.emit(this.expand.expanded);\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  private updateView() {\n    if (this.expand.expanded && this.container.length !== 0) {\n      return;\n    }\n    if (this.template) {\n      if (this.expand.expanded) {\n        // Should we pass a context? I don't see anything useful to pass right now,\n        // but we can come back to it in the future as a solution for additional features.\n        this.container.createEmbeddedView(this.template);\n      } else {\n        // TODO: Move when we move the animation logic to Datagrid Row Expand\n        // We clear before the animation is over. Not ideal, but doing better would involve a much heavier\n        // process for very little gain. Once Angular animations are dynamic enough, we should be able to\n        // get the optimal behavior.\n        this.container.clear();\n      }\n    } else {\n      try {\n        // If we don't have a template ref, we fallback to a crude display: none for now.\n        if (this.expand.expanded) {\n          this.renderer.setStyle(this.el.nativeElement, 'display', null);\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n        }\n      } catch (e) {\n        // We catch the case where clrIfExpanded was put on a non-DOM element, and we just do nothing\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.updateView();\n  }\n\n  ngOnDestroy() {\n    this.expand.expandable--;\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIfActive } from './if-active.directive';\nimport { ClrIfOpen } from './if-open.directive';\nimport { ClrIfExpanded } from './if-expanded.directive';\n\nexport const CONDITIONAL_DIRECTIVES: Type<any>[] = [ClrIfActive, ClrIfOpen, ClrIfExpanded];\n\n@NgModule({ imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES] })\nexport class ClrConditionalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\n@Injectable({ providedIn: 'root' })\nexport class FocusTrapTracker {\n  private _previousFocusTraps: FocusTrapDirective[] = [];\n  private _current: FocusTrapDirective;\n\n  get current(): FocusTrapDirective {\n    return this._current;\n  }\n\n  set current(value: FocusTrapDirective) {\n    this._previousFocusTraps.push(this._current);\n    this._current = value;\n  }\n\n  get nbFocusTrappers(): number {\n    return this._previousFocusTraps.length;\n  }\n\n  activatePreviousTrapper() {\n    this._current = this._previousFocusTraps.pop();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\n\nimport { FocusTrapTracker } from './focus-trap-tracker.service';\n\ninterface FocusTrapConfig {\n  strict: boolean;\n}\n\n@Directive({ selector: '[clrFocusTrap]' })\nexport class FocusTrapDirective implements AfterViewInit, OnDestroy {\n  private previousActiveElement: any;\n  private previousTrappedActiveElement: any;\n  private localFocusEscaped = false;\n  private document: Document;\n  private parentElement: Element;\n\n  private topReboundEl: any;\n  private bottomReboundEl: any;\n\n  constructor(\n    private el: ElementRef,\n    private injector: Injector,\n    private focusTrapsTracker: FocusTrapTracker,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = this.injector.get(DOCUMENT);\n    this.focusTrapsTracker.current = this;\n\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n  }\n\n  private _config: FocusTrapConfig = {\n    strict: true,\n  };\n  @Input('clrFocusTrap')\n  set config(config: FocusTrapConfig) {\n    this._config = Object.assign(this._config, config);\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusIn(event: any) {\n    if (this.focusTrapsTracker.current !== this || !isPlatformBrowser(this.platformId) || this.localFocusEscaped) {\n      return;\n    }\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    if (this._config.strict && event.target && !nativeElement.contains(event.target)) {\n      // When the focus trap is global, always steal focus back if it goes outside\n      nativeElement.focus();\n    } else if (event.target === this.bottomReboundEl && nativeElement.contains(this.previousTrappedActiveElement)) {\n      // When the focus trap is local, if the user navigates via keyboard to the end element from within the trap, move to top\n      nativeElement.focus();\n    } else if (event.target === this.topReboundEl) {\n      // When the focus trap is local, if the user navigates via keyboard back to start element from within the trap, move to bottom\n      // @TODO implement an acceptable solution to SHIFT+TAB navigation\n    } else if (event.target !== nativeElement && !nativeElement.contains(event.target)) {\n      // If a user has escaped the trap using the mouse\n      // relax, don't do it, when you want to go to it, living those dreams, scheme those schemes, hit me with those laser beams\n      this.localFocusEscaped = true;\n    }\n    // Track the last focused item, so we can check\n    this.previousTrappedActiveElement = event.target;\n  }\n\n  private createFocusableOffScreenEl(): any {\n    // Not using Renderer2's createElement method because that leads to DOM leakage.\n    // https://github.com/angular/angular/issues/26954\n    const offScreenSpan = this.document.createElement('span');\n    this.renderer.setAttribute(offScreenSpan, 'tabindex', '0');\n    this.renderer.addClass(offScreenSpan, 'offscreen-focus-rebounder');\n\n    return offScreenSpan;\n  }\n\n  private addReboundEls() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.topReboundEl = this.createFocusableOffScreenEl();\n      this.bottomReboundEl = this.createFocusableOffScreenEl();\n      const hostElement = this.el.nativeElement;\n      // Add reboundBeforeTrapEl right outside of host element\n      this.renderer.insertBefore(hostElement.parentElement, this.topReboundEl, hostElement);\n      // Add reboundAfterTrapEl right after host element\n      if (hostElement.nextSibling) {\n        this.renderer.insertBefore(hostElement.parentNode, this.bottomReboundEl, hostElement.nextSibling);\n      } else {\n        this.renderer.appendChild(hostElement.parentNode, this.bottomReboundEl);\n      }\n    }\n  }\n\n  private removeReboundEls() {\n    if (isPlatformBrowser(this.platformId) && this.topReboundEl && this.bottomReboundEl) {\n      this.parentElement.removeChild(this.topReboundEl);\n      this.parentElement.removeChild(this.bottomReboundEl);\n      // These are here to to make sure that\n      // we completely delete all traces of the removed DOM objects.\n      delete this.topReboundEl;\n      delete this.bottomReboundEl;\n    }\n  }\n\n  public setPreviousFocus(): void {\n    if (this.previousActiveElement && this.previousActiveElement.focus) {\n      this.previousActiveElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.previousActiveElement = <HTMLElement>this.document.activeElement;\n      this.parentElement = this.el.nativeElement.parentElement;\n    }\n\n    this.addReboundEls();\n  }\n\n  ngOnDestroy() {\n    this.removeReboundEls();\n    this.setPreviousFocus();\n    this.focusTrapsTracker.activatePreviousTrapper();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\nexport const FOCUS_TRAP_DIRECTIVES: Type<any>[] = [FocusTrapDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_TRAP_DIRECTIVES],\n  exports: [FOCUS_TRAP_DIRECTIVES],\n})\nexport class ClrFocusTrapModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * This is the en-001 short locale date format. Setting as default.\n */\nexport const DEFAULT_LOCALE_FORMAT: string = 'dd/MM/y';\n\n// https://en.wikipedia.org/wiki/Date_format_by_country\nexport const LITTLE_ENDIAN_REGEX: RegExp = /d+.+m+.+y+/i;\nexport const MIDDLE_ENDIAN_REGEX: RegExp = /m+.+d+.+y+/i;\n// No need for BIG_ENDIAN_REGEX because anything that doesn't satisfy the above 2\n// is automatically BIG_ENDIAN\n\nexport const DELIMITER_REGEX: RegExp = /d+|m+|y+/i;\n\nexport const USER_INPUT_REGEX: RegExp = /\\d+/g;\n\nexport const MOBILE_USERAGENT_REGEX: RegExp = /Mobi/i;\n\nexport const RTL_REGEX: RegExp = /\\u200f/g;\n\nexport const YEAR: string = 'YYYY';\nexport const MONTH: string = 'MM';\nexport const DATE: string = 'DD';\n\nexport type FormatType = 'LITTLE_ENDIAN' | 'MIDDLE_ENDIAN' | 'BIG_ENDIAN';\n\nexport type InputDateDisplayFormat = {\n  readonly name: FormatType;\n  readonly format: [string, string, string];\n};\n\nexport const LITTLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'LITTLE_ENDIAN',\n  format: [DATE, MONTH, YEAR],\n};\n\nexport const MIDDLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'MIDDLE_ENDIAN',\n  format: [MONTH, DATE, YEAR],\n};\n\nexport const BIG_ENDIAN: InputDateDisplayFormat = {\n  name: 'BIG_ENDIAN',\n  format: [YEAR, MONTH, DATE],\n};\n\nexport const NO_OF_DAYS_IN_A_WEEK: number = 7;\nexport const NO_OF_ROWS_IN_CALENDAR_VIEW: number = 6;\nexport const TOTAL_DAYS_IN_DAYS_VIEW: number = NO_OF_DAYS_IN_A_WEEK * NO_OF_ROWS_IN_CALENDAR_VIEW;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { WeekDay } from '@angular/common';\n\n/**\n * Returns the number of days in a month.\n */\nexport function getNumberOfDaysInTheMonth(year: number, month: number): number {\n  // If we go to the next month, but use a day of 0, it returns the last day from the previous month\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * Returns the day for the corresponding date where 0 represents Sunday.\n */\nexport function getDay(year: number, month: number, date: number): WeekDay {\n  return new Date(year, month, date).getDay();\n}\n\n/**\n * Takes in a year and if it is a 2 digit year, returns the corresponding 4 digit year.\n * Window of 80 years before and 20 years after the present year.\n * Credit: https://github.com/globalizejs/globalize/blob/e1b31cd6a4f1cff75b185b68b7a32220aac5196f/src/date/parse.js\n */\nexport function parseToFourDigitYear(year: number): number {\n  if (year > 9999 || (year > 100 && year < 999) || year < 10) {\n    return -1;\n  }\n  if (year > 999) {\n    return year;\n  }\n  const currYear: number = new Date().getFullYear();\n  const century: number = Math.floor(currYear / 100) * 100;\n  let result: number = year + century;\n  if (result > currYear + 20) {\n    result = result - 100;\n  }\n  return result;\n}\n\nexport function datesAreEqual(date1: Date, date2: Date) {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  } else {\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DayModel } from './day.model';\n\nexport class DayViewModel {\n  constructor(\n    public dayModel: DayModel,\n    public isTodaysDate: boolean = false,\n    public isExcluded: boolean = false,\n    public isDisabled: boolean = false,\n    public isSelected: boolean = false,\n    public isFocusable: boolean = false\n  ) {}\n\n  /**\n   * Gets the tab index based on the isFocusable flag.\n   */\n  get tabIndex(): number {\n    return this.isFocusable ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class DayModel {\n  constructor(public readonly year: number, public readonly month: number, public readonly date: number) {}\n\n  /**\n   * Checks if the passed CalendarDate is equal to itself.\n   */\n  isEqual(day: DayModel) {\n    if (day) {\n      return this.year === day.year && this.month === day.month && this.date === day.date;\n    }\n    return false;\n  }\n\n  toDate(): Date {\n    return new Date(this.year, this.month, this.date);\n  }\n\n  /**\n   * Returns a new DayModel which is incremented based on the value passed.\n   */\n  incrementBy(value: number): DayModel {\n    // Creating new Javascript Date object to increment because\n    // it will automatically take care of switching to next or previous\n    // months & years without we having to worry about it.\n    const date: Date = new Date(this.year, this.month, this.date + value);\n    return new DayModel(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Clones the current day model.\n   */\n  clone(): DayModel {\n    return new DayModel(this.year, this.month, this.date);\n  }\n\n  toComparisonString(): string {\n    return `${this.year}${this.pad(this.month)}${this.pad(this.date)}`;\n  }\n\n  private pad(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n\n  public toDateString(): string {\n    return this.toDate().toLocaleDateString();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NO_OF_DAYS_IN_A_WEEK, NO_OF_ROWS_IN_CALENDAR_VIEW, TOTAL_DAYS_IN_DAYS_VIEW } from '../utils/constants';\nimport { getDay } from '../utils/date-utils';\n\nimport { CalendarModel } from './calendar.model';\nimport { DayViewModel } from './day-view.model';\nimport { DayModel } from './day.model';\nimport { DateRange } from '../interfaces/date-range.interface';\n\nexport class CalendarViewModel {\n  constructor(\n    public calendar: CalendarModel,\n    private selectedDay: DayModel,\n    private focusableDay: DayModel,\n    private today: DayModel,\n    public firstDayOfWeek: number,\n    private excludedDates: DateRange\n  ) {\n    this.initializeCalendarView();\n  }\n\n  private currMonthDayViews: DayViewModel[] = [];\n\n  private _calendarView: DayViewModel[][];\n\n  /**\n   * DayViewModel matrix. Size 6x7\n   */\n  get calendarView(): DayViewModel[][] {\n    return this._calendarView;\n  }\n\n  /**\n   * Generates a 6x7 matrix of DayViewModel based on the Calendar.\n   * The 6x7 matrix is structured according to the first day of the week.\n   * 6 rows to accommodate months which might have dates spanning over 6 weeks.\n   * 7 columns because there are 7 days in a week :P :D\n   */\n  private initializeCalendarView(): void {\n    // Generate prev and next month calendar models.\n    const prevMonthCalendar: CalendarModel = this.calendar.previousMonth();\n    const nextMonthCalendar: CalendarModel = this.calendar.nextMonth();\n\n    // Get no of days from prev and next months.\n    const daysFromPrevMonthInCalView: number = this.numDaysFromPrevMonthInCalView(\n      this.calendar.year,\n      this.calendar.month\n    );\n    const daysFromNextMonthInCalView: number =\n      TOTAL_DAYS_IN_DAYS_VIEW - (this.calendar.days.length + daysFromPrevMonthInCalView);\n\n    // Generate prev, curr and next day view models\n    let prevMonthDayViews: DayViewModel[] = [];\n    let nextMonthDayViews: DayViewModel[] = [];\n\n    if (daysFromPrevMonthInCalView > 0) {\n      prevMonthDayViews = this.generateDayViewModels(\n        prevMonthCalendar.days.slice(-1 * daysFromPrevMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    this.currMonthDayViews = this.generateDayViewModels(this.calendar.days, false, true);\n\n    if (daysFromNextMonthInCalView > 0) {\n      nextMonthDayViews = this.generateDayViewModels(\n        nextMonthCalendar.days.slice(0, daysFromNextMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    // Generate calendar view and initialize flags\n    this._calendarView = this.generateCalendarView(prevMonthDayViews, this.currMonthDayViews, nextMonthDayViews);\n    this.initializeSelectedDay();\n    this.initializeFocusableDay();\n  }\n\n  private isDateExcluded(date: DayModel) {\n    const { minDate, maxDate }: DateRange = this.excludedDates;\n    const from = minDate.toComparisonString();\n    const to = maxDate.toComparisonString();\n    const today = date.toComparisonString();\n\n    return !(today >= from && today <= to);\n  }\n\n  /**\n   * Generates a DayViewModel array based on the DayModel passed\n   */\n  private generateDayViewModels(days: DayModel[], isExcluded: boolean, isCurrentCalendar: boolean): DayViewModel[] {\n    const dayViews: DayViewModel[] = days.map(day => {\n      return new DayViewModel(day, false, isExcluded, this.isDateExcluded(day), false, false);\n    });\n    if (isCurrentCalendar && this.calendar.isDayInCalendar(this.today)) {\n      dayViews[this.today.date - 1].isTodaysDate = true;\n    }\n    return dayViews;\n  }\n\n  /**\n   * Gets the first day of the current month to figure out how many dates of previous month\n   * are needed to complete the Calendar View based on the first day of the week.\n   * eg: Assuming locale en-US, the first day of the week is Sunday,\n   * if first day of the current month lands on Wednesday, then\n   * (this.getDay function would return 3 since\n   * first day of the week is 0), we need the 3 days from the previous month.\n   */\n  private numDaysFromPrevMonthInCalView(currentYear: number, currentMonth: number): number {\n    const firstDayOfCurrMonth: number = getDay(currentYear, currentMonth, 1);\n\n    if (firstDayOfCurrMonth >= this.firstDayOfWeek) {\n      return firstDayOfCurrMonth - this.firstDayOfWeek;\n    } else {\n      return NO_OF_DAYS_IN_A_WEEK + firstDayOfCurrMonth - this.firstDayOfWeek;\n    }\n  }\n\n  /**\n   * Checks if the Day passed is in the CalendarView.\n   */\n  private isDayInCalendarView(day: DayModel): boolean {\n    if (!this.calendar.isDayInCalendar(day)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Using the DayViewModels from the previous, current and next month, this function\n   * generates the CalendarView.\n   */\n  private generateCalendarView(prev: DayViewModel[], curr: DayViewModel[], next: DayViewModel[]): DayViewModel[][] {\n    const combinationArr: DayViewModel[] = [...prev, ...curr, ...next];\n\n    const calendarView: DayViewModel[][] = [];\n    for (let i = 0; i < NO_OF_ROWS_IN_CALENDAR_VIEW; i++) {\n      calendarView[i] = combinationArr.slice(i * NO_OF_DAYS_IN_A_WEEK, (i + 1) * NO_OF_DAYS_IN_A_WEEK);\n    }\n    return calendarView;\n  }\n\n  /**\n   * Initialize the selected day if the day is in the calendar.\n   */\n  private initializeSelectedDay(): void {\n    if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.currMonthDayViews[this.selectedDay.date - 1].isSelected = true;\n    }\n  }\n\n  /**\n   * Initializes the focusable day if the day is in the calendar. If focusable day is not set, then\n   * we check for the selected day. If selected day is not set then check if today is in the current\n   * calendar. If not then just set the 15th of the current calendar month.\n   */\n  private initializeFocusableDay(): void {\n    if (this.focusableDay && this.isDayInCalendarView(this.focusableDay)) {\n      this.setFocusableFlag(this.focusableDay, true);\n    } else if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.setFocusableFlag(this.selectedDay, true);\n      this.focusableDay = this.selectedDay.clone();\n    } else if (this.isDayInCalendarView(this.today)) {\n      this.setFocusableFlag(this.today, true);\n      this.focusableDay = this.today.clone();\n    } else {\n      this.focusableDay = new DayModel(this.calendar.year, this.calendar.month, 15);\n      this.setFocusableFlag(this.focusableDay, true);\n    }\n  }\n\n  private setFocusableFlag(day: DayModel, flag: boolean): void {\n    if (day) {\n      this.currMonthDayViews[day.date - 1].isFocusable = flag;\n    }\n  }\n\n  /**\n   * Updates the focusable day in the calendar.\n   */\n  updateFocusableDay(day: DayModel): void {\n    this.setFocusableFlag(this.focusableDay, false);\n    this.setFocusableFlag(day, true);\n    this.focusableDay = day;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { getNumberOfDaysInTheMonth } from '../utils/date-utils';\n\nimport { DayModel } from './day.model';\n\nexport class CalendarModel {\n  constructor(public readonly year: number, public readonly month: number) {\n    this.initializeDaysInCalendar();\n  }\n\n  days: DayModel[];\n\n  /**\n   * Populates the days array with the DayModels in the current Calendar.\n   */\n  private initializeDaysInCalendar(): void {\n    const noOfDaysInCalendar: number = getNumberOfDaysInTheMonth(this.year, this.month);\n    this.days = Array(noOfDaysInCalendar)\n      .fill(null)\n      .map((date, index) => {\n        return new DayModel(this.year, this.month, index + 1);\n      });\n  }\n\n  /**\n   * Checks if the calendar passed is equal to the current calendar.\n   */\n  isEqual(calendar: CalendarModel) {\n    if (calendar) {\n      return this.year === calendar.year && this.month === calendar.month;\n    }\n    return false;\n  }\n\n  /**\n   * Checks if a DayModel is in the Calendar\n   */\n  isDayInCalendar(day: DayModel): boolean {\n    if (day) {\n      return this.year === day.year && this.month === day.month;\n    }\n    return false;\n  }\n\n  /**\n   * Returns CalendarModel of the previous month.\n   */\n  previousMonth(): CalendarModel {\n    if (this.month === 0) {\n      return new CalendarModel(this.year - 1, 11);\n    } else {\n      return new CalendarModel(this.year, this.month - 1);\n    }\n  }\n\n  /**\n   * Returns CalendarModel of the next month.\n   */\n  nextMonth(): CalendarModel {\n    if (this.month === 11) {\n      return new CalendarModel(this.year + 1, 0);\n    } else {\n      return new CalendarModel(this.year, this.month + 1);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { CalendarModel } from '../model/calendar.model';\nimport { DayModel } from '../model/day.model';\n\n/**\n * This service is responsible for:\n * 1. Initializing the displayed calendar.\n * 2. Moving the calendar to the next, previous or current months\n * 3. Managing the focused and selected day models.\n */\n@Injectable()\nexport class DateNavigationService {\n  private _displayedCalendar: CalendarModel;\n\n  get displayedCalendar(): CalendarModel {\n    return this._displayedCalendar;\n  }\n\n  // not a setter because i want this to remain private\n  private setDisplayedCalendar(value: CalendarModel) {\n    if (!this._displayedCalendar.isEqual(value)) {\n      this._displayedCalendar = value;\n      this._displayedCalendarChange.next();\n    }\n  }\n\n  /**\n   * Variable to store today's date.\n   */\n  private _todaysFullDate: Date = new Date();\n  private _today: DayModel;\n\n  private initializeTodaysDate(): void {\n    this._todaysFullDate = new Date();\n    this._today = new DayModel(\n      this._todaysFullDate.getFullYear(),\n      this._todaysFullDate.getMonth(),\n      this._todaysFullDate.getDate()\n    );\n  }\n\n  get today(): DayModel {\n    return this._today;\n  }\n\n  public selectedDay: DayModel;\n\n  private _selectedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  get selectedDayChange(): Observable<DayModel> {\n    return this._selectedDayChange.asObservable();\n  }\n\n  /**\n   * Notifies that the selected day has changed so that the date can be emitted to the user.\n   * Note: Only to be called from day.ts\n   */\n  notifySelectedDayChanged(dayModel: DayModel) {\n    this.selectedDay = dayModel;\n    this._selectedDayChange.next(dayModel);\n  }\n\n  public focusedDay: DayModel;\n\n  /**\n   * Initializes the calendar based on the selected day.\n   */\n  initializeCalendar(): void {\n    this.focusedDay = null; // Can be removed later on the store focus\n    this.initializeTodaysDate();\n    if (this.selectedDay) {\n      this._displayedCalendar = new CalendarModel(this.selectedDay.year, this.selectedDay.month);\n    } else {\n      this._displayedCalendar = new CalendarModel(this.today.year, this.today.month);\n    }\n  }\n\n  changeMonth(month: number): void {\n    this.setDisplayedCalendar(new CalendarModel(this._displayedCalendar.year, month));\n  }\n\n  changeYear(year: number): void {\n    this.setDisplayedCalendar(new CalendarModel(year, this._displayedCalendar.month));\n  }\n\n  /**\n   * Moves the displayed calendar to the next month.\n   */\n  moveToNextMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.nextMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the previous month.\n   */\n  moveToPreviousMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.previousMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the current month and year.\n   */\n  moveToCurrentMonth(): void {\n    if (!this.displayedCalendar.isDayInCalendar(this.today)) {\n      this.setDisplayedCalendar(new CalendarModel(this.today.year, this.today.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  incrementFocusDay(value: number): void {\n    this.focusedDay = this.focusedDay.incrementBy(value);\n    if (this._displayedCalendar.isDayInCalendar(this.focusedDay)) {\n      this._focusedDayChange.next(this.focusedDay);\n    } else {\n      this.setDisplayedCalendar(new CalendarModel(this.focusedDay.year, this.focusedDay.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  private _displayedCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the displayed calendar has changed.\n   */\n  get displayedCalendarChange(): Observable<void> {\n    return this._displayedCalendarChange.asObservable();\n  }\n\n  private _focusOnCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the focus should be applied on the calendar.\n   */\n  get focusOnCalendarChange(): Observable<void> {\n    return this._focusOnCalendarChange.asObservable();\n  }\n\n  private _focusedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  /**\n   * This observable lets the subscriber know that the focused day in the displayed calendar has changed.\n   */\n  get focusedDayChange(): Observable<DayModel> {\n    return this._focusedDayChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { first, filter } from 'rxjs/operators';\n\n/**\n * This service focuses the day that is focusable in the calendar.\n */\n@Injectable()\nexport class DatepickerFocusService {\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focusCell(elRef: ElementRef): void {\n    this._ngZone.runOutsideAngular(() => {\n      this.ngZoneIsStableInBrowser().subscribe(() => {\n        const focusEl = elRef.nativeElement.querySelector('[tabindex=\"0\"]');\n        if (focusEl) {\n          focusEl.focus();\n        }\n      });\n    });\n  }\n\n  focusInput(element: HTMLInputElement): void {\n    this._ngZone.runOutsideAngular(() => this.ngZoneIsStableInBrowser().subscribe(() => element.focus()));\n  }\n\n  elementIsFocused(element: HTMLInputElement) {\n    return isPlatformBrowser(this.platformId) && document.activeElement === element;\n  }\n\n  private ngZoneIsStableInBrowser() {\n    // Credit: Material: https://github.com/angular/material2/blob/master/src/lib/datepicker/calendar.ts\n    return this._ngZone.onStable.asObservable().pipe(first(), filter(() => isPlatformBrowser(this.platformId)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  FormatWidth,\n  FormStyle,\n  getLocaleDateFormat,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth,\n} from '@angular/common';\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { ClrDayOfWeek } from '../interfaces/day-of-week.interface';\n\n/**\n * This service extracts the Angular CLDR data needed by the datepicker.\n */\n@Injectable()\nexport class LocaleHelperService {\n  constructor(@Inject(LOCALE_ID) public locale: string) {\n    this.initializeLocaleData();\n  }\n\n  private _firstDayOfWeek: number = 0;\n  private _localeDays: ReadonlyArray<ClrDayOfWeek>;\n  private _localeMonthsAbbreviated: ReadonlyArray<string>;\n  private _localeMonthsWide: ReadonlyArray<string>;\n  private _localeDateFormat: string;\n\n  get firstDayOfWeek(): number {\n    return this._firstDayOfWeek;\n  }\n\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeDays;\n  }\n\n  // leave for backward compatibility\n  get localeDaysNarrow(): ReadonlyArray<string> {\n    return this._localeDays.map(day => day.narrow);\n  }\n\n  get localeMonthsAbbreviated(): ReadonlyArray<string> {\n    return this._localeMonthsAbbreviated;\n  }\n\n  get localeMonthsWide(): ReadonlyArray<string> {\n    return this._localeMonthsWide;\n  }\n\n  get localeDateFormat(): string {\n    return this._localeDateFormat;\n  }\n\n  /**\n   * Initializes the locale data.\n   */\n  private initializeLocaleData(): void {\n    // Order in which these functions is called is very important.\n    this.initializeFirstDayOfWeek();\n    this.initializeLocaleDateFormat();\n    this.initializeLocaleMonthsAbbreviated();\n    this.initializeLocaleMonthsWide();\n    this.initializeLocaleDays();\n  }\n\n  /**\n   * Initialize day names based on the locale.\n   * eg: [{day: Sunday, narrow: S}, {day: Monday, narrow: M}...] for en-US.\n   */\n  private initializeLocaleDays(): void {\n    // Get locale day names starting with Sunday\n    const tempArr = [];\n    const tempWideArr: string[] = getLocaleDayNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n    const tempNarrowArr: string[] = getLocaleDayNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Narrow\n    ).slice();\n    // Get first day of the week based on the locale\n    const firstDayOfWeek: number = this.firstDayOfWeek;\n    for (let i = 0; i < 7; i++) {\n      tempArr.push({ day: tempWideArr[i], narrow: tempNarrowArr[i] });\n    }\n    // Rearrange the tempArr to start with the first day of the week based on the locale.\n    if (firstDayOfWeek > 0) {\n      const prevDays: string[] = tempArr.splice(0, firstDayOfWeek);\n      tempArr.push(...prevDays);\n    }\n    this._localeDays = tempArr;\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Abbreviated format.\n   * e.g. `[Jan, Feb, ...]` for en-US\n   */\n  private initializeLocaleMonthsAbbreviated(): void {\n    this._localeMonthsAbbreviated = getLocaleMonthNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Abbreviated\n    ).slice();\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Wide format.\n   * e.g. `[January, February, ...]` for en-US\n   */\n  private initializeLocaleMonthsWide(): void {\n    this._localeMonthsWide = getLocaleMonthNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n  }\n\n  /**\n   * Initializes the first day of the week based on the locale.\n   */\n  private initializeFirstDayOfWeek(): void {\n    this._firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  private initializeLocaleDateFormat(): void {\n    this._localeDateFormat = getLocaleDateFormat(this.locale, FormatWidth.Short);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  BIG_ENDIAN,\n  DEFAULT_LOCALE_FORMAT,\n  DELIMITER_REGEX,\n  InputDateDisplayFormat,\n  LITTLE_ENDIAN,\n  LITTLE_ENDIAN_REGEX,\n  MIDDLE_ENDIAN,\n  MIDDLE_ENDIAN_REGEX,\n  RTL_REGEX,\n  USER_INPUT_REGEX,\n} from '../utils/constants';\nimport { getNumberOfDaysInTheMonth, parseToFourDigitYear } from '../utils/date-utils';\n\nimport { LocaleHelperService } from './locale-helper.service';\nimport { DateRange } from '../interfaces/date-range.interface';\nimport { DayModel } from '../model/day.model';\n\n@Injectable()\nexport class DateIOService {\n  public disabledDates: DateRange = {\n    // This is the default range. It approximates the beginning of time to the end of time.\n    // Unless a minDate or maxDate is set with the native HTML5 api the range is all dates\n    // TODO: turn this into an Array of min/max ranges that allow configuration of multiple ranges.\n    minDate: new DayModel(0, 0, 1),\n    maxDate: new DayModel(9999, 11, 31),\n  };\n  public cldrLocaleDateFormat: string = DEFAULT_LOCALE_FORMAT;\n  private localeDisplayFormat: InputDateDisplayFormat = LITTLE_ENDIAN;\n  private delimiters: [string, string] = ['/', '/'];\n\n  constructor(private _localeHelperService: LocaleHelperService) {\n    this.cldrLocaleDateFormat = this._localeHelperService.localeDateFormat;\n    this.initializeLocaleDisplayFormat();\n  }\n\n  public setMinDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset back to the beginning of time\n      this.disabledDates.minDate = new DayModel(0, 0, 1);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.minDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  public setMaxDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset forward to the end of time\n      this.disabledDates.maxDate = new DayModel(9999, 11, 31);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.maxDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  private initializeLocaleDisplayFormat(): void {\n    const format: string = this.cldrLocaleDateFormat.toLocaleLowerCase();\n    if (LITTLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = LITTLE_ENDIAN;\n    } else if (MIDDLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = MIDDLE_ENDIAN;\n    } else {\n      // everything else is set to BIG-ENDIAN FORMAT\n      this.localeDisplayFormat = BIG_ENDIAN;\n    }\n    this.extractDelimiters();\n  }\n\n  private extractDelimiters(): void {\n    if (this.cldrLocaleDateFormat) {\n      // Sanitize Date Format. Remove RTL characters.\n      // FIXME: When we support RTL, remove this and handle it correctly.\n      const localeFormat: string = this.cldrLocaleDateFormat.replace(RTL_REGEX, '');\n      const delimiters: string[] = localeFormat.split(DELIMITER_REGEX);\n\n      // NOTE: The split from the CLDR date format should always result\n      // in an arary with 4 elements. The 1st and the 2nd values are the delimiters\n      // we will use in order.\n      // Eg: \"dd/MM/y\".split(/d+|m+|y+/i) results in [\"\", \"/\", \"/\", \"\"]\n      if (delimiters && delimiters.length === 4) {\n        this.delimiters = [delimiters[1], delimiters[2]];\n      } else {\n        console.error('Unexpected date format received. Delimiters extracted: ', delimiters);\n      }\n    }\n  }\n\n  toLocaleDisplayFormatString(date: Date): string {\n    if (date) {\n      if (isNaN(date.getTime())) {\n        return '';\n      }\n      const dateNo: number = date.getDate();\n      const monthNo: number = date.getMonth() + 1;\n      const dateStr: string = dateNo > 9 ? dateNo.toString() : '0' + dateNo;\n      const monthStr: string = monthNo > 9 ? monthNo.toString() : '0' + monthNo;\n      if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n        return dateStr + this.delimiters[0] + monthStr + this.delimiters[1] + date.getFullYear();\n      } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n        return monthStr + this.delimiters[0] + dateStr + this.delimiters[1] + date.getFullYear();\n      } else {\n        return date.getFullYear() + this.delimiters[0] + monthStr + this.delimiters[1] + dateStr;\n      }\n    }\n    return '';\n  }\n\n  get placeholderText(): string {\n    const format: [string, string, string] = this.localeDisplayFormat.format;\n    return format[0] + this.delimiters[0] + format[1] + this.delimiters[1] + format[2];\n  }\n\n  /**\n   * Checks if the month entered by the user is valid or not.\n   * Note: Month is 0 based.\n   */\n  private isValidMonth(month: number): boolean {\n    return month > -1 && month < 12;\n  }\n\n  /**\n   * Checks if the date is valid depending on the year and month provided.\n   */\n  private isValidDate(year: number, month: number, date: number): boolean {\n    return date > 0 && date <= getNumberOfDaysInTheMonth(year, month);\n  }\n\n  /**\n   * Validates the parameters provided and returns the date.\n   * If the parameters are not\n   * valid then return null.\n   * NOTE: (Month here is 1 based since the user has provided that as an input)\n   */\n  private validateAndGetDate(year: string, month: string, date: string): Date {\n    // I don't know whats wrong with the TS compiler. It throws an error if I write\n    // the below if statement. The error is:\n    // Operator '!==' cannot be applied to types '2' and '4'\n    // More info here: https://github.com/Microsoft/TypeScript/issues/12794#issuecomment-270342936\n    /*\n        if (year.length !== 2 || year.length !== 4) {\n            return null;\n        }\n        */\n\n    // Instead I have to write the logic like this x-(\n    const y: number = +year;\n    const m: number = +month - 1; // month is 0 based\n    const d: number = +date;\n    if (!this.isValidMonth(m) || !this.isValidDate(y, m, d)) {\n      return null;\n    }\n    const result: number = parseToFourDigitYear(y);\n    return result !== -1 ? new Date(result, m, d) : null;\n  }\n\n  getDateValueFromDateString(date: string): Date {\n    if (!date) {\n      return null;\n    }\n    const dateParts: string[] = date.match(USER_INPUT_REGEX);\n    if (!dateParts || dateParts.length !== 3) {\n      return null;\n    }\n    const [firstPart, secondPart, thirdPart] = dateParts;\n    if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n      // secondPart is month && firstPart is date\n      return this.validateAndGetDate(thirdPart, secondPart, firstPart);\n    } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n      // firstPart is month && secondPart is date\n      return this.validateAndGetDate(thirdPart, firstPart, secondPart);\n    } else {\n      // secondPart is month && thirdPart is date\n      return this.validateAndGetDate(firstPart, secondPart, thirdPart);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { CalendarViewModel } from './model/calendar-view.model';\nimport { CalendarModel } from './model/calendar.model';\nimport { DayModel } from './model/day.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { NO_OF_DAYS_IN_A_WEEK } from './utils/constants';\nimport { ClrDayOfWeek } from './interfaces/day-of-week.interface';\nimport { DateIOService } from './providers/date-io.service';\n\n@Component({ selector: 'clr-calendar', templateUrl: './calendar.html' })\nexport class ClrCalendar implements OnDestroy {\n  private _subs: Subscription[] = [];\n  constructor(\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _dateIOService: DateIOService,\n    private _elRef: ElementRef\n  ) {\n    this.generateCalendarView();\n    this.initializeSubscriptions();\n  }\n\n  /**\n   * Calendar View Model to generate the Calendar.\n   */\n  calendarViewModel: CalendarViewModel;\n\n  /**\n   * Gets the locale days according to the TranslationWidth.Narrow format.\n   */\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeHelperService.localeDays;\n  }\n\n  get calendar(): CalendarModel {\n    return this._dateNavigationService.displayedCalendar;\n  }\n\n  get selectedDay(): DayModel {\n    return this._dateNavigationService.selectedDay;\n  }\n\n  get focusedDay(): DayModel {\n    return this._dateNavigationService.focusedDay;\n  }\n\n  get today(): DayModel {\n    return this._dateNavigationService.today;\n  }\n\n  /**\n   * Initialize subscriptions to:\n   * 1. update the calendar view model.\n   * 2. update the focusable day in the calendar view model.\n   * 3. focus on the focusable day in the calendar.\n   */\n  private initializeSubscriptions(): void {\n    this._subs.push(\n      this._dateNavigationService.displayedCalendarChange.subscribe(() => {\n        this.generateCalendarView();\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusedDayChange.subscribe((focusedDay: DayModel) => {\n        this.calendarViewModel.updateFocusableDay(focusedDay);\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusOnCalendarChange.subscribe(() => {\n        this._datepickerFocusService.focusCell(this._elRef);\n      })\n    );\n  }\n\n  /**\n   * Generates the Calendar View based on the calendar retrieved from the DateNavigationService.\n   */\n  private generateCalendarView(): void {\n    this.calendarViewModel = new CalendarViewModel(\n      this.calendar,\n      this.selectedDay,\n      this.focusedDay,\n      this.today,\n      this._localeHelperService.firstDayOfWeek,\n      this._dateIOService.disabledDates\n    );\n  }\n\n  /**\n   * Delegates Keyboard arrow navigation to the DateNavigationService.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (event && this.focusedDay) {\n      switch (event.keyCode) {\n        case UP_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1 * NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case DOWN_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case LEFT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1);\n          break;\n        case RIGHT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(1);\n          break;\n        default:\n          break; // No default case. TSLint x-(\n      }\n    }\n  }\n\n  /**\n   * Focuses on the focusable day when the Calendar View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy(): void {\n    this._subs.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const UP_ARROW: number = 38;\nexport const DOWN_ARROW: number = 40;\nexport const RIGHT_ARROW: number = 39;\nexport const LEFT_ARROW: number = 37;\nexport const ENTER: number = 13;\nexport const SPACE: number = 32;\nexport const TAB: number = 9;\nexport const ESC: number = 27;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class FocusService {\n  private _focused: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get focusChange(): Observable<boolean> {\n    return this._focused.asObservable();\n  }\n  set focused(state: boolean) {\n    this._focused.next(state);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class DateFormControlService {\n  private _touchedChange: Subject<void> = new Subject<void>();\n  public disabled;\n\n  get touchedChange(): Observable<void> {\n    return this._touchedChange.asObservable();\n  }\n\n  private _dirtyChange: Subject<void> = new Subject<void>();\n\n  get dirtyChange(): Observable<void> {\n    return this._dirtyChange.asObservable();\n  }\n\n  markAsTouched(): void {\n    this._touchedChange.next();\n  }\n\n  markAsDirty(): void {\n    this._dirtyChange.next();\n  }\n\n  // friendly wrapper\n  setDisabled(state: boolean) {\n    this.disabled = state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { DATEPICKER_ENABLE_BREAKPOINT } from '../../../utils/breakpoints/breakpoints';\nimport { MOBILE_USERAGENT_REGEX } from '../utils/constants';\n\n@Injectable()\nexport class DatepickerEnabledService {\n  constructor(@Inject(DOCUMENT) private _document: any) {\n    if (this._document) {\n      this._isUserAgentMobile = MOBILE_USERAGENT_REGEX.test(_document.defaultView.navigator.userAgent);\n      this._innerWidth = _document.defaultView.innerWidth;\n    }\n  }\n\n  private _isUserAgentMobile: boolean = false;\n  private _innerWidth: number;\n\n  /**\n   * Returns if the calendar should be active or not.\n   * If the user agent is mobile and the screen width is less than DATEPICKER_ACTIVE_BREAKPOINT\n   * then the calendar is inactive.\n   */\n  get isEnabled(): boolean {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n    // What they recommend is:\n    //\"In summary, we recommend looking for the string 'Mobi'\n    // anywhere in the User Agent to detect a mobile device.\"\n    if (this._document) {\n      if (this._innerWidth < DATEPICKER_ENABLE_BREAKPOINT && this._isUserAgentMobile) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// iPad mini screen width\n// http://stephen.io/mediaqueries/#iPadMini\nexport const DATEPICKER_ENABLE_BREAKPOINT: number = 768;\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ClrPopoverPositions } from '../../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../../utils/popover/interfaces/popover-position.interface';\n\nconst enum DatepickerViewEnum {\n  MONTHVIEW = 'MONTHVIEW',\n  YEARVIEW = 'YEARVIEW',\n  DAYVIEW = 'DAYVIEW',\n}\n\n/**\n * This service manages which view is visible in the datepicker popover.\n */\n@Injectable()\nexport class ViewManagerService {\n  private _currentView: DatepickerViewEnum = DatepickerViewEnum.DAYVIEW;\n  position: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  get isDayView(): boolean {\n    return this._currentView === DatepickerViewEnum.DAYVIEW;\n  }\n\n  get isYearView(): boolean {\n    return this._currentView === DatepickerViewEnum.YEARVIEW;\n  }\n\n  get isMonthView(): boolean {\n    return this._currentView === DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToMonthView(): void {\n    this._currentView = DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToYearView(): void {\n    this._currentView = DatepickerViewEnum.YEARVIEW;\n  }\n\n  changeToDayView(): void {\n    this._currentView = DatepickerViewEnum.DAYVIEW;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrLabel } from '../common/label';\n\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-date-container',\n  template: `\n      <ng-content select=\"label\"></ng-content>\n      <label *ngIf=\"!label && addGrid()\"></label>\n      <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n        <div class=\"clr-input-wrapper\" clrPopoverAnchor>\n          <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n            <ng-content select=\"[clrDate]\"></ng-content>\n            <button #actionButton\n                    type=\"button\"\n                    clrPopoverOpenCloseButton\n                    class=\"clr-input-group-icon-action\"\n                    [attr.title]=\"commonStrings.keys.datepickerToggle\"\n                    [attr.aria-label]=\"commonStrings.keys.datepickerToggle\"\n                    [disabled]=\"isInputDateDisabled\"\n                    *ngIf=\"isEnabled\">\n              <clr-icon shape=\"calendar\"></clr-icon>\n            </button>\n            <clr-datepicker-view-manager *clrPopoverContent=\"open at popoverPosition; outsideClickToClose: true; scrollToClose: true\" clrFocusTrap></clr-datepicker-view-manager>\n          </div>\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n        </div>\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    `,\n  providers: [\n    ControlIdService,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n    LocaleHelperService,\n    IfErrorService,\n    ControlClassService,\n    FocusService,\n    NgControlService,\n    DateIOService,\n    DateNavigationService,\n    DatepickerEnabledService,\n    DateFormControlService,\n    ViewManagerService,\n  ],\n  host: {\n    '[class.clr-form-control-disabled]': 'isInputDateDisabled',\n    '[class.clr-form-control]': 'true',\n    '[class.clr-row]': 'addGrid()',\n  },\n})\nexport class ClrDateContainer implements DynamicWrapper, OnDestroy, AfterViewInit {\n  _dynamic: boolean = false;\n  invalid = false;\n  focus = false;\n  control: NgControl;\n  @ContentChild(ClrLabel) label: ClrLabel;\n  @Input('clrPosition')\n  set clrPosition(position: string) {\n    if (position && ClrPopoverPositions[position]) {\n      this.viewManagerService.position = ClrPopoverPositions[position];\n    }\n  }\n  get popoverPosition(): ClrPopoverPosition {\n    return this.viewManagerService.position;\n  }\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  private toggleButton: ElementRef;\n  @ViewChild('actionButton')\n  set actionButton(button: ElementRef) {\n    this.toggleButton = button;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private dateNavigationService: DateNavigationService,\n    private datepickerEnabledService: DatepickerEnabledService,\n    private dateFormControlService: DateFormControlService,\n    public commonStrings: ClrCommonStringsService,\n    private ifErrorService: IfErrorService,\n    private focusService: FocusService,\n    private viewManagerService: ViewManagerService,\n    private controlClassService: ControlClassService,\n    @Optional() private layoutService: LayoutService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      }),\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      }),\n      this.toggleService.openChange.subscribe(state => {\n        this.dateFormControlService.markAsTouched();\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe(open => {\n        if (open) {\n          this.initializeCalendar();\n        } else {\n          this.toggleButton.nativeElement.focus();\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the classes to apply to the control\n   */\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  /**\n   * Determines if the control needs to add grid classes\n   */\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  /**\n   * Returns if the Datepicker is enabled or not. If disabled, hides the datepicker trigger.\n   */\n  get isEnabled(): boolean {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  /**\n   * Return if Datepicker is diabled or not as Form Control\n   */\n  get isInputDateDisabled(): boolean {\n    /* clrForm wrapper or without clrForm */\n    return (\n      (this.control && this.control.disabled) || (this.dateFormControlService && this.dateFormControlService.disabled)\n    );\n  }\n\n  /**\n   * Processes the user input and Initializes the Calendar everytime the datepicker popover is open.\n   */\n  private initializeCalendar(): void {\n    this.dateNavigationService.initializeCalendar();\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport function isBooleanAttributeSet(value: string | boolean): boolean {\n  // for null just return false no need to check anything\n  if (value === null) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    // Empty string is valid, 'true' as string is also valid\n    return value.length >= 0;\n  }\n  // Boolean value will be read as it is, everything else is false\n  return typeof value === 'boolean' ? value : false;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { FocusService } from '../common/providers/focus.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDateContainer } from './date-container';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { datesAreEqual } from './utils/date-utils';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n// There are four ways the datepicker value is set\n// 1. Value set by user typing into text input as a string ex: '01/28/2015'\n// 2. Value set explicitly by Angular Forms APIs as a string ex: '01/28/2015'\n// 3. Value set by user via datepicker UI as a Date Object\n// 4. Value set via `clrDate` input as a Date Object\n\n@Directive({\n  selector: '[clrDate]',\n  host: {\n    '[class.clr-input]': 'true',\n  },\n  providers: [DatepickerFocusService],\n})\nexport class ClrDateInput extends WrappedFormControl<ClrDateContainer> implements OnInit, AfterViewInit, OnDestroy {\n  @Input() placeholder: string;\n  @Output('clrDateChange') dateChange: EventEmitter<Date> = new EventEmitter<Date>(false);\n  @Input('clrDate')\n  set date(date: Date) {\n    if (this.previousDateChange !== date) {\n      this.updateDate(this.getValidDateValueFromDate(date));\n    }\n\n    if (!this.initialClrDateInputValue) {\n      this.initialClrDateInputValue = date;\n    }\n  }\n\n  @Input()\n  set min(dateString: string) {\n    this.dateIOService.setMinDate(dateString);\n  }\n\n  @Input()\n  set max(dateString: string) {\n    this.dateIOService.setMaxDate(dateString);\n  }\n\n  protected index = 1;\n  private initialClrDateInputValue: Date;\n  private previousDateChange: Date;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    injector: Injector,\n    protected el: ElementRef,\n    protected renderer: Renderer2,\n    @Self()\n    @Optional()\n    protected control: NgControl,\n    @Optional() private container: ClrDateContainer,\n    @Optional() private dateIOService: DateIOService,\n    @Optional() private dateNavigationService: DateNavigationService,\n    @Optional() private datepickerEnabledService: DatepickerEnabledService,\n    @Optional() private dateFormControlService: DateFormControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private focusService: FocusService,\n    private datepickerFocusService: DatepickerFocusService\n  ) {\n    super(viewContainerRef, ClrDateContainer, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.populateServicesFromContainerComponent();\n\n    this.subscriptions.push(\n      this.listenForUserSelectedDayChanges(),\n      this.listenForControlValueChanges(),\n      this.listenForTouchChanges(),\n      this.listenForDirtyChanges(),\n      this.listenForInputRefocus()\n    );\n  }\n\n  ngAfterViewInit() {\n    // I don't know why I have to do this but after using the new HostWrapping Module I have to delay the processing\n    // of the initial Input set by the user to here. If I do not 2 issues occur:\n    // 1. The Input setter is called before ngOnInit. ngOnInit initializes the services without which the setter fails.\n    // 2. The Renderer doesn't work before ngAfterViewInit (It used to before the new HostWrapping Module for some reason).\n    // I need the renderer to set the value property on the input to make sure that if the user has supplied a Date\n    // input object, we reflect it with the right date on the input field using the IO service. I am not sure if\n    // these are major issues or not but just noting them down here.\n    this.processInitialInputs();\n  }\n\n  @HostListener('focus')\n  setFocusStates() {\n    this.setFocus(true);\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    this.setFocus(false);\n  }\n\n  @HostBinding('attr.placeholder')\n  get placeholderText(): string {\n    return this.placeholder ? this.placeholder : this.dateIOService.placeholderText;\n  }\n\n  @HostBinding('attr.type')\n  get inputType(): string {\n    return isPlatformBrowser(this.platformId) && this.usingNativeDatepicker() ? 'date' : 'text';\n  }\n\n  @HostListener('change', ['$event.target'])\n  onValueChange(target: HTMLInputElement) {\n    const validDateValue = this.dateIOService.getDateValueFromDateString(target.value);\n    if (this.usingClarityDatepicker() && validDateValue) {\n      this.updateDate(validDateValue, true);\n    } else if (this.usingNativeDatepicker()) {\n      const [year, month, day] = target.value.split('-');\n      this.updateDate(new Date(+year, +month - 1, +day), true);\n    } else {\n      this.emitDateOutput(null);\n    }\n  }\n\n  @HostBinding('disabled')\n  @Input('disabled')\n  set disabled(value: boolean | string) {\n    if (this.dateFormControlService) {\n      this.dateFormControlService.setDisabled(isBooleanAttributeSet(value));\n    }\n  }\n  get disabled() {\n    if (this.dateFormControlService) {\n      return this.dateFormControlService.disabled;\n    }\n    return null;\n  }\n\n  private usingClarityDatepicker() {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  private usingNativeDatepicker() {\n    return !this.datepickerEnabledService.isEnabled;\n  }\n\n  private setFocus(focus: boolean) {\n    if (this.focusService) {\n      this.focusService.focused = focus;\n    }\n  }\n\n  private populateServicesFromContainerComponent() {\n    if (!this.container) {\n      this.dateIOService = this.getProviderFromContainer(DateIOService);\n      this.dateNavigationService = this.getProviderFromContainer(DateNavigationService);\n      this.datepickerEnabledService = this.getProviderFromContainer(DatepickerEnabledService);\n      this.dateFormControlService = this.getProviderFromContainer(DateFormControlService);\n    }\n  }\n\n  private processInitialInputs() {\n    if (this.datepickerHasFormControl()) {\n      this.updateDate(this.dateIOService.getDateValueFromDateString(this.control.value));\n    } else {\n      this.updateDate(this.initialClrDateInputValue);\n    }\n  }\n\n  private updateDate(value: Date, setByUserInteraction = false) {\n    const date = this.getValidDateValueFromDate(value);\n\n    if (setByUserInteraction) {\n      this.emitDateOutput(date);\n    } else {\n      this.previousDateChange = date;\n    }\n\n    if (this.dateNavigationService) {\n      this.dateNavigationService.selectedDay = date\n        ? new DayModel(date.getFullYear(), date.getMonth(), date.getDate())\n        : null;\n    }\n\n    this.updateInput(date);\n  }\n\n  private updateInput(date: Date) {\n    if (date) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      if (this.usingNativeDatepicker()) {\n        // valueAsDate expects UTC, date from input is time-zoned\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        this.renderer.setProperty(this.el.nativeElement, 'valueAsDate', date);\n      } else if (this.datepickerHasFormControl() && dateString !== this.control.value) {\n        this.control.control.setValue(dateString);\n      } else {\n        this.renderer.setProperty(this.el.nativeElement, 'value', dateString);\n      }\n    } else {\n      this.renderer.setProperty(this.el.nativeElement, 'value', '');\n    }\n  }\n\n  private getValidDateValueFromDate(date: Date) {\n    if (this.dateIOService) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      return this.dateIOService.getDateValueFromDateString(dateString);\n    } else {\n      return null;\n    }\n  }\n\n  private emitDateOutput(date: Date) {\n    if (!datesAreEqual(date, this.previousDateChange)) {\n      this.dateChange.emit(date);\n      this.previousDateChange = date;\n    } else if (!date && this.previousDateChange) {\n      this.dateChange.emit(null);\n      this.previousDateChange = null;\n    }\n  }\n\n  private datepickerHasFormControl() {\n    return !!this.control;\n  }\n\n  private listenForControlValueChanges() {\n    return of(this.datepickerHasFormControl())\n      .pipe(\n        filter(hasControl => hasControl),\n        switchMap(() => this.control.valueChanges),\n        // only update date value if not being set by user\n        filter(() => !this.datepickerFocusService.elementIsFocused(this.el.nativeElement))\n      )\n      .subscribe((value: string) => this.updateDate(this.dateIOService.getDateValueFromDateString(value)));\n  }\n\n  private listenForUserSelectedDayChanges() {\n    return this.dateNavigationService.selectedDayChange.subscribe(dayModel => this.updateDate(dayModel.toDate(), true));\n  }\n\n  private listenForTouchChanges() {\n    return this.dateFormControlService.touchedChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsTouched());\n  }\n\n  private listenForDirtyChanges() {\n    return this.dateFormControlService.dirtyChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsDirty());\n  }\n\n  private listenForInputRefocus() {\n    return this.dateNavigationService.selectedDayChange\n      .pipe(filter(date => !!date))\n      .subscribe(v => this.datepickerFocusService.focusInput(this.el.nativeElement));\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-datepicker-view-manager',\n  templateUrl: './datepicker-view-manager.html',\n  providers: [DatepickerFocusService],\n  host: {\n    '[class.datepicker]': 'true',\n    '[attr.aria-modal]': 'true',\n  },\n})\nexport class ClrDatepickerViewManager {\n  constructor(private viewManagerService: ViewManagerService) {}\n\n  /**\n   * Returns if the current view is the monthpicker.\n   */\n  get isMonthView(): boolean {\n    return this.viewManagerService.isMonthView;\n  }\n\n  /**\n   * Returns if the current view is the yearpicker.\n   */\n  get isYearView(): boolean {\n    return this.viewManagerService.isYearView;\n  }\n\n  /**\n   * Returns if the current view is the daypicker.\n   */\n  get isDayView(): boolean {\n    return this.viewManagerService.isDayView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { DayViewModel } from './model/day-view.model';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\n\n@Component({\n  selector: 'clr-day',\n  template: `\n        <button\n            class=\"day-btn\"\n            type=\"button\"\n            [class.is-today]=\"dayView.isTodaysDate\"\n            [class.is-excluded]=\"dayView.isExcluded\"\n            [class.is-disabled]=\"dayView.isDisabled\"\n            [class.is-selected]=\"dayView.isSelected\"\n            [attr.tabindex]=\"dayView.tabIndex\"\n            (click)=\"selectDay()\"\n            (focus)=\"onDayViewFocus()\"\n            [attr.aria-label]=\"dayString\">\n            {{dayView.dayModel.date}}\n        </button>\n    `,\n  host: { '[class.day]': 'true' },\n})\nexport class ClrDay {\n  private _dayView: DayViewModel;\n  public dayString: string;\n\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _toggleService: ClrPopoverToggleService,\n    private dateFormControlService: DateFormControlService\n  ) {}\n\n  /**\n   * DayViewModel input which is used to build the Day View.\n   */\n\n  @Input('clrDayView')\n  public set dayView(day: DayViewModel) {\n    this._dayView = day;\n    this.dayString = this._dayView.dayModel.toDateString();\n  }\n\n  public get dayView(): DayViewModel {\n    return this._dayView;\n  }\n\n  /**\n   * Updates the focusedDay in the DateNavigationService when the ClrDay is focused.\n   */\n  onDayViewFocus() {\n    this._dateNavigationService.focusedDay = this.dayView.dayModel;\n  }\n\n  /**\n   * Updates the selectedDay when the ClrDay is selected and closes the datepicker popover.\n   */\n  selectDay(): void {\n    const day: DayModel = this.dayView.dayModel;\n    this._dateNavigationService.notifySelectedDayChanged(day);\n    this.dateFormControlService.markAsDirty();\n    this._toggleService.open = false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, AfterViewInit } from '@angular/core';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-daypicker',\n  providers: [ClrAriaLiveService],\n  templateUrl: './daypicker.html',\n  host: { '[class.daypicker]': 'true' },\n})\nexport class ClrDaypicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _dateNavigationService: DateNavigationService,\n    private _localeHelperService: LocaleHelperService,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngAfterViewInit() {\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(`${this.ariaLiveMonth} ${this.updateAriaLiveYear}`);\n  }\n\n  get monthAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectMonthText, {\n      CALENDAR_MONTH: this.calendarMonth,\n    });\n  }\n\n  get yearAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectYearText, {\n      CALENDAR_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  get ariaLiveMonth(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentMonthPhrase, {\n      CURRENT_MONTH: this.calendarMonth,\n    });\n  }\n\n  get updateAriaLiveYear(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentYearPhrase, {\n      CURRENT_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the monthpicker view.\n   */\n  changeToMonthView(): void {\n    this._viewManagerService.changeToMonthView();\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the yearpicker view.\n   */\n  changeToYearView(): void {\n    this._viewManagerService.changeToYearView();\n  }\n\n  /**\n   * Returns the month value of the calendar in the TranslationWidth.Abbreviated format.\n   */\n  get calendarMonth(): string {\n    return this._localeHelperService.localeMonthsAbbreviated[this._dateNavigationService.displayedCalendar.month];\n  }\n\n  /**\n   * Returns the year value of the calendar.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the next month.\n   */\n  nextMonth(): void {\n    this._dateNavigationService.moveToNextMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the previous month.\n   */\n  previousMonth(): void {\n    this._dateNavigationService.moveToPreviousMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the current month.\n   */\n  currentMonth(): void {\n    this._dateNavigationService.moveToCurrentMonth();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-monthpicker',\n  template: `\n        <button\n            type=\"button\"\n            class=\"calendar-btn month\"\n            *ngFor=\"let month of monthNames; let monthIndex = index\"\n            (click)=\"changeMonth(monthIndex)\"\n            [class.is-selected]=\"monthIndex === calendarMonthIndex\"\n            [attr.tabindex]=\"getTabIndex(monthIndex)\">\n            {{month}}\n        </button>\n    `,\n  host: {\n    '[class.monthpicker]': 'true',\n  },\n})\nexport class ClrMonthpicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef\n  ) {\n    this._focusedMonthIndex = this.calendarMonthIndex;\n  }\n\n  /**\n   * Keeps track of the current focused month.\n   */\n  private _focusedMonthIndex: number;\n\n  /**\n   * Gets the months array which is used to rendered the monthpicker view.\n   * Months are in the TranslationWidth.Wide format.\n   */\n  get monthNames(): ReadonlyArray<string> {\n    return this._localeHelperService.localeMonthsWide;\n  }\n\n  /**\n   * Gets the month value of the Calendar.\n   */\n  get calendarMonthIndex(): number {\n    return this._dateNavigationService.displayedCalendar.month;\n  }\n\n  /**\n   * Calls the DateNavigationService to update the month value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeMonth(monthIndex: number) {\n    this._dateNavigationService.changeMonth(monthIndex);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Compares the month passed to the focused month and returns the tab index.\n   */\n  getTabIndex(monthIndex: number): number {\n    return monthIndex === this._focusedMonthIndex ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the monthpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW && this._focusedMonthIndex > 0) {\n        event.preventDefault();\n        this._focusedMonthIndex--;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === DOWN_ARROW && this._focusedMonthIndex < 11) {\n        event.preventDefault();\n        this._focusedMonthIndex++;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === RIGHT_ARROW && this._focusedMonthIndex < 6) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex + 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === LEFT_ARROW && this._focusedMonthIndex > 5) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex - 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      }\n    }\n  }\n\n  /**\n   * Focuses on the current calendar month when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nconst YEARS_TO_DISPLAY: number = 10;\n\nexport class YearRangeModel {\n  constructor(private readonly year: number) {\n    this.generateYearRange();\n  }\n\n  yearRange: number[] = [];\n\n  /**\n   * Gets the number in the middle of the range.\n   */\n  get middleYear(): number {\n    return this.yearRange[Math.floor(this.yearRange.length / 2)];\n  }\n\n  /**\n   * Generates the year range based on the year parameter.\n   * eg: If 2018 is passed the output will be [2010, 2011, ..., 2019]\n   */\n  private generateYearRange() {\n    const remainder: number = this.year % YEARS_TO_DISPLAY;\n    const floor: number = this.year - remainder;\n    const ceil: number = floor + YEARS_TO_DISPLAY;\n    this.yearRange = this.generateRange(floor, ceil);\n  }\n\n  /**\n   * Function which generate a range of numbers from floor to ceil.\n   */\n  private generateRange(floor: number, ceil: number): number[] {\n    return Array.from({ length: ceil - floor }, (v, k) => k + floor);\n  }\n\n  /**\n   * Generates the YearRangeModel for the next decade.\n   */\n  nextDecade(): YearRangeModel {\n    return new YearRangeModel(this.year + 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the previous decade.\n   */\n  previousDecade(): YearRangeModel {\n    return new YearRangeModel(this.year - 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the current decade.\n   */\n  currentDecade(): YearRangeModel {\n    return new YearRangeModel(new Date().getFullYear());\n  }\n\n  /**\n   * Checks if the value is in the YearRangeModel.\n   */\n  inRange(value: number): boolean {\n    return this.yearRange.indexOf(value) > -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { YearRangeModel } from './model/year-range.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-yearpicker',\n  providers: [ClrAriaLiveService],\n  template: `\n        <div class=\"year-switchers\">\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"previousDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerPreviousDecade\">\n              <clr-icon shape=\"angle\" dir=\"left\" [attr.title]=\"commonStrings.keys.datepickerPreviousDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"currentDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerCurrentDecade\">\n              <clr-icon shape=\"event\" [attr.title]=\"commonStrings.keys.datepickerCurrentDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"nextDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerNextDecade\">\n              <clr-icon shape=\"angle\" dir=\"right\" [attr.title]=\"commonStrings.keys.datepickerNextDecade\"></clr-icon>\n          </button>\n        </div>\n        <div class=\"years\">\n            <button\n                *ngFor=\"let year of yearRangeModel.yearRange\"\n                type=\"button\"\n                class=\"calendar-btn year\"\n                [attr.tabindex]=\"getTabIndex(year)\"\n                [class.is-selected]=\"year === calendarYear\"\n                (click)=\"changeYear(year)\">\n                {{year}}\n            </button>\n        </div>\n    `,\n  host: {\n    '[class.yearpicker]': 'true',\n  },\n})\nexport class ClrYearpicker implements AfterViewInit {\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _viewManagerService: ViewManagerService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {\n    this.yearRangeModel = new YearRangeModel(this.calendarYear);\n    this._focusedYear = this.calendarYear;\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  get ariaLiveDecadeText(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentDecadePhrase, {\n      DECADE_RANGE: this.decadeRange,\n    });\n  }\n\n  private decadeRange;\n\n  /**\n   * YearRangeModel which is used to build the YearPicker view.\n   */\n  yearRangeModel: YearRangeModel;\n\n  /**\n   * Keeps track of the current focused year.\n   */\n  private _focusedYear: number;\n\n  /**\n   * Gets the year which the user is currently on.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Increments the focus year by the value passed. Updates the YearRangeModel if the\n   * new value is not in the current decade.\n   */\n  private incrementFocusYearBy(value: number): void {\n    this._focusedYear = this._focusedYear + value;\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (value > 0) {\n        this.yearRangeModel = this.yearRangeModel.nextDecade();\n      } else {\n        this.yearRangeModel = this.yearRangeModel.previousDecade();\n      }\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Calls the DateNavigationService to update the year value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeYear(year: number): void {\n    this._dateNavigationService.changeYear(year);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Updates the YearRangeModel to the previous decade.\n   */\n  previousDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.previousDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Updates the YearRangeModel to the current decade.\n   */\n  currentDecade(): void {\n    if (!this.yearRangeModel.inRange(this._dateNavigationService.today.year)) {\n      this.yearRangeModel = this.yearRangeModel.currentDecade();\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /**\n   * Updates the YearRangeModel to the next decade.\n   */\n  nextDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.nextDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Compares the year passed to the focused year and returns the tab index.\n   */\n  getTabIndex(year: number): number {\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (this.yearRangeModel.inRange(this.calendarYear)) {\n        this._focusedYear = this.calendarYear;\n      } else {\n        this._focusedYear = this.yearRangeModel.middleYear;\n      }\n    }\n    return this._focusedYear === year ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the yearpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-1);\n      } else if (keyCode === DOWN_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(1);\n      } else if (keyCode === RIGHT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(5);\n      } else if (keyCode === LEFT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-5);\n      }\n    }\n  }\n\n  private updateRange(yrm: YearRangeModel): void {\n    const floor = yrm.yearRange[0];\n    const ceil = yrm.yearRange[yrm.yearRange.length - 1];\n    this.decadeRange = `${floor} to ${ceil}`;\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n\n  /**\n   * Focuses on the current calendar year when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrCalendar } from './calendar';\nimport { ClrDateContainer } from './date-container';\nimport { ClrDateInput } from './date-input';\nimport { ClrDatepickerViewManager } from './datepicker-view-manager';\nimport { ClrDay } from './day';\nimport { ClrDaypicker } from './daypicker';\nimport { ClrMonthpicker } from './monthpicker';\nimport { ClrYearpicker } from './yearpicker';\n\nexport const CLR_DATEPICKER_DIRECTIVES: Type<any>[] = [\n  ClrDay,\n  ClrDateContainer,\n  ClrDateInput,\n  ClrDatepickerViewManager,\n  ClrMonthpicker,\n  ClrYearpicker,\n  ClrDaypicker,\n  ClrCalendar,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrHostWrappingModule,\n    ClrConditionalModule,\n    ClrPopoverModuleNext,\n    ClrIconModule,\n    ClrFocusTrapModule,\n    ClrCommonFormsModule,\n  ],\n  declarations: [CLR_DATEPICKER_DIRECTIVES],\n  exports: [CLR_DATEPICKER_DIRECTIVES],\n  entryComponents: [ClrDateContainer],\n})\nexport class ClrDatepickerModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-input-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content select=\"[clrInput]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrInputContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrInputContainer } from './input-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n@Directive({ selector: '[clrInput]', host: { '[class.clr-input]': 'true' } })\nexport class ClrInput extends WrappedFormControl<ClrInputContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrInputContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrInput } from './input';\nimport { ClrInputContainer } from './input-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrInput, ClrInputContainer],\n  exports: [ClrCommonFormsModule, ClrInput, ClrInputContainer],\n  entryComponents: [ClrInputContainer],\n})\nexport class ClrInputModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, InjectionToken, Input, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\nexport const TOGGLE_SERVICE = new InjectionToken<BehaviorSubject<boolean>>(undefined);\nexport function ToggleServiceFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const TOGGLE_SERVICE_PROVIDER = { provide: TOGGLE_SERVICE, useFactory: ToggleServiceFactory };\n\n@Component({\n  selector: 'clr-password-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrPassword]\"></ng-content>\n          <button\n            *ngIf=\"clrToggle\"\n            (click)=\"toggle()\"\n            [disabled]=\"control?.disabled\"\n            class=\"clr-input-group-icon-action\"\n            type=\"button\">\n            <clr-icon\n            [attr.shape]=\"show ? 'eye-hide' : 'eye'\"\n            [attr.title]=\"show ? commonStrings.keys.hide : commonStrings.keys.show\"></clr-icon>\n          </button>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    IfErrorService,\n    NgControlService,\n    ControlIdService,\n    ControlClassService,\n    FocusService,\n    TOGGLE_SERVICE_PROVIDER,\n  ],\n})\nexport class ClrPasswordContainer extends ClrAbstractContainer {\n  show = false;\n  focus = false;\n  private _toggle = true;\n\n  @Input('clrToggle')\n  set clrToggle(state: boolean) {\n    this._toggle = state;\n    if (!state) {\n      this.show = false;\n    }\n  }\n  get clrToggle() {\n    return this._toggle;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    public focusService: FocusService,\n    @Inject(TOGGLE_SERVICE) private toggleService: BehaviorSubject<boolean>,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.toggleService.next(this.show);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport enum DragEventType {\n  DRAG_START,\n  DRAG_MOVE,\n  DRAG_END,\n  DRAG_ENTER,\n  DRAG_LEAVE,\n  DROP,\n}\n\nexport interface DragPointPosition {\n  pageX: number;\n  pageY: number;\n  moveX: number;\n  moveY: number;\n}\n\nexport interface DragEventInterface<T> {\n  type: DragEventType;\n  group?: string | string[];\n  ghostElement?: any;\n  dragPosition: DragPointPosition;\n  dragDataTransfer?: T;\n  // For default ghosts, this dropPointPosition denotes the center point of the ghost element.\n  // This center point is used to determine whether the ghost is over droppable elements or not.\n  dropPointPosition?: { pageX: number; pageY: number };\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPasswordContainer, TOGGLE_SERVICE } from './password-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { FocusService } from '../common/providers/focus.service';\n\n@Directive({ selector: '[clrPassword]', host: { '[class.clr-input]': 'true' } })\nexport class ClrPassword extends WrappedFormControl<ClrPasswordContainer> implements OnInit, OnDestroy {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Optional() private focusService: FocusService,\n    @Optional()\n    @Inject(TOGGLE_SERVICE)\n    private toggleService: BehaviorSubject<boolean>\n  ) {\n    super(vcr, ClrPasswordContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrPassword requires being wrapped in <clr-password-container>');\n    }\n\n    this.subscriptions.push(\n      this.toggleService.subscribe(toggle => {\n        renderer.setProperty(el.nativeElement, 'type', toggle ? 'text' : 'password');\n      })\n    );\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrPassword } from './password';\nimport { ClrPasswordContainer } from './password-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrPassword, ClrPasswordContainer],\n  exports: [ClrCommonFormsModule, ClrPassword, ClrPasswordContainer],\n  entryComponents: [ClrPasswordContainer],\n})\nexport class ClrPasswordModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnInit } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\n@Component({\n  selector: 'clr-radio-wrapper',\n  template: `\n    <ng-content select=\"[clrRadio]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-radio-wrapper]': 'true',\n  },\n  providers: [ControlIdService],\n})\nexport class ClrRadioWrapper implements DynamicWrapper, OnInit {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRadioWrapper } from '../radio/radio-wrapper';\n\n@Directive({ selector: '[clrRadio]' })\nexport class ClrRadio extends WrappedFormControl<ClrRadioWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRadioWrapper, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-radio-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-radio-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrRadioContainer extends ClrAbstractContainer {\n  private inline = false;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrRadio } from './radio';\nimport { ClrRadioContainer } from './radio-container';\nimport { ClrRadioWrapper } from './radio-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  exports: [ClrCommonFormsModule, ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  entryComponents: [ClrRadioWrapper],\n})\nexport class ClrRadioModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild } from '@angular/core';\nimport { SelectMultipleControlValueAccessor } from '@angular/forms';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-select-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div [ngClass]=\"wrapperClass()\">\n                <ng-content select=\"[clrSelect]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrSelectContainer extends ClrAbstractContainer {\n  @ContentChild(SelectMultipleControlValueAccessor, { static: false })\n  multiple: SelectMultipleControlValueAccessor;\n  private multi = false;\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.multi = control.valueAccessor instanceof SelectMultipleControlValueAccessor;\n          this.control = control;\n        }\n      })\n    );\n  }\n\n  wrapperClass() {\n    return this.multi ? 'clr-multiselect-wrapper' : 'clr-select-wrapper';\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrSelectContainer } from './select-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrSelect]', host: { '[class.clr-select]': 'true' } })\nexport class ClrSelect extends WrappedFormControl<ClrSelectContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrSelectContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrSelect } from './select';\nimport { ClrSelectContainer } from './select-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrSelect, ClrSelectContainer],\n  exports: [ClrCommonFormsModule, ClrSelect, ClrSelectContainer],\n  entryComponents: [ClrSelectContainer],\n})\nexport class ClrSelectModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-textarea-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-textarea-wrapper\">\n                <ng-content select=\"[clrTextarea]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrTextareaContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@Directive({ selector: '[clrTextarea]', host: { '[class.clr-textarea]': 'true' } })\nexport class ClrTextarea extends WrappedFormControl<ClrTextareaContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrTextareaContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrTextarea } from './textarea';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrTextarea, ClrTextareaContainer],\n  exports: [ClrCommonFormsModule, ClrTextarea, ClrTextareaContainer],\n  entryComponents: [ClrTextareaContainer],\n})\nexport class ClrTextareaModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional, Renderer2 } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-range-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-range-wrapper\" [class.progress-fill]=\"hasProgress\">\n                <ng-content select=\"[clrRange]\"></ng-content>\n                <span\n                  *ngIf=\"hasProgress\"\n                  class=\"fill-input\"\n                  [style.width]=\"getRangeProgressFillWidth()\"\n                ></span>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrRangeContainer extends ClrAbstractContainer {\n  private _hasProgress: boolean = false;\n\n  @Input('clrRangeHasProgress')\n  set hasProgress(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasProgress) {\n      this._hasProgress = valBool;\n    }\n  }\n\n  get hasProgress() {\n    return this._hasProgress;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private idService: ControlIdService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n  }\n\n  getRangeProgressFillWidth(): string {\n    const input = <HTMLInputElement>this.renderer.selectRootElement('[clrRange]#' + this.idService.id);\n\n    const inputWidth = input.offsetWidth;\n    const inputMinValue = +input.min;\n    let inputMaxValue = +input.max;\n\n    if (inputMinValue === 0 && inputMaxValue === 0) {\n      inputMaxValue = 100;\n    }\n\n    const inputMiddle = (inputMinValue + inputMaxValue) / 2;\n    const inputValue = !!this.control && this.control.value !== undefined ? this.control.value : inputMiddle;\n    const valueAsPercent = (inputValue - inputMinValue) * 100 / (inputMaxValue - inputMinValue);\n\n    return valueAsPercent * inputWidth / 100 + 'px';\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRangeContainer } from './range-container';\n\n@Directive({ selector: '[clrRange]', host: { '[class.clr-range]': 'true' } })\nexport class ClrRange extends WrappedFormControl<ClrRangeContainer> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRangeContainer, injector, control, renderer, el);\n  }\n\n  // Notes: We need an output here EventEmitter for the value\n  // Does this implementation also need a display for the value?\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrRange } from './range';\nimport { ClrRangeContainer } from './range-container';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRange, ClrRangeContainer],\n  exports: [ClrCommonFormsModule, ClrRange, ClrRangeContainer],\n  entryComponents: [ClrRangeContainer],\n})\nexport class ClrRangeModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class DatalistIdService {\n  private _id = 'clr-datalist-' + ++counter;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-datalist-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrDatalistInput]\"></ng-content>\n          <ng-content select=\"datalist\"></ng-content>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    ControlClassService,\n    LayoutService,\n    ControlIdService,\n    FocusService,\n    IfErrorService,\n    NgControlService,\n    DatalistIdService,\n  ],\n})\nexport class ClrDatalistContainer extends ClrAbstractContainer {\n  focus: boolean = false;\n\n  constructor(\n    controlClassService: ControlClassService,\n    @Optional() layoutService: LayoutService,\n    ifErrorService: IfErrorService,\n    ngControlService: NgControlService,\n    private focusService: FocusService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n\n    this.subscriptions.push(this.focusService.focusChange.subscribe(state => (this.focus = state)));\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ViewContainerRef,\n  Injector,\n  Self,\n  Optional,\n  Renderer2,\n  ElementRef,\n  HostListener,\n  AfterContentInit,\n} from '@angular/core';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { NgControl } from '@angular/forms';\nimport { FocusService } from '../common/providers/focus.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: '[clrDatalistInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.list]': 'listValue',\n  },\n})\nexport class ClrDatalistInput extends WrappedFormControl<ClrDatalistContainer> implements AfterContentInit {\n  constructor(\n    @Optional() private focusService: FocusService,\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    private datalistIdService: DatalistIdService\n  ) {\n    super(vcr, ClrDatalistContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrDatalist requires being wrapped in <clr-datalist-container>');\n    }\n  }\n\n  listValue: string;\n\n  ngAfterContentInit() {\n    // Subscriptions is inherited from WrappedFormControl, unsubscribe is handled there\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.listValue = id)));\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Input, Directive, AfterContentInit, Optional } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: 'datalist',\n  host: {\n    '[id]': 'datalistId',\n  },\n})\nexport class ClrDatalist implements AfterContentInit {\n  private subscriptions: Subscription[] = [];\n  constructor(@Optional() private datalistIdService: DatalistIdService) {}\n  datalistId: string;\n\n  ngAfterContentInit() {\n    if (!this.datalistIdService) {\n      return;\n    }\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.datalistId = id)));\n  }\n  @Input()\n  set id(idValue) {\n    if (!!idValue && this.datalistIdService) {\n      this.datalistId = idValue;\n      this.datalistIdService.id = idValue;\n    } else if (!!idValue) {\n      this.datalistId = idValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrDatalistInput } from './datalist-input';\nimport { ClrInputModule } from '../input/input.module';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDatalist } from './datalist';\n\n@NgModule({\n  imports: [CommonModule, ClrInputModule, ClrIconModule],\n  declarations: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n  exports: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n})\nexport class ClrDatalistModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrCheckboxModule } from './checkbox/checkbox.module';\nimport { ClrCommonFormsModule } from './common/common.module';\nimport { ClrDatepickerModule } from './datepicker/datepicker.module';\nimport { ClrInputModule } from './input/input.module';\nimport { ClrPasswordModule } from './password/password.module';\nimport { ClrRadioModule } from './radio/radio.module';\nimport { ClrSelectModule } from './select/select.module';\nimport { ClrTextareaModule } from './textarea/textarea.module';\nimport { ClrRangeModule } from './range/range.module';\nimport { ClrDatalistModule } from './datalist/datalist.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    ClrCommonFormsModule,\n    ClrCheckboxModule,\n    ClrDatepickerModule,\n    ClrInputModule,\n    ClrPasswordModule,\n    ClrRadioModule,\n    ClrSelectModule,\n    ClrTextareaModule,\n    ClrRangeModule,\n    ClrDatalistModule,\n  ],\n})\nexport class ClrFormsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoading } from './loading';\n\nexport const CLR_LOADING_DIRECTIVES: Type<any>[] = [ClrLoading];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_LOADING_DIRECTIVES], exports: [CLR_LOADING_DIRECTIVES] })\nexport class ClrLoadingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({ selector: '[clrOutsideClick]' })\nexport class OutsideClick {\n  constructor(private el: ElementRef) {}\n\n  @Input('clrStrict') strict = false;\n\n  @Output('clrOutsideClick') outsideClick = new EventEmitter<any>(false);\n\n  @HostListener('document:click', ['$event'])\n  documentClick(event: MouseEvent) {\n    const target = event.target; // Get the element in the DOM on which the mouse was clicked\n    const host = this.el.nativeElement; // Get the current actionMenu native HTML element\n\n    if (target === host) {\n      return;\n    }\n    if (!this.strict && host.contains(target)) {\n      return;\n    }\n    this.outsideClick.emit(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { OutsideClick } from './outside-click';\n\nexport * from './outside-click';\n\nexport const OUSTIDE_CLICK_DIRECTIVES: Type<any>[] = [OutsideClick];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OUSTIDE_CLICK_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [OUSTIDE_CLICK_DIRECTIVES], exports: [OUSTIDE_CLICK_DIRECTIVES] })\nexport class ClrOutsideClickModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * If we someday want to be able to render the datagrid in a webworker,\n * this is where we would test if we're in headless mode. Right now it's not testing anything, but any access\n * to native DOM elements' methods and properties in the Datagrid happens here.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DomAdapter {\n  userDefinedWidth(element: HTMLElement): number {\n    element.classList.add('datagrid-cell-width-zero');\n    const userDefinedWidth = this.clientRect(element).width;\n    element.classList.remove('datagrid-cell-width-zero');\n    return userDefinedWidth;\n  }\n\n  scrollBarWidth(element: any) {\n    return element.offsetWidth - element.clientWidth;\n  }\n\n  scrollWidth(element: any) {\n    return element.scrollWidth || 0;\n  }\n\n  computedHeight(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('height'), 10);\n  }\n\n  clientRect(element: any): ClientRect {\n    const elementClientRect = element.getBoundingClientRect();\n    return {\n      top: parseInt(elementClientRect.top, 10),\n      bottom: parseInt(elementClientRect.bottom, 10),\n      left: parseInt(elementClientRect.left, 10),\n      right: parseInt(elementClientRect.right, 10),\n      width: parseInt(elementClientRect.width, 10),\n      height: parseInt(elementClientRect.height, 10),\n    };\n  }\n\n  minWidth(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('min-width'), 10);\n  }\n\n  focus(element: any): void {\n    element.focus();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DragEventInterface, DragPointPosition } from './interfaces/drag-event.interface';\n\n// This class is used to convert an internal event\n// to an external event to be emitted.\nexport class ClrDragEvent<T> {\n  public dragPosition: DragPointPosition;\n  public group: string | string[];\n  public dragDataTransfer: T;\n  public dropPointPosition: { pageX: number; pageY: number };\n\n  constructor(dragEvent: DragEventInterface<T>) {\n    this.dragPosition = dragEvent.dragPosition;\n    this.group = dragEvent.group;\n    this.dragDataTransfer = dragEvent.dragDataTransfer;\n    this.dropPointPosition = dragEvent.dropPointPosition;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Enumeration representing the sorting order of a datagrid column. It is a constant Enum,\n * i.e. each value needs to be treated as a `number`, starting at index 0.\n *\n * @export\n * @enum {number}\n */\nexport enum ClrDatagridSortOrder {\n  UNSORTED = 0,\n  ASC = 1,\n  DESC = -1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class DragAndDropEventBusService<T> {\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private drop: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  get dropped(): Observable<DragEventInterface<T>> {\n    return this.drop.asObservable();\n  }\n\n  broadcast(event: DragEventInterface<T>): void {\n    switch (event.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(event);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(event);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(event);\n        break;\n      case DragEventType.DROP:\n        this.drop.next(event);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';\n\n@Injectable()\nexport class DragEventListenerService<T> {\n  private draggableEl: any;\n\n  // contains the starting events such as mousedown and touchstart\n  private listeners: (() => void)[];\n  // contains the nested events that happens after/inside the starting events\n  // such as selectstart, mousemove/touchmove, mouseup/touchend\n  private nestedListeners: (() => void)[];\n\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  private hasDragStarted: boolean = false;\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  constructor(private ngZone: NgZone, private renderer: Renderer2, private eventBus: DragAndDropEventBusService<T>) {}\n\n  private initialPosition: { pageX: number; pageY: number };\n\n  // Draggable component sets these properties:\n  public dragDataTransfer?: T;\n  public group?: string | string[];\n\n  // DraggableGhost component sets these properties:\n  public ghostElement?: any;\n  public dropPointPosition?: { pageX: number; pageY: number };\n\n  public attachDragListeners(draggableEl: Node) {\n    this.draggableEl = draggableEl;\n    this.listeners = [\n      this.customDragEvent(this.draggableEl, 'mousedown', 'mousemove', 'mouseup'),\n      this.customDragEvent(this.draggableEl, 'touchstart', 'touchmove', 'touchend'),\n    ];\n  }\n\n  public detachDragListeners() {\n    if (this.listeners) {\n      this.listeners.map(event => event());\n    }\n\n    // In most cases, once users start dragging with mousedown/touchstart events,\n    // they will end dragging at one point with mouseup/touchend.\n    // However, there might be a few cases where mousedown/touchstart events get registered,\n    // but the draggable element gets removed before user ends dragging.\n    // In that case, we need to remove the attached listeners that happened during the mousedown/touchstart events.\n    if (this.nestedListeners) {\n      this.nestedListeners.map(event => event());\n    }\n  }\n\n  private getNativeEventObject(event: MouseEvent | TouchEvent): any {\n    if ((<TouchEvent>event).hasOwnProperty('changedTouches')) {\n      return (<TouchEvent>event).changedTouches[0];\n    } else {\n      return event;\n    }\n  }\n\n  private customDragEvent(element: Node, startOnEvent: string, moveOnEvent: string, endOnEvent: string): () => void {\n    return this.renderer.listen(element, startOnEvent, (startEvent: MouseEvent | TouchEvent) => {\n      // save the initial point to initialPosition\n      // this will be used to calculate how far the draggable has been dragged from its initial position\n      this.initialPosition = {\n        pageX: this.getNativeEventObject(startEvent).pageX,\n        pageY: this.getNativeEventObject(startEvent).pageY,\n      };\n\n      // Initialize nested listeners' property with a new empty array;\n      this.nestedListeners = [];\n\n      // This is needed to disable selection during dragging (especially in EDGE/IE11).\n      this.nestedListeners.push(\n        this.renderer.listen('document', 'selectstart', (selectEvent: Event) => {\n          selectEvent.preventDefault();\n          selectEvent.stopImmediatePropagation();\n        })\n      );\n\n      // Listen to mousemove/touchmove events outside of angular zone.\n      this.nestedListeners.push(\n        this.ngZone.runOutsideAngular(() => {\n          return this.renderer.listen('document', moveOnEvent, (moveEvent: MouseEvent | TouchEvent) => {\n            // Event.stopImmediatePropagation() is needed here to prevent nested draggables from getting dragged\n            // altogether. We shouldn't use Event.stopPropagation() here as we are listening to the events\n            // on the global element level.\n\n            // With Event.stopImmediatePropagation(), it registers the events sent from the inner most draggable\n            // first. Then immediately after that, it stops listening to the same type of events on the same\n            // element. So this will help us to not register the same events that would come from the parent\n            // level draggables eventually.\n\n            moveEvent.stopImmediatePropagation();\n\n            if (!this.hasDragStarted) {\n              this.hasDragStarted = true;\n              // Fire \"dragstart\"\n              this.broadcast(moveEvent, DragEventType.DRAG_START);\n            } else {\n              // Fire \"dragmove\"\n              this.broadcast(moveEvent, DragEventType.DRAG_MOVE);\n            }\n          });\n        })\n      );\n\n      // Listen to mouseup/touchend events.\n      this.nestedListeners.push(\n        this.renderer.listen('document', endOnEvent, (endEvent: MouseEvent | TouchEvent) => {\n          if (this.hasDragStarted) {\n            // Fire \"dragend\" only if dragstart is registered\n            this.hasDragStarted = false;\n            this.broadcast(endEvent, DragEventType.DRAG_END);\n          }\n\n          // We must remove the the nested listeners every time drag completes.\n          if (this.nestedListeners) {\n            this.nestedListeners.map(event => event());\n          }\n        })\n      );\n    });\n  }\n\n  private broadcast(event: MouseEvent | TouchEvent, eventType: DragEventType): void {\n    const dragEvent: DragEventInterface<T> = this.generateDragEvent(event, eventType);\n\n    switch (dragEvent.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(dragEvent);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(dragEvent);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(dragEvent);\n        break;\n      default:\n        break;\n    }\n\n    // The following properties are set after they are broadcasted to the DraggableGhost component.\n    dragEvent.ghostElement = this.ghostElement;\n    dragEvent.dropPointPosition = this.dropPointPosition;\n\n    this.eventBus.broadcast(dragEvent);\n  }\n\n  private generateDragEvent(event: MouseEvent | TouchEvent, eventType: DragEventType): DragEventInterface<T> {\n    const nativeEvent: any = this.getNativeEventObject(event);\n\n    return {\n      type: eventType,\n      dragPosition: {\n        pageX: nativeEvent.pageX,\n        pageY: nativeEvent.pageY,\n        moveX: nativeEvent.pageX - this.initialPosition.pageX,\n        moveY: nativeEvent.pageY - this.initialPosition.pageY,\n      },\n      group: this.group,\n      dragDataTransfer: this.dragDataTransfer,\n      ghostElement: this.ghostElement,\n    };\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\n\n// This service is used to capture the state of clrDraggable element\n// at a certain event and passes it to clrDraggableGhost component.\n@Injectable()\nexport class DraggableSnapshotService<T> {\n  constructor(private domAdapter: DomAdapter) {}\n\n  private draggableElClientRect: ClientRect;\n  private snapshotDragEvent: DragEventInterface<T>;\n\n  public capture(el: Node, event: DragEventInterface<T>): void {\n    this.draggableElClientRect = this.domAdapter.clientRect(el);\n    this.snapshotDragEvent = event;\n  }\n  public discard(): void {\n    delete this.draggableElClientRect;\n    delete this.snapshotDragEvent;\n  }\n  get hasDraggableState(): boolean {\n    return !!this.snapshotDragEvent && !!this.draggableElClientRect;\n  }\n  get clientRect(): ClientRect {\n    return this.draggableElClientRect;\n  }\n  get dragEvent(): DragEventInterface<T> {\n    return this.snapshotDragEvent;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, HostBinding, NgZone, OnDestroy, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\nimport { DraggableSnapshotService } from './providers/draggable-snapshot.service';\n\ntype PagePosition = {\n  pageX: number;\n  pageY: number;\n};\ntype OffsetPosition = {\n  top: number;\n  left: number;\n};\n\n@Component({\n  selector: 'clr-draggable-ghost',\n  template: `<ng-content></ng-content>`,\n  animations: [\n    trigger('leaveAnimation', [\n      transition(':leave', [\n        style({ left: '*', top: '*' }),\n        animate('0.2s ease-in-out', style({ top: '{{top}}', left: '{{left}}' })),\n      ]),\n    ]),\n  ],\n})\nexport class ClrDraggableGhost<T> implements OnDestroy {\n  private draggableGhostEl: any;\n\n  private subscriptions: Subscription[] = [];\n\n  @HostBinding('@leaveAnimation') leaveAnimConfig = { value: 0, params: { top: '0px', left: '0px' } };\n\n  constructor(\n    private el: ElementRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>,\n    @Optional() private draggableSnapshot: DraggableSnapshotService<T>,\n    private renderer: Renderer2,\n    private ngZone: NgZone\n  ) {\n    if (!this.dragEventListener || !this.draggableSnapshot) {\n      throw new Error('The clr-draggable-ghost component can only be used inside of a clrDraggable directive.');\n    }\n\n    this.draggableGhostEl = this.el.nativeElement;\n\n    // Need to use Renderer2 as it runs outside of NgZone\n    this.renderer.addClass(this.draggableGhostEl, 'draggable-ghost');\n\n    // Register the ghost element in DragEventListener to pass in a ClrDragEvent.\n    this.dragEventListener.ghostElement = this.draggableGhostEl;\n\n    // Default ghost size gets the size of ClrDraggable element.\n    this.setDefaultGhostSize(this.draggableGhostEl);\n\n    const offset: OffsetPosition = {\n      top: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageY - this.draggableSnapshot.clientRect.top\n        : 0,\n      left: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageX - this.draggableSnapshot.clientRect.left\n        : 0,\n    };\n\n    let isAnimationConfigured: boolean = false;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        // On the first drag move event, we configure the animation as it's dependent on the first drag event.\n        if (!isAnimationConfigured) {\n          if (this.draggableSnapshot.hasDraggableState) {\n            this.animateToOnLeave(\n              `${this.draggableSnapshot.clientRect.top}px`,\n              `${this.draggableSnapshot.clientRect.left}px`\n            );\n          } else {\n            this.animateToOnLeave(`${event.dragPosition.pageY}px`, `${event.dragPosition.pageX}px`);\n          }\n          isAnimationConfigured = true;\n        }\n\n        // Position the draggable ghost.\n        const topLeftPosition: PagePosition = this.findTopLeftPosition(event.dragPosition, offset);\n        this.setPositionStyle(this.draggableGhostEl, topLeftPosition.pageX, topLeftPosition.pageY);\n        this.dragEventListener.dropPointPosition = this.findDropPointPosition(topLeftPosition);\n      })\n    );\n  }\n\n  private setDefaultGhostSize(el: Node): void {\n    if (this.draggableSnapshot.hasDraggableState) {\n      this.setSizeStyle(el, this.draggableSnapshot.clientRect.width, this.draggableSnapshot.clientRect.height);\n    }\n  }\n\n  private animateToOnLeave(top: string, left: string): void {\n    this.ngZone.run(() => {\n      this.leaveAnimConfig = { value: 0, params: { top: top, left: left } };\n    });\n  }\n\n  private findTopLeftPosition(dragPosition: PagePosition, offset: OffsetPosition): PagePosition {\n    return { pageX: dragPosition.pageX - offset.left, pageY: dragPosition.pageY - offset.top };\n  }\n\n  private findDropPointPosition(topLeftPosition: PagePosition): PagePosition {\n    if (this.draggableSnapshot.hasDraggableState) {\n      return {\n        pageX: topLeftPosition.pageX + this.draggableSnapshot.clientRect.width / 2,\n        pageY: topLeftPosition.pageY + this.draggableSnapshot.clientRect.height / 2,\n      };\n    } else {\n      return topLeftPosition;\n    }\n  }\n\n  private setSizeStyle(el: Node, width: number, height: number): void {\n    this.renderer.setStyle(el, 'width', `${width}px`);\n    this.renderer.setStyle(el, 'height', `${height}px`);\n  }\n\n  private setPositionStyle(el: Node, left: number, top: number): void {\n    this.renderer.setStyle(el, 'left', `${left}px`);\n    this.renderer.setStyle(el, 'top', `${top}px`);\n    this.renderer.setStyle(el, 'visibility', 'visible');\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy, Optional, SkipSelf, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\n\n// This structural directive will be used mainly together with `clr-draggable-ghost` directive inside of clrDraggable\n// directive. The directive is responsible for instantiating `clr-draggable-ghost` directive only during dragging so\n// that Angular Change Detection is prevented from running if a component or directive is placed inside of the\n// `clr-draggable-ghost` directive.\n\n@Directive({ selector: '[clrIfDragged]' })\nexport class ClrIfDragged<T> implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private template: TemplateRef<any>,\n    @Optional()\n    @SkipSelf()\n    private container: ViewContainerRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>\n  ) {\n    if (!this.dragEventListener || !this.container) {\n      throw new Error('The *clrIfDragged directive can only be used inside of a clrDraggable directive.');\n    }\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.container.createEmbeddedView(this.template);\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.container.clear();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\nimport { DragEventListenerService } from './drag-event-listener.service';\n\n// This provider registers the drag handle element.\n// When it registers a element as a drag handle, it attaches that element to the listeners from ClrDragEventListener.\n// Also, it adds the \"drag-handle\" css class to the registered element through Renderer.\n@Injectable()\nexport class DragHandleRegistrarService<T> {\n  private _customHandleEl: any;\n  private _defaultHandleEl: any;\n\n  get defaultHandleEl() {\n    return this._defaultHandleEl;\n  }\n\n  set defaultHandleEl(el: Node) {\n    this._defaultHandleEl = el; // defaultHandleEl will be usually the clrDraggable element.\n\n    // If the customHandleEl has been registered,\n    // don't make the defaultHandleEl the drag handle yet until the customHandleEl is unregistered.\n    if (!this._customHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n\n  constructor(private dragEventListener: DragEventListenerService<T>, private renderer: Renderer2) {}\n\n  private makeElementHandle(el: Node) {\n    if (this._defaultHandleEl && this._defaultHandleEl !== el) {\n      // Before making an element the custom handle element,\n      // we should remove the existing drag-handle class from the draggable element.\n      this.renderer.removeClass(this._defaultHandleEl, 'drag-handle');\n    }\n    this.dragEventListener.attachDragListeners(el);\n    this.renderer.addClass(el, 'drag-handle');\n  }\n\n  get customHandleEl() {\n    return this._customHandleEl;\n  }\n\n  public registerCustomHandle(el: Node) {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this._customHandleEl = el;\n    this.makeElementHandle(this._customHandleEl);\n  }\n\n  public unregisterCustomHandle() {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this.renderer.removeClass(this._customHandleEl, 'drag-handle');\n    delete this._customHandleEl;\n    // if default handle is set, make that handle\n    if (this._defaultHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\n// This service class adds and removes the \"in-drag\" class to the document body element\n// through its public enter() and exit() methods.\n@Injectable()\nexport class GlobalDragModeService {\n  constructor(private renderer: Renderer2) {}\n\n  enter(): void {\n    this.renderer.addClass(document.body, 'in-drag');\n  }\n\n  exit(): void {\n    this.renderer.removeClass(document.body, 'in-drag');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { ClrDraggableGhost } from '../draggable-ghost';\nimport { ClrIfDragged } from '../if-dragged';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\nimport { DragEventListenerService } from '../providers/drag-event-listener.service';\nimport { DragHandleRegistrarService } from '../providers/drag-handle-registrar.service';\nimport { DraggableSnapshotService } from '../providers/draggable-snapshot.service';\nimport { GlobalDragModeService } from '../providers/global-drag-mode.service';\n\n@Directive({\n  selector: '[clrDraggable]',\n  providers: [\n    DragEventListenerService,\n    DragHandleRegistrarService,\n    DraggableSnapshotService,\n    GlobalDragModeService,\n    DomAdapter,\n  ],\n  host: { '[class.draggable]': 'true', '[class.being-dragged]': 'dragOn' },\n})\nexport class ClrDraggable<T> implements AfterContentInit, OnDestroy {\n  private draggableEl: any;\n  private subscriptions: Subscription[] = [];\n  private componentFactory: ComponentFactory<ClrDraggableGhost<T>>;\n  public dragOn: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private dragEventListener: DragEventListenerService<T>,\n    private dragHandleRegistrar: DragHandleRegistrarService<T>,\n    private viewContainerRef: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private draggableSnapshot: DraggableSnapshotService<T>,\n    private globalDragMode: GlobalDragModeService\n  ) {\n    this.draggableEl = this.el.nativeElement;\n    this.componentFactory = this.cfr.resolveComponentFactory<ClrDraggableGhost<T>>(ClrDraggableGhost);\n  }\n\n  @ContentChild(ClrIfDragged) customGhost: ClrIfDragged<T>;\n\n  @Input('clrDraggable')\n  set dataTransfer(value: T) {\n    this.dragEventListener.dragDataTransfer = value;\n  }\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this.dragEventListener.group = value;\n  }\n\n  private createDefaultGhost(event: DragEventInterface<T>) {\n    this.draggableSnapshot.capture(this.draggableEl, event);\n    // NOTE: The default ghost element will appear\n    // next to the clrDraggable in the DOM as a sibling element.\n    this.viewContainerRef.createComponent(this.componentFactory, 0, this.injector, [\n      [this.draggableEl.cloneNode(true)],\n    ]);\n  }\n\n  private destroyDefaultGhost() {\n    this.viewContainerRef.clear();\n    this.draggableSnapshot.discard();\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this.dragHandleRegistrar.defaultHandleEl = this.draggableEl;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.enter();\n        this.dragOn = true;\n        if (!this.customGhost) {\n          this.createDefaultGhost(event);\n        }\n\n        this.dragStartEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        this.dragMoveEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.exit();\n        this.dragOn = false;\n        if (!this.customGhost) {\n          this.destroyDefaultGhost();\n        }\n        this.dragEndEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.dragEventListener.detachDragListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';\nimport { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';\n\n@Directive({\n  selector: '[clrDroppable]',\n  providers: [DomAdapter],\n  host: { '[class.droppable]': 'true', '[class.draggable-match]': 'isDraggableMatch' },\n})\nexport class ClrDroppable<T> implements OnInit, OnDestroy {\n  private dragStartSubscription: Subscription;\n  private dragMoveSubscription: Subscription;\n  private dragEndSubscription: Subscription;\n\n  private droppableEl: any;\n  private clientRect: ClientRect;\n\n  constructor(\n    private el: ElementRef,\n    private eventBus: DragAndDropEventBusService<T>,\n    private domAdapter: DomAdapter,\n    private renderer: Renderer2\n  ) {\n    this.droppableEl = this.el.nativeElement;\n  }\n\n  isDraggableMatch: boolean = false;\n  private _isDraggableOver: boolean = false;\n\n  set isDraggableOver(value: boolean) {\n    // We need to add/remove this draggable-over class via Renderer2\n    // because isDraggableOver is set outside of NgZone.\n    if (value) {\n      this.renderer.addClass(this.droppableEl, 'draggable-over');\n    } else {\n      this.renderer.removeClass(this.droppableEl, 'draggable-over');\n    }\n    this._isDraggableOver = value;\n  }\n\n  private _group: string | string[];\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this._group = value;\n  }\n\n  private _dropTolerance: ClrDropToleranceInterface = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  private dropToleranceGenerator(top = 0, right = top, bottom = top, left = right): ClrDropToleranceInterface {\n    return { top, right, bottom, left };\n  }\n\n  @Input('clrDropTolerance')\n  set dropTolerance(value: number | string | ClrDropToleranceInterface) {\n    // If user provides an object here and wants to manipulate/update properties individually,\n    // the object must be immutable as we generate new object based user's given object.\n    if (typeof value === 'number') {\n      this._dropTolerance = this.dropToleranceGenerator(value);\n    } else if (typeof value === 'string') {\n      const toleranceValues = value\n        .trim()\n        .split(/\\s+/)\n        .map(tolerance => parseInt(tolerance, 10));\n      this._dropTolerance = this.dropToleranceGenerator(...toleranceValues);\n    } else if (value) {\n      // The value could be passed in as {left: 20, top: 30 }\n      // In this case, the rest of the direction properties should be 0.\n      // That's why we initialize properties with 0 first, then override with user's given value.\n      this._dropTolerance = { ...this.dropToleranceGenerator(0), ...value };\n    }\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragLeave') dragLeaveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnter') dragEnterEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDrop') dropEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  private unsubscribeFrom(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private checkGroupMatch(draggableGroup: string | string[]): boolean {\n    // Both Draggable and Droppable have clrGroup input.\n    // The clrGroup input can be both a string key or array of string keys in Draggable and Droppable.\n\n    // It's not match if Draggable has no defined value assigned to clrGroup, but Droppable has a defined clrGroup.\n    if (!draggableGroup && this._group) {\n      return false;\n    }\n    // The same is true the other way round.\n    if (!this._group && draggableGroup) {\n      return false;\n    }\n\n    // It's match if both Draggable and Droppable have no assigned value for clrGroup.\n    if (!this._group && !draggableGroup) {\n      return true;\n    }\n\n    // It's match if both Draggable and Droppable have simple string keys that are matching.\n    // It's match if Draggable's simple clrGroup key is matching with one of the clrGroup keys of Droppable. The\n    // same is true the other way round.\n    // it's match if one of the clrGroup keys of Droppable is matching with one of the clrGroup keys of Draggable.\n    if (typeof draggableGroup === 'string') {\n      if (typeof this._group === 'string') {\n        return this._group === draggableGroup;\n      } else {\n        return this._group.indexOf(draggableGroup) > -1;\n      }\n    } else {\n      if (typeof this._group === 'string') {\n        return draggableGroup.indexOf(this._group) > -1;\n      } else {\n        return (this._group as string[]).some(groupKey => draggableGroup.indexOf(groupKey) > -1);\n      }\n    }\n  }\n\n  private isInDropArea(point: { pageX: number; pageY: number }): boolean {\n    if (!point) {\n      return false;\n    }\n\n    if (!this.clientRect) {\n      this.clientRect = this.domAdapter.clientRect(this.droppableEl);\n    }\n\n    if (\n      point.pageX >= this.clientRect.left - this._dropTolerance.left &&\n      point.pageX <= this.clientRect.right + this._dropTolerance.right &&\n      point.pageY >= this.clientRect.top - this._dropTolerance.top &&\n      point.pageY <= this.clientRect.bottom + this._dropTolerance.bottom\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private onDragStart(dragStartEvent: DragEventInterface<T>): void {\n    // Check draggable and droppable have a matching group key.\n    this.isDraggableMatch = this.checkGroupMatch(dragStartEvent.group);\n\n    // Subscribe to dragMoved and dragEnded only if draggable and droppable have a matching group key.\n    if (this.isDraggableMatch) {\n      this.dragStartEmitter.emit(new ClrDragEvent(dragStartEvent));\n      this.dragMoveSubscription = this.eventBus.dragMoved.subscribe((dragMoveEvent: DragEventInterface<T>) => {\n        this.onDragMove(dragMoveEvent);\n      });\n      this.dragEndSubscription = this.eventBus.dragEnded.subscribe((dragEndEvent: DragEventInterface<T>) => {\n        this.onDragEnd(dragEndEvent);\n      });\n    }\n  }\n\n  private onDragMove(dragMoveEvent: DragEventInterface<T>): void {\n    const isInDropArea = this.isInDropArea(dragMoveEvent.dropPointPosition);\n    if (!this._isDraggableOver && isInDropArea) {\n      this.isDraggableOver = true;\n      const dragEnterEvent = { ...dragMoveEvent, type: DragEventType.DRAG_ENTER };\n      this.eventBus.broadcast(dragEnterEvent);\n      this.dragEnterEmitter.emit(new ClrDragEvent(dragEnterEvent));\n    } else if (this._isDraggableOver && !isInDropArea) {\n      this.isDraggableOver = false;\n      const dragLeaveEvent = { ...dragMoveEvent, type: DragEventType.DRAG_LEAVE };\n      this.eventBus.broadcast(dragLeaveEvent);\n      this.dragLeaveEmitter.emit(new ClrDragEvent(dragLeaveEvent));\n    }\n\n    this.dragMoveEmitter.emit(new ClrDragEvent(dragMoveEvent));\n  }\n\n  private onDragEnd(dragEndEvent: DragEventInterface<T>): void {\n    if (this._isDraggableOver) {\n      if (dragEndEvent.ghostElement) {\n        // By this point, the draggable ghost component is destroyed,\n        // but the element would be active until its animation completes.\n        // As such, once the ghost is dropped over, we will give it \"dropped\" class.\n\n        // This process cannot be done in the ghost component\n        // because any subscription to the drop event is ineffective or invalid\n        // as the component had been already destroyed.\n        this.renderer.addClass(dragEndEvent.ghostElement, 'dropped');\n      }\n\n      const dropEvent = { ...dragEndEvent, type: DragEventType.DROP };\n      this.eventBus.broadcast(dropEvent);\n      this.dropEmitter.emit(new ClrDragEvent(dropEvent));\n      this.isDraggableOver = false;\n    }\n    this.dragEndEmitter.emit(new ClrDragEvent(dragEndEvent));\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n    this.isDraggableMatch = false;\n    delete this.clientRect;\n  }\n\n  ngOnInit() {\n    this.dragStartSubscription = this.eventBus.dragStarted.subscribe((dragStartEvent: DragEventInterface<T>) => {\n      this.onDragStart(dragStartEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeFrom(this.dragStartSubscription);\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, OnDestroy, Optional } from '@angular/core';\nimport { DragHandleRegistrarService } from './providers/drag-handle-registrar.service';\n\n@Directive({ selector: '[clrDragHandle]', host: { '[class.drag-handle]': 'true' } })\nexport class ClrDragHandle<T> implements OnDestroy {\n  constructor(private el: ElementRef, @Optional() private dragHandleRegistrar: DragHandleRegistrarService<T>) {\n    if (!this.dragHandleRegistrar) {\n      // ClrDragHandleRegistrar is provided in ClrDraggable so we expect it to be present here\n      // as clrDragHandle is required to be used only inside of a clrDraggable directive.\n      throw new Error('The clrDragHandle directive can only be used inside of a clrDraggable directive.');\n    }\n    this.dragHandleRegistrar.registerCustomHandle(this.el.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.dragHandleRegistrar.unregisterCustomHandle();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrDraggable } from './draggable/draggable';\nimport { ClrDroppable } from './droppable/droppable';\nimport { ClrIfDragged } from './if-dragged';\nimport { ClrDragHandle } from './drag-handle';\nimport { ClrDraggableGhost } from './draggable-ghost';\n\nexport const CLR_DRAG_AND_DROP_DIRECTIVES: Type<any>[] = [\n  ClrDraggable,\n  ClrDroppable,\n  ClrIfDragged,\n  ClrDragHandle,\n  ClrDraggableGhost,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DRAG_AND_DROP_DIRECTIVES],\n  entryComponents: [ClrDraggableGhost],\n  exports: [CLR_DRAG_AND_DROP_DIRECTIVES],\n})\nexport class ClrDragAndDropModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\n\n@Component({\n  selector: 'clr-expandable-animation',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n    :host {\n      display: block;\n    }\n  `,\n  ],\n  animations: [\n    trigger('expandAnimation', [\n      transition('true <=> false', [\n        style({ height: '{{startHeight}}px', overflow: 'hidden' }),\n        animate('0.2s ease-in-out', style({ height: '*' })),\n      ]),\n    ]),\n  ],\n  providers: [DomAdapter],\n})\nexport class ClrExpandableAnimation {\n  @Input() clrExpandTrigger: any;\n\n  startHeight: number = 0;\n\n  constructor(private element: ElementRef, private domAdapter: DomAdapter) {}\n\n  @HostBinding('@expandAnimation')\n  get expandAnimation() {\n    return { value: this.clrExpandTrigger, params: { startHeight: this.startHeight } };\n  }\n\n  @HostListener('@expandAnimation.done')\n  animationDone() {\n    // A \"safe\" auto-update of the height ensuring basic OOTB user experience .\n    // Prone to small jumps in initial animation height if data was changed in the meantime, window was resized, etc.\n    // For optimal behavior call manually updateStartHeight() from the parent component before initiating the update.\n    this.updateStartHeight();\n  }\n\n  updateStartHeight() {\n    this.startHeight = this.domAdapter.computedHeight(this.element.nativeElement) || 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\n\nimport { ClrExpandableAnimation } from './expandable-animation';\n\nexport * from './expandable-animation';\n\nexport const EXPANDABLE_ANIMATION_DIRECTIVES: Type<any>[] = [ClrExpandableAnimation];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EXPANDABLE_ANIMATION_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EXPANDABLE_ANIMATION_DIRECTIVES],\n  exports: [EXPANDABLE_ANIMATION_DIRECTIVES],\n})\nexport class ClrExpandableAnimationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding, ElementRef, AfterViewInit } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-spinner',\n  providers: [ClrAriaLiveService],\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[attr.aria-busy]': 'true',\n  },\n})\nexport class ClrSpinner implements AfterViewInit {\n  constructor(private el: ElementRef, private ariaLiveService: ClrAriaLiveService) {}\n\n  ngAfterViewInit() {\n    this.ariaLiveService.announce(this.el.nativeElement, this.ariaLive);\n  }\n\n  /**\n   * Default class for all spinners. This class is always true\n   */\n  @HostBinding('class.spinner')\n  get spinnerClass() {\n    return true;\n  }\n\n  // Style\n  private _inline: boolean;\n  @HostBinding('class.spinner-inline')\n  get inlineClass() {\n    return this._inline;\n  }\n\n  @Input('clrInline')\n  set clrInline(value: boolean | string) {\n    this._inline = isBooleanAttributeSet(value);\n  }\n\n  private _inverse: boolean;\n  @HostBinding('class.spinner-inverse')\n  get inverseClass() {\n    return this._inverse;\n  }\n\n  @Input('clrInverse')\n  set clrInverse(value: boolean | string) {\n    this._inverse = isBooleanAttributeSet(value);\n  }\n\n  // Size\n  /**\n   * By default all spinners are Large. (spinner-lg)\n   * To change the size you need to use set clrSmall or clrMedium to TRUE/\n   */\n\n  /**\n   * Small\n   */\n  private _small: boolean;\n  @HostBinding('class.spinner-sm')\n  get smallClass() {\n    return this._small;\n  }\n\n  @Input('clrSmall')\n  set clrSmall(value: boolean | string) {\n    this._small = isBooleanAttributeSet(value);\n  }\n\n  /**\n   * When clrSmall & clrMedium are set both to true.\n   * The CSS with high priority will be small - so medium size will be ignored.\n   *\n   * For this reason if clrSmall is set we won't add clrMedium class.\n   *\n   * NOTE: This is dictated by the CSS rules.\n   * DON'T USE clrSmall & clrMedium to toggle classes. This could change without notice.\n   *\n   * Also there is no logical need to have both of them set to TRUE or FALSE.\n   */\n  private _medium: boolean;\n  @HostBinding('class.spinner-md')\n  get mediumClass() {\n    if (this._small) {\n      return false;\n    }\n    return this._medium;\n  }\n\n  @Input('clrMedium')\n  set clrMedium(value: boolean | string) {\n    this._medium = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n\n  /**\n   * By default aria-live will be set to `polite` .\n   * To change is it you need to set clrAssertive or clrOff to TRUE\n   *\n   * There is priority:\n   *   Default: polite\n   *   Asertive\n   *   Off\n   *\n   * In case when for some reason you have clrAssertive=TRUE and clrOff=TRUE,\n   * we gonna set `assertive` as value of aria-live.\n   *\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrSpinner } from './spinner';\n\nexport const CLR_SPINNER_DIRECTIVES: Type<any>[] = [ClrSpinner];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_SPINNER_DIRECTIVES],\n  exports: [CLR_SPINNER_DIRECTIVES],\n})\nexport class ClrSpinnerModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const FOCUS_ON_VIEW_INIT = new InjectionToken<boolean>('FOCUS_ON_VIEW_INIT');\n\n// This provider holds the default value for clrFocusOnViewInit directive's isEnabled property.\n// So users can interject this provider and set their own value for this provider.\nexport const FOCUS_ON_VIEW_INIT_PROVIDER = {\n  provide: FOCUS_ON_VIEW_INIT,\n  useValue: true,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_ON_VIEW_INIT } from './focus-on-view-init.provider';\n\n/*  This directive is for guiding the document focus to the newly added content when its view is initialized \n    so that assistive technologies can read its content. */\n@Directive({\n  selector: '[clrFocusOnViewInit]',\n})\nexport class ClrFocusOnViewInit implements AfterViewInit {\n  constructor(\n    private el: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(FOCUS_ON_VIEW_INIT) private focusOnViewInit: boolean,\n    @Inject(DOCUMENT) document: any,\n    private renderer: Renderer2\n  ) {\n    this._isEnabled = this.focusOnViewInit;\n\n    // Angular compiler doesn't understand the type Document\n    // when working out the metadata for injectable parameters,\n    // even though it understands the injection token DOCUMENT\n    // https://github.com/angular/angular/issues/20351\n    this.document = document;\n  }\n\n  private document: Document;\n  private directFocus = true; // true if the element gets focused without need to set tabindex;\n\n  @HostListener('focusout')\n  onFocusout() {\n    if (!this.directFocus) {\n      // manually set attributes and styles should be removed\n      this.renderer.removeAttribute(this.el.nativeElement, 'tabindex');\n      this.renderer.setStyle(this.el.nativeElement, 'outline', null);\n    }\n  }\n\n  private _isEnabled: boolean;\n  @Input('clrFocusOnViewInit')\n  set isEnabled(value: boolean) {\n    if (this.focusOnViewInit && typeof value === 'boolean') {\n      this._isEnabled = value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focus();\n  }\n\n  private focus() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!this._isEnabled) {\n      return;\n    }\n    if (this.document && this.document.activeElement !== this.el.nativeElement) {\n      this.el.nativeElement.focus();\n      if (this.document.activeElement !== this.el.nativeElement) {\n        // if it's not directly focused now, it means it was a non-interactive element\n        // so we need to give it a tabindex.\n        this.directFocus = false;\n        this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n        this.renderer.setStyle(this.el.nativeElement, 'outline', 'none');\n        this.el.nativeElement.focus();\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrFocusOnViewInit } from './focus-on-view-init';\nimport { FOCUS_ON_VIEW_INIT_PROVIDER } from './focus-on-view-init.provider';\n\nexport const FOCUS_ON_VIEW_INIT_DIRECTIVES: Type<any>[] = [ClrFocusOnViewInit];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n  providers: [FOCUS_ON_VIEW_INIT_PROVIDER],\n  exports: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n})\nexport class ClrFocusOnViewInitModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport abstract class CustomFilter {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * This provider implements some form of synchronous debouncing through a lock pattern\n * to avoid emitting multiple state changes for a single user action.\n */\n@Injectable()\nexport class StateDebouncer {\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  private _change = new Subject<void>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<void> {\n    return this._change.asObservable();\n  }\n\n  /*\n     * This is the lock, to only emit once all the changes have finished processing\n     */\n  private nbChanges = 0;\n\n  public changeStart() {\n    this.nbChanges++;\n  }\n\n  public changeDone() {\n    if (--this.nbChanges === 0) {\n      this._change.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Page {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  private preventEmit = false;\n  public activated = false;\n\n  /**\n   * Page size, a value of 0 means no pagination\n   */\n  private _size = 0;\n  public get size(): number {\n    return this._size;\n  }\n  public set size(size: number) {\n    const oldSize = this._size;\n    if (size !== oldSize) {\n      if (!this.preventEmit) {\n        this.stateDebouncer.changeStart();\n      }\n      this._size = size;\n      if (size === 0) {\n        this._current = 1;\n      } else {\n        // Yeap. That's the formula to keep the first item from the old page still\n        // displayed in the new one.\n        this._current = Math.floor(oldSize / size * (this._current - 1)) + 1;\n      }\n      // We always emit an event even if the current page index didn't change, because\n      // the size changing means the items inside the page are different\n      if (!this.preventEmit) {\n        this._change.next(this._current);\n        this._sizeChange.next(this._size);\n        this.stateDebouncer.changeDone();\n      }\n    }\n    this.preventEmit = false;\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  private _totalItems?: number;\n  public get totalItems(): number {\n    return this._totalItems || 0; // remains 0 if not set to avoid breaking change\n  }\n  public set totalItems(total: number) {\n    this._totalItems = total;\n    // If we have less items than before, we might need to change the current page\n    if (this.current > this.last) {\n      this.current = this.last;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  private _last: number;\n  public get last(): number {\n    if (this._last) {\n      return this._last;\n    }\n    // If the last page isn't known, we compute it from the last item's index\n    if (this.size > 0 && this.totalItems) {\n      return Math.ceil(this.totalItems / this.size);\n    }\n    return 1;\n  }\n  public set last(page: number) {\n    this._last = page;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to page changes\n   */\n  private _change = new Subject<number>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _sizeChange = new Subject<number>();\n\n  public get sizeChange(): Observable<number> {\n    return this._sizeChange.asObservable();\n  }\n\n  /**\n   * Current page\n   */\n  private _current = 1;\n  public get current(): number {\n    return this._current;\n  }\n  public set current(page: number) {\n    if (page !== this._current) {\n      this.stateDebouncer.changeStart();\n      this._current = page;\n      this._change.next(page);\n      this.stateDebouncer.changeDone();\n    }\n  }\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    if (this.current > 1) {\n      this.current--;\n    }\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    if (this.current < this.last) {\n      this.current++;\n    }\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return 0;\n    }\n    return (this.current - 1) * this.size;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return this.totalItems - 1;\n    }\n    let lastInPage = this.current * this.size - 1;\n    if (this.totalItems) {\n      lastInPage = Math.min(lastInPage, this.totalItems - 1);\n    }\n    return lastInPage;\n  }\n\n  /**\n   * Resets the page size to 0\n   */\n  public resetPageSize(preventEmit = false): void {\n    this.preventEmit = preventEmit;\n    this.size = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { Page } from './page';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class FiltersProvider<T = any> {\n  constructor(private _page: Page, private stateDebouncer: StateDebouncer) {}\n  /**\n   * This subject is the list of filters that changed last, not the whole list.\n   * We emit a list rather than just one filter to allow batch changes to several at once.\n   */\n  private _change = new Subject<ClrDatagridFilterInterface<T>[]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<ClrDatagridFilterInterface<T>[]> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * List of all filters, whether they're active or not\n   */\n  private _all: RegisteredFilter<T, ClrDatagridFilterInterface<T>>[] = [];\n\n  /**\n   * Tests if at least one filter is currently active\n   */\n  public hasActiveFilters(): boolean {\n    // We do not use getActiveFilters() because this function will be called much more often\n    // and stopping the loop early might be relevant.\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a list of all currently active filters\n   */\n  public getActiveFilters(): ClrDatagridFilterInterface<T>[] {\n    const ret: ClrDatagridFilterInterface<T>[] = [];\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        ret.push(filter);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Registers a filter, and returns a deregistration function\n   */\n  public add<F extends ClrDatagridFilterInterface<T>>(filter: F): RegisteredFilter<T, F> {\n    const subscription = filter.changes.subscribe(() => this.resetPageAndEmitFilterChange([filter]));\n    let hasUnregistered = false;\n    const registered = new RegisteredFilter(filter, () => {\n      if (hasUnregistered) {\n        return;\n      }\n      subscription.unsubscribe();\n      const matchIndex = this._all.findIndex(item => item.filter === filter);\n      if (matchIndex >= 0) {\n        this._all.splice(matchIndex, 1);\n      }\n      if (filter.isActive()) {\n        this.resetPageAndEmitFilterChange([]);\n      }\n      hasUnregistered = true;\n    });\n    this._all.push(registered);\n    if (filter.isActive()) {\n      this.resetPageAndEmitFilterChange([filter]);\n    }\n    return registered;\n  }\n\n  /**\n   * Accepts an item if it is accepted by all currently active filters\n   */\n  public accepts(item: T): boolean {\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive() && !filter.accepts(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private resetPageAndEmitFilterChange(filters: ClrDatagridFilterInterface<T>[]) {\n    this.stateDebouncer.changeStart();\n    // filtering may change the page number such that current page number doesn't exist in the filtered dataset.\n    // So here we always set the current page to 1 so that it'll fetch first page's data with the given filter.\n    this._page.current = 1;\n    this._change.next(filters);\n    this.stateDebouncer.changeDone();\n  }\n}\n\nexport class RegisteredFilter<T, F extends ClrDatagridFilterInterface<T>> {\n  constructor(public filter: F, public unregister: () => void) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { OnDestroy } from '@angular/core';\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { FiltersProvider, RegisteredFilter } from '../providers/filters';\n\nexport abstract class DatagridFilterRegistrar<T, F extends ClrDatagridFilterInterface<T>> implements OnDestroy {\n  constructor(private filters: FiltersProvider<T>) {}\n\n  public registered: RegisteredFilter<T, F>;\n\n  public get filter(): F {\n    return this.registered && this.registered.filter;\n  }\n\n  public setFilter(filter: F | RegisteredFilter<T, F>) {\n    // If we previously had another filter, we unregister it\n    this.deleteFilter();\n    if (filter instanceof RegisteredFilter) {\n      this.registered = filter;\n    } else if (filter) {\n      this.registered = this.filters.add(filter);\n    }\n  }\n\n  public deleteFilter() {\n    if (this.registered) {\n      this.registered.unregister();\n      delete this.registered;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.deleteFilter();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  Inject,\n  OnDestroy,\n  PLATFORM_ID,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\n\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from './providers/filters';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\n@Component({\n  selector: 'clr-dg-filter',\n  // We register this component as a CustomFilter, for the parent column to detect it.\n  providers: [{ provide: CustomFilter, useExisting: ClrDatagridFilter }, UNIQUE_ID_PROVIDER],\n  template: `\n      <button class=\"datagrid-filter-toggle\"\n              type=\"button\"\n              #anchor\n              [attr.aria-label]=\"commonStrings.keys.datagridFilterAriaLabel\"\n              [attr.aria-expanded]=\"ariaExpanded\"\n              [attr.aria-controls]=\"popoverId\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [class.datagrid-filter-open]=\"open\"\n              [class.datagrid-filtered]=\"active\">\n          <clr-icon [attr.shape]=\"active ? 'filter-grid-circle': 'filter-grid'\" class=\"is-solid\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-filter\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"datagrid-filter-close-wrapper\">\n              <button type=\"button\" class=\"close\" clrPopoverCloseButton>\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridFilter<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements CustomFilter, OnDestroy {\n  private subs: Subscription[] = [];\n  public ariaExpanded: boolean = false;\n\n  constructor(\n    _filters: FiltersProvider<T>,\n    public commonStrings: ClrCommonStringsService,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    super(_filters);\n    this.subs.push(\n      smartToggleService.openChange.subscribe(change => {\n        this.open = change;\n        this.ariaExpanded = change;\n      })\n    );\n  }\n\n  @ViewChild('anchor', { read: ElementRef })\n  anchor: ElementRef;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  @Input('clrDgFilterOpen')\n  public set open(open: boolean) {\n    open = !!open;\n    if (this.open !== open) {\n      this.smartToggleService.open = open;\n      this.openChange.emit(open);\n      if (!open && isPlatformBrowser(this.platformId)) {\n        this.anchor.nativeElement.focus();\n      }\n      // keep track of the state\n      this._open = open;\n    }\n  }\n\n  @Output('clrDgFilterOpenChange') public openChange = new EventEmitter<boolean>(false);\n\n  @Input('clrDgFilter')\n  public set customFilter(filter: ClrDatagridFilterInterface<T> | RegisteredFilter<T, ClrDatagridFilterInterface<T>>) {\n    this.setFilter(filter);\n  }\n\n  /**\n   * Indicates if the filter is currently active\n   */\n  public get active() {\n    return !!this.filter && this.filter.isActive();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Generic accessor for deep object properties\n * that can be specified as simple dot-separated strings.\n */\nexport class NestedProperty<T = any> {\n  private splitProp: string[];\n\n  constructor(private prop: string) {\n    if (prop.indexOf('.') >= 0) {\n      this.splitProp = prop.split('.');\n    }\n  }\n\n  // Safe getter for a deep object property, will not throw an error but return\n  // undefined if one of the intermediate properties is null or undefined.\n  public getPropValue(item: T): any {\n    if (this.splitProp) {\n      let value = item;\n      for (const nestedProp of this.splitProp) {\n        if (value == null || typeof value === 'undefined' || typeof value[nestedProp] === 'undefined') {\n          return undefined;\n        }\n        value = value[nestedProp];\n      }\n      return value;\n    } else {\n      return item[this.prop];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyStringFilter<T = any> implements ClrDatagridStringFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, search: string): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (typeof propValue === 'undefined') {\n      return false;\n    } else if (this.exact) {\n      return ('' + propValue).toLowerCase() === search;\n    } else {\n      return ('' + propValue).toLowerCase().indexOf(search) >= 0;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { DatagridPropertyStringFilter } from './datagrid-property-string-filter';\n\nexport class DatagridStringFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridStringFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<string>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<string> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Raw input value\n   */\n  private _rawValue: string = '';\n  public get value(): string {\n    return this._rawValue;\n  }\n  /**\n   * Input value converted to lowercase\n   */\n  private _lowerCaseValue: string = '';\n  public get lowerCaseValue() {\n    return this._lowerCaseValue;\n  }\n  /**\n   * Common setter for the input value\n   */\n  public set value(value: string) {\n    if (!value) {\n      value = '';\n    }\n    if (value !== this._rawValue) {\n      this._rawValue = value;\n      this._lowerCaseValue = value.toLowerCase().trim();\n      this._changes.next(value);\n    }\n  }\n\n  /**\n   * Indicates if the filter is currently active, meaning the input is not empty\n   */\n  public isActive(): boolean {\n    return !!this.value;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We always test with the lowercase value of the input, to stay case insensitive\n    return this.filterFn.accepts(item, this.lowerCaseValue);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyStringFilter) {\n      return {\n        property: this.filterFn.prop,\n        value: this.value,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridStringFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyStringFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyStringFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.value === this.value\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\n\nimport { DatagridStringFilterImpl } from './datagrid-string-filter-impl';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-string-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridStringFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input #input type=\"text\" name=\"search\" [(ngModel)]=\"value\" class=\"clr-input\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridStringFilter<T = any> extends DatagridFilterRegistrar<T, DatagridStringFilterImpl<T>>\n  implements CustomFilter, AfterViewInit, OnDestroy {\n  private subs: Subscription[] = [];\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    private smartToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  /**\n   * Customizable filter logic based on a search text\n   */\n  @Input('clrDgStringFilter')\n  set customStringFilter(\n    value: ClrDatagridStringFilterInterface<T> | RegisteredFilter<T, DatagridStringFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridStringFilterImpl(value));\n    }\n    if (this.initFilterValue) {\n      this.value = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subs.push(\n      this.smartToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  private initFilterValue: string;\n\n  /**\n   * Common setter for the input value\n   */\n  public get value() {\n    return this.filter.value;\n  }\n  @Input('clrFilterValue')\n  public set value(value: string) {\n    if (this.filter) {\n      if (!value) {\n        value = '';\n      }\n      if (value !== this.filter.value) {\n        this.filter.value = value;\n        this.filterValueChange.emit(value);\n      }\n    } else {\n      this.initFilterValue = value;\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyNumericFilter<T = any> implements ClrDatagridNumericFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, low: number, high: number): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (low !== null && propValue < low) {\n      return false;\n    }\n    if (high !== null && propValue > high) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { DatagridPropertyNumericFilter } from './datagrid-property-numeric-filter';\n\nexport class DatagridNumericFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridNumericFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<[number, number]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<[number, number]> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Internal values and accessor\n   */\n  private _low: number = null;\n  private _high: number = null;\n\n  /**\n   * Common setters for the input values, including individual limits and\n   * both at the same time.  Value is singular to make the interface similar\n   * to the built-in string filter.\n   */\n\n  public get value(): [number, number] {\n    return [this._low, this._high];\n  }\n\n  public set value(vals: [number, number]) {\n    const low = vals[0];\n    const high = vals[1];\n    if (low !== this._low || high !== this._high) {\n      this._low = low;\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set low(low: number) {\n    if (low !== this._low) {\n      this._low = low;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set high(high: number) {\n    if (high !== this._high) {\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public get low() {\n    return this._low;\n  }\n\n  public get high() {\n    return this._high;\n  }\n\n  /**\n   * Indicates if the filter is currently active, (at least one input is set)\n   */\n  public isActive(): boolean {\n    return this._low !== null || this.high !== null;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We have a filter function in case someone wants to implement a numeric\n    // filter that always passes nulls or similar\n    return this.filterFn.accepts(item, this._low, this._high);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyNumericFilter) {\n      return {\n        property: this.filterFn.prop,\n        low: this._low,\n        high: this._high,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridNumericFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyNumericFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyNumericFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.low === this._low &&\n          other.high === this._high\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridNumericFilterImpl } from './datagrid-numeric-filter-impl';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-numeric-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridNumericFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input class=\"datagrid-numeric-filter-input\" #input_low type=\"number\" name=\"low\" [(ngModel)]=\"low\"\n                   [placeholder]=\"commonStrings.keys.minValue\" [attr.aria-label]=\"commonStrings.keys.minValue\" />\n                <span class=\"datagrid-filter-input-spacer\"></span>\n            <input class=\"datagrid-numeric-filter-input\" #input_high type=\"number\" name=\"high\" [(ngModel)]=\"high\"\n                   [placeholder]=\"commonStrings.keys.maxValue\" [attr.aria-label]=\"commonStrings.keys.maxValue\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridNumericFilter<T = any> extends DatagridFilterRegistrar<T, DatagridNumericFilterImpl<T>>\n  implements CustomFilter, AfterViewInit {\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    public commonStrings: ClrCommonStringsService,\n    private popoverToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Customizable filter logic based on high and low values\n   */\n  @Input('clrDgNumericFilter')\n  set customNumericFilter(\n    value: ClrDatagridNumericFilterInterface<T> | RegisteredFilter<T, DatagridNumericFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridNumericFilterImpl(value));\n    }\n    if (this.initFilterValues) {\n      this.value = this.initFilterValues;\n      // This initFilterValues should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValues;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input_low') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.popoverToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  private initFilterValues: [number, number];\n  /**\n   * Common setter for the input values\n   */\n  public get value() {\n    return [this.filter.low, this.filter.high];\n  }\n\n  @Input('clrFilterValue')\n  public set value(values: [number, number]) {\n    if (this.filter) {\n      if (values && (values[0] !== this.filter.low || values[1] !== this.filter.high)) {\n        if (typeof values[0] === 'number') {\n          this.filter.low = values[0];\n        } else {\n          this.filter.low = null;\n        }\n        if (typeof values[1] === 'number') {\n          this.filter.high = values[1];\n        } else {\n          this.filter.high = null;\n        }\n        this.filterValueChange.emit(values);\n      }\n    } else {\n      this.initFilterValues = values;\n    }\n  }\n\n  public get low() {\n    if (typeof this.filter.low === 'number' && isFinite(this.filter.low)) {\n      return this.filter.low;\n    } else {\n      // There's not a low limit\n      return null;\n    }\n  }\n\n  public get high() {\n    if (typeof this.filter.high === 'number' && isFinite(this.filter.high)) {\n      return this.filter.high;\n    } else {\n      // There's not a high limit\n      return null;\n    }\n  }\n\n  public set low(low: number | string) {\n    if (typeof low === 'number' && low !== this.filter.low) {\n      this.filter.low = low;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof low !== 'number') {\n      this.filter.low = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  public set high(high: number | string) {\n    if (typeof high === 'number' && high !== this.filter.high) {\n      this.filter.high = high;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof high !== 'number') {\n      this.filter.high = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentChecked, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { WillyWonka } from './willy-wonka';\n\nexport abstract class OompaLoompa implements AfterContentChecked, OnDestroy {\n  // FIXME: Request Injector once we move to Angular 4.2+, it'll allow easier refactors\n  constructor(cdr: ChangeDetectorRef, willyWonka: WillyWonka) {\n    this.subscription = willyWonka.chocolate.subscribe(() => {\n      if (this.latestFlavor !== this.flavor) {\n        willyWonka.disableChocolateCheck = true;\n        cdr.detectChanges();\n        willyWonka.disableChocolateCheck = false;\n      }\n    });\n  }\n\n  private subscription: Subscription;\n\n  private latestFlavor: any;\n\n  abstract get flavor(): any;\n\n  ngAfterContentChecked() {\n    this.latestFlavor = this.flavor;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RowActionService {\n  private actionableCount = 0;\n\n  public register() {\n    this.actionableCount++;\n  }\n\n  public unregister() {\n    this.actionableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   */\n  public get hasActionableRow(): boolean {\n    return this.actionableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewChecked } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * After a conversation with the Angular core team, it turns out we don't have much of a choice for our\n * declarative API, we need to fight against change detection and its one-way flow. This is\n * currently the least dirty solution to do what we want.\n *\n * Do not modify or even use this class unless you know exactly what you're doing.\n * It has the potential to trigger change detection loops or kill app performances.\n */\nexport class WillyWonka implements AfterViewChecked {\n  private _chocolate = new Subject<string>();\n\n  public get chocolate(): Observable<string> {\n    return this._chocolate.asObservable();\n  }\n\n  disableChocolateCheck = false;\n\n  ngAfterViewChecked() {\n    if (!this.disableChocolateCheck) {\n      this._chocolate.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-datagrid' })\nexport class DatagridWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { RowActionService } from '../providers/row-action-service';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ActionableOompaLoompa extends OompaLoompa {\n  private rowActions: RowActionService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: DatagridWillyWonka, rowActions: RowActionService) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.rowActions = rowActions;\n  }\n\n  get flavor() {\n    return this.rowActions.hasActionableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class DetailService {\n  private toggleState = false;\n  private _state: BehaviorSubject<boolean | null> = new BehaviorSubject<boolean>(this.toggleState);\n  private cache: any;\n  private _enabled = false;\n  private button: HTMLButtonElement;\n  public id: string;\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  set enabled(state: boolean) {\n    this._enabled = state;\n  }\n\n  public get stateChange(): Observable<boolean | null> {\n    return this._state.asObservable();\n  }\n\n  close() {\n    this.toggleState = false;\n    this._state.next(this.toggleState);\n    if (this.button) {\n      this.button.focus();\n      this.button = null;\n    }\n  }\n\n  open(item: any, button?: HTMLButtonElement) {\n    this.cache = item;\n    this.button = button;\n    this.toggleState = true;\n    this._state.next(this.toggleState);\n  }\n\n  toggle(item: any, button?: HTMLButtonElement) {\n    if (this.isRowOpen(item) || !item) {\n      this.close();\n    } else {\n      this.open(item, button);\n    }\n  }\n\n  get state() {\n    return this.cache;\n  }\n\n  isRowOpen(item: any) {\n    return !!(this.toggleState && this.cache === item);\n  }\n\n  get isOpen() {\n    return this.toggleState === true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DetailService } from './detail.service';\n\n@Injectable()\nexport class ExpandableRowsCount {\n  constructor(private detailService: DetailService) {}\n\n  private expandableCount = 0;\n\n  public register() {\n    this.expandableCount++;\n  }\n\n  public unregister() {\n    this.expandableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   * check if details are on, and disable rows entirely\n   */\n  public get hasExpandableRow(): boolean {\n    return !this.detailService.enabled && this.expandableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ExpandableRowsCount } from '../providers/global-expandable-rows';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ExpandableOompaLoompa extends OompaLoompa {\n  private expandableCount: ExpandableRowsCount;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: DatagridWillyWonka,\n    expandableCount: ExpandableRowsCount\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.expandableCount = expandableCount;\n  }\n\n  get flavor() {\n    return this.expandableCount.hasExpandableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridComparatorInterface } from '../../interfaces/comparator.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyComparator<T = any> implements ClrDatagridComparatorInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  public compare(a: T, b: T): number {\n    let propA = this.nestedProp.getPropValue(a);\n    let propB = this.nestedProp.getPropValue(b);\n\n    if (typeof propA === 'string') {\n      propA = propA.toLowerCase();\n    }\n\n    if (typeof propB === 'string') {\n      propB = propB.toLowerCase();\n    }\n\n    if (typeof propA === 'undefined' || propA === null) {\n      if (typeof propB === 'undefined' || propB === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      if (typeof propB === 'undefined' || propB === null) {\n        return -1;\n      } else if (propA < propB) {\n        return -1;\n      } else if (propA > propB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridDisplayMode {\n  DISPLAY,\n  CALCULATE,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridRenderStep {\n  ALIGN_COLUMNS,\n  CALCULATE_MODE_ON,\n  CALCULATE_MODE_OFF,\n  CLEAR_WIDTHS, // Note this is listened to by both cells and columns\n  COMPUTE_COLUMN_WIDTHS,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridComparatorInterface } from '../interfaces/comparator.interface';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Sort<T = any> {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  /**\n   * Currently active comparator\n   */\n  private _comparator: ClrDatagridComparatorInterface<T>;\n  public get comparator(): ClrDatagridComparatorInterface<T> {\n    return this._comparator;\n  }\n  public set comparator(value: ClrDatagridComparatorInterface<T>) {\n    this.stateDebouncer.changeStart();\n    this._comparator = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Ascending order if false, descending if true\n   */\n  private _reverse: boolean = false;\n  public get reverse(): boolean {\n    return this._reverse;\n  }\n  public set reverse(value: boolean) {\n    this.stateDebouncer.changeStart();\n    this._reverse = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to sort changes\n   */\n  private _change = new Subject<Sort<T>>();\n  private emitChange() {\n    this._change.next(this);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<Sort<T>> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Sets a comparator as the current one, or toggles reverse if the comparator is already used. The\n   * optional forceReverse input parameter allows to override that toggling behavior by sorting in\n   * reverse order if `true`.\n   *\n   * @memberof Sort\n   */\n  public toggle(sortBy: ClrDatagridComparatorInterface<T>, forceReverse?: boolean) {\n    this.stateDebouncer.changeStart();\n    // We modify private properties directly, to batch the change event\n    if (this.comparator === sortBy) {\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse || !this._reverse : !this._reverse;\n    } else {\n      this._comparator = sortBy;\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse : false;\n    }\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Clears the current sorting order\n   */\n  public clear() {\n    this.comparator = null;\n  }\n\n  /**\n   * Compares two objects according to the current comparator\n   */\n  public compare(a: T, b: T): number {\n    return (this.reverse ? -1 : 1) * this.comparator.compare(a, b);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-column',\n  template: `\n        <ng-template #columnPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedColumn implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('columnPortal') templateRef: TemplateRef<void>;\n  columnView: EmbeddedViewRef<void>; // the columns projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.columnView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.columnView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DatagridPropertyComparator } from './built-in/comparators/datagrid-property-comparator';\nimport { DatagridPropertyStringFilter } from './built-in/filters/datagrid-property-string-filter';\nimport { DatagridPropertyNumericFilter } from './built-in/filters/datagrid-property-numeric-filter';\nimport { DatagridStringFilterImpl } from './built-in/filters/datagrid-string-filter-impl';\nimport { DatagridNumericFilterImpl } from './built-in/filters/datagrid-numeric-filter-impl';\nimport { ClrDatagridSortOrder } from './enums/sort-order.enum';\nimport { ClrDatagridComparatorInterface } from './interfaces/comparator.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider } from './providers/filters';\nimport { Sort } from './providers/sort';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { WrappedColumn } from './wrapped-column';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-column',\n  template: `\n      <div class=\"datagrid-column-flex\">\n          <button\n            class=\"datagrid-column-title\"\n            [attr.aria-label]=\"commonStrings.keys.sortColumn\"\n            *ngIf=\"sortable\"\n            (click)=\"sort()\"\n            type=\"button\">\n              <ng-container  *ngTemplateOutlet=\"columnTitle\"></ng-container>\n              <clr-icon\n                      *ngIf=\"sortIcon\"\n                      [attr.shape]=\"sortIcon\"\n                      class=\"sort-icon\"></clr-icon>\n          </button>\n          <!-- I'm really not happy with that select since it's not very scalable -->\n          <ng-content select=\"clr-dg-filter, clr-dg-string-filter, clr-dg-numeric-filter\"></ng-content>\n\n          <clr-dg-string-filter\n                  *ngIf=\"field && !customFilter && (colType=='string')\"\n                  [clrDgStringFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-string-filter>\n\n          <clr-dg-numeric-filter\n                  *ngIf=\"field && !customFilter && (colType=='number')\"\n                  [clrDgNumericFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-numeric-filter>\n\n          <ng-template #columnTitle>\n              <ng-content></ng-content>\n          </ng-template>\n\n\n          <span class=\"datagrid-column-title\" *ngIf=\"!sortable\">\n              <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n          </span>\n\n          <clr-dg-column-separator *ngIf=\"showSeparator\"></clr-dg-column-separator>\n      </div>\n    `,\n  providers: [ClrPopoverPositionService, ClrPopoverEventsService, ClrPopoverToggleService],\n  host: {\n    '[class.datagrid-column]': 'true',\n    '[attr.aria-sort]': 'ariaSort',\n    role: 'columnheader',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrDatagridColumn<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements OnDestroy, OnInit {\n  constructor(\n    private _sort: Sort<T>,\n    filters: FiltersProvider<T>,\n    private vcr: ViewContainerRef,\n    private detailService: DetailService,\n    private changeDetectorRef: ChangeDetectorRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(filters);\n    this.subscriptions.push(this.listenForSortingChanges());\n    this.subscriptions.push(this.listenForDetailPaneChanges());\n  }\n\n  public showSeparator = true;\n\n  /**\n   * Subscription to the sort service changes\n   */\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForDetailPaneChanges() {\n    return this.detailService.stateChange.subscribe(state => {\n      if (this.showSeparator !== !state) {\n        this.showSeparator = !state;\n        // Have to manually change because of OnPush\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  private listenForSortingChanges() {\n    return this._sort.change.subscribe(sort => {\n      // Need to manually mark the component to be checked\n      // for both activating and deactivating sorting\n      this.changeDetectorRef.markForCheck();\n      // We're only listening to make sure we emit an event when the column goes from sorted to unsorted\n      if (this.sortOrder !== ClrDatagridSortOrder.UNSORTED && sort.comparator !== this._sortBy) {\n        this._sortOrder = ClrDatagridSortOrder.UNSORTED;\n        this.sortOrderChange.emit(this._sortOrder);\n        // removes the sortIcon when column becomes unsorted\n        this.sortIcon = null;\n      }\n      // deprecated: to be removed - START\n      if (this.sorted && sort.comparator !== this._sortBy) {\n        this._sorted = false;\n        this.sortedChange.emit(false);\n      }\n      // deprecated: to be removed - END\n    });\n  }\n\n  /*\n     * Simple object property shortcut, activates both sorting and filtering\n     * based on native comparison of the specified property on the items.\n     */\n  private _field: string;\n  public get field() {\n    return this._field;\n  }\n\n  /*\n  * What type is this column?  This defaults to STRING, but can also be\n  * set to NUMBER.  Unsupported types default to STRING. Users can set it\n  * via the [clrDgColType] input by setting it to 'string' or 'number'.\n  */\n\n  private _colType: 'string' | 'number' = 'string';\n\n  get colType() {\n    return this._colType;\n  }\n\n  // TODO: We might want to make this an enum in the future\n  @Input('clrDgColType')\n  set colType(value: 'string' | 'number') {\n    this._colType = value;\n    if (!this.customFilter && !this.filter && this._colType && this._field) {\n      this.setupDefaultFilter(this._field, this._colType);\n    }\n  }\n\n  @Input('clrDgField')\n  public set field(field: string) {\n    if (typeof field === 'string') {\n      this._field = field;\n      if (!this.customFilter && this._colType) {\n        this.setupDefaultFilter(this._field, this._colType);\n      }\n      if (!this._sortBy) {\n        this._sortBy = new DatagridPropertyComparator(this._field);\n      }\n    }\n  }\n\n  private setupDefaultFilter(field: string, colType: 'string' | 'number') {\n    if (colType === 'number') {\n      this.setFilter(new DatagridNumericFilterImpl(new DatagridPropertyNumericFilter(field)));\n    } else if (colType === 'string') {\n      this.setFilter(new DatagridStringFilterImpl(new DatagridPropertyStringFilter(field)));\n    }\n    if (this.filter && this.initFilterValue) {\n      this.updateFilterValue = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this field property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * ClrDatagridComparatorInterface to use when sorting the column\n   */\n\n  private _sortBy: ClrDatagridComparatorInterface<T>;\n\n  public get sortBy() {\n    return this._sortBy;\n  }\n\n  @Input('clrDgSortBy')\n  public set sortBy(comparator: ClrDatagridComparatorInterface<T> | string) {\n    if (typeof comparator === 'string') {\n      this._sortBy = new DatagridPropertyComparator(comparator);\n    } else {\n      if (comparator) {\n        this._sortBy = comparator;\n      } else {\n        if (this._field) {\n          this._sortBy = new DatagridPropertyComparator(this._field);\n        } else {\n          delete this._sortBy;\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicates if the column is sortable\n   */\n  public get sortable(): boolean {\n    return !!this._sortBy;\n  }\n\n  // deprecated: to be removed - START\n  /**\n   * Indicates if the column is currently sorted\n   *\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  private _sorted = false;\n  public get sorted() {\n    return this._sorted;\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Input('clrDgSorted')\n  public set sorted(value: boolean) {\n    if (!value && this.sorted) {\n      this._sorted = false;\n      this._sort.clear();\n    } else if (value && !this.sorted) {\n      this.sort();\n    }\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Output('clrDgSortedChange') public sortedChange = new EventEmitter<boolean>();\n\n  // deprecated: to be removed - END\n\n  /**\n   * Indicates how the column is currently sorted\n   */\n  private _sortOrder: ClrDatagridSortOrder = ClrDatagridSortOrder.UNSORTED;\n  public get sortOrder() {\n    return this._sortOrder;\n  }\n\n  @Input('clrDgSortOrder')\n  public set sortOrder(value: ClrDatagridSortOrder) {\n    if (typeof value === 'undefined') {\n      return;\n    }\n\n    // only if the incoming order is different from the current one\n    if (this._sortOrder === value) {\n      return;\n    }\n\n    switch (value) {\n      // the Unsorted case happens when the current state is either Asc or Desc\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        this._sort.clear();\n        break;\n      case ClrDatagridSortOrder.ASC:\n        this.sort(false);\n        break;\n      case ClrDatagridSortOrder.DESC:\n        this.sort(true);\n        break;\n    }\n  }\n\n  public get ariaSort() {\n    switch (this._sortOrder) {\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        return 'none';\n      case ClrDatagridSortOrder.ASC:\n        return 'ascending';\n      case ClrDatagridSortOrder.DESC:\n        return 'descending';\n    }\n  }\n\n  @Output('clrDgSortOrderChange') public sortOrderChange = new EventEmitter<ClrDatagridSortOrder>();\n\n  public sortIcon: string;\n  /**\n   * Sorts the datagrid based on this column\n   */\n  public sort(reverse?: boolean) {\n    if (!this.sortable) {\n      return;\n    }\n\n    this._sort.toggle(this._sortBy, reverse);\n\n    // setting the private variable to not retrigger the setter logic\n    this._sortOrder = this._sort.reverse ? ClrDatagridSortOrder.DESC : ClrDatagridSortOrder.ASC;\n    // Sets the correct icon for current sort order\n    this.sortIcon = this._sortOrder === ClrDatagridSortOrder.DESC ? 'arrow down' : 'arrow';\n    this.sortOrderChange.emit(this._sortOrder);\n\n    // deprecated: to be removed - START\n    this._sorted = true;\n    this.sortedChange.emit(true);\n    // deprecated: to be removed - END\n  }\n\n  /**\n   * A custom filter for this column that can be provided in the projected content\n   */\n  public customFilter = false;\n\n  @ContentChild(CustomFilter)\n  public set projectedFilter(custom: any) {\n    if (custom) {\n      this.deleteFilter();\n      this.customFilter = true;\n    }\n  }\n\n  // This property holds filter value temporarily while this.filter property is not yet registered\n  // When this.filter is registered, this property value would be used update this.filter.value\n  private initFilterValue: string | [number, number];\n\n  public get filterValue() {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      return this.filter.value;\n    }\n  }\n\n  @Input('clrFilterValue')\n  public set updateFilterValue(newValue: string | [number, number]) {\n    if (this.filter) {\n      if (this.filter instanceof DatagridStringFilterImpl) {\n        if (!newValue || typeof newValue !== 'string') {\n          newValue = '';\n        }\n        if (newValue !== this.filter.value) {\n          this.filter.value = newValue;\n        }\n      } else if (this.filter instanceof DatagridNumericFilterImpl) {\n        if (!newValue || !(newValue instanceof Array)) {\n          newValue = [null, null];\n        }\n        if (newValue.length === 2 && (newValue[0] !== this.filter.value[0] || newValue[1] !== this.filter.value[1])) {\n          this.filter.value = newValue;\n        }\n      }\n    } else {\n      this.initFilterValue = newValue;\n    }\n  }\n\n  public set filterValue(newValue: string | [number, number]) {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      this.updateFilterValue = newValue;\n      this.filterValueChange.emit(this.filter.value);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedColumn, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedColumn, this.vcr).columnView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\n\n@Injectable()\nexport class Items<T = any> {\n  constructor(private _filters: FiltersProvider<T>, private _sort: Sort<T>, private _page: Page) {}\n\n  /**\n   * Indicates if the data is currently loading\n   */\n  public loading = false;\n\n  // TODO: Verify that trackBy is registered for the *ngFor case too\n  /**\n   * Tracking function to identify objects. Default is reference equality.\n   */\n  public trackBy: TrackByFunction<T> = (index: number, item: T) => item;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private _filtersSub: Subscription;\n  private _sortSub: Subscription;\n  private _pageSub: Subscription;\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    if (this._filtersSub) {\n      this._filtersSub.unsubscribe();\n    }\n    if (this._sortSub) {\n      this._sortSub.unsubscribe();\n    }\n    if (this._pageSub) {\n      this._pageSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Whether we should use smart items for this datagrid or let the user handle\n   * everything.\n   */\n  private _smart = false;\n  public get smart(): boolean {\n    return this._smart;\n  }\n  public smartenUp() {\n    this._smart = true;\n    /*\n         * These observers trigger a chain of function: filter -> sort -> paginate\n         * An observer up the chain re-triggers all the operations that follow it.\n         */\n    this._filtersSub = this._filters.change.subscribe(() => this._filterItems());\n    this._sortSub = this._sort.change.subscribe(() => {\n      // Special case, if the datagrid went from sorted to unsorted, we have to re-filter\n      // to get the original order back\n      if (!this._sort.comparator) {\n        this._filterItems();\n      } else {\n        this._sortItems();\n      }\n    });\n    this._pageSub = this._page.change.subscribe(() => this._changePage());\n  }\n\n  /**\n   * List of all items in the datagrid\n   */\n  private _all: T[];\n  public get all() {\n    return this._all;\n  }\n  public set all(items: T[]) {\n    this._all = items;\n    this.emitAllChanges(items);\n    if (this.smart) {\n      this._filterItems();\n    } else {\n      this._displayed = items;\n      this.emitChange();\n    }\n  }\n\n  /**\n   * Manually recompute the list of displayed items\n   */\n  public refresh() {\n    if (this.smart) {\n      this._filterItems();\n    }\n  }\n\n  /**\n   * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n   */\n  private _filtered: T[];\n\n  /**\n   * List of items currently displayed\n   */\n  private _displayed: T[] = [];\n  public get displayed(): T[] {\n    // Ideally we could return an immutable array, but we don't have it in Clarity yet.\n    return this._displayed;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to items changes\n   */\n  private _change = new Subject<T[]>();\n  private emitChange() {\n    this._change.next(this.displayed);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[]> {\n    return this._change.asObservable();\n  }\n\n  private _allChanges = new Subject<T[]>();\n  private emitAllChanges(items: T[]): void {\n    this._allChanges.next(items);\n  }\n\n  public get allChanges(): Observable<T[]> {\n    return this._allChanges.asObservable();\n  }\n\n  /**\n   * Checks if we don't have data to process yet, to abort early operations\n   */\n  private get uninitialized() {\n    return !this._all;\n  }\n\n  /**\n   * FiltersProvider items from the raw list\n   */\n  private _filterItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._filters.hasActiveFilters()) {\n      this._filtered = this._all.filter(item => this._filters.accepts(item));\n    } else {\n      // Work on a shallow copy of the array, to not modify the user's model\n      this._filtered = this._all.slice();\n    }\n    this._page.totalItems = this._filtered.length;\n    this._sortItems();\n  }\n\n  /**\n   * Sorts items in the filtered list\n   */\n  private _sortItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._sort.comparator) {\n      this._filtered.sort((a, b) => this._sort.compare(a, b));\n    }\n    this._changePage();\n  }\n\n  /**\n   * Extracts the current page from the sorted list\n   */\n  private _changePage() {\n    // If we know we have pagination but the page size hasn't been set yet, we wait for it.\n    if (this.uninitialized || (this._page.activated && this._page.size === 0)) {\n      return;\n    }\n    if (this._page.size > 0) {\n      this._displayed = this._filtered.slice(this._page.firstItem, this._page.lastItem + 1);\n    } else {\n      this._displayed = this._filtered;\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgForOf, NgForOfContext } from '@angular/common';\nimport {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Items } from './providers/items';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrDgItems][clrDgItemsOf]',\n})\nexport class ClrDatagridItems<T> implements DoCheck, OnDestroy {\n  private iterableProxy: NgForOf<T>;\n  private _rawItems: T[];\n  private differ: IterableDiffer<T> | null = null;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrDgItemsOf')\n  public set rawItems(items: T[]) {\n    this._rawItems = items ? items : []; // local copy for ngOnChange diffing\n  }\n\n  @Input('clrDgItemsTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    this.iterableProxy.ngForTrackBy = value;\n  }\n\n  constructor(\n    public template: TemplateRef<NgForOfContext<T>>,\n    private differs: IterableDiffers,\n    private items: Items,\n    private vcr: ViewContainerRef\n  ) {\n    items.smartenUp();\n    this.iterableProxy = new NgForOf<T>(this.vcr, this.template, this.differs);\n    this.subscriptions.push(\n      items.change.subscribe(newItems => {\n        this.iterableProxy.ngForOf = newItems;\n        this.iterableProxy.ngDoCheck();\n      })\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.differ) {\n      this.differ = this.differs.find(this._rawItems).create(this.iterableProxy.ngForTrackBy);\n    }\n    if (this.differ) {\n      const changes = this.differ.diff(this._rawItems);\n      if (changes) {\n        // TODO: not very efficient right now,\n        // but premature optimization is the root of all evil.\n        this.items.all = this._rawItems;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { Items } from './providers/items';\n\n@Component({\n  selector: 'clr-dg-placeholder',\n  template: `\n        <div\n            class=\"datagrid-placeholder\"\n            [class.datagrid-empty]=\"emptyDatagrid\">\n                <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n                <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    `,\n  host: { '[class.datagrid-placeholder-container]': 'true' },\n})\nexport class ClrDatagridPlaceholder<T = any> {\n  constructor(private items: Items<T>) {}\n\n  /**\n   * Tests if the datagrid is empty, meaning it doesn't contain any items\n   */\n  public get emptyDatagrid() {\n    return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ElementRef, InjectionToken } from '@angular/core';\n\nexport const POPOVER_HOST_ANCHOR = new InjectionToken<ElementRef>('POPOVER_HOST_ANCHOR');\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SignpostFocusManager {\n  private _triggerEl: HTMLElement;\n\n  set triggerEl(value: HTMLElement) {\n    this._triggerEl = value;\n  }\n\n  focusTrigger() {\n    if (this._triggerEl) {\n      this._triggerEl.focus();\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SignpostIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  setId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, HostListener, Inject, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\n\n@Directive({\n  selector: '[clrSignpostTrigger]',\n  host: {\n    class: 'signpost-trigger',\n    '[attr.aria-label]': 'commonStrings.keys.signpostToggle',\n    '[attr.aria-expanded]': 'ariaExpanded',\n    '[attr.aria-controls]': 'ariaControl',\n    '[class.active]': 'isOpen',\n  },\n})\n\n/*********\n *\n * @description\n * A Directive added to the ClrSignpost Trigger button that will call the ClrSignpost.toggle() function to hide/show the\n * ClrSignpostContent.\n *\n */\nexport class ClrSignpostTrigger implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  public ariaExpanded: boolean;\n  public ariaControl: string;\n  public isOpen: boolean;\n\n  private document: Document;\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(DOCUMENT) document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit() {\n    this.signpostFocusManager.triggerEl = this.el.nativeElement;\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe((isOpen: boolean) => {\n        this.ariaExpanded = isOpen;\n\n        const prevIsOpen = this.isOpen;\n        this.isOpen = isOpen;\n\n        // openChange fires false on initialization because signpost starts as closed by default\n        // but we shouldn't focus on that initial false value\n        // we should focus back only if it's closed after being opened\n        if (!this.isOpen && prevIsOpen) {\n          this.focusOnClose();\n        }\n      }),\n      this.signpostIdService.id.subscribe(idChange => (this.ariaControl = idChange))\n    );\n  }\n\n  private focusOnClose() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    // we have to set the focus back on the trigger only if the focus is reset back to the body element\n    // if the focus is on another element, we are not allowed to move that focus back to this trigger again.\n    if (!this.isOpen && this.document.activeElement === this.document.body) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  /**********\n   *\n   * @description\n   * click handler for the ClrSignpost trigger button used to hide/show ClrSignpostContent.\n   */\n  @HostListener('click', ['$event'])\n  onSignpostTriggerClick(event: Event): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, ElementRef } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { ClrSignpostTrigger } from './signpost-trigger';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\n\n@Component({\n  selector: 'clr-signpost',\n  template: `\n        <ng-container *ngIf=\"!useCustomTrigger\">\n            <button\n                type=\"button\"\n                class=\"signpost-action btn btn-small btn-link\"\n                clrSignpostTrigger>\n                <clr-icon shape=\"info\" [attr.title]=\"commonStrings.keys.info\"></clr-icon>\n            </button>\n        </ng-container>\n\n        <ng-content></ng-content>\n    `,\n  host: { '[class.signpost]': 'true' },\n  providers: [\n    ClrPopoverToggleService,\n    SignpostFocusManager,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    SignpostIdService,\n  ],\n})\n\n/*********\n *\n * @class ClrSignpost\n *\n * @description\n * Class used to configure and control the state of a ClrSignpost and its associated ClrSignpostContent.\n * It supports the clrPosition with a 'right-middle' default.\n *\n */\nexport class ClrSignpost {\n  constructor(public commonStrings: ClrCommonStringsService) {}\n\n  /**********\n   * @property useCustomTrigger\n   *\n   * @description\n   * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n   *\n   */\n  public useCustomTrigger: boolean = false;\n\n  /**********\n   * @property signPostTrigger\n   *\n   * @description\n   * Uses ContentChild to check for a user supplied element with the ClrSignpostTrigger on it.\n   *\n   */\n  @ContentChild(ClrSignpostTrigger)\n  set customTrigger(trigger: ClrSignpostTrigger) {\n    this.useCustomTrigger = !!trigger;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-cell',\n  template: `\n        <ng-template #cellPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedCell implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n  @ViewChild('cellPortal') templateRef: TemplateRef<void>;\n  cellView: EmbeddedViewRef<void>; // the cells projected view\n\n  ngAfterViewInit() {\n    this.cellView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.cellView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChildren, Injector, OnInit, QueryList, ViewContainerRef } from '@angular/core';\n\nimport { ClrSignpost } from '../../popover/signpost/signpost';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { WrappedCell } from './wrapped-cell';\n\n@Component({\n  selector: 'clr-dg-cell',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-cell]': 'true',\n    '[class.datagrid-signpost-trigger]': 'signpost.length > 0',\n    role: 'gridcell',\n  },\n})\nexport class ClrDatagridCell implements OnInit {\n  /*********\n   * @property signpost\n   *\n   * @description\n   * @ContentChild is used to detect the presence of a Signpost in the projected content.\n   * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n   *\n   */\n  @ContentChildren(ClrSignpost) signpost: QueryList<ClrSignpost>;\n\n  constructor(private vcr: ViewContainerRef) {}\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedCell, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedCell, this.vcr).cellView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum SelectionType {\n  None,\n  Single,\n  Multi,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\n@Injectable()\nexport class DatagridRenderOrganizer {\n  protected _renderStep: Subject<DatagridRenderStep> = new Subject<DatagridRenderStep>();\n  public get renderStep(): Observable<DatagridRenderStep> {\n    return this._renderStep.asObservable();\n  }\n\n  public filterRenderSteps(step: DatagridRenderStep) {\n    return this.renderStep.pipe(filter(testStep => step === testStep));\n  }\n\n  private alreadySized = false;\n\n  public resize() {\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_ON);\n    if (this.alreadySized) {\n      this._renderStep.next(DatagridRenderStep.CLEAR_WIDTHS);\n    }\n    this._renderStep.next(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS);\n    this._renderStep.next(DatagridRenderStep.ALIGN_COLUMNS);\n    this.alreadySized = true;\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_OFF);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridDisplayMode } from '../enums/display-mode.enum';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\n@Injectable()\nexport class DisplayModeService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  protected _view: BehaviorSubject<DatagridDisplayMode> = new BehaviorSubject<DatagridDisplayMode>(\n    DatagridDisplayMode.DISPLAY\n  );\n\n  constructor(renderOrganizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_ON)\n        .subscribe(() => this._view.next(DatagridDisplayMode.CALCULATE))\n    );\n\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_OFF)\n        .subscribe(() => this._view.next(DatagridDisplayMode.DISPLAY))\n    );\n  }\n\n  public get view(): Observable<DatagridDisplayMode> {\n    return this._view.asObservable();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Items } from './items';\nimport { SelectionType } from '../enums/selection-type';\n\nlet nbSelection: number = 0;\n\n@Injectable()\nexport class Selection<T = any> {\n  public id: string;\n  public preserveSelection: boolean = false;\n  private prevSelectionRefs: T[] = []; // Refs of selected items\n  private prevSingleSelectionRef: T; // Ref of single selected item\n  private lockedRefs: T[] = []; // Ref of locked items\n\n  constructor(private _items: Items<T>, private _filters: FiltersProvider<T>) {\n    this.id = 'clr-dg-selection' + nbSelection++;\n\n    this.subscriptions.push(\n      this._filters.change.subscribe(() => {\n        if (!this._selectable || this.preserveSelection) {\n          return;\n        }\n        this.clearSelection();\n      })\n    );\n\n    this.subscriptions.push(\n      this._items.allChanges.subscribe(updatedItems => {\n        // Reset the lockedRefs;\n        const updateLockedRef: T[] = [];\n\n        switch (this.selectionType) {\n          case SelectionType.None: {\n            break;\n          }\n\n          case SelectionType.Single: {\n            let newSingle: any;\n            const trackBy: TrackByFunction<T> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the currentSingle has been set before data was loaded, we look up and save the ref from current data set\n            if (this.currentSingle && !this.prevSingleSelectionRef) {\n              if (this._items.all && this._items.trackBy) {\n                const lookup = this._items.all.findIndex(maybe => maybe === this.currentSingle);\n                this.prevSingleSelectionRef = this._items.trackBy(lookup, this.currentSingle);\n              }\n            }\n\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              // If one of the updated items is the previously selectedSingle, set it as the new one\n              if (this.prevSingleSelectionRef === ref) {\n                newSingle = item;\n                selectionUpdated = true;\n              }\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // If we're using smart datagrids, we expect all items to be present in the updatedItems array.\n            // Therefore, we should delete the currentSingle if it used to be defined but doesn't exist anymore.\n            // No explicit \"delete\" is required, since newSingle would be undefined at this point.\n            // Marking it as selectionUpdated here will set currentSingle to undefined below in the setTimeout.\n            if (this._items.smart && !newSingle) {\n              selectionUpdated = true;\n            }\n\n            // TODO: Discussed this with Eudes and this is fine for now.\n            // But we need to figure out a different pattern for the\n            // child triggering the parent change detection problem.\n            // Using setTimeout for now to fix this.\n            setTimeout(() => {\n              if (selectionUpdated) {\n                this.currentSingle = newSingle;\n              }\n            }, 0);\n            break;\n          }\n\n          case SelectionType.Multi: {\n            let leftOver: any[] = this.current.slice();\n            const trackBy: TrackByFunction<any> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the current has been set before data was loaded, we look up and save the ref from current data set\n            if (this.current.length > 0 && this.prevSelectionRefs.length !== this.current.length) {\n              if (this._items.all && this._items.trackBy) {\n                this.prevSelectionRefs = [];\n                this.current.forEach(item => {\n                  const lookup = this._items.all.findIndex(maybe => maybe === item);\n                  this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n                });\n              }\n            }\n\n            // Duplicate loop, when the issue is issue#2342 is revisited keep in mind that\n            // we need to go over every updated item and check to see if there are valid to be\n            // locked or not and update it. When only add items that are found in the lockedRefs back.\n            //\n            // The both loops below that goes over updatedItems could be combined into one.\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // TODO: revisit this when we work on https://github.com/vmware/clarity/issues/2342\n            // currently, the selection is cleared when filter is applied, so the logic inside\n            // the if statement below results in broken behavior.\n            if (leftOver.length > 0) {\n              updatedItems.forEach((item, index) => {\n                const ref = trackBy(index, item);\n                // Look in current selected refs array if item is selected, and update actual value\n                const selectedIndex = this.prevSelectionRefs.indexOf(ref);\n                if (selectedIndex > -1) {\n                  leftOver[selectedIndex] = item;\n                  selectionUpdated = true;\n                }\n              });\n\n              // Filter out any unmatched items if we're using smart datagrids where we expect all items to be\n              // present\n              if (this._items.smart) {\n                leftOver = leftOver.filter(selected => updatedItems.indexOf(selected) > -1);\n                if (this.current.length !== leftOver.length) {\n                  selectionUpdated = true;\n                }\n              }\n\n              // TODO: Discussed this with Eudes and this is fine for now.\n              // But we need to figure out a different pattern for the\n              // child triggering the parent change detection problem.\n              // Using setTimeout for now to fix this.\n              setTimeout(() => {\n                if (selectionUpdated) {\n                  this.current = leftOver;\n                }\n              }, 0);\n            }\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n        // Sync locked items\n        this.lockedRefs = updateLockedRef;\n      })\n    );\n  }\n\n  public clearSelection(): void {\n    this.current.length = 0;\n    this.prevSelectionRefs = [];\n    this._currentSingle = null;\n    this.prevSingleSelectionRef = null;\n    this.emitChange();\n  }\n\n  private _selectionType: SelectionType = SelectionType.None;\n  public get selectionType(): SelectionType {\n    return this._selectionType;\n  }\n  public set selectionType(value: SelectionType) {\n    if (value === this.selectionType) {\n      return;\n    }\n    this._selectionType = value;\n    if (value === SelectionType.None) {\n      delete this.current;\n    } else {\n      this.updateCurrent([], false);\n    }\n  }\n\n  /** @deprecated since 2.0, remove in 3.0 */\n  public rowSelectionMode: boolean = false;\n\n  private get _selectable(): boolean {\n    return this._selectionType === SelectionType.Multi || this._selectionType === SelectionType.Single;\n  }\n  /**\n   * Ignore items changes in the same change detection cycle.\n   */\n  // tslint:disable-next-line\n  private debounce: boolean = false;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * The current selection in single selection type\n   */\n  private _currentSingle: T;\n  public get currentSingle(): T {\n    return this._currentSingle;\n  }\n  public set currentSingle(value: T) {\n    if (value === this._currentSingle) {\n      return;\n    }\n\n    this._currentSingle = value;\n    if (this._items.all && this._items.trackBy && value) {\n      const lookup = this._items.all.findIndex(maybe => maybe === value);\n      this.prevSingleSelectionRef = this._items.trackBy(lookup, value);\n    }\n    this.emitChange();\n    // Ignore items changes in the same change detection cycle.\n    // @TODO This can likely be removed!\n    this.debounce = true;\n    setTimeout(() => (this.debounce = false));\n  }\n\n  /**\n   * The current selection\n   */\n  private _current: T[];\n  public get current(): T[] {\n    return this._current;\n  }\n  public set current(value: T[]) {\n    this.updateCurrent(value, true);\n  }\n\n  public updateCurrent(value: T[], emit: boolean) {\n    this._current = value;\n    if (emit) {\n      this.emitChange();\n      // Ignore items changes in the same change detection cycle.\n      // @TODO This can likely be removed!\n      this.debounce = true;\n      setTimeout(() => (this.debounce = false));\n    }\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to selection changes\n   */\n  private _change = new Subject<T[] | T>();\n  private emitChange() {\n    if (this._selectionType === SelectionType.Single) {\n      this._change.next(this.currentSingle);\n    } else if (this._selectionType === SelectionType.Multi) {\n      this._change.next(this.current);\n    }\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[] | T> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Checks if an item is currently selected\n   */\n  public isSelected(item: T): boolean {\n    if (this._selectionType === SelectionType.Single) {\n      return this.currentSingle === item;\n    } else if (this._selectionType === SelectionType.Multi) {\n      return this.current.indexOf(item) >= 0;\n    }\n    return false;\n  }\n\n  /**\n   * Selects an item\n   */\n  private selectItem(item: T): void {\n    this.current.push(item);\n    if (this._items.trackBy && this._items.all) {\n      // Push selected ref onto array\n      const lookup = this._items.all.findIndex(maybe => maybe === item);\n      this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n    }\n  }\n\n  /**\n   * Deselects an item\n   */\n  private deselectItem(indexOfItem: number): void {\n    this.current.splice(indexOfItem, 1);\n    if (this._items.trackBy && indexOfItem < this.prevSelectionRefs.length) {\n      // Keep selected refs array in sync\n      const removedItems = this.prevSelectionRefs.splice(indexOfItem, 1);\n      // locked reference is no longer needed (if any)\n      this.lockedRefs = this.lockedRefs.filter(locked => locked !== removedItems[0]);\n    }\n  }\n\n  /**\n   * Selects or deselects an item\n   */\n  public setSelected(item: T, selected: boolean) {\n    switch (this._selectionType) {\n      case SelectionType.None:\n        break;\n      case SelectionType.Single:\n        // in single selection, set currentSingle method should be used\n        break;\n      case SelectionType.Multi:\n        const index = this.current.indexOf(item);\n        if (index >= 0 && !selected) {\n          this.deselectItem(index);\n          this.emitChange();\n        } else if (index < 0 && selected) {\n          this.selectItem(item);\n          this.emitChange();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Checks if all currently displayed items are selected\n   */\n  public isAllSelected(): boolean {\n    if (this._selectionType !== SelectionType.Multi || !this._items.displayed) {\n      return false;\n    }\n    // make sure to exclude the locked items from the list when counting\n    const displayedItems: T[] = this._items.displayed.filter(item => {\n      return this.isLocked(item) === false;\n    });\n\n    const nbDisplayed = displayedItems.length;\n    if (nbDisplayed < 1) {\n      return false;\n    }\n    const temp: T[] = displayedItems.filter(item => this.current.indexOf(item) > -1);\n    return temp.length === displayedItems.length;\n  }\n\n  /**\n   * Make sure that it could be locked\n   *\n   * @remark\n   * Check also is items.all an array, if not there is no nothing to lock or compare to\n   *\n   */\n  private canItBeLocked(): boolean {\n    // We depend on the trackBy and all so there are part of the requirment of is item could be locked\n    return this._selectionType !== SelectionType.None && Array.isArray(this._items.all);\n  }\n\n  /**\n   * Lock and unlock item\n   */\n  public lockItem(item: T, lock: boolean) {\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      if (lock === true) {\n        // Add to lockedRef\n        this.lockedRefs.push(ref);\n      } else {\n        // Remove from lockedRef\n        this.lockedRefs = this.lockedRefs.filter(lockedItem => ref !== lockedItem);\n      }\n    }\n  }\n\n  /**\n   * Check is item locked or not by searcing into lockedRefs for entry\n   */\n  public isLocked(item: T): boolean {\n    /**\n     * The check for selectionType will boost the performence by NOT searching\n     * into the array when there is no need for that.\n     */\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      return this.lockedRefs.indexOf(ref) > -1;\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects or deselects all currently displayed items\n   */\n  public toggleAll() {\n    if (this._selectionType === SelectionType.None || this._selectionType === SelectionType.Single) {\n      return;\n    }\n    /**\n     * If every currently displayed item is already selected, we clear them.\n     * If at least one item isn't selected, we select every currently displayed item.\n     */\n    if (this.isAllSelected()) {\n      this._items.displayed.forEach(item => {\n        const currentIndex = this.current.indexOf(item);\n        if (currentIndex > -1 && this.isLocked(item) === false) {\n          this.deselectItem(currentIndex);\n        }\n      });\n    } else {\n      this._items.displayed.forEach(item => {\n        if (this.current.indexOf(item) < 0 && this.isLocked(item) === false) {\n          this.selectItem(item);\n        }\n      });\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridColumnChanges {\n  WIDTH,\n  HIDDEN,\n}\n\nexport const ALL_COLUMN_CHANGES: DatagridColumnChanges[] = Object.keys(DatagridColumnChanges)\n  .map(key => DatagridColumnChanges[key])\n  .filter(key => key === parseInt(key, 10)); // extracts only integer keys\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-row',\n  template: `\n        <ng-template #rowPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedRow implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('rowPortal') templateRef: TemplateRef<void>;\n  rowView: EmbeddedViewRef<void>; // the rows projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.rowView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.rowView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrLoadingState } from '../../utils/loading/loading';\n\nlet nbRow = 0;\n\n@Injectable()\nexport class DatagridIfExpandService extends IfExpandService {\n  expandableId = '';\n\n  constructor() {\n    super();\n    nbRow++;\n    this.expandableId = 'clr-dg-expandable-row-' + nbRow;\n  }\n\n  // due to the es5 spec if the set is overridden on base class the getter must also be overridden\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._animate.next();\n      this._expandChange.next(value);\n    }\n  }\n\n  loadingStateChange(state: ClrLoadingState) {\n    super.loadingStateChange(state);\n    if (state !== ClrLoadingState.LOADING) {\n      this._animate.next();\n    }\n  }\n\n  private _replace: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get replace(): Observable<boolean> {\n    return this._replace.asObservable();\n  }\n\n  setReplace(replaceValue: boolean) {\n    this._replace.next(replaceValue);\n  }\n\n  private _animate: Subject<boolean> = new Subject<boolean>();\n  get animate(): Observable<boolean> {\n    return this._animate.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { WrappedRow } from './wrapped-row';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrExpandableAnimation } from '../../utils/animations/expandable-animation/expandable-animation';\nimport { DetailService } from './providers/detail.service';\n\nlet nbRow: number = 0;\n\n@Component({\n  selector: 'clr-dg-row',\n  templateUrl: './datagrid-row.html',\n  host: {\n    '[class.datagrid-row]': 'true',\n    '[class.datagrid-selected]': 'selected',\n    '[attr.aria-owns]': 'id',\n    role: 'rowgroup',\n  },\n  providers: [\n    DatagridIfExpandService,\n    { provide: IfExpandService, useExisting: DatagridIfExpandService },\n    { provide: LoadingListener, useExisting: DatagridIfExpandService },\n  ],\n})\nexport class ClrDatagridRow<T = any> implements AfterContentInit, AfterViewInit {\n  public id: string;\n  public radioId: string;\n  public checkboxId: string;\n  public expandableId: string;\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ViewChild(ClrExpandableAnimation) expandAnimation: ClrExpandableAnimation;\n\n  /**\n   * Model of the row, to use for selection\n   */\n  @Input('clrDgItem') item: T;\n\n  public replaced;\n\n  public expandAnimationTrigger: boolean = false;\n\n  constructor(\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    public globalExpandable: ExpandableRowsCount,\n    public expand: DatagridIfExpandService,\n    public detailService: DetailService,\n    private displayMode: DisplayModeService,\n    private vcr: ViewContainerRef,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    nbRow++;\n    this.id = 'clr-dg-row' + nbRow;\n    this.radioId = 'clr-dg-row-rd' + nbRow;\n    this.checkboxId = 'clr-dg-row-cb' + nbRow;\n    this.expandableId = expand.expandableId;\n\n    this.subscriptions.push(\n      combineLatest(this.expand.replace, this.expand.expandChange).subscribe(\n        ([expandReplaceValue, expandChangeValue]) => {\n          if (expandReplaceValue && expandChangeValue) {\n            // replaced and expanding\n            this.replaced = true;\n            this.renderer.addClass(this.el.nativeElement, 'datagrid-row-replaced');\n          } else {\n            this.replaced = false;\n            // Handles these cases: not replaced and collapsing & replaced and\n            // collapsing and not replaced and expanding.\n            this.renderer.removeClass(this.el.nativeElement, 'datagrid-row-replaced');\n          }\n        }\n      )\n    );\n  }\n\n  private _selected = false;\n  /**\n   * Indicates if the row is selected\n   */\n  public get selected() {\n    if (this.selection.selectionType === SelectionType.None) {\n      return this._selected;\n    } else {\n      return this.selection.isSelected(this.item);\n    }\n  }\n\n  @Input('clrDgSelected')\n  public set selected(value: boolean) {\n    if (this.selection.selectionType === SelectionType.None) {\n      this._selected = value;\n    } else {\n      this.selection.setSelected(this.item, value);\n    }\n  }\n\n  // By default every item is selectable\n  @Input('clrDgSelectable')\n  public set clrDgSelectable(value: boolean) {\n    this.selection.lockItem(this.item, value === false);\n  }\n\n  public get clrDgSelectable() {\n    return !this.selection.isLocked(this.item);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<boolean>(false);\n\n  public toggle(selected = !this.selected) {\n    if (selected !== this.selected) {\n      this.selected = selected;\n      this.selectedChanged.emit(selected);\n    }\n  }\n\n  public get expanded() {\n    return this.expand.expanded;\n  }\n\n  @Input('clrDgExpanded')\n  public set expanded(value: boolean) {\n    this.expand.expanded = value;\n  }\n\n  @Output('clrDgExpandedChange') expandedChange = new EventEmitter<boolean>(false);\n\n  public toggleExpand() {\n    if (this.expand.expandable) {\n      this.expandAnimation.updateStartHeight();\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  @ViewChild('detailButton') detailButton;\n\n  private _detailOpenLabel = '';\n  @Input()\n  set clrDgDetailOpenLabel(label: string) {\n    this._detailOpenLabel = label;\n  }\n  get clrDgDetailOpenLabel(): string {\n    return this._detailOpenLabel ? this._detailOpenLabel : this.commonStrings.keys.open;\n  }\n  private _detailCloseLabel = '';\n  @Input()\n  set clrDgDetailCloseLabel(label: string) {\n    this._detailCloseLabel = label;\n  }\n  get clrDgDetailCloseLabel(): string {\n    return this._detailCloseLabel ? this._detailCloseLabel : this.commonStrings.keys.close;\n  }\n\n  /*****\n   * property dgCells\n   *\n   * @description\n   * A Query List of the ClrDatagrid cells in this row.\n   *\n   */\n  @ContentChildren(ClrDatagridCell) dgCells: QueryList<ClrDatagridCell>;\n\n  ngAfterContentInit() {\n    this.dgCells.changes.subscribe(() => {\n      this.dgCells.forEach(cell => {\n        if (!cell._view.destroyed) {\n          this._scrollableCells.insert(cell._view);\n        }\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.displayMode.view.subscribe(viewChange => {\n        // Listen for view changes and move cells around depending on the current displayType\n        // remove cell views from display view\n        for (let i = this._scrollableCells.length; i > 0; i--) {\n          this._scrollableCells.detach();\n        }\n        // remove cell views from calculated view\n        for (let i = this._calculatedCells.length; i > 0; i--) {\n          this._calculatedCells.detach();\n        }\n        if (viewChange === DatagridDisplayMode.CALCULATE) {\n          this.displayCells = false;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._calculatedCells.insert(cell._view);\n            }\n          });\n        } else {\n          this.displayCells = true;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._scrollableCells.insert(cell._view);\n            }\n          });\n        }\n      }),\n      this.expand.animate.subscribe(() => {\n        this.expandAnimationTrigger = !this.expandAnimationTrigger;\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  public displayCells = false;\n\n  @ViewChild('stickyCells', { read: ViewContainerRef })\n  _stickyCells: ViewContainerRef;\n  @ViewChild('scrollableCells', { read: ViewContainerRef })\n  _scrollableCells: ViewContainerRef;\n  @ViewChild('calculatedCells', { read: ViewContainerRef })\n  _calculatedCells: ViewContainerRef;\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedRow, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedRow, this.vcr).rowView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DatagridPropertyComparator } from '../built-in/comparators/datagrid-property-comparator';\nimport { ClrDatagridStateInterface } from '../interfaces/state.interface';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n/**\n * This provider aggregates state changes from the various providers of the Datagrid\n */\n@Injectable()\nexport class StateProvider<T> {\n  constructor(\n    private filters: FiltersProvider<T>,\n    private sort: Sort<T>,\n    private page: Page,\n    private debouncer: StateDebouncer\n  ) {}\n\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  change: Observable<ClrDatagridStateInterface<T>> = this.debouncer.change.pipe(map(() => this.state));\n\n  /*\n     * By making this a getter, we open the possibility for a setter in the future.\n     * It's been requested a couple times.\n     */\n  get state(): ClrDatagridStateInterface<T> {\n    const state: ClrDatagridStateInterface<T> = {};\n    if (this.page.size > 0) {\n      state.page = {\n        from: this.page.firstItem,\n        to: this.page.lastItem,\n        size: this.page.size,\n        current: this.page.current,\n      };\n    }\n    if (this.sort.comparator) {\n      if (this.sort.comparator instanceof DatagridPropertyComparator) {\n        /*\n                 * Special case for the default object property comparator,\n                 * we give the property name instead of the actual comparator.\n                 */\n        state.sort = { by: (<DatagridPropertyComparator<T>>this.sort.comparator).prop, reverse: this.sort.reverse };\n      } else {\n        state.sort = { by: this.sort.comparator, reverse: this.sort.reverse };\n      }\n    }\n\n    const activeFilters = this.filters.getActiveFilters();\n    if (activeFilters.length > 0) {\n      state.filters = [];\n      for (const filter of activeFilters) {\n        if (filter.state) {\n          state.filters.push(filter.state);\n        } else {\n          state.filters.push(filter);\n        }\n      }\n    }\n    return state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n/**\n * @description\n * Internal datagrid service that holds a reference to the clr-dg-table element and exposes a method to get height.\n */\n@Injectable()\nexport class TableSizeService {\n  private _tableRef: HTMLElement;\n\n  public get tableRef(): HTMLElement {\n    return this._tableRef;\n  }\n\n  public set tableRef(element: HTMLElement) {\n    this._tableRef = element;\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n  public set table(table: ElementRef) {\n    if (isPlatformBrowser(this.platformId) && table.nativeElement) {\n      this.tableRef = table.nativeElement.querySelector('.datagrid-table');\n    }\n  }\n\n  // Used when resizing columns to show the column border being dragged.\n  getColumnDragHeight(): string {\n    if (!this.tableRef) {\n      return;\n    }\n    return `${this.tableRef.clientHeight}px`;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnStateDiff, ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES } from '../enums/column-changes.enum';\n\n@Injectable()\nexport class ColumnsService {\n  columns: BehaviorSubject<ColumnState>[] = [];\n  private _cache: ColumnState[] = [];\n\n  cache() {\n    this._cache = this.columns.map(subject => {\n      const value = { ...subject.value };\n      delete value.changes;\n      return value;\n    });\n  }\n\n  hasCache() {\n    return !!this._cache.length;\n  }\n\n  resetToLastCache() {\n    this._cache.forEach((state, index) => {\n      // Just emit the exact value from the cache\n      this.columns[index].next({ ...state, changes: ALL_COLUMN_CHANGES });\n    });\n    this._cache = [];\n  }\n\n  get columnStates(): ColumnState[] {\n    return this.columns.map(column => column.value);\n  }\n\n  get hasHideableColumns(): boolean {\n    return this.columnStates.filter(state => state.hideable).length > 0;\n  }\n\n  // Helper method to emit a change to a column only when there is an actual diff to process for that column\n  emitStateChangeAt(columnIndex: number, diff: ColumnStateDiff) {\n    if (!this.columns[columnIndex]) {\n      return;\n    }\n    this.emitStateChange(this.columns[columnIndex], diff);\n  }\n\n  emitStateChange(column: BehaviorSubject<ColumnState>, diff: ColumnStateDiff) {\n    column.next({ ...column.value, ...diff });\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { ClrDatagridStateInterface } from './interfaces/state.interface';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { FiltersProvider } from './providers/filters';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { Items } from './providers/items';\nimport { Page } from './providers/page';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { Sort } from './providers/sort';\nimport { StateDebouncer } from './providers/state-debouncer.provider';\nimport { StateProvider } from './providers/state.provider';\nimport { TableSizeService } from './providers/table-size.service';\nimport { DatagridRenderOrganizer } from './render/render-organizer';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-datagrid',\n  templateUrl: './datagrid.html',\n  providers: [\n    Selection,\n    Sort,\n    FiltersProvider,\n    Page,\n    Items,\n    DatagridRenderOrganizer,\n    RowActionService,\n    ExpandableRowsCount,\n    StateDebouncer,\n    DetailService,\n    UNIQUE_ID_PROVIDER,\n    StateProvider,\n    TableSizeService,\n    ColumnsService,\n    DisplayModeService,\n  ],\n  host: {\n    '[class.datagrid-host]': 'true',\n    '[class.datagrid-detail-open]': 'detailService.isOpen',\n  },\n})\nexport class ClrDatagrid<T = any> implements AfterContentInit, AfterViewInit, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    public items: Items<T>,\n    public expandableRows: ExpandableRowsCount,\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    private stateProvider: StateProvider<T>,\n    private displayMode: DisplayModeService,\n    private renderer: Renderer2,\n    public detailService: DetailService,\n    @Inject(UNIQUE_ID) datagridId: string,\n    private el: ElementRef,\n    private page: Page,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this.detailService.id = datagridId;\n  }\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  /**\n   * Freezes the datagrid while data is loading\n   */\n  public get loading(): boolean {\n    return this.items.loading;\n  }\n\n  @Input('clrDgLoading')\n  public set loading(value: boolean) {\n    this.items.loading = value;\n  }\n\n  /**\n   * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n   */\n  @Output('clrDgRefresh') public refresh = new EventEmitter<ClrDatagridStateInterface<T>>(false);\n\n  /**\n   * Public method to re-trigger the computation of displayed items manually\n   */\n  public dataChanged() {\n    this.items.refresh();\n  }\n\n  /**\n   * We grab the smart iterator from projected content\n   */\n  @ContentChild(ClrDatagridItems) public iterator: ClrDatagridItems<T>;\n\n  /**\n   * Array of all selected items\n   */\n  @Input('clrDgSelected')\n  set selected(value: T[]) {\n    if (value) {\n      this.selection.selectionType = SelectionType.Multi;\n    } else {\n      this.selection.selectionType = SelectionType.None;\n    }\n    this.selection.updateCurrent(value, false);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<T[]>(false);\n\n  /**\n   * Selected item in single-select mode\n   */\n  @Input('clrDgSingleSelected')\n  set singleSelected(value: T) {\n    this.selection.selectionType = SelectionType.Single;\n    // the clrDgSingleSelected is updated in one of two cases:\n    // 1. an explicit value is passed\n    // 2. is being set to null or undefined, where previously it had a value\n    if (value) {\n      this.selection.currentSingle = value;\n    } else if (this.selection.currentSingle) {\n      this.selection.currentSingle = null;\n    }\n  }\n\n  @Output('clrDgSingleSelectedChange') singleSelectedChanged = new EventEmitter<T>(false);\n\n  @Input() clrDgSingleSelectionAriaLabel: string = this.commonStrings.keys.singleSelectionAriaLabel;\n  @Input() clrDgSingleActionableAriaLabel: string = this.commonStrings.keys.singleActionableAriaLabel;\n  @Input() clrDetailExpandableAriaLabel: string = this.commonStrings.keys.detailExpandableAriaLabel;\n\n  @Input()\n  set clrDgPreserveSelection(state: boolean) {\n    this.selection.preserveSelection = state;\n  }\n  /**\n   * @deprecated since 2.0, remove in 3.0\n   *\n   * Selection/Deselection on row click mode\n   */\n  @Input('clrDgRowSelection')\n  set rowSelectionMode(value: boolean) {\n    this.selection.rowSelectionMode = value;\n  }\n\n  /**\n   * Indicates if all currently displayed items are selected\n   */\n  public get allSelected() {\n    return this.selection.isAllSelected();\n  }\n\n  /**\n   * Selects/deselects all currently displayed items\n   * @param value\n   */\n  public set allSelected(value: boolean) {\n    /**\n     * This is a setter but we ignore the value.\n     * It's strange, but it lets us have an indeterminate state where only\n     * some of the items are selected.\n     */\n    this.selection.toggleAll();\n  }\n\n  /**\n   * Custom placeholder detection\n   */\n  @ContentChild(ClrDatagridPlaceholder) public placeholder: ClrDatagridPlaceholder<T>;\n\n  /**\n   * Hideable Column data source / detection.\n   */\n  @ContentChildren(ClrDatagridColumn) public columns: QueryList<ClrDatagridColumn<T>>;\n\n  /**\n   * When the datagrid is user-managed without the smart iterator, we get the items displayed\n   * by querying the projected content. This is needed to keep track of the models currently\n   * displayed, typically for selection.\n   */\n\n  @ContentChildren(ClrDatagridRow) rows: QueryList<ClrDatagridRow<T>>;\n  @ViewChild('scrollableColumns', { read: ViewContainerRef })\n  scrollableColumns: ViewContainerRef;\n\n  @ViewChild('datagridTable', { read: ElementRef })\n  datagridTable: ElementRef;\n\n  ngAfterContentInit() {\n    if (!this.items.smart) {\n      this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n    }\n\n    this._subscriptions.push(\n      this.rows.changes.subscribe(() => {\n        if (!this.items.smart) {\n          this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n        }\n        this.rows.forEach(row => {\n          this._displayedRows.insert(row._view);\n        });\n      })\n    );\n  }\n\n  /**\n   * Our setup happens in the view of some of our components, so we wait for it to be done before starting\n   */\n  ngAfterViewInit() {\n    // TODO: determine if we can get rid of provider wiring in view init so that subscriptions can be done earlier\n    this.refresh.emit(this.stateProvider.state);\n    this._subscriptions.push(\n      this.stateProvider.change.subscribe(state => this.refresh.emit(state)),\n      this.selection.change.subscribe(s => {\n        if (this.selection.selectionType === SelectionType.Single) {\n          this.singleSelectedChanged.emit(<T>s);\n        } else if (this.selection.selectionType === SelectionType.Multi) {\n          this.selectedChanged.emit(<T[]>s);\n        }\n      }),\n      this.page.change.subscribe(() => {\n        this.datagridTable.nativeElement.focus();\n      }),\n      // A subscription that listens for displayMode changes on the datagrid\n      this.displayMode.view.subscribe(viewChange => {\n        // Remove any projected columns from the projectedDisplayColumns container\n        for (let i = this._projectedDisplayColumns.length; i > 0; i--) {\n          this._projectedDisplayColumns.detach();\n        }\n        // Remove any projected columns from the projectedCalculationColumns container\n        for (let i = this._projectedCalculationColumns.length; i > 0; i--) {\n          this._projectedCalculationColumns.detach();\n        }\n        // Remove any projected rows from the calculationRows container\n        for (let i = this._calculationRows.length; i > 0; i--) {\n          this._calculationRows.detach();\n        }\n        // Remove any projected rows from the displayedRows container\n        for (let i = this._displayedRows.length; i > 0; i--) {\n          this._displayedRows.detach();\n        }\n        if (viewChange === DatagridDisplayMode.DISPLAY) {\n          // Set state, style for the datagrid to DISPLAY and insert row & columns into containers\n          this.renderer.removeClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedDisplayColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._displayedRows.insert(row._view);\n          });\n        } else {\n          // Set state, style for the datagrid to CALCULATE and insert row & columns into containers\n          this.renderer.addClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedCalculationColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._calculationRows.insert(row._view);\n          });\n        }\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  resize(): void {\n    this.organizer.resize();\n  }\n\n  @ViewChild('projectedDisplayColumns', { read: ViewContainerRef })\n  _projectedDisplayColumns: ViewContainerRef;\n  @ViewChild('projectedCalculationColumns', { read: ViewContainerRef })\n  _projectedCalculationColumns: ViewContainerRef;\n  @ViewChild('displayedRows', { read: ViewContainerRef })\n  _displayedRows: ViewContainerRef;\n  @ViewChild('calculationRows', { read: ViewContainerRef })\n  _calculationRows: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-action-bar',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.datagrid-action-bar]': 'true' },\n})\nexport class ClrDatagridActionBar {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Inject, Input, OnDestroy, Output, NgZone, PLATFORM_ID } from '@angular/core';\n\nimport { RowActionService } from './providers/row-action-service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { Subscription } from 'rxjs';\n\nlet clrDgActionId = 0;\n\n@Component({\n  selector: 'clr-dg-action-overflow',\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverToggleService, ClrPopoverEventsService, ClrPopoverPositionService],\n  template: `\n      <button class=\"datagrid-action-toggle\"\n              type=\"button\"\n              role=\"button\"\n              aria-haspopup=\"true\"\n              #anchor\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-expanded]=\"open\"\n              [attr.aria-label]=\"commonStrings.keys.rowActions\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton>\n          <clr-icon shape=\"ellipsis-vertical\" [attr.title]=\"commonStrings.keys.rowActions\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-action-overflow\"\n           role=\"menu\"\n           [id]=\"popoverId\"\n           [attr.aria-hidden]=\"!open\"\n           [attr.id]=\"popoverId\"\n           clrFocusTrap\n           (click)=\"closeOverflowContent($event)\"\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridActionOverflow implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.CENTER,\n  };\n\n  constructor(\n    private rowActionService: RowActionService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    this.rowActionService.register();\n    this.subscriptions.push(\n      this.smartToggleService.openChange.subscribe(openState => {\n        this.open = openState;\n        if (openState) {\n          this.focusFirstButton();\n        }\n      })\n    );\n    this.popoverId = 'clr-action-menu' + clrDgActionId++;\n  }\n\n  ngOnDestroy() {\n    this.rowActionService.unregister();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  closeOverflowContent(event): void {\n    this.smartToggleService.toggleWithEvent(event);\n  }\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  private focusFirstButton(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          const firstButton: HTMLButtonElement = document.querySelector('button.action-item');\n          if (firstButton) {\n            firstButton.focus();\n          }\n        });\n      });\n    }\n  }\n\n  @Input('clrDgActionOverflowOpen')\n  public set open(open: boolean) {\n    const openState = !!open;\n    if (!!openState !== this.open) {\n      // prevents chocolate mess\n      this.smartToggleService.open = openState;\n      this.openChange.emit(openState);\n      this._open = openState;\n    }\n  }\n\n  @Output('clrDgActionOverflowOpenChange') public openChange = new EventEmitter<boolean>(false);\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, Injectable } from '@angular/core';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../../../utils/drag-and-drop/drag-event';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\nconst MIN_COLUMN_WIDTH = 96;\n\n// This service allows DatagridHeaderRenderer and ClrDatagridColumnSeparator\n// to share column resize data with each other.\n\n@Injectable()\nexport class ColumnResizerService {\n  constructor(private el: ElementRef, private domAdapter: DomAdapter, private organizer: DatagridRenderOrganizer) {}\n\n  private widthBeforeResize: number;\n\n  private _resizedBy: number = 0;\n\n  public get resizedBy() {\n    return this._resizedBy;\n  }\n\n  // is it within the maximum resize range to the left\n  public isWithinMaxResizeRange: boolean;\n\n  public get minColumnWidth() {\n    return this.domAdapter.minWidth(this.el.nativeElement) || MIN_COLUMN_WIDTH;\n  }\n\n  public get maxResizeRange() {\n    return this.widthBeforeResize - this.minColumnWidth;\n  }\n\n  public startResize(): void {\n    this._resizedBy = 0;\n    this.isWithinMaxResizeRange = true;\n    this.widthBeforeResize = this.domAdapter.clientRect(this.el.nativeElement).width;\n  }\n\n  public endResize(): void {\n    this.organizer.resize();\n  }\n\n  public get widthAfterResize(): number {\n    return this.widthBeforeResize + this._resizedBy;\n  }\n\n  public calculateResize(event: ClrDragEvent<any>): void {\n    const moveX = event.dragPosition.moveX;\n    // returns the resize amount within the allowed range\n    if (moveX < -this.maxResizeRange) {\n      this._resizedBy = -this.maxResizeRange;\n      this.isWithinMaxResizeRange = false;\n    } else {\n      this._resizedBy = moveX;\n      this.isWithinMaxResizeRange = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Renderer2 } from '@angular/core';\n\nimport { ClrDragEvent } from '../../utils/drag-and-drop/drag-event';\nimport { ColumnResizerService } from './providers/column-resizer.service';\nimport { TableSizeService } from './providers/table-size.service';\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-dg-column-separator',\n  template: `\n    <div class=\"datagrid-column-handle\" aria-hidden=\"true\"\n      clrDraggable \n      [clrGroup]=\"columnSeparatorId\" \n      (clrDragStart)=\"showTracker(resizeTrackerEl)\" \n      (clrDragMove)=\"moveTracker($event, resizeTrackerEl)\" \n      (clrDragEnd)=\"hideTracker(resizeTrackerEl)\"></div>\n    <div class=\"datagrid-column-resize-tracker\" #resizeTrackerEl></div>\n    `,\n  host: {\n    '[class.datagrid-column-separator]': 'true',\n  },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrDatagridColumnSeparator {\n  // Every column draggable separator should have its own unique ID\n  // in order to not conflict with other draggables/droppables.\n  constructor(\n    private columnResizerService: ColumnResizerService,\n    private renderer: Renderer2,\n    private tableSizeService: TableSizeService,\n    @Inject(DOCUMENT) private document: any,\n    @Inject(UNIQUE_ID) public columnSeparatorId: string\n  ) {}\n\n  public showTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.startResize();\n    const tableHeight = this.tableSizeService.getColumnDragHeight();\n    this.renderer.setStyle(resizeTrackerEl, 'height', tableHeight);\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'block');\n  }\n\n  public moveTracker(event: ClrDragEvent<any>, resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.calculateResize(event);\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(${this.columnResizerService.resizedBy}px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'col-resize');\n    this.redFlagTracker(resizeTrackerEl);\n  }\n\n  public hideTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.endResize();\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'none');\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(0px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'auto');\n  }\n\n  private redFlagTracker(resizeTrackerEl: HTMLElement) {\n    let isWithinMaxResizeRange: boolean;\n    // @TODO(JEREMY) Review this, it will always be true because above is always null\n    if (isWithinMaxResizeRange !== this.columnResizerService.isWithinMaxResizeRange) {\n      isWithinMaxResizeRange = this.columnResizerService.isWithinMaxResizeRange;\n      if (!isWithinMaxResizeRange) {\n        this.renderer.addClass(resizeTrackerEl, 'exceeded-max');\n      } else {\n        this.renderer.removeClass(resizeTrackerEl, 'exceeded-max');\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-column-toggle-title',\n  template: `<ng-content></ng-content>`,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\n\n@Component({\n  selector: 'clr-dg-column-toggle-button',\n  template: `\n    <button class=\"btn btn-sm btn-link switch-button\"\n            (click)=\"selectAll()\"\n            [disabled]=\"allHideablesVisible\"\n            type=\"button\">\n      <ng-content></ng-content>\n    </button>\n  `,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleButton {\n  constructor(private columnsService: ColumnsService) {}\n\n  private allSelected: Subject<boolean> = new EventEmitter();\n\n  @Output('clrAllSelected')\n  get clrAllSelected(): Observable<boolean> {\n    return this.allSelected.asObservable();\n  }\n\n  private hideableColumns(): BehaviorSubject<ColumnState>[] {\n    return this.columnsService.columns.filter(column => column.value.hideable);\n  }\n\n  get allHideablesVisible() {\n    return this.hideableColumns().filter(column => column.value.hidden).length === 0;\n  }\n\n  selectAll() {\n    this.hideableColumns().forEach(hideableColumn =>\n      this.columnsService.emitStateChange(hideableColumn, {\n        hidden: false,\n        changes: [DatagridColumnChanges.HIDDEN],\n      })\n    );\n    this.allSelected.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Inject, ContentChild, ElementRef, NgZone, PLATFORM_ID, ViewChild } from '@angular/core';\n\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\n\n@Component({\n  selector: 'clr-dg-column-toggle',\n  template: `    \n      <button\n              role=\"button\"\n              type=\"button\"\n              class=\"btn btn-sm btn-link column-toggle--action\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-owns]=\"popoverId\">\n          <clr-icon shape=\"view-columns\" [attr.title]=\"commonStrings.keys.pickColumns\"></clr-icon>\n      </button>\n      <div class=\"column-switch\"\n           role=\"dialog\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"openState at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"switch-header\">\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #menuDescription>{{commonStrings.keys.showColumnsMenuDescription}}</div>\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #allSelected>{{commonStrings.keys.allColumnsSelected}}</div>\n              <ng-container *ngIf=\"!customToggleTitle\">{{commonStrings.keys.showColumns}}</ng-container>\n              <ng-content select=\"clr-dg-column-toggle-title\"></ng-content>\n              <button class=\"btn btn-sm btn-link toggle-switch-close-button\"\n                      clrPopoverCloseButton\n                      type=\"button\"\n                      [attr.aria-label]=\"commonStrings.keys.close\">\n                  <clr-icon shape=\"close\" \n                            [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n          <ul class=\"switch-content list-unstyled\">\n              <li *ngFor=\"let columnState of hideableColumnStates;trackBy: trackByFn\">\n                  <clr-checkbox-wrapper>\n                      <input clrCheckbox type=\"checkbox\"\n                             [disabled]=\"hasOnlyOneVisibleColumn && !columnState.hidden\"\n                             [ngModel]=\"!columnState.hidden\"\n                             (ngModelChange)=\"toggleColumnState(columnState, !$event)\">\n                      <label>\n                          <ng-template [ngTemplateOutlet]=\"columnState.titleTemplateRef\"></ng-template>\n                      </label>\n                  </clr-checkbox-wrapper>\n              </li>\n          </ul>\n          <div class=\"switch-footer\">\n              <ng-content select=\"clr-dg-column-toggle-button\"></ng-content>\n              <clr-dg-column-toggle-button *ngIf=\"!customToggleButton\" (clrAllSelected)=\"allColumnsSelected()\">\n                  {{commonStrings.keys.selectAll}}\n              </clr-dg-column-toggle-button>\n          </div>\n      </div>\n  `,\n  host: { '[class.column-switch-wrapper]': 'true', '[class.active]': 'openState' },\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverEventsService, ClrPopoverPositionService, ClrPopoverToggleService],\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggle {\n  private _allColumnsVisible: boolean;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n  public openState;\n\n  @ContentChild(ClrDatagridColumnToggleTitle) customToggleTitle: ClrDatagridColumnToggleTitle;\n  @ContentChild(ClrDatagridColumnToggleButton) customToggleButton: ClrDatagridColumnToggleButton;\n  @ViewChild('menuDescription', { read: ElementRef })\n  private menuDescriptionElement: ElementRef<HTMLElement>;\n  @ViewChild('allSelected', { read: ElementRef })\n  private allSelectedElement: ElementRef<HTMLElement>;\n\n  public get allColumnsVisible(): boolean {\n    return this._allColumnsVisible;\n  }\n\n  public set allColumnsVisible(value: boolean) {\n    this._allColumnsVisible = value;\n  }\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private columnsService: ColumnsService,\n    @Inject(UNIQUE_ID) public columnSwitchId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {}\n\n  get hideableColumnStates(): ColumnState[] {\n    const hideables = this.columnsService.columns.filter(column => column.value.hideable);\n    return hideables.map(column => column.value);\n  }\n\n  get hasOnlyOneVisibleColumn(): boolean {\n    const nbNonHideableColumns = this.columnsService.columns.length - this.hideableColumnStates.length;\n    // this should only return true when there is no non-hideable columns.\n    return (\n      nbNonHideableColumns === 0 && this.hideableColumnStates.filter(columnState => !columnState.hidden).length === 1\n    );\n  }\n\n  toggleColumnState(columnState: ColumnState, event: boolean) {\n    const columnToToggle = this.columnsService.columns.filter(column => column.value === columnState)[0];\n    this.columnsService.emitStateChange(columnToToggle, {\n      hidden: event,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  toggleSwitchPanel() {\n    this.openState = !this.openState;\n    if (this.openState && isPlatformBrowser(this.platformId) && this.menuDescriptionElement) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.menuDescriptionElement.nativeElement.focus();\n        });\n      });\n    }\n  }\n\n  allColumnsSelected() {\n    this.allSelectedElement.nativeElement.focus();\n  }\n\n  // Without tracking the checkboxes get rerendered on model update, which leads\n  // to loss of focus after checkbox toggle.\n  trackByFn(index) {\n    return index;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional } from '@angular/core';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\n\n/*\n * I don't think this deserves to be in IfExpanded itself,\n * so I'm adding a second directive on the same selector for now just for the datagrid\n */\n@Directive({ selector: '[clrIfExpanded]' })\nexport class DatagridDetailRegisterer {\n  constructor(@Optional() private expandableRowsCount: ExpandableRowsCount) {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.register();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.unregister();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-dg-detail-header',\n  host: {\n    '[class.datagrid-detail-header]': 'true',\n  },\n  template: `\n    <div class=\"datagrid-detail-header-title\" clrFocusOnViewInit [id]=\"titleId\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"datagrid-detail-pane-close\">\n      <button type=\"button\" \n              class=\"btn btn-link\" \n              (click)=\"detailService.close()\" \n              [attr.aria-label]=\"commonStrings.keys.close\">\n        <clr-icon size=\"24\" shape=\"times\"></clr-icon>\n      </button>\n    </div>\n  `,\n})\nexport class ClrDatagridDetailHeader {\n  get titleId() {\n    return `${this.detailService.id}-title`;\n  }\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, HostListener } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\n\n@Component({\n  selector: 'clr-dg-detail',\n  host: {\n    '[class.datagrid-detail-pane]': 'true',\n  },\n  // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page\n  // have to test for presence of header for aria-describedby because it was causing unit tests to crash\n  template: `\n    <div [clrFocusTrap]=\"{strict: false}\" class=\"datagrid-detail-pane-content\" *ngIf=\"detailService.isOpen\" role=\"dialog\"\n         [id]=\"detailService.id\" aria-modal=\"true\" [attr.aria-describedby]=\"header ? header.titleId : ''\">\n    <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneStart}}</div>\n      <ng-content></ng-content>\n      <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneEnd}}</div>\n    </div>\n    `,\n})\nexport class ClrDatagridDetail {\n  @ContentChild(ClrDatagridDetailHeader) public header: ClrDatagridDetailHeader;\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n\n  @HostListener('document:keyup.esc')\n  closeCheck(): void {\n    this.detailService.close();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DetailService } from './providers/detail.service';\n\n@Directive({\n  selector: '[clrIfDetail]',\n})\nexport class ClrIfDetail implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private skip = false; // This keeps us from resetting the input and calling the toggle twice\n\n  @Input('clrIfDetail')\n  set state(model) {\n    if (!this.skip) {\n      this.detailService.toggle(model);\n    }\n    this.skip = false;\n  }\n\n  @Output('clrIfDetailChange') public stateChange = new EventEmitter<any>(null);\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private detailService: DetailService\n  ) {\n    this.detailService.enabled = true;\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.detailService.stateChange.subscribe(state => {\n        if (state === true) {\n          this.togglePanel(true);\n        } else {\n          this.togglePanel(false);\n        }\n      })\n    );\n  }\n\n  private togglePanel(showPanel: boolean) {\n    let stateChangeParams = null;\n    this.viewContainer.clear();\n    if (showPanel === true) {\n      this.viewContainer.createEmbeddedView(this.templateRef, { $implicit: this.detailService.state });\n      this.skip = true;\n      stateChangeParams = this.detailService.state;\n    }\n\n    this.stateChange.emit(stateChangeParams);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-detail-body',\n  template: `\n    <div class=\"clr-dg-detail-body-wrapper\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.datagrid-detail-body]': 'true',\n  },\n})\nexport class ClrDatagridDetailBody {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild } from '@angular/core';\n\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-footer',\n  template: `\n        <ng-container\n            *ngIf=\"(selection.selectionType === SELECTION_TYPE.Multi) && (selection.current.length > 0)\">\n          <div class=\"clr-form-control-disabled\">\n              <clr-checkbox-wrapper class=\"datagrid-footer-select\">\n                <input clrCheckbox type=\"checkbox\" checked=\"checked\" disabled>\n                <label>{{selection.current.length}}</label>\n            </clr-checkbox-wrapper>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!detailService.isOpen\">\n          <ng-content select=\"clr-dg-column-toggle\"></ng-content>\n          <clr-dg-column-toggle *ngIf=\"hasHideableColumns && !toggle\"></clr-dg-column-toggle>\n          <div class=\"datagrid-footer-description\">\n              <ng-content></ng-content>\n          </div>\n        </ng-container>\n        <ng-content select=\"clr-dg-pagination\"></ng-content>\n    `,\n  host: {\n    '[class.datagrid-footer]': 'true',\n  },\n})\nexport class ClrDatagridFooter<T = any> {\n  constructor(\n    public selection: Selection<T>,\n    public detailService: DetailService,\n    private columnsService: ColumnsService\n  ) {}\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ContentChild(ClrDatagridColumnToggle) toggle: ClrDatagridColumnToggle;\n\n  get hasHideableColumns(): boolean {\n    return this.columnsService.hasHideableColumns;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnState } from '../interfaces/column-state.interface';\n\nexport const COLUMN_STATE = new InjectionToken<ColumnState>('COLUMN_STATE');\n\nexport function columnStateFactory() {\n  return new BehaviorSubject<ColumnState>({\n    changes: [],\n  });\n}\n\nexport const COLUMN_STATE_PROVIDER = {\n  provide: COLUMN_STATE,\n  useFactory: columnStateFactory,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum KeyCodes {\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n  Backspace = 'Backspace',\n  Tab = 'TAB',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Space = 'Space',\n  Home = 'Home',\n  End = 'End',\n}\n\nexport enum IEKeyCodes {\n  ArrowUp = 'Up',\n  ArrowDown = 'Down',\n  ArrowRight = 'Right',\n  ArrowLeft = 'Left',\n  Space = 'Spacebar',\n  Escape = 'Esc',\n  Home = 'Home',\n  End = 'End',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// TODO: I'd like this to be a CheckedState enum for the checkboxes in the future.\nexport enum ClrSelectedState {\n  // WARNING! Unselected has the value 0,\n  // so it's actually the only one that will evaluate to false if cast to a boolean.\n  // Don't mess with the order!\n  UNSELECTED = 0,\n  SELECTED,\n  INDETERMINATE,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { COLUMN_STATE } from './providers/column-state.provider';\n\n@Directive({ selector: '[clrDgHideableColumn]' })\n\n/**\n *\n * @description\n * A structural directive meant to be used inside a clr-dg-column component.\n *\n * <clr-dg-column>\n *       <ng-container *clrDgHideableColumn=\"{ hidden: true }\">\n *           User ID\n *       </ng-container>\n *   </clr-dg-column>\n *\n * It sets up state and properties so that columns can be manges for hide/show by a service and an internal\n * datagrid toggle component.\n *\n */\nexport class ClrDatagridHideableColumn implements OnDestroy {\n  /**\n   *\n   * @description\n   * Used to initialize the column with either hidden or visible state.\n   *\n   */\n  private _hidden: boolean;\n\n  /**\n   *\n   * @description\n   * Setter fn for the @Input with the same name as this structural directive.\n   * It allows the user to pre-configure the column's hide/show state. { hidden: true }\n   * It's more verbose but has more Clarity.\n   *\n   *\n   * @example\n   * *clrDgHideableColumn\n   * *clrDgHideableColumn={hidden: false}\n   * *clrDgHideableColumn={hidden: true}\n   *\n   */\n  @Input('clrDgHideableColumn')\n  set clrDgHideableColumn(value: { hidden: boolean }) {\n    this.clrDgHidden = value && value.hidden ? value.hidden : false;\n  }\n\n  @Input('clrDgHidden')\n  set clrDgHidden(hidden: boolean) {\n    this._hidden = hidden ? hidden : false;\n    this.columnsService.emitStateChange(this.columnState, {\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  @Output('clrDgHiddenChange') public hiddenChange = new EventEmitter<boolean>();\n\n  constructor(\n    private titleTemplateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private columnsService: ColumnsService,\n    @Optional()\n    @Inject(COLUMN_STATE)\n    private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.viewContainerRef.createEmbeddedView(this.titleTemplateRef);\n\n    if (!this.columnState) {\n      throw new Error('The *clrDgHideableColumn directive can only be used inside of a clr-dg-column component.');\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnInit() {\n    this.columnsService.emitStateChange(this.columnState, {\n      hideable: true,\n      titleTemplateRef: this.titleTemplateRef,\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n\n    this.subscriptions.push(\n      this.columnState.subscribe((state: ColumnState) => {\n        if (state.changes && state.changes.indexOf(DatagridColumnChanges.HIDDEN) > -1) {\n          this.hiddenChange.emit(state.hidden); // Can emit through @Output when desugared syntax is used\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TrackByFunction } from '@angular/core';\n\nimport { Items } from './providers/items';\n\n@Directive({\n  selector: '[ngForTrackBy]',\n})\nexport class ClrDatagridItemsTrackBy<T = any> {\n  constructor(@Optional() private _items: Items<T>) {}\n\n  @Input('ngForTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    if (this._items) {\n      this._items.trackBy = value;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input } from '@angular/core';\nimport { Page } from './providers/page';\n\n@Component({\n  selector: 'clr-dg-page-size',\n  template: `\n    <ng-content></ng-content>\n    <div class=\"clr-select-wrapper\">\n      <select [class.clr-page-size-select]=\"true\" [(ngModel)]=\"page.size\">\n        <option *ngFor=\"let option of pageSizeOptions\" [ngValue]=\"option\">{{option}}</option>\n      </select>\n    </div>\n  `,\n})\nexport class ClrDatagridPageSize {\n  @Input('clrPageSizeOptions') pageSizeOptions: number[];\n\n  constructor(public page: Page) {}\n\n  ngOnInit() {\n    if (!this.pageSizeOptions || this.pageSizeOptions.length === 0) {\n      this.pageSizeOptions = [this.page.size];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Page } from './providers/page';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-pagination',\n  template: `\n  <ng-container *ngIf=\"!detailService.isOpen\">\n    <div class=\"pagination-size\" *ngIf=\"_pageSizeComponent\">\n      <ng-content select=\"clr-dg-page-size\"></ng-content>\n    </div>\n    <div class=\"pagination-description\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"pagination-list\" *ngIf=\"page.last > 1\">\n      <button\n        type=\"button\" \n        class=\"pagination-first\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = 1\"\n        [attr.aria-label]=\"commonStrings.keys.firstPage\"\n        >\n        <clr-icon shape=\"step-forward-2 down\"></clr-icon>\n      </button>\n      <button \n        type=\"button\"\n        class=\"pagination-previous\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = page.current - 1\"\n        [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n        <clr-icon shape=\"angle left\"></clr-icon>\n      </button>\n        <input\n          *ngIf=\"!disableCurrentPageInput; else readOnly\"\n          #currentPageInput \n          type=\"text\" \n          class=\"pagination-current clr-input\" \n          [size]=\"page.last.toString().length\" \n          [value]=\"page.current\"\n          (keydown.enter)=\"updateCurrentPage($event)\" \n          (blur)=\"updateCurrentPage($event)\"\n          [attr.aria-label]=\"commonStrings.keys.currentPage\"\n          />\n          <ng-template #readOnly>\n            <span>{{ page.current }}</span>\n          </ng-template>\n\n          &nbsp;/&nbsp;<span [attr.aria-label]=\"commonStrings.keys.totalPages\">{{page.last}}</span>\n      <button \n        type=\"button\"\n        class=\"pagination-next\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.current + 1\"\n        [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n        <clr-icon shape=\"angle right\"></clr-icon>\n      </button>\n      <button \n        type=\"button\" \n        class=\"pagination-last\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.last\"\n        [attr.aria-label]=\"commonStrings.keys.lastPage\"\n        >\n        <clr-icon shape=\"step-forward-2 up\"></clr-icon>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"detailService.isOpen\">\n      <div class=\"pagination-description-compact\">\n          {{page.firstItem + 1}}-{{page.lastItem + 1}} / {{page.totalItems}}\n      </div>\n      <div class=\"pagination-list\">\n          <button\n                  type=\"button\"\n                  class=\"pagination-previous\"\n                  [disabled]=\"page.current <= 1\"\n                  (click)=\"page.current = page.current - 1\"\n                  [attr.aria-label]=\"commonStrings.keys.previousPage\"\n          >\n              <clr-icon shape=\"angle left\"></clr-icon>\n          </button>\n          <span>{{page.current}}</span>\n          <button\n                  type=\"button\"\n                  class=\"pagination-next\"\n                  [disabled]=\"page.current >= page.last\"\n                  (click)=\"page.current = page.current + 1\"\n                  [attr.aria-label]=\"commonStrings.keys.nextPage\"\n          >\n              <clr-icon shape=\"angle right\"></clr-icon>\n          </button>\n      </div>\n  </ng-container>\n\n  `,\n  host: { '[class.pagination]': 'true' },\n})\nexport class ClrDatagridPagination implements OnDestroy, OnInit {\n  @ContentChild(ClrDatagridPageSize) _pageSizeComponent: ClrDatagridPageSize;\n  @ViewChild('currentPageInput') currentPageInputRef: ElementRef;\n\n  constructor(public page: Page, public commonStrings: ClrCommonStringsService, public detailService: DetailService) {\n    this.page.activated = true;\n  }\n\n  /**********\n   * Subscription to the Page service for page changes.\n   * Note: this only emits after the datagrid is initialized/stabalized and the page changes.\n   */\n  ngOnInit() {\n    /*\n     * Default page size is 10.\n     * The reason we set it here and not in the provider itself is because\n     * we don't want pagination if this component isn't present in the datagrid.\n     */\n    if (!this.page.size) {\n      this.page.size = 10;\n    }\n    this._pageSubscription = this.page.change.subscribe(current => this.currentChanged.emit(current));\n  }\n\n  /**\n   * Subscription to the page service changes\n   */\n  private _pageSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.page.resetPageSize(true);\n    if (this._pageSubscription) {\n      this._pageSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Page size\n   */\n  public get pageSize(): number {\n    return this.page.size;\n  }\n\n  @Input('clrDgPageInputDisabled') public disableCurrentPageInput: boolean;\n\n  @Input('clrDgPageSize')\n  public set pageSize(size: number) {\n    if (typeof size === 'number') {\n      this.page.size = size;\n    }\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  public get totalItems(): number {\n    return this.page.totalItems;\n  }\n\n  @Input('clrDgTotalItems')\n  public set totalItems(total: number) {\n    if (typeof total === 'number') {\n      this.page.totalItems = total;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  public get lastPage(): number {\n    return this.page.last;\n  }\n\n  @Input('clrDgLastPage')\n  public set lastPage(last: number) {\n    if (typeof last === 'number') {\n      this.page.last = last;\n    }\n  }\n\n  /**\n   * Current page\n   */\n  public get currentPage(): number {\n    return this.page.current;\n  }\n\n  @Input('clrDgPage')\n  public set currentPage(page: number) {\n    if (typeof page === 'number') {\n      this.page.current = page;\n    }\n  }\n\n  @Output('clrDgPageChange') currentChanged = new EventEmitter<number>(false);\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    this.page.previous();\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    this.page.next();\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    return this.page.firstItem;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    return this.page.lastItem;\n  }\n\n  /**\n   * Conditionally adds page numbers before and after the current page\n   */\n  public get middlePages(): number[] {\n    const middlePages: number[] = [];\n    if (this.page.current > 1) {\n      middlePages.push(this.page.current - 1);\n    }\n    middlePages.push(this.page.current);\n    if (this.page.current < this.page.last) {\n      middlePages.push(this.page.current + 1);\n    }\n    return middlePages;\n  }\n\n  /**\n   * We only update the pagination's current page on blur of the input field, or\n   * when they press enter.\n   */\n  public updateCurrentPage(event: any): void {\n    const parsed = parseInt(event.target.value, 10);\n\n    // if the input value, is not a number, we don't update the page\n    if (!isNaN(parsed)) {\n      if (parsed < 1) {\n        this.page.current = 1;\n      } else if (parsed > this.page.last) {\n        this.page.current = this.page.last;\n      } else {\n        this.page.current = parsed;\n      }\n    }\n\n    /**\n     * Set the input's value to the new current page. This is needed because the code\n     * above may have changed the value from what the user entered in.\n     */\n    this.currentPageInputRef.nativeElement.value = this.page.current;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, Component, ContentChildren, Input, OnDestroy, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\n@Component({\n  selector: 'clr-dg-row-detail',\n  template: `\n    <div class=\"clr-sr-only\">\n      {{ beginningOfExpandableContentAriaText }} {{ commonStrings.keys.dategridExpandableRowsHelperText }}\n    </div>\n    <ng-content></ng-content>\n    <div class=\"clr-sr-only\">{{ endOfExpandableContentAriaText }}</div>\n  `,\n  host: {\n    '[class.datagrid-row-flex]': 'true',\n    '[class.datagrid-row-detail]': 'true',\n    '[class.datagrid-container]': 'cells.length === 0',\n    '[attr.id]': 'expand.expandableId',\n  },\n})\nexport class ClrDatagridRowDetail<T = any> implements AfterContentInit, OnDestroy {\n  /* reference to the enum so that template can access it */\n  public SELECTION_TYPE = SelectionType;\n\n  constructor(\n    public selection: Selection,\n    public rowActionService: RowActionService,\n    public expand: DatagridIfExpandService,\n    public expandableRows: ExpandableRowsCount,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  @ContentChildren(ClrDatagridCell) cells: QueryList<ClrDatagridCell>;\n\n  @Input('clrDgReplace')\n  set replace(value: boolean) {\n    this.expand.setReplace(!!value);\n  }\n  private subscriptions: Subscription[] = [];\n  public replacedRow = false;\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.expand.replace.subscribe(replaceChange => {\n        this.replacedRow = replaceChange;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  @Input('clrRowDetailBeginningAriaText') private _beginningOfExpandableContentAriaText: string;\n  public get beginningOfExpandableContentAriaText() {\n    return (\n      this._beginningOfExpandableContentAriaText ||\n      `${this.commonStrings.keys.dategridExpandableBeginningOf} ${this.commonStrings.keys.dategridExpandableRowContent}`\n    );\n  }\n\n  @Input('clrRowDetailEndAriaText') private _endOfExpandableContentAriaText: string;\n  public get endOfExpandableContentAriaText() {\n    return (\n      this._endOfExpandableContentAriaText ||\n      `${this.commonStrings.keys.dategridExpandableEndOf} ${this.commonStrings.keys.dategridExpandableRowContent}`\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES, DatagridColumnChanges } from '../enums/column-changes.enum';\n\n@Directive({ selector: 'clr-dg-cell' })\nexport class DatagridCellRenderer implements OnDestroy {\n  private stateSubscription: Subscription;\n\n  private runAllChanges: DatagridColumnChanges[];\n\n  // @TODO(JEREMY) Work out how to dedupe some of this code between header and cell renderers\n  set columnState(columnState: BehaviorSubject<ColumnState>) {\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n\n    this.runAllChanges = ALL_COLUMN_CHANGES;\n    this.stateSubscription = columnState.subscribe(state => this.stateChanges(state));\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (this.runAllChanges) {\n      state.changes = this.runAllChanges;\n      delete this.runAllChanges;\n    }\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    this.renderer.setStyle(this.el.nativeElement, 'width', null);\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n    this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO The top two are not used now, which is probably a performance drag that was broken along the way.\n// There was a previous pattern to hide everything to do computation then display, for Firefox, needs revisiting.\nexport const NO_LAYOUT_CLASS = 'datagrid-no-layout';\nexport const COMPUTE_WIDTH_CLASS = 'datagrid-computing-columns-width';\nexport const STRICT_WIDTH_CLASS = 'datagrid-fixed-width';\nexport const HIDDEN_COLUMN_CLASS = 'datagrid-hidden-column';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Inject, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { ColumnResizerService } from '../providers/column-resizer.service';\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { COLUMN_STATE, COLUMN_STATE_PROVIDER } from '../providers/column-state.provider';\nimport { ColumnsService } from '../providers/columns.service';\n\n@Directive({ selector: 'clr-dg-column', providers: [ColumnResizerService, COLUMN_STATE_PROVIDER] })\nexport class DatagridHeaderRenderer implements OnDestroy {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private organizer: DatagridRenderOrganizer,\n    private domAdapter: DomAdapter,\n    private columnResizerService: ColumnResizerService,\n    private columnsService: ColumnsService,\n    @Inject(COLUMN_STATE) private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.subscriptions.push(\n      this.organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n\n    this.subscriptions.push(columnState.subscribe(state => this.stateChanges(state)));\n  }\n\n  @Output('clrDgColumnResize') resizeEmitter: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n   */\n  private widthSet: boolean = false;\n  private autoSet: boolean = false;\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    // remove the width only if we set it, and it is not changed by dragging.\n    if (this.widthSet && !this.columnResizerService.resizedBy) {\n      this.renderer.setStyle(this.el.nativeElement, 'width', null);\n    }\n    if (this.autoSet) {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n  }\n\n  private detectStrictWidth(): number {\n    if (this.columnResizerService.resizedBy) {\n      return this.columnResizerService.widthAfterResize;\n    } else if (this.autoSet) {\n      return 0;\n    } else {\n      return this.domAdapter.userDefinedWidth(this.el.nativeElement);\n    }\n  }\n\n  private computeWidth(strictWidth: number): number {\n    let width: number = strictWidth;\n    if (!width) {\n      width = this.domAdapter.scrollWidth(this.el.nativeElement);\n    }\n    return width;\n  }\n\n  public getColumnWidthState(): Partial<ColumnState> {\n    const strictWidth = this.detectStrictWidth();\n    return {\n      width: this.computeWidth(strictWidth),\n      strictWidth: strictWidth,\n    };\n  }\n\n  public setColumnState(index: number) {\n    this.columnsService.columns[index] = this.columnState;\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      if (this.columnResizerService.resizedBy) {\n        this.resizeEmitter.emit(state.width);\n        this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n        this.widthSet = false;\n      }\n      // Don't set width if there is a user-defined one. Just add the strict width class.\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.autoSet = false;\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n      this.widthSet = true;\n      this.autoSet = true;\n    }\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * This version of the DomAdapter is for use on non-browser platforms, where there are no\n * nativeElements to use for calculations.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\n\n@Injectable()\nexport class NoopDomAdapter implements DomAdapter {\n  userDefinedWidth(element: any): number {\n    return 0;\n  }\n\n  scrollBarWidth(element: any) {\n    return 0;\n  }\n\n  scrollWidth(element: any) {\n    return 0;\n  }\n\n  computedHeight(element: any): number {\n    return 0;\n  }\n\n  clientRect(element: any): ClientRect {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  minWidth(element: any): number {\n    return 0;\n  }\n\n  focus(element: any): void {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, QueryList } from '@angular/core';\n\nimport { DatagridCellRenderer } from './cell-renderer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({ selector: 'clr-dg-row, clr-dg-row-detail' })\nexport class DatagridRowRenderer implements AfterContentInit, OnDestroy {\n  @ContentChildren(DatagridCellRenderer) private cells: QueryList<DatagridCellRenderer>;\n\n  constructor(private columnsService: ColumnsService) {}\n\n  ngAfterContentInit() {\n    this.setColumnState(); // case #3 and #4\n    this.subscriptions.push(\n      this.cells.changes.subscribe(() => {\n        this.setColumnState(); // case #2\n        // Note on case #2: In the case of dynamic columns, when one column (header/cell together) gets deleted,\n        // this.cells.changes emits before this.columnsService.columns gets updated in MainRenderer\n        // when this.headers.changes emits as well. So that means there will be n+1 column state providers\n        // when this.cells.changes emits. Hence, we should quit earlier there. But this method will be called\n        // right after again when this.headers.changes emits. By then, there will be the same number of column state\n        // providers as column headers.\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  public setColumnState() {\n    // This method runs in four cases:\n    // 1. When the initial rows appear on the first page.\n    //    In this case, the method will be called in DatagridMainRenderer.\n    // 2. When columns (corresponding header/cells) get added and deleted.\n    //    In this case, the method will be called in DatagridMainRenderer. (Read the note on this case above).\n    // 3. When rows load asynchronously.\n    //    In this case, the method will be called in this class.\n    // 4. When rows load after switching pages.\n    //    In this case, the method will be called in this class (Basically, same as the case 3).\n    if (this.cells.length === this.columnsService.columns.length) {\n      this.cells.forEach((cell, index) => {\n        if (this.columnsService.columns[index]) {\n          cell.columnState = this.columnsService.columns[index];\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { Items } from '../providers/items';\nimport { Page } from '../providers/page';\nimport { TableSizeService } from '../providers/table-size.service';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridHeaderRenderer } from './header-renderer';\nimport { NoopDomAdapter } from './noop-dom-adapter';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { DatagridRowRenderer } from './row-renderer';\nimport { ColumnStateDiff } from '../interfaces/column-state.interface';\nimport { DetailService } from '../providers/detail.service';\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\nexport const domAdapterFactory = (platformId: Object) => {\n  if (isPlatformBrowser(platformId)) {\n    return new DomAdapter();\n  } else {\n    return new NoopDomAdapter();\n  }\n};\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\n@Directive({\n  selector: 'clr-datagrid',\n  providers: [{ provide: DomAdapter, useFactory: domAdapterFactory, deps: [PLATFORM_ID] }],\n})\nexport class DatagridMainRenderer<T = any> implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    private items: Items,\n    private page: Page,\n    private domAdapter: DomAdapter,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private detailService: DetailService,\n    private tableSizeService: TableSizeService,\n    private columnsService: ColumnsService\n  ) {\n    this.subscriptions.push(\n      this.organizer\n        .filterRenderSteps(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS)\n        .subscribe(() => this.computeHeadersWidth())\n    );\n\n    this.subscriptions.push(\n      this.page.sizeChange.subscribe(() => {\n        if (this._heightSet) {\n          this.resetDatagridHeight();\n        }\n      })\n    );\n    this.subscriptions.push(this.detailService.stateChange.subscribe(state => this.toggleDetailPane(state)));\n    this.subscriptions.push(this.items.change.subscribe(() => (this.shouldStabilizeColumns = true)));\n  }\n\n  @ContentChildren(DatagridHeaderRenderer) private headers: QueryList<DatagridHeaderRenderer>;\n  @ContentChildren(DatagridRowRenderer, { descendants: true })\n  private rows: QueryList<DatagridRowRenderer>; // if expandable row is expanded initially, query its cells too.\n\n  ngAfterContentInit() {\n    this.setupColumns();\n\n    this.subscriptions.push(\n      this.headers.changes.subscribe(() => {\n        // TODO: only re-stabilize if a column was added or removed. Reordering is fine.\n        // Need to setup columns before stabalizing them\n        this.setupColumns();\n        this.columnsSizesStable = false;\n        this.stabilizeColumns();\n      })\n    );\n  }\n\n  // Initialize and set Table width for horizontal scrolling here.\n  ngAfterViewInit() {\n    this.tableSizeService.table = this.el;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldStabilizeColumns) {\n      this.stabilizeColumns();\n    }\n    if (this.shouldComputeHeight()) {\n      setTimeout(() => {\n        this.computeDatagridHeight();\n      });\n    }\n  }\n\n  private setupColumns() {\n    this.headers.forEach((header, index) => header.setColumnState(index));\n    this.columnsService.columns.splice(this.headers.length); // Trim any old columns\n    this.rows.forEach(row => row.setColumnState());\n  }\n\n  private _heightSet: boolean = false;\n\n  private shouldComputeHeight(): boolean {\n    if (!this._heightSet && this.page.size > 0) {\n      if (this.items.displayed.length === this.page.size) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public toggleDetailPane(state: boolean) {\n    if (this.headers) {\n      if (state && !this.columnsService.hasCache()) {\n        this.columnsService.cache();\n        this.headers.forEach((header, index) => {\n          if (index > 0) {\n            this.columnsService.emitStateChangeAt(index, {\n              changes: [DatagridColumnChanges.HIDDEN],\n              hidden: state,\n            });\n          }\n        });\n      } else if (!state) {\n        this.columnsService.resetToLastCache();\n      }\n    }\n  }\n\n  /**\n   * Computes the height of the datagrid.\n   *\n   * NOTE: We had to choose to set the height instead of the min-height because\n   * IE 11 requires the height on the parent for the children flex grow/shrink properties to work.\n   * When we used min-height, 1 1 auto doesn't used to work in IE11 :-(\n   * But this doesn't affect the fix. It works in both fixed & variable height datagrids.\n   *\n   * Refer: http://stackoverflow.com/questions/24396205/flex-grow-not-working-in-internet-explorer-11-0\n   */\n  private computeDatagridHeight() {\n    // IE doesn't return correct value for getComputedStyle(element).getPropertyValue(\"height\")\n    const value: number = this.domAdapter.clientRect(this.el.nativeElement).height;\n    this.renderer.setStyle(this.el.nativeElement, 'height', value + 'px');\n    this._heightSet = true;\n  }\n\n  private resetDatagridHeight() {\n    this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    this._heightSet = false;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Makes each header compute its width.\n   */\n  private computeHeadersWidth() {\n    const nbColumns: number = this.headers.length;\n    let allStrict = true;\n    this.headers.forEach((header, index) => {\n      // On the last header column check whether all columns have strict widths.\n      // If all columns have strict widths, remove the strict width from the last column and make it the column's\n      // minimum width so that when all previous columns shrink, it will get a flexible width and cover the empty\n      // gap in the Datagrid.\n      const state: ColumnStateDiff = {\n        changes: [DatagridColumnChanges.WIDTH],\n        ...header.getColumnWidthState(),\n      };\n\n      if (!state.strictWidth) {\n        allStrict = false;\n      }\n\n      if (nbColumns === index + 1 && allStrict) {\n        state.strictWidth = 0;\n      }\n\n      this.columnsService.emitStateChangeAt(index, state);\n    });\n  }\n\n  /**\n   * Indicates if we want to re-compute columns width. This should only happen:\n   * 1) When headers change, with columns being added or removed\n   * 2) When rows are lazily loaded for the first time\n   */\n  private columnsSizesStable = false;\n\n  private shouldStabilizeColumns = true;\n\n  /**\n   * Triggers a whole re-rendring cycle to set column sizes, if needed.\n   */\n  private stabilizeColumns() {\n    this.shouldStabilizeColumns = false;\n    if (this.columnsSizesStable) {\n      // Nothing to do.\n      return;\n    }\n    // Resize when the rows are loaded.\n    if (this.items.displayed.length > 0) {\n      this.organizer.resize();\n      this.columnsSizesStable = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrFormsModule } from '../../forms/forms.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrOutsideClickModule } from '../../utils/outside-click/outside-click.module';\nimport { ClrDragAndDropModule } from '../../utils/drag-and-drop/drag-and-drop.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrSpinnerModule } from '../../progress/spinner/spinner.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { DatagridStringFilter } from './built-in/filters/datagrid-string-filter';\nimport { DatagridNumericFilter } from './built-in/filters/datagrid-numeric-filter';\nimport { ActionableOompaLoompa } from './chocolate/actionable-oompa-loompa';\nimport { DatagridWillyWonka } from './chocolate/datagrid-willy-wonka';\nimport { ExpandableOompaLoompa } from './chocolate/expandable-oompa-loompa';\nimport { ClrDatagrid } from './datagrid';\nimport { ClrDatagridActionBar } from './datagrid-action-bar';\nimport { ClrDatagridActionOverflow } from './datagrid-action-overflow';\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridColumnSeparator } from './datagrid-column-separator';\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { DatagridDetailRegisterer } from './datagrid-detail-registerer';\nimport { ClrDatagridDetail } from './datagrid-detail';\nimport { ClrIfDetail } from './datagrid-if-detail';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\nimport { ClrDatagridDetailBody } from './datagrid-detail-body';\nimport { ClrDatagridFilter } from './datagrid-filter';\nimport { ClrDatagridFooter } from './datagrid-footer';\nimport { ClrDatagridHideableColumn } from './datagrid-hideable-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridItemsTrackBy } from './datagrid-items-trackby';\nimport { ClrDatagridPagination } from './datagrid-pagination';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { ClrDatagridRowDetail } from './datagrid-row-detail';\nimport { DatagridCellRenderer } from './render/cell-renderer';\nimport { DatagridHeaderRenderer } from './render/header-renderer';\nimport { DatagridMainRenderer } from './render/main-renderer';\nimport { DatagridRowRenderer } from './render/row-renderer';\nimport { WrappedCell } from './wrapped-cell';\nimport { WrappedColumn } from './wrapped-column';\nimport { WrappedRow } from './wrapped-row';\n\nexport const CLR_DATAGRID_DIRECTIVES: Type<any>[] = [\n  // Core\n  ClrDatagrid,\n  ClrDatagridActionBar,\n  ClrDatagridActionOverflow,\n  ClrDatagridColumn,\n  ClrDatagridColumnSeparator,\n  ClrDatagridColumnToggle,\n  ClrDatagridHideableColumn,\n  ClrDatagridFilter,\n  ClrDatagridItems,\n  ClrDatagridItemsTrackBy,\n  ClrDatagridRow,\n  ClrDatagridRowDetail,\n  DatagridDetailRegisterer,\n  ClrDatagridCell,\n  ClrDatagridFooter,\n  ClrDatagridPagination,\n  ClrDatagridPageSize,\n  ClrDatagridPlaceholder,\n  ClrDatagridColumnToggleButton,\n  ClrDatagridColumnToggleTitle,\n  ClrDatagridDetail,\n  ClrIfDetail,\n  ClrDatagridDetailHeader,\n  ClrDatagridDetailBody,\n  WrappedCell,\n  WrappedColumn,\n  WrappedRow,\n\n  // Renderers\n  DatagridMainRenderer,\n  DatagridHeaderRenderer,\n  DatagridRowRenderer,\n  DatagridCellRenderer,\n\n  // Chocolate\n  DatagridWillyWonka,\n  ActionableOompaLoompa,\n  ExpandableOompaLoompa,\n\n  // Built-in shortcuts\n  DatagridStringFilter,\n  DatagridNumericFilter,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrIconModule,\n    ClrFormsModule,\n    FormsModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrOutsideClickModule,\n    ClrExpandableAnimationModule,\n    ClrDragAndDropModule,\n    ClrSpinnerModule,\n    ClrPopoverModuleNext,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n  ],\n  declarations: [CLR_DATAGRID_DIRECTIVES],\n  exports: [CLR_DATAGRID_DIRECTIVES],\n  entryComponents: [WrappedCell, WrappedColumn, WrappedRow],\n})\nexport class ClrDatagridModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, HostBinding, Inject, Input, OnInit, Optional, Output, SkipSelf } from '@angular/core';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-stack-block',\n  template: `\n    <div class=\"stack-block-label\"\n        (click)=\"toggleExpand()\"\n        (keyup.enter)=\"toggleExpand()\"\n        (keyup.space)=\"toggleExpand()\"\n        (focus)=\"focused = true\"\n        (blur)=\"focused = false\"\n        [id]=\"uniqueId\"\n        [attr.role]=\"role\"\n        [attr.tabindex]=\"tabIndex\"\n        [attr.aria-expanded]=\"ariaExpanded\"\n        [attr.aria-controls]=\"getStackChildrenId()\"\n        [attr.aria-posinset]=\"ariaPosinset\"\n        [attr.aria-level]=\"ariaLevel\"\n        [attr.aria-setsize]=\"ariaSetsize\"\n        >\n      <clr-icon shape=\"caret\"\n                class=\"stack-block-caret\"\n                *ngIf=\"expandable\"\n                [attr.dir]=\"caretDirection\"\n                [attr.title]=\"caretTitle\"></clr-icon>\n      <span class=\"clr-sr-only\" *ngIf=\"getChangedValue\">{{commonStrings.keys.stackViewChanged}}</span>\n      <div class=\"stack-view-key\">\n        <!-- This structure changed to fix #3567 and the a11y request was to move away from dl's -->\n        <!-- I added the key class to update css targets for the original component style -->\n        <ng-content select=\"clr-stack-label\"></ng-content>\n      </div>\n      <div class=\"stack-block-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n\n    <clr-expandable-animation [clrExpandTrigger]=\"expanded\" class=\"stack-children\" [attr.id]=\"getStackChildrenId()\">\n      <div [style.height]=\"expanded ? 'auto' : 0\" role=\"region\">\n        <ng-content select=\"clr-stack-block\"></ng-content>\n      </div>\n    </clr-expandable-animation>\n  `,\n  // Custom elements are inline by default\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  // Make sure the host has the proper class for styling purposes\n  host: { '[class.stack-block]': 'true' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrStackBlock implements OnInit {\n  @HostBinding('class.stack-block-expanded')\n  @Input('clrSbExpanded')\n  expanded: boolean = false;\n  @Output('clrSbExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @HostBinding('class.stack-block-expandable')\n  @Input('clrSbExpandable')\n  expandable: boolean = false;\n\n  focused: boolean = false;\n  private _changedChildren: number = 0;\n  private _fullyInitialized: boolean = false;\n  private _changed: boolean = false;\n\n  @HostBinding('class.stack-block-changed')\n  get getChangedValue(): boolean {\n    return this._changed || (this._changedChildren > 0 && !this.expanded);\n  }\n\n  @Input('clrSbNotifyChange')\n  set setChangedValue(value: boolean) {\n    this._changed = value;\n\n    if (this.parent && this._fullyInitialized) {\n      if (value) {\n        this.parent._changedChildren++;\n      } else {\n        this.parent._changedChildren--;\n      }\n    }\n  }\n\n  /**\n   * Depth of the stack view starting from 1 for first level\n   */\n  @Input('clrStackViewLevel') ariaLevel: number;\n\n  /**\n   * Total number of rows in a given group\n   */\n  @Input('clrStackViewSetsize') ariaSetsize: number;\n\n  /**\n   * The position of the row inside the grouped by level rows\n   */\n  @Input('clrStackViewPosinset') ariaPosinset: number;\n\n  /*\n   * This would be more efficient with @ContentChildren, with the parent ClrStackBlock\n   * querying for children StackBlocks, but this feature is not available when downgrading\n   * the component for Angular 1.\n   */\n  constructor(\n    @SkipSelf()\n    @Optional()\n    private parent: ClrStackBlock,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    if (parent) {\n      parent.addChild();\n    }\n  }\n\n  ngOnInit(): void {\n    // in order to access the parent ClrStackBlock's properties,\n    // the child ClrStackBlock has to be fully initialized at first.\n    this._fullyInitialized = true;\n  }\n\n  addChild(): void {\n    this.expandable = true;\n  }\n\n  toggleExpand(): void {\n    if (this.expandable) {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  get caretDirection(): string {\n    return this.expanded ? 'down' : 'right';\n  }\n\n  get caretTitle(): string {\n    return this.expanded ? this.commonStrings.keys.collapse : this.commonStrings.keys.expand;\n  }\n\n  get role(): string {\n    return this.expandable ? 'button' : null;\n  }\n\n  get tabIndex(): string {\n    return this.expandable ? '0' : null;\n  }\n\n  @HostBinding('class.on-focus')\n  get onStackLabelFocus(): boolean {\n    return this.expandable && !this.expanded && this.focused;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.expandable) {\n      return null;\n    } else {\n      return this.expanded ? 'true' : 'false';\n    }\n  }\n\n  getStackChildrenId() {\n    return this.expanded ? `clr-stack-children-${this.uniqueId}` : null;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'clr-stack-view',\n  template: `\n        <ng-content select=\"clr-stack-header\"></ng-content>\n        <div class=\"stack-view\"><ng-content></ng-content></div>\n    `,\n  // Custom elements are inline by default.\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackView {\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  editable: boolean = false;\n\n  @Output('clrStackSave') save: EventEmitter<void> = new EventEmitter<void>(false);\n\n  private _editMode: boolean = false;\n\n  editingChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  get editing(): boolean {\n    return this.editable && this._editMode;\n  }\n\n  set editing(value: boolean) {\n    if (this.editable) {\n      this._editMode = value;\n      this.editingChange.emit(value);\n      if (!value) {\n        this.save.emit(null);\n      }\n    }\n  }\n  /**\n   * End of undocumented experimental feature.\n   */\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-header',\n  template: `\n        <h4 class=\"stack-header\">\n            <span class=\"stack-title\"><ng-content></ng-content></span>\n            \n            <span class=\"stack-actions\">\n                <ng-content select=\".stack-action\"></ng-content>\n                <!-- Undocumented experimental feature: inline editing. -->\n                <button *ngIf=\"stackView.editable\" class=\"stack-action btn btn-sm btn-link\" \n                        (click)=\"stackView.editing = !stackView.editing\" type=\"button\">\n                        Edit\n                </button>\n                <!-- End of undocumented experimental feature. -->\n            </span>\n        </h4>\n    `,\n  // Custom elements are inline by default\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackHeader {\n  constructor(public stackView: ClrStackView) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\nexport class StackControl {\n  model: any;\n  modelChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  constructor(protected stackView: ClrStackView) {\n    // Make the ClrStackView editable, since it contains a StackControl\n    this.stackView.editable = true;\n    this.stackView.editingChange.subscribe((editing: boolean) => {\n      // Edit mode was closed\n      if (!editing) {\n        this.modelChange.emit(this.model);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: support more types of inputs: checkbox, radio, ...\n * TODO: Mirror input attributes from the host to the actual input: size, min, max, placeholder, ...\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-input',\n  inputs: ['model: clrModel', 'type'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <input [type]=\"type\" *ngIf=\"stackView.editing\" [(ngModel)]=\"model\"/>\n    `,\n})\nexport class ClrStackInput extends StackControl {\n  type: string = 'text';\n\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-select',\n  inputs: ['model: clrModel'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <div class=\"select\" *ngIf=\"stackView.editing\" >\n            <select [(ngModel)]=\"model\">\n                <ng-content></ng-content>\n            </select>\n        </div>\n    `,\n})\nexport class ClrStackSelect extends StackControl {\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-stack-label, clr-stack-content' })\nexport class ClrStackViewCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Inject } from '@angular/core';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Directive({\n  selector: '[clrStackInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.aria-labelledby]': 'uniqueId',\n  },\n})\nexport class ClrStackContentInput {\n  constructor(@Inject(UNIQUE_ID) public uniqueId: string) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrStackBlock } from './stack-block';\nimport { ClrStackHeader } from './stack-header';\nimport { ClrStackInput } from './stack-input';\nimport { ClrStackSelect } from './stack-select';\nimport { ClrStackView } from './stack-view';\nimport { ClrStackViewCustomTags } from './stack-view-custom-tags';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrStackContentInput } from './stack-content-input';\n\nexport const CLR_STACK_VIEW_DIRECTIVES: Type<any>[] = [\n  ClrStackView,\n  ClrStackHeader,\n  ClrStackBlock,\n  ClrStackContentInput,\n  ClrStackViewCustomTags,\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  ClrStackInput,\n  ClrStackSelect,\n  /**\n   * End of undocumented experimental feature.\n   */\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrExpandableAnimationModule],\n  declarations: [CLR_STACK_VIEW_DIRECTIVES],\n  exports: [CLR_STACK_VIEW_DIRECTIVES],\n})\nexport class ClrStackViewModule {}\n","/*\n* Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { KeyCodes, IEKeyCodes } from './../../enums/key-codes.enum';\n\nexport function keyValidator(key: string) {\n  if (key === KeyCodes.ArrowUp || key === IEKeyCodes.ArrowUp) {\n    return KeyCodes.ArrowUp;\n  } else if (key === KeyCodes.ArrowDown || key === IEKeyCodes.ArrowDown) {\n    return KeyCodes.ArrowDown;\n  } else if (key === KeyCodes.ArrowRight || key === IEKeyCodes.ArrowRight) {\n    return KeyCodes.ArrowRight;\n  } else if (key === KeyCodes.ArrowLeft || key === IEKeyCodes.ArrowLeft) {\n    return KeyCodes.ArrowLeft;\n  } else if (key === KeyCodes.Space || key === IEKeyCodes.Space) {\n    return KeyCodes.Space;\n  } else if (key === KeyCodes.Escape || key === IEKeyCodes.Escape) {\n    return KeyCodes.Escape;\n  } else {\n    return key;\n  }\n}\n\nexport function preventArrowKeyScroll(event: KeyboardEvent) {\n  const validKey = keyValidator(event.key);\n\n  if (\n    validKey === KeyCodes.ArrowUp ||\n    validKey === KeyCodes.ArrowDown ||\n    validKey === KeyCodes.ArrowLeft ||\n    validKey === KeyCodes.ArrowRight\n  ) {\n    // prevent element container scroll\n    // MDN references this is really the only way to prevent native browser interactions\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\n    event.preventDefault();\n  }\n}\n\nexport function getKeyCodes(event: KeyboardEvent) {\n  // IE does not properly follow the spec for `event.key` so we need to return a different enum for the key events\n  // We use `event.key` for optimal browser support, to detect IE/Edge check if `event.code` is undefined\n  const isIEKeyboardEvent = event.code === undefined;\n  return isIEKeyboardEvent ? IEKeyCodes : KeyCodes;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrSelectedState } from './selected-state.enum';\nimport { BehaviorSubject } from 'rxjs';\n\nexport abstract class TreeNodeModel<T> {\n  nodeId: string;\n  expanded: boolean;\n  selected = new BehaviorSubject<ClrSelectedState>(ClrSelectedState.UNSELECTED);\n  model: T | null;\n  /*\n   * Ideally, I would like to use a polymorphic this type here to ensure homogeneity of the tree, something like:\n   * abstract parent: this<T> | null;\n   * abstract children: this<T>[];\n   * But I'm hitting limitations on typescript not allowing that type in constructors or static methods.\n   * So I'm resorting to forcing override with more precise types by marking these abstract.\n   */\n  abstract parent: TreeNodeModel<T> | null;\n  abstract children: TreeNodeModel<T>[];\n\n  /*\n   * Being able to push this down to the RecursiveTreeNodeModel would require too much work on the angular components\n   * right now for them to know which kind of model they are using. So I'm lifting the public properties to this\n   * abstract parent class for now and we can revisit it later, when we're not facing such a close deadline.\n   */\n  loading = false;\n\n  destroy() {\n    // Just to be safe\n    this.selected.complete();\n  }\n\n  // Propagate by default when eager, don't propagate in the lazy-loaded tree.\n  setSelected(state: ClrSelectedState, propagateUp: boolean, propagateDown: boolean) {\n    if (state === this.selected.value) {\n      return;\n    }\n    this.selected.next(state);\n    if (propagateDown && state !== ClrSelectedState.INDETERMINATE && this.children) {\n      this.children.forEach(child => child.setSelected(state, false, true));\n    }\n    if (propagateUp && this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n\n  toggleSelection(propagate: boolean) {\n    // Both unselected and indeterminate toggle to selected\n    const newState =\n      this.selected.value === ClrSelectedState.SELECTED ? ClrSelectedState.UNSELECTED : ClrSelectedState.SELECTED;\n    // NOTE: we always propagate selection up in this method because it is only called when the user takes an action.\n    // It should never be called from lifecycle hooks or app-provided inputs.\n    this.setSelected(newState, true, propagate);\n  }\n\n  private computeSelectionStateFromChildren() {\n    let oneSelected = false;\n    let oneUnselected = false;\n    // Using a good old for loop to exit as soon as we can tell, for better performance on large trees.\n    for (const child of this.children) {\n      switch (child.selected.value) {\n        case ClrSelectedState.INDETERMINATE:\n          return ClrSelectedState.INDETERMINATE;\n        case ClrSelectedState.SELECTED:\n          oneSelected = true;\n          if (oneUnselected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n        case ClrSelectedState.UNSELECTED:\n        default:\n          // Default is the same as unselected, in case an undefined somehow made it all the way here.\n          oneUnselected = true;\n          if (oneSelected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n      }\n    }\n    if (!oneSelected) {\n      return ClrSelectedState.UNSELECTED;\n    } else if (!oneUnselected) {\n      return ClrSelectedState.SELECTED;\n    }\n  }\n\n  /*\n   * Internal, but needs to be called by other nodes\n   */\n  _updateSelectionFromChildren() {\n    const newState = this.computeSelectionStateFromChildren();\n    if (newState === this.selected.value) {\n      return;\n    }\n    this.selected.next(newState);\n    if (this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { TreeNodeModel } from './tree-node.model';\n\n/*\n * A declarative model is built by traversing the Angular component tree.\n * Declarative = Tree node components dictate the model\n */\nexport class DeclarativeTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(parent: DeclarativeTreeNodeModel<T> | null) {\n    super();\n    this.parent = parent;\n    if (parent) {\n      parent._addChild(this);\n    }\n    this.children = [];\n  }\n\n  // Override for a more precise type\n  parent: DeclarativeTreeNodeModel<T> | null;\n  children: DeclarativeTreeNodeModel<T>[];\n\n  _addChild(child: DeclarativeTreeNodeModel<T>) {\n    this.children.push(child);\n  }\n\n  _removeChild(child: DeclarativeTreeNodeModel<T>) {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  destroy() {\n    if (this.parent) {\n      this.parent._removeChild(this);\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf, TemplateRef } from '@angular/core';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TreeFeaturesService<T> {\n  selectable = false;\n  eager = true;\n  recursion: {\n    template: TemplateRef<ClrRecursiveForOfContext<T>>;\n    root: RecursiveTreeNodeModel<T>[];\n  };\n  childrenFetched: Subject<void> = new Subject();\n}\n\nexport function treeFeaturesFactory<T>(existing: TreeFeaturesService<T>) {\n  return existing || new TreeFeaturesService();\n}\n\nexport const TREE_FEATURES_PROVIDER = {\n  provide: TreeFeaturesService,\n  useFactory: treeFeaturesFactory,\n  /*\n   * The Optional + SkipSelf pattern ensures that in case of nested components, only the root one will\n   * instantiate a new service and all its children will reuse the root's instance.\n   * If there are several roots (in this case, several independent trees on a page), each root will instantiate\n   * its own service so they won't interfere with one another.\n   *\n   * TL;DR - Optional + SkipSelf = 1 instance of TreeFeaturesService per tree.\n   */\n  deps: [[new Optional(), new SkipSelf(), TreeFeaturesService]],\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { TreeNodeModel } from './models/tree-node.model';\n\n@Injectable()\nexport class TreeFocusManagerService<T> {\n  public rootNodeModels: TreeNodeModel<T>[];\n\n  private focusedNodeId: string;\n\n  private _focusRequest: Subject<string> = new Subject();\n\n  private _focusChange: Subject<string> = new Subject();\n\n  get focusRequest(): Observable<string> {\n    return this._focusRequest.asObservable();\n  }\n\n  get focusChange(): Observable<string> {\n    return this._focusChange.asObservable();\n  }\n\n  private findSiblings(model: TreeNodeModel<T>): TreeNodeModel<T>[] {\n    // the method will return not only sibling models but also itself among them\n    if (model.parent) {\n      return model.parent.children;\n    } else {\n      return this.rootNodeModels;\n    }\n  }\n\n  private findLastVisibleInNode(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    // the method will traverse through until it finds the last visible node from the given node\n    if (!model) {\n      return;\n    }\n    if (model.expanded && model.children.length > 0) {\n      const children = model.children;\n      const lastChild = children[children.length - 1];\n      return this.findLastVisibleInNode(lastChild);\n    } else {\n      return model;\n    }\n  }\n\n  private findNextFocusable(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex < siblings.length - 1) {\n      return siblings[selfIndex + 1];\n    } else if (selfIndex === siblings.length - 1) {\n      return this.findNextFocusable(model.parent);\n    }\n  }\n\n  private findLastVisibleInTree(): TreeNodeModel<T> {\n    const lastRootNode =\n      this.rootNodeModels && this.rootNodeModels.length && this.rootNodeModels[this.rootNodeModels.length - 1];\n    return this.findLastVisibleInNode(lastRootNode);\n  }\n\n  private findNodeAbove(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex === 0) {\n      return model.parent;\n    } else if (selfIndex > 0) {\n      return this.findLastVisibleInNode(siblings[selfIndex - 1]);\n    }\n  }\n\n  private findNodeBelow(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    if (model.expanded && model.children.length > 0) {\n      return model.children[0];\n    } else {\n      return this.findNextFocusable(model);\n    }\n  }\n\n  focusNode(model: TreeNodeModel<T>): void {\n    if (model) {\n      this._focusRequest.next(model.nodeId);\n    }\n  }\n\n  broadcastFocusedNode(nodeId: string): void {\n    if (this.focusedNodeId !== nodeId) {\n      this.focusedNodeId = nodeId;\n      this._focusChange.next(nodeId);\n    }\n  }\n\n  focusParent(model: TreeNodeModel<T>): void {\n    if (model) {\n      this.focusNode(model.parent);\n    }\n  }\n\n  focusFirstVisibleNode(): void {\n    const focusModel = this.rootNodeModels && this.rootNodeModels[0];\n    this.focusNode(focusModel);\n  }\n\n  focusLastVisibleNode(): void {\n    this.focusNode(this.findLastVisibleInTree());\n  }\n\n  focusNodeAbove(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeAbove(model));\n  }\n\n  focusNodeBelow(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeBelow(model));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '.clr-treenode-link',\n})\nexport class ClrTreeNodeLink {\n  constructor(private el: ElementRef) {}\n\n  activate() {\n    if (this.el.nativeElement && this.el.nativeElement.click) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger, state } from '@angular/animations';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { KeyCodes } from './../../utils/enums/key-codes.enum';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { keyValidator, preventArrowKeyScroll } from '../../utils/focus/key-focus/util';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { DeclarativeTreeNodeModel } from './models/declarative-tree-node.model';\nimport { ClrSelectedState } from './models/selected-state.enum';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nconst LVIEW_CONTEXT_INDEX = 8;\n\n@Component({\n  selector: 'clr-tree-node',\n  templateUrl: './tree-node.html',\n  providers: [\n    UNIQUE_ID_PROVIDER,\n    TREE_FEATURES_PROVIDER,\n    IfExpandService,\n    { provide: LoadingListener, useExisting: IfExpandService },\n  ],\n  animations: [\n    trigger('toggleChildrenAnim', [\n      transition('collapsed => expanded', [style({ height: 0 }), animate(200, style({ height: '*' }))]),\n      transition('expanded => collapsed', [style({ height: '*' }), animate(200, style({ height: 0 }))]),\n      state('expanded', style({ height: '*', 'overflow-y': 'visible' })),\n      state('collapsed', style({ height: 0 })),\n    ]),\n  ],\n  host: {\n    '[attr.role]': '\"treeitem\"',\n    '[class.clr-tree-node]': 'true',\n  },\n})\nexport class ClrTreeNode<T> implements OnInit, OnDestroy {\n  STATES = ClrSelectedState;\n  private skipEmitChange = false;\n\n  constructor(\n    @Inject(UNIQUE_ID) public nodeId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional()\n    @SkipSelf()\n    parent: ClrTreeNode<T>,\n    public featuresService: TreeFeaturesService<T>,\n    public expandService: IfExpandService,\n    public commonStrings: ClrCommonStringsService,\n    private focusManager: TreeFocusManagerService<T>,\n    injector: Injector\n  ) {\n    if (this.featuresService.recursion) {\n      // I'm completely stuck, we have to hack into private properties until either\n      // https://github.com/angular/angular/issues/14935 or https://github.com/angular/angular/issues/15998\n      // are fixed\n      // This is for non-ivy implementations\n      if ((<any>injector).view) {\n        this._model = (<any>injector).view.context.clrModel;\n      } else {\n        // Ivy puts this on a specific index of a _lView property\n        // tslint:disable-next-line\n        this._model = (<any>injector)._lView[LVIEW_CONTEXT_INDEX].clrModel;\n      }\n    } else {\n      // Force cast for now, not sure how to tie the correct type here to featuresService.recursion\n      this._model = new DeclarativeTreeNodeModel(parent ? <DeclarativeTreeNodeModel<T>>parent._model : null);\n    }\n    this._model.nodeId = this.nodeId;\n  }\n\n  _model: TreeNodeModel<T>;\n\n  isExpandable() {\n    if (typeof this.expandable !== 'undefined') {\n      return this.expandable;\n    }\n    return !!this.expandService.expandable || (this._model.children && this._model.children.length > 0);\n  }\n\n  @Input('clrSelected')\n  get selected(): ClrSelectedState | boolean {\n    return this._model.selected.value;\n  }\n  set selected(value: ClrSelectedState | boolean) {\n    this.featuresService.selectable = true;\n    // Gracefully handle falsy states like null or undefined because it's just easier than answering questions.\n    // This shouldn't happen with strict typing on the app's side, but it's not up to us.\n    if (value === null || typeof value === 'undefined') {\n      value = ClrSelectedState.UNSELECTED;\n    }\n    // We match booleans to the corresponding ClrSelectedState\n    if (typeof value === 'boolean') {\n      value = value ? ClrSelectedState.SELECTED : ClrSelectedState.UNSELECTED;\n    }\n    // We propagate only if the tree is in smart mode, and skip emitting the output when we set the input\n    // See https://github.com/vmware/clarity/issues/3073\n    this.skipEmitChange = true;\n    this._model.setSelected(value, this.featuresService.eager, this.featuresService.eager);\n    this.skipEmitChange = false;\n  }\n\n  @Output('clrSelectedChange') selectedChange = new EventEmitter<ClrSelectedState>(false);\n\n  get ariaSelected(): boolean {\n    return this.featuresService.selectable ? this._model.selected.value === ClrSelectedState.SELECTED : null;\n  }\n\n  // Allows the consumer to override our logic deciding if a node is expandable.\n  // Useful for recursive trees that don't want to pre-load one level ahead just to know which nodes are expandable.\n  @Input('clrExpandable') expandable: boolean | undefined;\n\n  // I'm caving on this, for tree nodes I think we can tolerate having a two-way binding on the component\n  // rather than enforce the clrIfExpanded structural directive for dynamic cases. Mostly because for the smart\n  // case, you can't use a structural directive, it would need to go on an ng-container.\n  @Input('clrExpanded')\n  get expanded(): boolean {\n    return this.expandService.expanded;\n  }\n  set expanded(value: boolean) {\n    this.expandService.expanded = value;\n  }\n\n  @Output('clrExpandedChange') expandedChange = new EventEmitter<boolean>();\n\n  private subscriptions: Subscription[] = [];\n\n  contentContainerTabindex = -1;\n  @ViewChild('contentContainer', { read: ElementRef, static: true })\n  private contentContainer: ElementRef;\n\n  ngOnInit() {\n    this._model.expanded = this.expanded;\n    this.subscriptions.push(\n      this._model.selected.pipe(filter(() => !this.skipEmitChange)).subscribe(value => {\n        this.selectedChange.emit(value);\n      })\n    );\n    this.subscriptions.push(\n      this.expandService.expandChange.subscribe(value => {\n        this.expandedChange.emit(value);\n        this._model.expanded = value;\n      })\n    );\n    this.subscriptions.push(\n      this.focusManager.focusRequest.subscribe(nodeId => {\n        if (this.nodeId === nodeId) {\n          this.focusTreeNode();\n        }\n      }),\n      this.focusManager.focusChange.subscribe(nodeId => {\n        this.checkTabIndex(nodeId);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this._model.destroy();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  // @ContentChild would have been more succinct\n  // but it doesn't offer a way to query only an immediate child\n  @ContentChildren(ClrTreeNodeLink, { descendants: false })\n  private treeNodeLinkList: QueryList<ClrTreeNodeLink>;\n\n  get treeNodeLink() {\n    return this.treeNodeLinkList && this.treeNodeLinkList.first;\n  }\n\n  private setTabIndex(value: number) {\n    this.contentContainerTabindex = value;\n    this.contentContainer.nativeElement.setAttribute('tabindex', value);\n  }\n\n  private checkTabIndex(nodeId: string): void {\n    if (isPlatformBrowser(this.platformId) && this.nodeId !== nodeId && this.contentContainerTabindex !== -1) {\n      this.setTabIndex(-1);\n    }\n  }\n\n  focusTreeNode(): void {\n    if (isPlatformBrowser(this.platformId) && document.activeElement !== this.contentContainer.nativeElement) {\n      this.setTabIndex(0);\n      this.contentContainer.nativeElement.focus();\n    }\n  }\n\n  broadcastFocusOnContainer() {\n    this.focusManager.broadcastFocusedNode(this.nodeId);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // Two reasons to prevent default behavior:\n    // 1. to prevent scrolling on arrow keys\n    // 2. Assistive Technology focus differs from Keyboard focus behavior.\n    //    By default, pressing arrow key makes AT focus go into the nested content of the item.\n    preventArrowKeyScroll(event);\n\n    // https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-22\n    switch (keyValidator(event.key)) {\n      case KeyCodes.ArrowUp:\n        this.focusManager.focusNodeAbove(this._model);\n        break;\n      case KeyCodes.ArrowDown:\n        this.focusManager.focusNodeBelow(this._model);\n        break;\n      case KeyCodes.ArrowRight:\n        this.expandOrFocusFirstChild();\n        break;\n      case KeyCodes.ArrowLeft:\n        this.collapseOrFocusParent();\n        break;\n      case KeyCodes.Home:\n        this.focusManager.focusFirstVisibleNode();\n        break;\n      case KeyCodes.End:\n        this.focusManager.focusLastVisibleNode();\n        break;\n      case KeyCodes.Enter:\n        this.triggerDefaultAction();\n        break;\n      case KeyCodes.Space:\n        // to prevent scrolling on space key in this specific case\n        event.preventDefault();\n        this.triggerDefaultAction();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private expandOrFocusFirstChild() {\n    if (this.expanded) {\n      // if the node is already expanded and has children, focus its very first child\n      if (this._model.children.length > 0) {\n        this.focusManager.focusNodeBelow(this._model);\n      }\n    } else {\n      // we must check if the node is expandable, in order to set .expanded to true from false\n      // because we shouldn't set .expanded to true if it's not expandable node\n      if (this.isExpandable()) {\n        this.expandService.expanded = true;\n      }\n    }\n  }\n\n  private collapseOrFocusParent() {\n    if (this.expanded) {\n      this.expandService.expanded = false;\n    } else {\n      this.focusManager.focusParent(this._model);\n    }\n  }\n\n  private triggerDefaultAction() {\n    if (this.treeNodeLink) {\n      this.treeNodeLink.activate();\n    } else {\n      if (this.featuresService.selectable) {\n        this._model.toggleSelection(this.featuresService.eager);\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { ClrTreeNode } from './tree-node';\n\n@Component({\n  selector: 'clr-tree',\n  template: `\n    <ng-content></ng-content>\n    <clr-recursive-children *ngIf=\"featuresService.recursion\"\n                            [children]=\"featuresService.recursion.root\"></clr-recursive-children>\n  `,\n  providers: [TREE_FEATURES_PROVIDER, TreeFocusManagerService],\n  host: {\n    '[attr.tabindex]': 'tabindex',\n    '[attr.role]': '\"tree\"',\n    '[attr.aria-multiselectable]': 'isMultiSelectable',\n  },\n})\nexport class ClrTree<T> implements AfterContentInit, OnDestroy {\n  constructor(\n    public featuresService: TreeFeaturesService<T>,\n    private focusManagerService: TreeFocusManagerService<T>,\n    private el: ElementRef\n  ) {}\n\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrLazy')\n  set lazy(value: boolean) {\n    this.featuresService.eager = !value;\n  }\n\n  tabindex = 0;\n\n  get isMultiSelectable() {\n    return this.featuresService.selectable && this.rootNodes.length > 0;\n  }\n\n  @HostListener('focusin', ['$event'])\n  onFocusIn(event: FocusEvent) {\n    if (event.target === this.el.nativeElement) {\n      // After discussing with the team, I've made it so that when the tree receives focus, the first visible node will be focused.\n      // This will prevent from the page scrolling abruptly to the first selected node if it exist in a deeply nested tree.\n      this.focusManagerService.focusFirstVisibleNode();\n\n      // when the first child gets focus,\n      // tree should no longer have tabindex of 0;\n      delete this.tabindex;\n    }\n  }\n\n  @ContentChildren(ClrTreeNode) private rootNodes: QueryList<ClrTreeNode<T>>;\n\n  ngAfterContentInit() {\n    this.setRootNodes();\n    this.subscriptions.push(\n      this.rootNodes.changes.subscribe(() => {\n        this.setRootNodes();\n      })\n    );\n  }\n\n  private setRootNodes(): void {\n    // if node has no parent, it's a root node\n    // for recursive tree, this.rootNodes registers also nested children\n    // so we have to use filter to extract the ones that are truly root nodes\n    this.focusManagerService.rootNodeModels = this.rootNodes.map(node => node._model).filter(node => !node.parent);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isObservable, Subscription } from 'rxjs';\n\nimport { TreeNodeModel } from './tree-node.model';\nimport { AsyncArray, isPromise } from './async-array';\nimport { TreeFeaturesService } from '../tree-features.service';\n\n/*\n * A recursive model is built received from the app and traversed to create the corresponding components.\n * Recursive = Model dictates the tree node components\n */\nexport class RecursiveTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(\n    model: T,\n    parent: RecursiveTreeNodeModel<T> | null,\n    private getChildren: (node: T) => AsyncArray<T> | undefined,\n    private featuresService: TreeFeaturesService<T> | undefined\n  ) {\n    super();\n    this.model = model;\n    this.parent = parent;\n  }\n\n  parent: RecursiveTreeNodeModel<T> | null;\n\n  private childrenFetched = false;\n\n  clearChildren() {\n    this._children.forEach(child => child.destroy());\n    delete this._children;\n    this.childrenFetched = false;\n  }\n\n  fetchChildren() {\n    if (this.childrenFetched) {\n      return;\n    }\n\n    const asyncChildren = this.getChildren(this.model);\n    if (isPromise(asyncChildren)) {\n      this.loading = true;\n      asyncChildren.then(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (isObservable(asyncChildren)) {\n      this.loading = true;\n      this.subscription = asyncChildren.subscribe(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (asyncChildren) {\n      // Synchronous case\n      this._children = this.wrapChildren(asyncChildren);\n    } else {\n      this._children = [];\n    }\n    this.childrenFetched = true;\n    if (this.featuresService) {\n      this.featuresService.childrenFetched.next();\n    }\n  }\n\n  private wrapChildren(rawModels: T[]) {\n    return rawModels.map(m => new RecursiveTreeNodeModel(m, this, this.getChildren, this.featuresService));\n  }\n\n  private _children: RecursiveTreeNodeModel<T>[] = [];\n  get children(): RecursiveTreeNodeModel<T>[] {\n    this.fetchChildren();\n    return this._children;\n  }\n  set children(value: RecursiveTreeNodeModel<T>[]) {\n    this._children = value;\n  }\n\n  private subscription: Subscription;\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ArrowKeyDirection {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// We need to make sure people can give us null or undefined children even if they run strict type checking.\nimport { Observable } from 'rxjs';\n\nexport type AsyncArray<T> =\n  | T[]\n  | null\n  | undefined\n  | Promise<T[] | null | undefined>\n  | Observable<T[] | null | undefined>;\n\nexport function isPromise<T>(o: AsyncArray<T>): o is Promise<T[]> {\n  // Shamelessly copied from every open-source project out there.\n  return o && typeof (<any>o).then === 'function';\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Input, OnChanges, OnDestroy, TemplateRef } from '@angular/core';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { AsyncArray } from './models/async-array';\nimport { Subscription } from 'rxjs';\n\nexport interface ClrRecursiveForOfContext<T> {\n  $implicit: T;\n  clrModel: TreeNodeModel<T>;\n}\n\n@Directive({ selector: '[clrRecursiveFor][clrRecursiveForOf]' })\nexport class ClrRecursiveForOf<T> implements OnChanges, OnDestroy {\n  constructor(\n    private template: TemplateRef<ClrRecursiveForOfContext<T>>,\n    private featuresService: TreeFeaturesService<T>,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  // TODO: accept NgIterable<T>\n  @Input('clrRecursiveForOf') nodes: T | T[];\n\n  // TODO: accept NgIterable<T> return type\n  @Input('clrRecursiveForGetChildren') getChildren: (node: T) => AsyncArray<T>;\n\n  private childrenFetchSubscription: Subscription;\n\n  // I'm using OnChanges instead of OnInit to easily keep up to date with dynamic trees. Maybe optimizable later.\n  ngOnChanges() {\n    let wrapped: RecursiveTreeNodeModel<T>[];\n    if (Array.isArray(this.nodes)) {\n      wrapped = this.nodes.map(node => new RecursiveTreeNodeModel(node, null, this.getChildren, this.featuresService));\n    } else {\n      wrapped = [new RecursiveTreeNodeModel(this.nodes, null, this.getChildren, this.featuresService)];\n    }\n    if (!this.childrenFetchSubscription) {\n      this.childrenFetchSubscription = this.featuresService.childrenFetched.subscribe(() => {\n        this.cdr.detectChanges();\n      });\n    }\n\n    this.featuresService.recursion = {\n      template: this.template,\n      root: wrapped,\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.childrenFetchSubscription) {\n      this.childrenFetchSubscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\n\n@Component({\n  selector: 'clr-recursive-children',\n  template: `\n    <ng-container *ngIf=\"shouldRender()\">\n      <ng-container *ngFor=\"let child of parent?.children || children\">\n        <ng-container *ngTemplateOutlet=\"featuresService.recursion.template; context: getContext(child)\"></ng-container>\n      </ng-container>\n    </ng-container>\n  `,\n  host: {\n    '[attr.role]': '\"group\"', // Safari + VO needs direct relationship between treeitem and group; no element should exist between them\n  },\n})\n/**\n * Internal component, do not export!\n * This is part of the hack to get around https://github.com/angular/angular/issues/15998\n */\nexport class RecursiveChildren<T> {\n  constructor(public featuresService: TreeFeaturesService<T>, @Optional() private expandService: IfExpandService) {\n    if (expandService) {\n      this.subscription = this.expandService.expandChange.subscribe(value => {\n        if (!value && this.parent && !this.featuresService.eager && this.featuresService.recursion) {\n          // In the case of lazy-loading recursive trees, we clear the children on collapse.\n          // This is better in case they change between two user interaction, and that way\n          // the app itself can decide whether to cache them or not.\n          (<RecursiveTreeNodeModel<T>>this.parent).clearChildren();\n        }\n      });\n    }\n  }\n\n  shouldRender() {\n    return (\n      this.featuresService.recursion &&\n      // In the smart case, we eagerly render all the recursive children\n      // to make sure two-way bindings for selection are available.\n      // They will be hidden with CSS by the parent.\n      (this.featuresService.eager || !this.expandService || this.expandService.expanded)\n    );\n  }\n\n  // Offering the option to either give the parent node to recurse potentially lazily,\n  // or directly the list of children to display.\n  @Input('parent') parent: TreeNodeModel<T>;\n  @Input('children') children: TreeNodeModel<T>[];\n\n  getContext(node: TreeNodeModel<T>): ClrRecursiveForOfContext<T> {\n    return {\n      $implicit: node.model,\n      clrModel: node,\n    };\n  }\n\n  subscription: Subscription;\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrTreeNode } from './tree-node';\nimport { ClrTree } from './tree';\nimport { ClrRecursiveForOf } from './recursive-for-of';\nimport { RecursiveChildren } from './recursive-children';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nexport const CLR_TREE_VIEW_DIRECTIVES: Type<any>[] = [ClrTree, ClrTreeNode, ClrRecursiveForOf, ClrTreeNodeLink];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrLoadingModule],\n  declarations: [CLR_TREE_VIEW_DIRECTIVES, RecursiveChildren],\n  exports: [CLR_TREE_VIEW_DIRECTIVES],\n})\nexport class ClrTreeViewModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrDatagridModule } from './datagrid/datagrid.module';\nimport { ClrStackViewModule } from './stack-view/stack-view.module';\nimport { ClrTreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({ exports: [ClrDatagridModule, ClrStackViewModule, ClrTreeViewModule] })\nexport class ClrDataModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class FocusableItem {\n  id: string;\n  disabled?: boolean;\n\n  abstract focus(): void;\n  abstract blur(): void;\n  abstract activate?(): void;\n\n  up?: FocusableItem | Observable<FocusableItem>;\n  down?: FocusableItem | Observable<FocusableItem>;\n  left?: FocusableItem | Observable<FocusableItem>;\n  right?: FocusableItem | Observable<FocusableItem>;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Type } from '@angular/core';\nimport { UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\nexport function customFocusableItemProvider<T>(implementation: Type<T>) {\n  return [\n    UNIQUE_ID_PROVIDER,\n    implementation,\n    {\n      provide: FocusableItem,\n      useExisting: implementation,\n    },\n  ];\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { isObservable, of } from 'rxjs';\n\nimport { ArrowKeyDirection } from './arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item/focusable-item';\n\n@Injectable()\nexport class FocusService {\n  constructor(private renderer: Renderer2) {}\n\n  private _unlistenFuncs = [];\n  private _current: FocusableItem;\n  public get current() {\n    return this._current;\n  }\n\n  reset(first: FocusableItem) {\n    this._current = first;\n  }\n\n  listenToArrowKeys(el: HTMLElement) {\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowup', event => !this.move(ArrowKeyDirection.UP)));\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowdown', event => !this.move(ArrowKeyDirection.DOWN))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowleft', event => !this.move(ArrowKeyDirection.LEFT))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowright', event => !this.move(ArrowKeyDirection.RIGHT))\n    );\n  }\n\n  registerContainer(el: HTMLElement) {\n    this.renderer.setAttribute(el, 'tabindex', '0');\n    this.listenToArrowKeys(el);\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.space', () => !this.activateCurrent()));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.enter', () => !this.activateCurrent()));\n  }\n\n  moveTo(item: FocusableItem) {\n    /**\n     * Make sure that item is not undefined,\n     * This is safety net in the case that someone sometime decide to\n     * call this method without having FocusableItem.\n     */\n    if (item === undefined) {\n      return;\n    }\n\n    if (this.current) {\n      this.current.blur();\n    }\n    item.focus();\n    this._current = item;\n  }\n\n  move(direction: ArrowKeyDirection): boolean {\n    let moved = false;\n    if (this.current) {\n      const next = this.current[direction];\n      if (next) {\n        // Turning the value into an Observable isn't great, but it's the fastest way to avoid code duplication.\n        // If performance ever matters for this, we can refactor using additional private methods.\n        const nextObs = isObservable(next) ? next : of(next);\n        nextObs.subscribe(item => {\n          if (item) {\n            this.moveTo(item);\n            moved = true;\n          }\n        });\n      }\n    }\n    return moved;\n  }\n\n  activateCurrent() {\n    if (this.current && this.current.activate) {\n      this.current.activate();\n      return true;\n    }\n    return false;\n  }\n\n  public detachListeners() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n  }\n}\n\nexport function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2) {\n  return existing || new FocusService(renderer);\n}\n\nexport const FOCUS_SERVICE_PROVIDER = {\n  provide: FocusService,\n  useFactory: clrFocusServiceFactory,\n  deps: [[new Optional(), new SkipSelf(), FocusService], Renderer2],\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\nimport { ArrowKeyDirection } from '../arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item';\n\nexport class Linkers {\n  /**\n   * Links a set of focusable items to a parent along one direction\n   */\n  static linkParent(\n    items: FocusableItem[],\n    parent: FocusableItem | Observable<FocusableItem>,\n    direction: ArrowKeyDirection\n  ) {\n    items.forEach(item => (item[direction] = parent));\n  }\n\n  /**\n   * Double-links a set of focusable items vertically, possibly looping\n   */\n  static linkVertical(items: FocusableItem[], loop = true) {\n    items.forEach((item, index) => {\n      if (index > 0) {\n        item.up = items[index - 1];\n      }\n      if (index < items.length - 1) {\n        item.down = items[index + 1];\n      }\n    });\n    if (loop && items.length > 1) {\n      items[0].up = items[items.length - 1];\n      items[items.length - 1].down = items[0];\n    }\n  }\n}\n\n// Right now I only need the two linkers above, but we can easily add more linkers. A couple examples:\n// export function linkHorizontal(items: FocusableItem[], loop = true);\n// export function linkTable(items: FocusableItem[][]);\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable, Observer } from 'rxjs';\n\nexport function wrapObservable<T>(\n  observable: Observable<T>,\n  onSubscribe?: (observer: Observer<T>) => void,\n  onUnsubscribe?: (observer: Observer<T>) => void\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    onSubscribe(observer);\n    const subscription = observable.subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n      if (onUnsubscribe) {\n        onUnsubscribe(observer);\n      }\n    };\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, SkipSelf } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ClrPopoverToggleService } from '../../../utils/popover/providers/popover-toggle.service';\nimport { customFocusableItemProvider } from '../../../utils/focus/focusable-item/custom-focusable-item-provider';\nimport { UNIQUE_ID } from '../../../utils/id-generator/id-generator.service';\nimport { ArrowKeyDirection } from '../../../utils/focus/arrow-key-direction.enum';\nimport { FocusService } from '../../../utils/focus/focus.service';\nimport { FocusableItem } from '../../../utils/focus/focusable-item/focusable-item';\nimport { Linkers } from '../../../utils/focus/focusable-item/linkers';\nimport { wrapObservable } from '../../../utils/focus/wrap-observable';\n\n@Injectable()\nexport class DropdownFocusHandler implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private renderer: Renderer2,\n    @SkipSelf()\n    @Optional()\n    private parent: DropdownFocusHandler,\n    private toggleService: ClrPopoverToggleService,\n    private focusService: FocusService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.resetChildren();\n    this.moveToFirstItemWhenOpen();\n    if (!this.parent) {\n      this.handleRootFocus();\n    }\n  }\n\n  private _unlistenFuncs = [];\n\n  /**\n   * If the dropdown was opened by clicking on the trigger, we automatically move to the first item\n   */\n  moveToFirstItemWhenOpen() {\n    this.toggleService.openChange.subscribe(open => {\n      if (open && this.toggleService.originalEvent) {\n        // Even if we properly waited for ngAfterViewInit, the container still wouldn't be attached to the DOM.\n        // So setTimeout is the only way to wait for the container to be ready to move focus to first item.\n        setTimeout(() => {\n          this.focusService.moveTo(this);\n          if (this.parent) {\n            this.focusService.move(ArrowKeyDirection.RIGHT);\n          } else {\n            this.focusService.move(ArrowKeyDirection.DOWN);\n          }\n        });\n      }\n    });\n  }\n\n  private focusBackOnTrigger = false;\n\n  /**\n   * Focus on the menu when it opens, and focus back on the root trigger when the whole dropdown becomes closed\n   */\n  handleRootFocus() {\n    this.toggleService.openChange.subscribe(open => {\n      if (!open) {\n        // We reset the state of the focus service both on initialization and when closing.\n        this.focusService.reset(this);\n        // But we only actively focus the trigger when closing, not on initialization.\n        if (this.focusBackOnTrigger) {\n          this.focus();\n        }\n      }\n      this.focusBackOnTrigger = open;\n    });\n  }\n\n  private _trigger: HTMLElement;\n  get trigger() {\n    return this._trigger;\n  }\n  set trigger(el: HTMLElement) {\n    this._trigger = el;\n\n    if (this.parent) {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowright', event => this.toggleService.toggleWithEvent(event))\n      );\n    } else {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowup', event => this.toggleService.toggleWithEvent(event))\n      );\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowdown', event => this.toggleService.toggleWithEvent(event))\n      );\n      this.focusService.listenToArrowKeys(el);\n    }\n  }\n\n  private _container: HTMLElement;\n  get container() {\n    return this._container;\n  }\n  set container(el: HTMLElement) {\n    this._container = el;\n\n    // whether root container or not, tab key should always toggle (i.e. close) the container\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.tab', event => this.toggleService.toggleWithEvent(event))\n    );\n\n    if (this.parent) {\n      // if it's a nested container, pressing esc has the same effect as pressing left key, which closes the current\n      // popup and moves up to its parent. Here, we stop propagation so that the parent container\n      // doesn't receive the esc keydown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => {\n          this.focusService.move(ArrowKeyDirection.LEFT);\n          event.stopPropagation();\n        })\n      );\n    } else {\n      // The root container is the only one we register to the focus service, others do not need focus\n      this.focusService.registerContainer(el);\n\n      // The root container will simply close the container when esc key is pressed\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => this.toggleService.toggleWithEvent(event))\n      );\n\n      // When the user moves focus outside of the menu, we close the dropdown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'blur', event => {\n          // we clear out any existing focus on the items\n          this.children.pipe(take(1)).subscribe(items => items.forEach(item => item.blur()));\n\n          // event.relatedTarget is null in IE11. In that case we use document.activeElement which correctly points\n          // to the element we want to check. Note that other browsers might point document.activeElement to the\n          // wrong element. This is ok, because all the other browsers we support relies on event.relatedTarget.\n          const target = event.relatedTarget || document.activeElement;\n\n          // If the user clicks on an item which triggers the blur, we don't want to close it since it may open a submenu.\n          // In the case of needing to close it (i.e. user selected an item and the dropdown menu is set to close on\n          // selection), dropdown-item.ts handles it.\n          if (target && isPlatformBrowser(this.platformId)) {\n            if (el.contains(target) || target === this.trigger) {\n              return;\n            }\n          }\n          // We let the user move focus to where the want, we don't force the focus back on the trigger\n          this.focusBackOnTrigger = false;\n          this.toggleService.open = false;\n        })\n      );\n    }\n  }\n\n  focus() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.focus();\n    }\n  }\n  blur() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.trigger.click();\n    }\n  }\n\n  private children: ReplaySubject<FocusableItem[]>;\n  right?: Observable<FocusableItem>;\n  down?: Observable<FocusableItem>;\n  up?: Observable<FocusableItem>;\n\n  private openAndGetChildren() {\n    return wrapObservable(this.children, () => (this.toggleService.open = true));\n  }\n  private closeAndGetThis() {\n    return wrapObservable(of(this), () => (this.toggleService.open = false));\n  }\n\n  resetChildren() {\n    this.children = new ReplaySubject<FocusableItem[]>(1);\n    if (this.parent) {\n      this.right = this.openAndGetChildren().pipe(map(all => all[0]));\n    } else {\n      this.down = this.openAndGetChildren().pipe(map(all => all[0]));\n      this.up = this.openAndGetChildren().pipe(map(all => all[all.length - 1]));\n    }\n  }\n\n  addChildren(children: FocusableItem[]) {\n    Linkers.linkVertical(children);\n    if (this.parent) {\n      Linkers.linkParent(children, this.closeAndGetThis(), ArrowKeyDirection.LEFT);\n    }\n    this.children.next(children);\n  }\n\n  ngOnDestroy() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n    this.focusService.detachListeners();\n  }\n}\n\nexport const DROPDOWN_FOCUS_HANDLER_PROVIDER = customFocusableItemProvider(DropdownFocusHandler);\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RootDropdownService {\n  private _changes: Subject<boolean> = new Subject<boolean>();\n\n  get changes(): Observable<boolean> {\n    return this._changes.asObservable();\n  }\n\n  closeMenus(): void {\n    this._changes.next(false);\n  }\n}\n\nexport function clrRootDropdownFactory(existing: RootDropdownService) {\n  return existing || new RootDropdownService();\n}\n\nexport const ROOT_DROPDOWN_PROVIDER = {\n  provide: RootDropdownService,\n  useFactory: clrRootDropdownFactory,\n  deps: [[new Optional(), new SkipSelf(), RootDropdownService]],\n};\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Do NOT Angular this up. It assumes we're in the DOM, plays with native elements, ...\n * It could potentially be used as part of @clr/ui as a vanilla Javascript helper.\n */\n\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { PopoverOptions } from './popover-options.interface';\nexport enum Point {\n  RIGHT_CENTER,\n  RIGHT_TOP,\n  RIGHT_BOTTOM,\n  TOP_CENTER,\n  TOP_RIGHT,\n  TOP_LEFT,\n  BOTTOM_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n}\n\nconst POSITION_RELATIVE = 'relative';\nconst POSITION_ABSOLUTE = 'absolute';\nconst POSITION_FIXED = 'fixed';\n\nconst OVERFLOW_SCROLL = 'scroll';\nconst OVERFLOW_AUTO = 'auto';\n\nexport class Popover {\n  private _scroll: Subject<void>;\n\n  constructor(private element: any) {\n    // Browsers don't agree with what to do if some of these are not specified, so we set them all to be safe.\n    element.style.position = POSITION_ABSOLUTE;\n    element.style.top = 0;\n    element.style.bottom = 'auto';\n    element.style.left = 0;\n    element.style.right = 'auto';\n  }\n\n  // TODO: need a way to account for parameters that change dynamically (positioning).\n  public anchor(\n    anchor: any,\n    anchorAlign: Point,\n    popoverAlign: Point,\n    { offsetX = 0, offsetY = 0, useAnchorParent = false }: PopoverOptions = {}\n  ): Observable<any> {\n    // TODO: we are assuming here that the popover is inside or next to the anchor.\n    // We'd need to go up the popover tree too otherwise\n\n    this.addScrollEventListeners(anchor);\n    if (useAnchorParent) {\n      anchor = anchor.parentNode;\n    }\n    // explicitly override anchor's style to static\n    anchor.style.position = 'static';\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const popoverRect = this.element.getBoundingClientRect();\n\n    // position of left top corner of anchor + the offset\n    let leftDiff: number = anchorRect.left - popoverRect.left + offsetX;\n    let topDiff: number = anchorRect.top - popoverRect.top + offsetY;\n\n    // first, adjust positioning based on anchor's align point\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += anchorRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += anchorRect.height / 2;\n        leftDiff += anchorRect.width;\n        break;\n      default:\n    }\n\n    // second, adjust positioning based on popover's align point\n    switch (popoverAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        leftDiff -= popoverRect.width;\n        break;\n      default:\n    }\n\n    // Third, adjust with popover's margins based on the two align points.\n    // Here, we make an assumption that popover is primarily positioned outside the\n    // anchor with minor offset. Without this assumption, it's impossible to apply\n    // the popover's margins in a predictable way. For example, assume that a popover\n    // and its anchor are exactly the same size. if a popover is positioned inside the\n    // anchor (which is technically possible), then it becomes impossible to know what to do\n    // if the popover has a non-zero margin value all around (because applying the margin in\n    // all four directions will result in no margin visually, which isn't what we want).\n    // Therefore, our logic makes assumptions about margins of interest given the points,\n    // and only covers the cases where popover is outside the anchor.\n\n    const popoverComputedStyle = getComputedStyle(this.element);\n    const marginLeft = parseInt(popoverComputedStyle.marginLeft, 10);\n    const marginRight = parseInt(popoverComputedStyle.marginRight, 10);\n    const marginTop = parseInt(popoverComputedStyle.marginTop, 10);\n    const marginBottom = parseInt(popoverComputedStyle.marginBottom, 10);\n\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n      case Point.TOP_RIGHT:\n      case Point.RIGHT_TOP:\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.LEFT_BOTTOM:\n      case Point.BOTTOM_LEFT:\n      case Point.BOTTOM_RIGHT:\n      case Point.RIGHT_BOTTOM:\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.TOP_CENTER:\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += marginTop;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff -= marginRight;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        break;\n      default:\n    }\n\n    this.element.style.transform = `translateX(${Math.round(leftDiff)}px) translateY(${Math.round(topDiff)}px)`;\n    return this._scroll.asObservable();\n  }\n\n  public release() {\n    this.element.style.transform = '';\n    this.removeScrollEventListeners();\n  }\n\n  private isPositioned(container: any) {\n    const position = getComputedStyle(container).position;\n    return position === POSITION_RELATIVE || position === POSITION_ABSOLUTE || position === POSITION_FIXED;\n  }\n\n  /*\n   * Containers up to the first positioned one will have an event on scroll\n   */\n\n  private scrollableElements: HTMLElement[] = [];\n\n  private emitScrollEvent() {\n    this._scroll.next();\n  }\n\n  private boundOnScrollListener: any = this.emitScrollEvent.bind(this);\n\n  private addScrollEventListeners(e: any) {\n    this._scroll = new Subject<void>();\n    const anchor: any = e;\n    let current: any = e;\n    while (current && current !== document) {\n      if (this.scrolls(current)) {\n        current.addEventListener('scroll', this.boundOnScrollListener);\n        this.scrollableElements.push(current);\n      }\n      if (current !== anchor && this.isPositioned(current)) {\n        break;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  private removeScrollEventListeners() {\n    for (const elem of this.scrollableElements) {\n      elem.removeEventListener('scroll', this.boundOnScrollListener);\n    }\n    this.scrollableElements.length = 0;\n    if (this._scroll) {\n      this._scroll.complete();\n      delete this._scroll;\n    }\n  }\n\n  private scrolls(container: any): boolean {\n    const computedStyles = getComputedStyle(container);\n    return (\n      computedStyles.overflowX === OVERFLOW_SCROLL ||\n      computedStyles.overflowX === OVERFLOW_AUTO ||\n      computedStyles.overflowY === OVERFLOW_SCROLL ||\n      computedStyles.overflowY === OVERFLOW_AUTO\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DROPDOWN_FOCUS_HANDLER_PROVIDER } from './providers/dropdown-focus-handler.service';\nimport { FOCUS_SERVICE_PROVIDER } from '../../utils/focus/focus.service';\n\nimport { ROOT_DROPDOWN_PROVIDER, RootDropdownService } from './providers/dropdown.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dropdown',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[class.dropdown]': 'true',\n    '[class.open]': 'toggleService.open',\n  },\n  providers: [\n    ROOT_DROPDOWN_PROVIDER,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    FOCUS_SERVICE_PROVIDER,\n    ClrPopoverToggleService,\n    DROPDOWN_FOCUS_HANDLER_PROVIDER,\n  ],\n})\nexport class ClrDropdown implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public parent: ClrDropdown,\n    public toggleService: ClrPopoverToggleService,\n    private cdr: ChangeDetectorRef,\n    dropdownService: RootDropdownService\n  ) {\n    this.subscriptions.push(dropdownService.changes.subscribe(value => (this.toggleService.open = value)));\n    this.subscriptions.push(toggleService.openChange.subscribe(value => this.cdr.markForCheck()));\n  }\n\n  @Input('clrCloseMenuOnItemClick') isMenuClosable: boolean = true;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\n@Injectable()\nexport class BasicFocusableItem implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private el: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    renderer.setAttribute(el.nativeElement, 'id', id);\n    renderer.setAttribute(el.nativeElement, 'tabindex', '-1');\n  }\n\n  disabled = false;\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n      this.el.nativeElement.focus();\n    }\n  }\n  blur() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n      this.el.nativeElement.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n\nexport const BASIC_FOCUSABLE_ITEM_PROVIDER = [\n  UNIQUE_ID_PROVIDER,\n  {\n    provide: FocusableItem,\n    useClass: BasicFocusableItem,\n  },\n];\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\nimport { ClrDropdown } from './dropdown';\nimport { BASIC_FOCUSABLE_ITEM_PROVIDER } from '../../utils/focus/focusable-item/basic-focusable-item.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\nimport { RootDropdownService } from './providers/dropdown.service';\n\n@Directive({\n  selector: '[clrDropdownItem]',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.dropdown-item]': 'true',\n    '[attr.role]': '\"menuitem\"',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.disabled]': \"(disabled && setByDeprecatedDisabled)? '' : null\",\n    '[attr.id]': 'dropdownItemId',\n  },\n  providers: [BASIC_FOCUSABLE_ITEM_PROVIDER],\n})\nexport class ClrDropdownItem implements AfterViewInit {\n  constructor(\n    private dropdown: ClrDropdown,\n    private el: ElementRef<HTMLElement>,\n    private _dropdownService: RootDropdownService,\n    private renderer: Renderer2,\n    private focusableItem: FocusableItem\n  ) {}\n\n  private unlisten;\n  public setByDeprecatedDisabled: boolean = false;\n\n  @Input('clrDisabled')\n  set disabled(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n  }\n\n  get disabled() {\n    return this.focusableItem.disabled;\n  }\n\n  /*\n   * @deprecated since 3.0, remove in 4.0. the presence of this attribute makes it not-focusable in IE11. Use [clrDisabled] input instead.\n   */\n  @Input('disabled')\n  set disabledDeprecated(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n    this.setByDeprecatedDisabled = true;\n  }\n\n  get disabledDeprecated() {\n    return this.focusableItem.disabled;\n  }\n\n  /**\n   * Let you overwrite the focusable auto increment id.\n   */\n  @Input('id')\n  set dropdownItemId(value: string) {\n    this.focusableItem.id = value;\n  }\n  get dropdownItemId() {\n    return this.focusableItem.id;\n  }\n\n  ngAfterViewInit() {\n    this.unlisten = this.renderer.listen(this.el.nativeElement, 'click', () => this.onDropdownItemClick());\n  }\n\n  onDropdownItemClick(): void {\n    if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains('disabled')) {\n      this._dropdownService.closeMenus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unlisten();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum TabsLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterViewChecked,\n  ElementRef,\n  HostBinding,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { Point, Popover } from './popover';\nimport { PopoverOptions } from './popover-options.interface';\n\n// Literally any annotation would work here, but writing our own @HoneyBadger annotation feels overkill.\n@Injectable()\nexport abstract class AbstractPopover implements AfterViewChecked, OnDestroy {\n  constructor(injector: Injector, @SkipSelf() protected parentHost: ElementRef) {\n    this.el = injector.get(ElementRef);\n    this.toggleService = injector.get(ClrPopoverToggleService);\n    this.renderer = injector.get(Renderer2);\n    // Default anchor is the parent host\n    this.anchorElem = parentHost.nativeElement;\n\n    this.popoverInstance = new Popover(this.el.nativeElement);\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      if (change) {\n        this.anchor();\n        this.attachESCListener();\n      } else {\n        this.release();\n        this.detachESCListener();\n      }\n    });\n    if (this.toggleService.open) {\n      this.anchor();\n      this.attachESCListener();\n    }\n  }\n\n  protected el: ElementRef;\n  protected toggleService: ClrPopoverToggleService;\n  protected renderer: Renderer2;\n\n  private popoverInstance: Popover;\n  private subscription: Subscription;\n\n  private updateAnchor = false;\n\n  protected anchorElem: any;\n  protected anchorPoint: Point;\n  protected popoverPoint: Point;\n  protected popoverOptions: PopoverOptions = {};\n\n  protected ignoredElement: any;\n\n  protected anchor() {\n    this.updateAnchor = true;\n    // Ugh\n    this.ignore = this.toggleService.originalEvent;\n  }\n\n  protected release() {\n    this.detachOutsideClickListener();\n    this.popoverInstance.release();\n  }\n\n  ngAfterViewChecked() {\n    if (this.updateAnchor) {\n      this.updateAnchor = false;\n      this.popoverInstance\n        .anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n        .subscribe(() => {\n          // if a scroll event is detected, close the popover\n          this.toggleService.open = false;\n        });\n      this.attachOutsideClickListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this.release();\n    this.detachESCListener();\n    this.subscription.unsubscribe();\n  }\n\n  /*\n     * Fallback to hide when *clrIfOpen is not being used\n     */\n\n  @HostBinding('class.is-off-screen')\n  get isOffScreen() {\n    return this.toggleService.open ? false : true;\n  }\n\n  /*\n     * Until https://github.com/angular/angular/issues/8785 is supported, we don't have any way to instantiate\n     * a separate directive on the host. So let's do dirty but performant for now.\n     */\n  public closeOnOutsideClick = false;\n  private hostClickListener: () => void;\n  private documentClickListener: () => void;\n  private documentESCListener: () => void;\n  private ignoredElementClickListener: () => void;\n  private ignore: any;\n\n  private attachESCListener(): void {\n    if (!this.popoverOptions.ignoreGlobalESCListener) {\n      this.documentESCListener = this.renderer.listen('document', 'keydown', event => {\n        if (event && event.key) {\n          if (event.key === 'Escape' || event.key === 'Esc') {\n            this.toggleService.open = false;\n          }\n        }\n      });\n    }\n  }\n\n  private detachESCListener(): void {\n    if (this.documentESCListener) {\n      this.documentESCListener();\n      delete this.documentESCListener;\n    }\n  }\n\n  private attachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      this.hostClickListener = this.renderer.listen(this.el.nativeElement, 'click', event => (this.ignore = event));\n      if (this.ignoredElement) {\n        this.ignoredElementClickListener = this.renderer.listen(\n          this.ignoredElement,\n          'click',\n          event => (this.ignore = event)\n        );\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', event => {\n        if (event === this.ignore) {\n          delete this.ignore;\n        } else {\n          this.toggleService.open = false;\n        }\n      });\n    }\n  }\n\n  private detachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      if (this.hostClickListener) {\n        this.hostClickListener();\n        delete this.hostClickListener;\n      }\n      if (this.ignoredElementClickListener) {\n        this.ignoredElementClickListener();\n        delete this.ignoredElementClickListener;\n      }\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  SkipSelf,\n} from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\n\n@Component({\n  selector: 'clr-dropdown-menu',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[attr.role]': '\"menu\"',\n  },\n})\nexport class ClrDropdownMenu extends AbstractPopover implements AfterContentInit, OnDestroy {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef<HTMLElement>,\n    @Optional()\n    @SkipSelf()\n    nested: ClrDropdownMenu,\n    focusHandler: DropdownFocusHandler\n  ) {\n    if (!parentHost) {\n      throw new Error('clr-dropdown-menu should only be used inside of a clr-dropdown');\n    }\n    super(injector, parentHost);\n    if (!nested) {\n      // Default positioning for normal dropdown is bottom-left\n      this.anchorPoint = Point.BOTTOM_LEFT;\n      this.popoverPoint = Point.LEFT_TOP;\n    } else {\n      // Default positioning for nested dropdown is right-top\n      this.anchorPoint = Point.RIGHT_TOP;\n      this.popoverPoint = Point.LEFT_TOP;\n    }\n    this.popoverOptions.allowMultipleOpen = true;\n    this.popoverOptions.ignoreGlobalESCListener = true;\n    this.closeOnOutsideClick = true;\n    this.focusHandler = focusHandler;\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // set the popover values based on menu position\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private focusHandler: DropdownFocusHandler;\n  @ContentChildren(FocusableItem) items: QueryList<FocusableItem>;\n\n  ngAfterContentInit() {\n    this.focusHandler.container = this.el.nativeElement;\n    this.items.changes.subscribe(() => this.focusHandler.addChildren(this.items.toArray()));\n    // I saw this on GitHub as a solution to avoid code duplication because of missed QueryList changes\n    this.items.notifyOnChanges();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.focusHandler.resetChildren();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { ClrDropdown } from './dropdown';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\n\n@Directive({\n  // We support both selectors for legacy reasons\n  selector: '[clrDropdownTrigger],[clrDropdownToggle]',\n  host: {\n    '[class.dropdown-toggle]': 'isRootLevelToggle',\n    '[class.dropdown-item]': '!isRootLevelToggle',\n    '[class.expandable]': '!isRootLevelToggle',\n    '[class.active]': 'active',\n    '[attr.aria-haspopup]': '\"menu\"',\n    '[attr.aria-expanded]': 'active',\n  },\n})\nexport class ClrDropdownTrigger {\n  public isRootLevelToggle: boolean = true;\n\n  constructor(\n    dropdown: ClrDropdown,\n    private toggleService: ClrPopoverToggleService,\n    el: ElementRef<HTMLElement>,\n    focusHandler: DropdownFocusHandler\n  ) {\n    // if the containing dropdown has a parent, then this is not the root level one\n    if (dropdown.parent) {\n      this.isRootLevelToggle = false;\n    }\n    focusHandler.trigger = el.nativeElement;\n  }\n\n  get active(): boolean {\n    return this.toggleService.open;\n  }\n\n  @HostListener('click', ['$event'])\n  onDropdownTriggerClick(event: any): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrDropdown } from './dropdown';\nimport { ClrDropdownItem } from './dropdown-item';\nimport { ClrDropdownMenu } from './dropdown-menu';\nimport { ClrDropdownTrigger } from './dropdown-trigger';\n\nexport const CLR_DROPDOWN_DIRECTIVES: Type<any>[] = [ClrDropdown, ClrDropdownMenu, ClrDropdownTrigger, ClrDropdownItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DROPDOWN_DIRECTIVES],\n  exports: [CLR_DROPDOWN_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrDropdownModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO Make this an enum\nexport const ALERT_TYPES: string[] = ['info', 'warning', 'danger', 'success'];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { AlertInfoObject } from '../utils/alert-info-object';\nimport { ALERT_TYPES } from '../utils/alert-types';\nimport { ClrCommonStringsService } from '../../../utils/i18n/common-strings.service';\n\n@Injectable()\nexport class AlertIconAndTypesService {\n  constructor(private commonStrings: ClrCommonStringsService) {}\n\n  private defaultIconShape = 'info-circle';\n  private _alertIconShape = '';\n  private _alertType = 'info';\n\n  get alertType(): string {\n    return this._alertType;\n  }\n  set alertType(val: string) {\n    if (ALERT_TYPES.indexOf(val) > -1) {\n      this._alertType = val;\n    }\n  }\n\n  get alertIconShape(): string {\n    if ('' === this._alertIconShape) {\n      return this.iconInfoFromType(this._alertType).shape;\n    }\n    return this._alertIconShape;\n  }\n  set alertIconShape(val: string) {\n    if (!val) {\n      this._alertIconShape = '';\n    } else if (val !== this._alertIconShape) {\n      this._alertIconShape = val;\n    }\n  }\n\n  get alertIconTitle(): string {\n    return this.iconInfoFromType(this._alertType).title;\n  }\n\n  public iconInfoFromType(type: string): AlertInfoObject {\n    const returnObj = { shape: '', cssClass: '', title: '' };\n\n    switch (type) {\n      case 'warning':\n        returnObj.shape = 'exclamation-triangle';\n        returnObj.cssClass = 'alert-warning';\n        returnObj.title = this.commonStrings.keys.warning;\n        break;\n      case 'danger':\n        returnObj.shape = 'exclamation-circle';\n        returnObj.cssClass = 'alert-danger';\n        returnObj.title = this.commonStrings.keys.danger;\n        break;\n      case 'success':\n        returnObj.shape = 'check-circle';\n        returnObj.cssClass = 'alert-success';\n        returnObj.title = this.commonStrings.keys.success;\n        break;\n      default:\n        returnObj.shape = this.defaultIconShape;\n        returnObj.cssClass = 'alert-info';\n        returnObj.title = this.commonStrings.keys.info;\n        break;\n    }\n\n    return returnObj;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { ClrAlert } from '../alert';\n\n@Injectable()\nexport class MultiAlertService {\n  private subscription: Subscription;\n\n  private allAlerts: QueryList<ClrAlert>;\n\n  /**\n   * The Observable that lets other classes subscribe to changes\n   */\n  private _change = new Subject<number>();\n  public get changes(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _current: number;\n\n  get current() {\n    return this._current;\n  }\n  set current(index: number) {\n    if (index !== this._current) {\n      this._current = index;\n      this._change.next(index);\n    }\n  }\n\n  get activeAlerts() {\n    return this.allAlerts && this.allAlerts.filter(alert => !alert._closed);\n  }\n\n  get currentAlert() {\n    return this.activeAlerts && this.activeAlerts[this.current];\n  }\n\n  set currentAlert(alert: ClrAlert) {\n    this.current = this.activeAlerts.indexOf(alert);\n  }\n\n  get count() {\n    return (this.activeAlerts && this.activeAlerts.length) || 0;\n  }\n\n  manage(alerts: QueryList<ClrAlert>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.allAlerts = alerts;\n    // After receiving alerts' QueryList,\n    // we are picking index 0 as current by default if a user hasn't any index\n    this.current = typeof this._current === 'number' ? this._current : 0;\n    // we have to also broadcast that initial index\n    this._change.next(this.current);\n\n    this.subscription = this.allAlerts.changes.subscribe(() => {\n      if (this.current >= this.allAlerts.length) {\n        this.current = Math.max(0, this.allAlerts.length - 1);\n      }\n    });\n  }\n\n  next() {\n    this.current = this.current === this.activeAlerts.length - 1 ? 0 : this.current + 1;\n  }\n\n  previous() {\n    if (this.activeAlerts.length === 0) {\n      return;\n    }\n    this.current = this.current === 0 ? this.activeAlerts.length - 1 : this.current - 1;\n  }\n\n  close() {\n    this.previous();\n  }\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * @remark\n * This directive is used only of selectin alert text.\n */\n@Directive({\n  selector: '.alert-text',\n})\nexport class ClrAlertText {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  AfterViewInit,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\n// providers\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\nimport { ClrAlertText } from './alert-text';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alert',\n  providers: [AlertIconAndTypesService, ClrAriaLiveService],\n  templateUrl: './alert.html',\n  styles: [':host { display: block; }'],\n})\nexport class ClrAlert implements OnInit, OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private iconService: AlertIconAndTypesService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private multiAlertService: MultiAlertService,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngOnInit() {\n    if (this.multiAlertService) {\n      this.subscriptions.push(\n        this.multiAlertService.changes.subscribe(() => {\n          this.hidden = this.multiAlertService.currentAlert !== this;\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  ngAfterViewInit() {\n    // Announce the first time the alert is render if it is not hidden\n    this.announceAriaLiveMessage();\n  }\n\n  @Input('clrAlertSizeSmall') isSmall: boolean = false;\n  @Input('clrAlertClosable') closable: boolean = true;\n  @Input('clrAlertAppLevel') isAppLevel: boolean = false;\n\n  // Aria\n  @Input() clrCloseButtonAriaLabel: string = this.commonStrings.keys.alertCloseButtonAriaLabel;\n\n  @Input('clrAlertClosed') _closed: boolean = false;\n  @Output('clrAlertClosedChange') _closedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrAlertType')\n  set alertType(val: string) {\n    this.iconService.alertType = val;\n  }\n\n  get alertType(): string {\n    return this.iconService.alertType;\n  }\n\n  /**\n   * clrPolite is not used in the code. Is here just to provide\n   * code complition and also mark component what type AriaLive\n   * will be used.\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrPolite') polite: boolean = true;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  /**\n   * There is an order on how the attributes will take effect.\n   * Assertive, Off, Polite.\n   *\n   * Polite is default if non is passed.\n   *\n   * In the case of setting all of them to true. Assertive will be used.\n   *\n   */\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n\n  @Input('clrAlertIcon')\n  set alertIconShape(value: string) {\n    this.iconService.alertIconShape = value;\n  }\n\n  get alertClass(): string {\n    return this.iconService.iconInfoFromType(this.iconService.alertType).cssClass;\n  }\n\n  @ContentChildren(ClrAlertText, { descendants: true, read: ElementRef })\n  alertTexts: QueryList<ElementRef>;\n  /**\n   * This handle the find what content to be annonced withing the aria-live container\n   * alerts that are hidden will be ignored.\n   *\n   * @remark\n   * We depend on the ClrAlertText Directive to find and parse the alert messages.\n   * Also this require the HTML markup for the alert to be\n   * ```html\n   * <div class=\"alert\" role=\"alert\">\n   *    <div class=\"alert-items\">\n   *        <div class=\"alert-item static\">\n   *            <span class=\"alert-text\">\n   *                 ...\n   *            </span>\n   *        </div>\n   *    </div>\n   * </div>\n   * ```\n   */\n  private announceAriaLiveMessage(): void {\n    if (!this.hidden && this.alertTexts.length) {\n      const message = this.alertTexts.map(alertText => alertText.nativeElement.textContent).join(' ');\n      // Don't call announce when there is nothing to say\n      if (message) {\n        this.ariaLiveService.announce(message, this.ariaLive);\n      }\n    }\n  }\n\n  private _hidden: boolean;\n\n  set hidden(value: boolean) {\n    if (value !== this._hidden) {\n      this._hidden = value;\n      this.cdr.detectChanges();\n    }\n  }\n\n  get hidden() {\n    return this._hidden;\n  }\n\n  close(): void {\n    if (!this.closable) {\n      return;\n    }\n    this._closed = true;\n    if (this.multiAlertService) {\n      this.multiAlertService.close();\n    }\n    this._closedChanged.emit(true);\n  }\n\n  open(): void {\n    this._closed = false;\n    this._closedChanged.emit(false);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\n\n@Component({\n  selector: 'clr-alert-item',\n  template: `\n        <div class=\"alert-icon-wrapper\">\n            <clr-icon class=\"alert-icon\" \n              [attr.shape]=\"iconService.alertIconShape\" \n              [attr.title]=\"iconService.alertIconTitle\"></clr-icon>\n        </div>\n        <ng-content></ng-content>\n    `,\n  host: { class: 'alert-item' },\n})\nexport class ClrAlertItem {\n  constructor(public iconService: AlertIconAndTypesService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alerts',\n  templateUrl: './alerts.html',\n  providers: [MultiAlertService],\n  host: {\n    '[class.alerts]': 'true',\n    '[class.alert-danger]': \"this.currentAlertType == 'danger'\",\n    '[class.alert-info]': \"this.currentAlertType == 'info'\",\n    '[class.alert-success]': \"this.currentAlertType == 'success'\",\n    '[class.alert-warning]': \"this.currentAlertType == 'warning'\",\n  },\n  styles: [':host { display: block }'],\n})\nexport class ClrAlerts implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(ClrAlert)\n  set allAlerts(value: QueryList<ClrAlert>) {\n    this.multiAlertService.manage(value); // provide alerts\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  public set _inputCurrentIndex(index: number) {\n    if (Number.isInteger(index) && index >= 0) {\n      this.multiAlertService.current = index;\n    }\n  }\n\n  @Output('clrCurrentAlertIndexChange') public currentAlertIndexChange = new EventEmitter<number>(false);\n\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n  @Output('clrCurrentAlertChange') public currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Ensure we are only dealing with alerts that have not been closed yet\n   */\n  get alerts() {\n    return this.allAlerts.filter(alert => {\n      return alert.hidden === false;\n    });\n  }\n\n  get currentAlertType(): string {\n    if (this.multiAlertService.currentAlert) {\n      return this.multiAlertService.currentAlert.alertType;\n    }\n    return '';\n  }\n\n  constructor(public multiAlertService: MultiAlertService) {}\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.multiAlertService.changes.subscribe(index => {\n        this.currentAlertIndexChange.next(index);\n        this.currentAlertChange.next(this.multiAlertService.currentAlert);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.multiAlertService.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-alerts-pager',\n  templateUrl: './alerts-pager.html',\n  host: { '[class.alerts-pager]': 'true' },\n})\nexport class ClrAlertsPager implements OnInit, OnDestroy {\n  private multiAlertServiceChanges: Subscription;\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n\n  @Output('clrCurrentAlertChange') currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  @Output('clrCurrentAlertIndexChange') currentAlertIndexChange = new EventEmitter<number>();\n\n  constructor(public multiAlertService: MultiAlertService, public commonStrings: ClrCommonStringsService) {}\n\n  ngOnInit() {\n    this.multiAlertServiceChanges = this.multiAlertService.changes.subscribe(index => {\n      this.currentAlertIndexChange.emit(index);\n      this.currentAlertChange.emit(this.multiAlertService.activeAlerts[index]);\n    });\n  }\n\n  pageUp() {\n    this.multiAlertService.next();\n  }\n\n  pageDown() {\n    this.multiAlertService.previous();\n  }\n\n  ngOnDestroy() {\n    this.multiAlertServiceChanges.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { ClrAlert } from './alert';\nimport { ClrAlertItem } from './alert-item';\nimport { ClrAlerts } from './alerts';\nimport { ClrAlertsPager } from './alerts-pager';\nimport { ClrAlertText } from './alert-text';\n\nexport const CLR_ALERT_DIRECTIVES: Type<any>[] = [ClrAlert, ClrAlertItem, ClrAlerts, ClrAlertsPager, ClrAlertText];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_ALERT_DIRECTIVES],\n  exports: [CLR_ALERT_DIRECTIVES],\n})\nexport class ClrAlertModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { ClrAlertModule } from './alert/alert.module';\n\n@NgModule({ exports: [ClrAlertModule] })\nexport class ClrEmphasisModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavCodes {\n  public static NAV_LEVEL_1: number = 1;\n  public static NAV_LEVEL_2: number = 2;\n  public static NAV_CLOSE_ALL: string = 'NAV_CLOSE_ALL';\n  public static NAV_OPEN: string = 'NAV_OPEN';\n  public static NAV_CLOSE: string = 'NAV_CLOSE';\n  public static NAV_TOGGLE: string = 'NAV_TOGGLE';\n  public static NAV_CLASS_HAMBURGER_MENU: string = 'open-hamburger-menu';\n  public static NAV_CLASS_OVERFLOW_MENU: string = 'open-overflow-menu';\n  public static NAV_CLASS_TRIGGER_1: string = 'header-hamburger-trigger';\n  public static NAV_CLASS_TRIGGER_2: string = 'header-overflow-trigger';\n  public static NAV_CLASS_LEVEL_1: string = 'clr-nav-level-1';\n  public static NAV_CLASS_LEVEL_2: string = 'clr-nav-level-2';\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavControlMessage {\n  constructor(private _controlCode: string, private _navLevel: number) {}\n\n  get controlCode(): string {\n    return this._controlCode;\n  }\n\n  get navLevel(): number {\n    return this._navLevel;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { ResponsiveNavCodes } from '../responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../responsive-nav-control-message';\n\n@Injectable({ providedIn: 'root' })\nexport class ResponsiveNavigationService {\n  public responsiveNavList: number[] = [];\n  private registerNavSubject = new ReplaySubject<number[]>();\n  private controlNavSubject = new Subject<ResponsiveNavControlMessage>();\n\n  get registeredNavs(): Observable<number[]> {\n    return this.registerNavSubject.asObservable();\n  }\n\n  get navControl(): Observable<ResponsiveNavControlMessage> {\n    return this.controlNavSubject.asObservable();\n  }\n\n  constructor() {\n    this.closeAllNavs(); // We start with all navs closed\n  }\n\n  registerNav(navLevel: number): void {\n    if (!navLevel || this.isNavRegistered(navLevel)) {\n      return;\n    }\n    this.responsiveNavList.push(navLevel);\n    this.registerNavSubject.next(this.responsiveNavList);\n  }\n\n  isNavRegistered(navLevel: number): boolean {\n    if (this.responsiveNavList.indexOf(navLevel) > -1) {\n      console.error('Multiple clr-nav-level ' + navLevel + ' attributes found. Please make sure that only one exists');\n      return true;\n    }\n    return false;\n  }\n\n  unregisterNav(navLevel: number) {\n    const index = this.responsiveNavList.indexOf(navLevel);\n    if (index > -1) {\n      this.responsiveNavList.splice(index, 1);\n      this.registerNavSubject.next(this.responsiveNavList);\n    }\n  }\n\n  sendControlMessage(controlCode: string, navLevel: number) {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(controlCode, navLevel);\n    this.controlNavSubject.next(message);\n  }\n\n  closeAllNavs() {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(\n      ResponsiveNavCodes.NAV_CLOSE_ALL,\n      -999\n    );\n    this.controlNavSubject.next(message);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from '../nav/providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from '../nav/responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../nav/responsive-nav-control-message';\n\n@Directive({ selector: 'clr-main-container', host: { '[class.main-container]': 'true' } })\nexport class ClrMainContainer implements OnDestroy, OnInit {\n  private _subscription: Subscription;\n  private _classList: DOMTokenList;\n\n  constructor(private elRef: ElementRef, private responsiveNavService: ResponsiveNavigationService) {}\n\n  ngOnInit() {\n    this._classList = this.elRef.nativeElement.classList;\n    this._subscription = this.responsiveNavService.navControl.subscribe({\n      next: (message: ResponsiveNavControlMessage) => {\n        this.processMessage(message);\n      },\n    });\n  }\n\n  processMessage(message: ResponsiveNavControlMessage): void {\n    let navClass: string = ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n    if (message.controlCode === ResponsiveNavCodes.NAV_CLOSE_ALL) {\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n      this.controlNav(message.controlCode, navClass);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navClass = ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n      this.controlNav(message.controlCode, navClass);\n    }\n  }\n\n  controlNav(controlCode: string, navClass: string): void {\n    if (controlCode === ResponsiveNavCodes.NAV_OPEN) {\n      this._classList.add(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_CLOSE) {\n      this._classList.remove(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_TOGGLE) {\n      this._classList.toggle(navClass);\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrMainContainer } from './main-container';\n\nexport const CLR_LAYOUT_DIRECTIVES: Type<any>[] = [ClrMainContainer];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [CLR_LAYOUT_DIRECTIVES],\n  exports: [CLR_LAYOUT_DIRECTIVES],\n})\nexport class ClrMainContainerModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-main-container' })\nexport class MainContainerWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ResponsiveNavigationService } from '../providers/responsive-navigation.service';\nimport { MainContainerWillyWonka } from './main-container-willy-wonka';\n\n@Directive({ selector: 'clr-header' })\nexport class NavDetectionOompaLoompa extends OompaLoompa {\n  private responsiveNavService: ResponsiveNavigationService;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: MainContainerWillyWonka,\n    responsiveNavService: ResponsiveNavigationService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-header should only be used inside of a clr-main-container');\n    }\n    super(cdr, willyWonka);\n    this.responsiveNavService = responsiveNavService;\n  }\n\n  // NavDetectionOompaLoompa is the addition of the nav levels\n  // Since we support 2 levels, the possibilities are 0, 1 or 3 (1 + 2)\n  get flavor() {\n    return this.responsiveNavService.responsiveNavList.reduce((sum, navLevel) => sum + navLevel, 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-header',\n  template: `\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel1OnPage\"\n            class=\"header-hamburger-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_1) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\">\n            <span></span>\n        </button>\n        <ng-content></ng-content>\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel2OnPage\"\n            class=\"header-overflow-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_2) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\">\n            <span></span>\n        </button>\n        <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n    `,\n  host: { '[class.header]': 'true' },\n})\nexport class ClrHeader implements OnDestroy {\n  isNavLevel1OnPage = false;\n  isNavLevel2OnPage = false;\n  openNavLevel: number = null;\n  responsiveNavCodes = ResponsiveNavCodes;\n  private _subscription: Subscription;\n\n  constructor(\n    private responsiveNavService: ResponsiveNavigationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._subscription = this.responsiveNavService.registeredNavs.subscribe({\n      next: (navLevelList: number[]) => {\n        this.initializeNavTriggers(navLevelList);\n      },\n    });\n  }\n\n  // reset triggers. handles cases when an application has different nav levels on different pages.\n  resetNavTriggers() {\n    this.isNavLevel1OnPage = false;\n    this.isNavLevel2OnPage = false;\n  }\n\n  // decides which triggers to show on the header\n  initializeNavTriggers(navList: number[]): void {\n    this.resetNavTriggers();\n    if (navList.length > 2) {\n      console.error('More than 2 Nav Levels detected.');\n      return;\n    }\n    navList.forEach(navLevel => {\n      if (navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n        this.isNavLevel1OnPage = true;\n      } else if (navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n        this.isNavLevel2OnPage = true;\n      }\n    });\n  }\n\n  // closes the nav that is open\n  closeOpenNav() {\n    this.responsiveNavService.closeAllNavs();\n  }\n\n  // toggles the nav that is open\n  toggleNav(navLevel: number) {\n    this.openNavLevel = this.openNavLevel === navLevel ? null : navLevel;\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_TOGGLE, navLevel);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\n\n@Directive({ selector: '[clr-nav-level]' })\nexport class ClrNavLevel implements OnInit {\n  @Input('clr-nav-level') _level: number;\n\n  constructor(private responsiveNavService: ResponsiveNavigationService, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.level !== ResponsiveNavCodes.NAV_LEVEL_1 && this.level !== ResponsiveNavCodes.NAV_LEVEL_2) {\n      console.error('Nav Level can only be 1 or 2');\n      return;\n    }\n    this.responsiveNavService.registerNav(this.level);\n    this.addNavClass(this.level);\n  }\n\n  addNavClass(level: number) {\n    const navHostClassList = this.elementRef.nativeElement.classList;\n    if (level === ResponsiveNavCodes.NAV_LEVEL_1) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_1);\n    } else if (level === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_2);\n    }\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  // getter to access the responsive navigation codes from the template\n  get responsiveNavCodes(): ResponsiveNavCodes {\n    return ResponsiveNavCodes;\n  }\n\n  open(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_OPEN, this.level);\n  }\n\n  close(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_CLOSE, this.level);\n  }\n\n  // TODO: Figure out whats the best way to do this. Possible methods\n  // 1. HostListener (current solution)\n  // 2. Directives on the .nav-link class. We discussed on moving away from class selectors but I forget the reason\n  // why\n  @HostListener('click', ['$event.target'])\n  onMouseClick(target: any) {\n    let current: any = target; // Get the element in the DOM on which the mouse was clicked\n    const navHost: any = this.elementRef.nativeElement; // Get the current nav native HTML element\n\n    // Start checking if current and navHost are equal.\n    // If not traverse to the parentNode and check again.\n    while (current) {\n      if (current === navHost) {\n        return;\n      } else if (current.classList.contains('nav-link')) {\n        this.close();\n        return;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  ngOnDestroy() {\n    this.responsiveNavService.unregisterNav(this.level);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { MainContainerWillyWonka } from './chocolate/main-container-willy-wonka';\nimport { NavDetectionOompaLoompa } from './chocolate/nav-detection-oompa-loompa';\nimport { ClrHeader } from './header';\nimport { ClrNavLevel } from './nav-level';\n\nexport const CLR_NAVIGATION_DIRECTIVES: Type<any>[] = [\n  ClrHeader,\n  ClrNavLevel,\n  NavDetectionOompaLoompa,\n  MainContainerWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_NAVIGATION_DIRECTIVES],\n  exports: [CLR_NAVIGATION_DIRECTIVES],\n})\nexport class ClrNavigationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  template: `\n      <ng-template>\n        <ng-content></ng-content>\n      </ng-template>\n    `,\n})\nexport class TemplateRefContainer {\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { TemplateRefContainer } from './template-ref-container';\n\nexport * from './template-ref-container';\n\nexport const TEMPLATE_REF_DIRECTIVES: Type<any>[] = [TemplateRefContainer];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TEMPLATE_REF_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TEMPLATE_REF_DIRECTIVES],\n  entryComponents: [TEMPLATE_REF_DIRECTIVES],\n  exports: [TEMPLATE_REF_DIRECTIVES],\n})\nexport class ClrTemplateRefModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-tabs' })\nexport class TabsWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Inject, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../../utils/conditional/if-active.service';\n\nimport { TabsWillyWonka } from './tabs-willy-wonka';\n\n@Directive({ selector: '[clrTabLink], clr-tab-content' })\nexport class ActiveOompaLoompa extends OompaLoompa {\n  private ifActive: IfActiveService;\n  private id: number;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: TabsWillyWonka,\n    @Inject(IF_ACTIVE_ID) id: number,\n    ifActive: IfActiveService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clrTabLink and clr-tab-content should only be used inside of a clr-tabs');\n    }\n    super(cdr, willyWonka);\n    this.ifActive = ifActive;\n    this.id = id;\n  }\n\n  get flavor() {\n    return this.ifActive.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n// TODO: if we find more components that could use this, consider moving this to utils\n@Injectable()\nexport class AriaService {\n  public ariaLabelledBy: string;\n  public ariaControls: string;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, ViewContainerRef } from '@angular/core';\nimport { ClrTab } from '../tab';\nimport { TabsLayout } from '../enums/tabs-layout.enum';\n\n@Injectable()\nexport class TabsService {\n  private _children: ClrTab[] = [];\n\n  layout: TabsLayout = TabsLayout.HORIZONTAL;\n\n  register(tab: ClrTab) {\n    this._children.push(tab);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  get activeTab() {\n    return this.children.find((tab: ClrTab) => {\n      return tab.active;\n    });\n  }\n\n  get overflowTabs() {\n    if (this.layout === TabsLayout.VERTICAL) {\n      return [];\n    } else {\n      return this.children.filter((tab: ClrTab) => tab.tabLink.inOverflow === true);\n    }\n  }\n\n  unregister(tab: ClrTab) {\n    const index = this.children.indexOf(tab);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  tabContentViewContainer: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EmbeddedViewRef, Inject, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\n\nlet nbTabContentComponents: number = 0;\n\n@Component({\n  selector: 'clr-tab-content',\n  template: `\n    <ng-template #tabContentProjectedRef>\n      <section [id]=\"tabContentId\" role=\"tabpanel\" class=\"tab-content\" [class.active]=\"active\"\n               [hidden]=\"!active\"\n               [attr.aria-labelledby]=\"ariaLabelledBy\"\n               [attr.aria-expanded]=\"active\"\n               [attr.aria-hidden]=\"!active\">\n        <ng-content></ng-content>\n      </section>\n    </ng-template>\n    `,\n})\nexport class ClrTabContent implements OnDestroy {\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private ariaService: AriaService,\n    private tabsService: TabsService\n  ) {\n    if (!this.tabContentId) {\n      this.tabContentId = 'clr-tab-content-' + nbTabContentComponents++;\n    }\n  }\n\n  private viewRef: EmbeddedViewRef<ClrTabContent>;\n\n  // The template must be applied on the top-down phase of view-child initialization to prevent\n  // components in the content from initializing before a content container exists.\n  // Some child components need their container for sizing calculations.\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentProjectedRef', { static: true })\n  private set templateRef(value: TemplateRef<ClrTabContent>) {\n    this.viewRef = this.tabsService.tabContentViewContainer.createEmbeddedView(value);\n  }\n  /* tslint:enable:no-unused-variable */\n\n  get ariaLabelledBy(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  get tabContentId(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  @Input('id')\n  set tabContentId(id: string) {\n    this.ariaService.ariaControls = id;\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  ngOnDestroy(): void {\n    const index = this.tabsService.tabContentViewContainer.indexOf(this.viewRef);\n    if (index > -1) {\n      this.tabsService.tabContentViewContainer.remove(index);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken } from '@angular/core';\n\nlet nbTabsComponent = 0;\n\nexport const TABS_ID = new InjectionToken<number>('TABS_ID');\n\nexport function tokenFactory() {\n  return 'clr-tabs-' + nbTabsComponent++;\n}\n\nexport const TABS_ID_PROVIDER = {\n  provide: TABS_ID,\n  useFactory: tokenFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrFocusDirection {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  BOTH = 'both',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { TemplateRefContainer } from '../../utils/template-ref/template-ref-container';\nimport { TabsService } from './providers/tabs.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TABS_ID } from './tabs-id.provider';\nimport { TabsLayout } from './enums/tabs-layout.enum';\n\nlet nbTabLinkComponents: number = 0;\n\n@Directive({\n  selector: '[clrTabLink]',\n  host: {\n    '[attr.aria-hidden]': 'false',\n    '[class.btn]': 'true',\n    role: 'tab',\n    type: 'button',\n  },\n})\nexport class ClrTabLink {\n  private _inOverflow: boolean;\n\n  @Input('clrTabLinkInOverflow')\n  set inOverflow(inOverflow) {\n    this._inOverflow = inOverflow;\n  }\n\n  get inOverflow(): boolean {\n    return this._inOverflow && this.tabsService.layout !== TabsLayout.VERTICAL;\n  }\n\n  @HostBinding('class.btn-link')\n  @HostBinding('class.nav-link')\n  get addLinkClasses() {\n    return !this.inOverflow;\n  }\n\n  templateRefContainer: TemplateRefContainer;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private ariaService: AriaService,\n    public el: ElementRef,\n    private cfr: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number\n  ) {\n    if (!this.tabLinkId) {\n      this.tabLinkId = 'clr-tab-link-' + nbTabLinkComponents++;\n    }\n\n    // Tab links can be rendered in one of two places: in the main area or inside the overflow dropdown menu.\n    // Here, we create a container so that its template can be used to create embeddedView on the fly.\n    // See TabsService's renderView() method and how it's used in Tabs class for an example.\n    const factory = this.cfr.resolveComponentFactory(TemplateRefContainer);\n    this.templateRefContainer = this.viewContainerRef.createComponent(factory, undefined, undefined, [\n      [this.el.nativeElement],\n    ]).instance;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get ariaControls(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  get tabLinkId(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  @HostBinding('id')\n  @Input('id')\n  set tabLinkId(id: string) {\n    this.ariaService.ariaLabelledBy = id;\n  }\n\n  @HostListener('click')\n  activate() {\n    this.ifActiveService.current = this.id;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-selected')\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  @HostBinding('attr.tabindex')\n  get tabindex() {\n    return this.active ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, Inject } from '@angular/core';\n\nimport { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from '../../utils/conditional/if-active.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\n\n@Component({\n  selector: 'clr-tab',\n  template: `\n        <ng-content></ng-content>\n    `,\n  providers: [IF_ACTIVE_ID_PROVIDER, AriaService],\n})\nexport class ClrTab {\n  @ContentChild(ClrTabLink, { static: true })\n  tabLink: ClrTabLink;\n  @ContentChild(ClrTabContent, { static: true })\n  tabContent: ClrTabContent;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private tabsService: TabsService\n  ) {\n    tabsService.register(this);\n  }\n\n  ngOnDestroy() {\n    this.tabsService.unregister(this);\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tab-overflow-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n  },\n})\nexport class ClrTabOverflowContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStrategy {\n  Default = 'default', // only one panel at a time\n  Multi = 'multi', // can have multiple panels open at a time\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStatus {\n  Inactive = 'inactive',\n  Error = 'error',\n  Complete = 'complete',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Inject, PLATFORM_ID, HostBinding } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: '[clrKeyFocusItem]',\n})\nexport class ClrKeyFocusItem {\n  @HostBinding('attr.tabindex') tabIndex: number;\n\n  get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  QueryList,\n  ElementRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrFocusDirection } from './enums/focus-direction.enum';\nimport { FocusableItem } from './interfaces';\n\nimport { KeyCodes } from './../../enums/key-codes.enum';\nimport { ClrKeyFocusItem } from './key-focus-item';\nimport { getKeyCodes, preventArrowKeyScroll } from './util';\n\n@Component({\n  selector: '[clrKeyFocus]',\n  template: '<ng-content></ng-content>',\n})\nexport class ClrKeyFocus {\n  constructor(private elementRef: ElementRef) {}\n  @Input('clrDirection') direction = ClrFocusDirection.VERTICAL;\n  @Input('clrFocusOnLoad') focusOnLoad = false;\n  @Output('clrFocusChange') private focusChange: EventEmitter<number> = new EventEmitter<number>();\n  @ContentChildren(ClrKeyFocusItem, { descendants: true })\n  private clrKeyFocusItems: QueryList<ClrKeyFocusItem>;\n\n  private _focusableItems: Array<FocusableItem>;\n  @Input('clrKeyFocus')\n  set focusableItems(elements: Array<FocusableItem>) {\n    // We accept a list of focusable elements (HTMLElements or existing Directives) or auto query for clrKeyFocusItem\n    // We accept a list reference in the cases where we cannot use ContentChildren to query\n    // ContentChildren can be unavailable if content is projected outside the scope of the component (see tabs).\n    if (elements && elements.length) {\n      this._focusableItems = elements;\n      this.initializeFocus();\n    }\n  }\n\n  get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  get focusableItems() {\n    if (this._focusableItems) {\n      return this._focusableItems;\n    } else {\n      return this.clrKeyFocusItems.toArray();\n    }\n  }\n\n  private _current: number = 0;\n\n  get current() {\n    return this._current;\n  }\n\n  set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n    }\n  }\n\n  get currentItem() {\n    return this.focusableItems[this._current];\n  }\n\n  get currentItemElement(): HTMLElement {\n    return this.currentItem.nativeElement ? this.currentItem.nativeElement : <HTMLElement>this.currentItem;\n  }\n\n  focusCurrent() {\n    this.currentItem.focus();\n    this.focusChange.next(this._current);\n  }\n\n  moveTo(position: number) {\n    if (this.positionInRange(position)) {\n      this.current = position;\n      this.focusCurrent();\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForItemUpdates());\n    this.initializeFocus();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // Make sure event was originated on the current item's element\n    if (this.currentItemElement !== event.target) {\n      const position = this.getItemPosition(<HTMLElement>event.target);\n      if (this.positionInRange(position)) {\n        this.current = position;\n      }\n    }\n\n    if (this.prevKeyPressed(event) && this.currentFocusIsNotFirstItem()) {\n      this.moveTo(this.current - 1);\n    } else if (this.nextKeyPressed(event) && this.currentFocusIsNotLastItem()) {\n      this.moveTo(this.current + 1);\n    } else if (event.code === KeyCodes.Home) {\n      this.moveTo(0);\n    } else if (event.code === KeyCodes.End) {\n      this.moveTo(this.focusableItems.length - 1);\n    }\n\n    preventArrowKeyScroll(event);\n  }\n\n  @HostListener('click', ['$event'])\n  setClickedItemCurrent(event: any) {\n    const position = this.getItemPosition(event.target);\n\n    if (position > -1) {\n      this.moveTo(position);\n    }\n  }\n\n  private getItemPosition(item: HTMLElement) {\n    if (this._focusableItems) {\n      return this.focusableItems.indexOf(item);\n    } else {\n      return this.focusableItems.map(_item => _item.nativeElement).indexOf(item);\n    }\n  }\n\n  private positionInRange(position: number) {\n    return position >= 0 && position < this.focusableItems.length;\n  }\n\n  private currentFocusIsNotFirstItem() {\n    return this._current - 1 >= 0;\n  }\n\n  private currentFocusIsNotLastItem() {\n    return this._current + 1 < this.focusableItems.length;\n  }\n\n  private initializeFocus() {\n    if (this.focusableItems && this.focusableItems.length) {\n      // It is possible that the focus was on an element, whose index is no longer available.\n      // This can happen when some of the focusable elements are being removed.\n      // In such cases, the new focus is initialized on the last focusable element.\n      if (this._current >= this.focusableItems.length) {\n        this._current = this.focusableItems.length - 1;\n      }\n\n      if (this.focusOnLoad) {\n        this.currentItem.focus();\n        this.focusChange.next();\n      }\n    }\n  }\n\n  private listenForItemUpdates() {\n    return this.clrKeyFocusItems.changes.subscribe(() => {\n      this.initializeFocus();\n    });\n  }\n\n  private nextKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowDown;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowRight;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowDown || event.key === keyCodes.ArrowRight;\n      default:\n        return false;\n    }\n  }\n\n  private prevKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowUp;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowLeft;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowUp || event.key === keyCodes.ArrowLeft;\n      default:\n        return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  QueryList,\n  ViewChild,\n  ViewContainerRef,\n  HostBinding,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { IfActiveService } from '../../utils/conditional/if-active.service';\nimport { ClrKeyFocus } from '../../utils/focus/key-focus/key-focus';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TabsLayout } from './enums/tabs-layout.enum';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTab } from './tab';\nimport { ClrTabLink } from './tab-link.directive';\nimport { TABS_ID, TABS_ID_PROVIDER } from './tabs-id.provider';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\n\n@Component({\n  selector: 'clr-tabs',\n  template: `\n        <ul class=\"nav\" role=\"tablist\" [attr.aria-owns]=\"tabIds\" [clrKeyFocus]=\"tabLinkElements\" clrDirection=\"both\" (clrFocusChange)=\"toggleOverflowOnPosition($event)\" (focusout)=\"resetKeyFocusCurrentToActive($event)\">\n            <!--tab links-->\n            <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                <ng-container *ngIf=\"link.tabsId === tabsId && !link.inOverflow\">\n                    <li role=\"presentation\" class=\"nav-item\">\n                        <ng-container [ngTemplateOutlet]=\"link.templateRefContainer.template\"></ng-container>\n                    </li>\n                </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"tabsService.overflowTabs.length > 0\">\n                <div class=\"tabs-overflow bottom-right\" role=\"presentation\" \n                  [class.open]=\"toggleService.open\">\n                    <li role=\"application\" class=\"nav-item\">\n                        <button #tabOverflowTrigger class=\"btn btn-link nav-link dropdown-toggle\" type=\"button\" aria-hidden=\"true\" \n                        [attr.tabindex]=\"activeTabInOverflow && !toggleService.open? 0: -1\"\n                        [class.active]=\"activeTabInOverflow\"\n                        [class.open]=\"toggleService.open\"\n                        (mousedown)=\"_mousedown = true\"\n                        (focus)=\"openOverflowOnFocus()\"\n                        (click)=\"toggleOverflowOnClick()\">\n                            <clr-icon shape=\"ellipsis-horizontal\"\n                              [class.is-info]=\"toggleService.open\"\n                              [attr.title]=\"commonStrings.keys.more\"></clr-icon>\n                        </button>\n                    </li>\n                    <!--tab links in overflow menu-->\n                    <clr-tab-overflow-content *ngIf=\"toggleService.open\"  \n                      (document:keydown.esc)=\"closeOnEscapeKey()\" \n                      (document:click)=\"closeOnOutsideClick($event, tabOverflowTrigger)\"\n                      (focusout)=\"closeOnFocusOut($event)\">\n                        <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                            <ng-container *ngIf=\"link.tabsId === tabsId && link.inOverflow\"\n                                          [ngTemplateOutlet]=\"link.templateRefContainer.template\">\n                            </ng-container>\n                        </ng-container>\n                    </clr-tab-overflow-content>\n                </div>\n            </ng-container>\n        </ul>\n        <ng-container #tabContentViewContainer></ng-container>\n    `,\n  providers: [IfActiveService, ClrPopoverToggleService, TabsService, TABS_ID_PROVIDER],\n})\nexport class ClrTabs implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  private get overflowPosition() {\n    return this._tabLinkDirectives.filter(link => !link.inOverflow).length;\n  }\n\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentViewContainer', { static: true, read: ViewContainerRef })\n  private set tabContentViewContainer(value: ViewContainerRef) {\n    this.tabsService.tabContentViewContainer = value;\n  }\n  /* tslint:enable:no-unused-variable */\n\n  @Input('clrLayout')\n  set layout(layout: TabsLayout) {\n    if (\n      Object.keys(TabsLayout)\n        .map(key => {\n          return TabsLayout[key];\n        })\n        .indexOf(layout) >= 0\n    ) {\n      this.tabsService.layout = layout;\n    }\n  }\n  get layout(): TabsLayout {\n    return this.tabsService.layout;\n  }\n\n  @ContentChildren(ClrTab) private tabs: QueryList<ClrTab>;\n\n  private _tabLinkDirectives: ClrTabLink[] = [];\n  get tabLinkDirectives(): ClrTabLink[] {\n    return this._tabLinkDirectives;\n  }\n\n  tabLinkElements: HTMLElement[] = [];\n\n  @ViewChild(ClrKeyFocus, { static: true })\n  keyFocus: ClrKeyFocus;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    public toggleService: ClrPopoverToggleService,\n    public tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  get activeTabInOverflow() {\n    return this.tabsService.overflowTabs.indexOf(this.tabsService.activeTab) > -1;\n  }\n\n  get activeTabPosition() {\n    return this._tabLinkDirectives.findIndex(link => link.active);\n  }\n\n  get tabIds() {\n    return this.tabsService.children.map(tab => tab.tabLink.tabLinkId).join(' ');\n  }\n\n  get isCurrentInOverflow() {\n    return this.keyFocus.current >= this.overflowPosition;\n  }\n\n  @HostBinding('class.tabs-vertical')\n  get isVertical() {\n    return this.layout === TabsLayout.VERTICAL;\n  }\n\n  toggleOverflowOnPosition(position: number) {\n    // we need to check current position to determine\n    // whether we need to open the tab overflow or not\n    this.toggleService.open = position >= this.overflowPosition;\n  }\n\n  private _tabOverflowEl: HTMLElement;\n\n  @ViewChild(ClrTabOverflowContent, { read: ElementRef })\n  set tabOverflowEl(value: ElementRef) {\n    this._tabOverflowEl = value && value.nativeElement;\n    if (this.toggleService.open && value) {\n      // only when tab overflow view element is registered,\n      // we need to move the focus to the first item\n      this.keyFocus.focusCurrent();\n    }\n  }\n\n  resetKeyFocusCurrentToActive(event: FocusEvent) {\n    const keyFocusContainsFocus = this.keyFocus.nativeElement.contains(<HTMLElement>event.relatedTarget);\n    if (!keyFocusContainsFocus && this.keyFocus.current !== this.activeTabPosition) {\n      this.keyFocus.current = this.activeTabPosition;\n    }\n  }\n\n  toggleOverflowOnClick() {\n    if (this.isCurrentInOverflow && this.toggleService.open) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    } else {\n      this.keyFocus.moveTo(this.overflowPosition);\n    }\n\n    // once click handler completes running,\n    // reset the _mousedown flag\n    this._mousedown = false;\n  }\n\n  // in order to check focus is triggered by click\n  // we are using this _mousedown flag\n  _mousedown = false;\n\n  openOverflowOnFocus() {\n    // This method should be called only on keyboard generated focus\n    // when the active tab is in the overflow\n    if (!this._mousedown && !this.toggleService.open) {\n      this.keyFocus.moveTo(this.activeTabPosition);\n    }\n  }\n\n  closeOnFocusOut(event: FocusEvent) {\n    if (\n      !this._tabOverflowEl.contains(<HTMLElement>event.relatedTarget) &&\n      this.toggleService.open &&\n      !this._mousedown\n    ) {\n      this.toggleService.open = false;\n\n      // if the focus is out of overflow and lands on the active tab link\n      // which is currently visible, set the key focus current to activeTabPosition\n      if (this.tabLinkElements[this.activeTabPosition] === event.relatedTarget) {\n        this.keyFocus.current = this.activeTabPosition;\n      }\n    }\n  }\n\n  closeOnEscapeKey() {\n    // Move current to the last visible focusable item\n    this.keyFocus.moveTo(this.overflowPosition - 1);\n  }\n\n  closeOnOutsideClick(event: Event, tabOverflowTrigger: HTMLElement) {\n    // Exit early if the event target is the trigger element itself or element that's inside the trigger element.\n    // This is because we have another handler on the tabOverflowTrigger element itself.\n    // As this handler method is on the document level so the event bubbles up to it and conflicts\n    // with the tabOverflowTrigger handler resulting in opening the tab overflow and closing it right away consecutively.\n    if (event.target === tabOverflowTrigger || tabOverflowTrigger.contains(<HTMLElement>event.target)) {\n      return;\n    }\n\n    // Move current to the last visible focusable item\n    if (!this._tabOverflowEl.contains(<HTMLElement>event.target) && this.isCurrentInOverflow) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    }\n  }\n\n  private listenForTabLinkChanges() {\n    return this.tabs.changes.pipe(startWith(this.tabs.map(tab => tab.tabLink))).subscribe(() => {\n      this._tabLinkDirectives = this.tabs.map(tab => tab.tabLink);\n      this.tabLinkElements = this._tabLinkDirectives.map(tab => tab.el.nativeElement);\n    });\n  }\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForTabLinkChanges());\n\n    if (typeof this.ifActiveService.current === 'undefined' && this.tabLinkDirectives[0]) {\n      this.tabLinkDirectives[0].activate();\n    }\n\n    // set initial current position\n    this.keyFocus.current = this.activeTabPosition;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrKeyFocus } from './key-focus';\nimport { ClrKeyFocusItem } from './key-focus-item';\n\nconst KEY_FOCUS_DIRECTIVES: Type<any>[] = [ClrKeyFocus, ClrKeyFocusItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [KEY_FOCUS_DIRECTIVES],\n  exports: [KEY_FOCUS_DIRECTIVES],\n})\nexport class ClrKeyFocusModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrTemplateRefModule } from '../../utils/template-ref/template-ref.module';\n\nimport { ActiveOompaLoompa } from './chocolate/active-oompa-loompa';\nimport { TabsWillyWonka } from './chocolate/tabs-willy-wonka';\nimport { ClrTab } from './tab';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\nimport { ClrTabs } from './tabs';\nimport { ClrKeyFocusModule } from '../../utils/focus/key-focus/key-focus.module';\n\nexport const CLR_TABS_DIRECTIVES: Type<any>[] = [\n  ClrTabContent,\n  ClrTab,\n  ClrTabs,\n  ClrTabOverflowContent,\n  ClrTabLink,\n  TabsWillyWonka,\n  ActiveOompaLoompa,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrConditionalModule, ClrIconModule, ClrTemplateRefModule, ClrKeyFocusModule],\n  declarations: [CLR_TABS_DIRECTIVES],\n  exports: [CLR_TABS_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrTabsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavGroupRegistrationService {\n  public navGroupCount: number = 0;\n\n  registerNavGroup() {\n    this.navGroupCount++;\n  }\n\n  unregisterNavGroup(): void {\n    this.navGroupCount--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavIconService {\n  private _icons: number = 0;\n\n  get hasIcons(): boolean {\n    return this._icons > 0;\n  }\n\n  registerIcon(): void {\n    this._icons++;\n  }\n\n  unregisterIcon(): void {\n    this._icons--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavService {\n  private _animateOnCollapsed: Subject<boolean> = new Subject<boolean>();\n\n  get animateOnCollapsed(): Observable<boolean> {\n    return this._animateOnCollapsed.asObservable();\n  }\n\n  private _collapsedChanged: Subject<boolean> = new Subject<boolean>();\n\n  get collapsedChanged(): Observable<boolean> {\n    return this._collapsedChanged.asObservable();\n  }\n\n  private _collapsed: boolean = false;\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    value = !!value;\n    if (this.collapsible && this._collapsed !== value) {\n      this.updateCollapseBehavior(value);\n    }\n  }\n\n  private _collapsible: boolean = false;\n\n  get collapsible(): boolean {\n    return this._collapsible;\n  }\n\n  set collapsible(value: boolean) {\n    value = !!value;\n    if (this._collapsible !== value) {\n      if (!value && this.collapsed) {\n        this.updateCollapseBehavior(false);\n      }\n      this._collapsible = value;\n    }\n  }\n\n  private updateCollapseBehavior(value: boolean): void {\n    this._animateOnCollapsed.next(value);\n    this._collapsed = value;\n    this._collapsedChanged.next(value);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-vertical-nav',\n  templateUrl: './vertical-nav.html',\n  providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],\n  host: {\n    class: 'clr-vertical-nav',\n    '[class.is-collapsed]': 'collapsed',\n    '[class.has-nav-groups]': 'hasNavGroups',\n    '[class.has-icons]': 'hasIcons',\n  },\n})\nexport class ClrVerticalNav implements OnDestroy {\n  get collapsible(): boolean {\n    return this._navService.collapsible;\n  }\n\n  @Input('clrVerticalNavCollapsible')\n  set collapsible(value: boolean) {\n    this._navService.collapsible = value;\n  }\n\n  get collapsed(): boolean {\n    return this._navService.collapsed;\n  }\n\n  @Input('clrVerticalNavCollapsed')\n  set collapsed(value: boolean) {\n    this._navService.collapsed = value;\n  }\n\n  @Output('clrVerticalNavCollapsedChange')\n  private _collapsedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  get hasNavGroups(): boolean {\n    return this._navGroupRegistrationService.navGroupCount > 0;\n  }\n\n  get hasIcons(): boolean {\n    return this._navIconService.hasIcons;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.collapsible) {\n      return null;\n    }\n    return !this.collapsed ? 'true' : 'false';\n  }\n\n  private _sub: Subscription;\n\n  constructor(\n    private _navService: VerticalNavService,\n    private _navIconService: VerticalNavIconService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._sub = this._navService.collapsedChanged.subscribe(value => {\n      this._collapsedChanged.emit(value);\n    });\n  }\n\n  toggleByButton() {\n    this.collapsed = !this.collapsed;\n  }\n\n  ngOnDestroy() {\n    this._sub.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavGroupService {\n  private _expandChange: Subject<boolean> = new Subject<boolean>();\n\n  get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  expand(): void {\n    this._expandChange.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, Component, EventEmitter, HostBinding, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nconst EXPANDED_STATE: string = 'expanded';\nconst COLLAPSED_STATE: string = 'collapsed';\n\n@Component({\n  selector: 'clr-vertical-nav-group',\n  templateUrl: './vertical-nav-group.html',\n  providers: [IfExpandService, VerticalNavGroupService],\n  animations: [\n    trigger('clrExpand', [\n      state(EXPANDED_STATE, style({ height: '*' })),\n      state(COLLAPSED_STATE, style({ height: 0, 'overflow-y': 'hidden', visibility: 'hidden' })),\n      transition(`${EXPANDED_STATE} <=> ${COLLAPSED_STATE}`, animate('0.2s ease-in-out')),\n    ]),\n  ],\n  host: { class: 'nav-group' },\n})\nexport class ClrVerticalNavGroup implements AfterContentInit, OnDestroy {\n  constructor(\n    private _itemExpand: IfExpandService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    private _navGroupService: VerticalNavGroupService,\n    private _navService: VerticalNavService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._navGroupRegistrationService.registerNavGroup();\n\n    // FIXME: This subscription handles a corner case\n    // Vertical Nav collapse requires the animation to run first and then\n    // remove the nodes from the DOM. If the user directly sets the input\n    // on the clrIfExpanded directive, we have no chance to run the animation\n    // and wait for it to complete. This subscription makes sure that the\n    // animation states are correct for that edge case.\n    this._subscriptions.push(\n      this._itemExpand.expandChange.subscribe(value => {\n        if (value && this.expandAnimationState === COLLAPSED_STATE) {\n          if (this._navService.collapsed) {\n            this._navService.collapsed = false;\n          }\n          this.expandAnimationState = EXPANDED_STATE;\n        } else if (!value && this.expandAnimationState === EXPANDED_STATE) {\n          this.expandAnimationState = COLLAPSED_STATE;\n        }\n      })\n    );\n\n    // 1. If the nav is collapsing, close the open nav group + save its state\n    // 2. If the nav is expanding, expand the nav group if the previous state was expanded\n    this._subscriptions.push(\n      this._navService.animateOnCollapsed.subscribe((goingToCollapse: boolean) => {\n        if (goingToCollapse && this.expanded) {\n          this.wasExpanded = true;\n          this.expandAnimationState = COLLAPSED_STATE;\n        } else if (!goingToCollapse && this.wasExpanded) {\n          this.expandGroup();\n          this.wasExpanded = false;\n        }\n      })\n    );\n\n    // If a link is clicked, expand the nav group\n    this._subscriptions.push(\n      this._navGroupService.expandChange.subscribe((expand: boolean) => {\n        if (expand && !this.expanded) {\n          this.expandGroup();\n        }\n      })\n    );\n  }\n\n  private wasExpanded: boolean = false;\n\n  @HostBinding('class.is-expanded')\n  get expanded(): boolean {\n    return this._itemExpand.expanded;\n  }\n\n  set expanded(value: boolean) {\n    if (this._itemExpand.expanded !== value) {\n      this._itemExpand.expanded = value;\n      this.expandedChange.emit(value);\n    }\n  }\n\n  @Input('clrVerticalNavGroupExpanded')\n  set userExpandedInput(value: boolean) {\n    value = !!value;\n    if (this.expanded !== value) {\n      // We have to call toggleExpand because some cases require animations to occur first\n      // Directly setting the Expand service value skips the animation and can result in\n      // nodes in the DOM but the nav group still being collapsed\n      this.toggleExpand();\n    }\n  }\n\n  @Output('clrVerticalNavGroupExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  private _subscriptions: Subscription[] = [];\n\n  private _expandAnimationState: string = COLLAPSED_STATE;\n\n  expandGroup(): void {\n    this.expanded = true;\n    // Expanded animation occurs after Expand.expand is set to true\n    this.expandAnimationState = EXPANDED_STATE;\n  }\n\n  collapseGroup(): void {\n    // If a Vertical Nav Group toggle button is clicked while the Vertical Nav is in Collapsed state,\n    // the Vertical Nav should be expanded first.\n    this.expandAnimationState = COLLAPSED_STATE;\n  }\n\n  // closes a group after the collapse animation\n  expandAnimationDone($event: AnimationEvent) {\n    if ($event.toState === COLLAPSED_STATE) {\n      this.expanded = false;\n    }\n  }\n\n  get expandAnimationState(): string {\n    return this._expandAnimationState;\n  }\n\n  set expandAnimationState(value: string) {\n    if (value !== this._expandAnimationState) {\n      this._expandAnimationState = value;\n    }\n  }\n\n  toggleExpand(): void {\n    if (this.expanded) {\n      this.collapseGroup();\n    } else {\n      // If nav is collasped, first open the nav\n      if (this._navService.collapsed) {\n        this._navService.collapsed = false;\n      }\n      // then expand the nav group\n      this.expandGroup();\n    }\n  }\n\n  ngAfterContentInit() {\n    // This makes sure that if someone marks a nav group expanded in a collapsed nav\n    // the expanded property is switched back to collapsed state.\n    if (this._navService.collapsed && this.expanded) {\n      this.wasExpanded = true;\n      this.expandAnimationState = COLLAPSED_STATE;\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this._navGroupRegistrationService.unregisterNavGroup();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-group-children',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class ClrVerticalNavGroupChildren {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy } from '@angular/core';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\n\n@Directive({ selector: '[clrVerticalNavIcon]', host: { class: 'nav-icon' } })\nexport class ClrVerticalNavIcon implements OnDestroy {\n  constructor(private _verticalNavIconService: VerticalNavIconService) {\n    this._verticalNavIconService.registerIcon();\n  }\n\n  ngOnDestroy() {\n    this._verticalNavIconService.unregisterIcon();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, HostListener, Optional } from '@angular/core';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\n\n@Component({\n  selector: '[clrVerticalNavLink]',\n  template: `\n        <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n        <span class=\"nav-text\">\n            <ng-content></ng-content>    \n        </span>\n    `,\n  host: { class: 'nav-link' },\n})\nexport class ClrVerticalNavLink {\n  constructor(@Optional() private _navGroupService: VerticalNavGroupService) {}\n\n  @HostListener('click')\n  public expandParentNavGroup(): void {\n    if (this._navGroupService) {\n      this._navGroupService.expand();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrVerticalNav } from './vertical-nav';\nimport { ClrVerticalNavGroup } from './vertical-nav-group';\nimport { ClrVerticalNavGroupChildren } from './vertical-nav-group-children';\nimport { ClrVerticalNavIcon } from './vertical-nav-icon';\nimport { ClrVerticalNavLink } from './vertical-nav-link';\n\nexport const CLR_VERTICAL_NAV_DIRECTIVES: Type<any>[] = [\n  ClrVerticalNav,\n  ClrVerticalNavLink,\n  ClrVerticalNavGroup,\n  ClrVerticalNavGroupChildren,\n  ClrVerticalNavIcon,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_VERTICAL_NAV_DIRECTIVES],\n  exports: [CLR_VERTICAL_NAV_DIRECTIVES, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrVerticalNavModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrMainContainerModule } from './main-container/main-container.module';\nimport { ClrNavigationModule } from './nav/navigation.module';\nimport { ClrTabsModule } from './tabs/tabs.module';\nimport { ClrVerticalNavModule } from './vertical-nav/vertical-nav.module';\n\n@NgModule({ exports: [ClrMainContainerModule, ClrNavigationModule, ClrTabsModule, ClrVerticalNavModule] })\nexport class ClrLayoutModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScrollingService {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  stopScrolling(): void {\n    this._document.body.classList.add('no-scrolling');\n  }\n\n  resumeScrolling(): void {\n    if (this._document.body.classList.contains('no-scrolling')) {\n      this._document.body.classList.remove('no-scrolling');\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  ViewChild,\n} from '@angular/core';\nimport { FocusTrapDirective } from '../utils/focus-trap/focus-trap.directive';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../utils/id-generator/id-generator.service';\nimport { ScrollingService } from '../utils/scrolling/scrolling-service';\n\n@Component({\n  selector: 'clr-modal',\n  viewProviders: [ScrollingService],\n  templateUrl: './modal.html',\n  styles: [\n    `\n        :host { display: none; }\n        :host.open { display: inline; }\n    `,\n  ],\n  animations: [\n    trigger('fadeDown', [\n      transition('* => false', [style({ opacity: 0, transform: 'translate(0, -25%)' }), animate('0.2s ease-in-out')]),\n      transition('false => *', [animate('0.2s ease-in-out', style({ opacity: 0, transform: 'translate(0, -25%)' }))]),\n    ]),\n    trigger('fade', [\n      transition('void => *', [style({ opacity: 0 }), animate('0.2s ease-in-out', style({ opacity: 0.85 }))]),\n      transition('* => void', [animate('0.2s ease-in-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrModal implements OnChanges, OnDestroy {\n  @ViewChild(FocusTrapDirective) focusTrap: FocusTrapDirective;\n\n  @HostBinding('class.open')\n  @Input('clrModalOpen')\n  _open: boolean = false;\n  @Output('clrModalOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrModalClosable') closable: boolean = true;\n  @Input('clrModalSize') size: string;\n  @Input('clrModalStaticBackdrop') staticBackdrop: boolean = true;\n  @Input('clrModalSkipAnimation') skipAnimation: string = 'false';\n\n  // presently this is only used by wizards\n  @Input('clrModalOverrideScrollService') bypassScrollService: boolean = false;\n  @Input('clrModalPreventClose') stopClose: boolean = false;\n  @Output('clrModalAlternateClose') altClose: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(\n    private _scrollingService: ScrollingService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public modalId: string\n  ) {}\n\n  // Detect when _open is set to true and set no-scrolling to true\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (!this.bypassScrollService && changes && changes.hasOwnProperty('_open')) {\n      if (changes._open.currentValue) {\n        this._scrollingService.stopScrolling();\n      } else {\n        this._scrollingService.resumeScrolling();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._scrollingService.resumeScrolling();\n  }\n\n  open(): void {\n    if (this._open) {\n      return;\n    }\n    this._open = true;\n    this._openChanged.emit(true);\n  }\n\n  @HostListener('body:keyup.escape')\n  close(): void {\n    if (this.stopClose) {\n      this.altClose.emit(false);\n      return;\n    }\n    if (!this.closable || !this._open) {\n      return;\n    }\n    this._open = false;\n    // SPECME\n    this.focusTrap.setPreviousFocus(); // Handles moving focus back to the element that had it before.\n  }\n\n  fadeDone(e: AnimationEvent) {\n    if (e.toState === 'void') {\n      // TODO: Investigate if we can decouple from animation events\n      this._openChanged.emit(false);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\n\n/**\n * Allows modal overflow area to be scrollable via keyboard.\n * The modal body will focus with keyboard navigation only.\n * This allows inner focusable items to be focused without\n * the overflow scroll being focused.\n */\n@Directive({\n  selector: '.modal-body',\n  host: {\n    '[attr.tabindex]': 'tabindex',\n  },\n})\nexport class ClrModalBody {\n  tabindex = 0;\n\n  @HostListener('mousedown')\n  mouseDown() {\n    // tabindex = 0 binding should be removed\n    // so it won't be focused when click starts with mousedown\n    delete this.tabindex;\n  }\n\n  @HostListener('mouseup')\n  mouseUp() {\n    // set the tabindex binding back when click is completed with mouseup\n    this.tabindex = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrFocusTrapModule } from '../utils/focus-trap/focus-trap.module';\nimport { ClrModal } from './modal';\nimport { ClrModalBody } from './modal-body';\nimport { ClrFocusOnViewInitModule } from '../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nexport const CLR_MODAL_DIRECTIVES: Type<any>[] = [ClrModal, ClrModalBody];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusTrapModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_MODAL_DIRECTIVES],\n  exports: [CLR_MODAL_DIRECTIVES, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrModalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Point } from '../common/popover';\n\nexport interface Position {\n  anchorPoint: Point;\n  popoverPoint: Point;\n  offsetY: number;\n  offsetX: number;\n}\n\nexport const SIGNPOST_POSITIONS: { [input: string]: Position } = {\n  'top-left': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_RIGHT, offsetY: -10, offsetX: 0 },\n  'top-middle': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_CENTER, offsetY: -10, offsetX: 0 },\n  'top-right': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_LEFT, offsetY: -10, offsetX: 0 },\n  'right-top': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_BOTTOM, offsetY: 2, offsetX: 14 },\n  'right-middle': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n  'right-bottom': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_TOP, offsetY: -1, offsetX: 14 },\n  'bottom-right': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_LEFT, offsetY: 9, offsetX: -1 },\n  'bottom-middle': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_CENTER, offsetY: 9, offsetX: 12 },\n  'bottom-left': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_RIGHT, offsetY: 9, offsetX: 0 },\n  'left-bottom': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_TOP, offsetY: 0, offsetX: -14 },\n  'left-middle': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_CENTER, offsetY: 4, offsetX: -14 },\n  'left-top': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_BOTTOM, offsetY: 0, offsetX: -14 },\n  default: { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional, OnDestroy, PLATFORM_ID } from '@angular/core';\n\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { SIGNPOST_POSITIONS } from './signpost-positions';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// aka where the arrow / pointer is at in relation to the anchor\nconst POSITIONS: string[] = [\n  'top-left',\n  'top-middle',\n  'top-right',\n  'right-top',\n  'right-middle', // default\n  'right-bottom',\n  'bottom-right',\n  'bottom-middle',\n  'bottom-left',\n  'left-bottom',\n  'left-middle',\n  'left-top',\n];\n\n@Component({\n  selector: 'clr-signpost-content',\n  template: `\n      <div class=\"signpost-wrap\">\n          <div class=\"popover-pointer\"></div>\n          <div class=\"signpost-content-body\">\n              <ng-content></ng-content>\n          </div>\n          <div class=\"signpost-content-header\">\n              <button type=\"button\" [attr.aria-label]=\"commonStrings.keys.signpostClose\" class=\"signpost-action close\"\n                      (click)=\"close()\" [attr.aria-controls]=\"signpostContentId\">\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n      </div>\n  `,\n  host: { '[class.signpost-content]': 'true', '[id]': 'signpostContentId' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrSignpostContent extends AbstractPopover implements OnDestroy {\n  private document: Document;\n\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public signpostContentId: string,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(DOCUMENT) document: any\n  ) {\n    super(injector, parentHost);\n    if (!parentHost) {\n      throw new Error('clr-signpost-content should only be used inside of a clr-signpost');\n    }\n    // Defaults\n    this.position = 'right-middle';\n    this.closeOnOutsideClick = true;\n    this.signpostIdService.setId(signpostContentId);\n\n    this.document = document;\n  }\n\n  /**********\n   *\n   * @description\n   * Close function that uses the signpost instance to toggle the state of the content popover.\n   *\n   */\n  close() {\n    this.toggleService.open = false;\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  /*********\n   *\n   * @description\n   * A setter for the position of the ClrSignpostContent popover. This is a combination of the following:\n   * - anchorPoint - where on the trigger to anchor the ClrSignpostContent\n   * - popoverPoint - where on the ClrSignpostContent container to align with the anchorPoint\n   * - offsetY - where on the Y axis to align the ClrSignpostContent so it meets specs\n   * - offsetX - where on the X axis to align the ClrSignpostContent so it meets specs\n   * There are 12 possible positions to place a ClrSignpostContent container:\n   * - top-left\n   * - top-middle\n   * - top-right\n   * - right-top\n   * - right-middle\n   * - right-bottom\n   * - bottom-right\n   * - bottom-middle\n   * - bottom-left\n   * - left-bottom\n   * - left-middle\n   * - left-top\n   *\n   * I think of it as follows for 'top-left' -> CONTAINER_SIDE-SIDE_POSITION. In this case CONTAINER_SIDE is 'top'\n   * meaning the top of the trigger icon (above the icon that hides/shows) the ClrSignpostContent. And, SIDE_POSITION\n   * is 'left' meaning two things: 1) the ClrSignpostContent container extends to the left and 2) the 'arrow/pointer'\n   * linking the SingpostContent to the trigger points down at the horizontal center of the trigger icon.\n   *\n   * @param newPosition\n   */\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right-middle';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, this.position);\n\n    const setPosition = SIGNPOST_POSITIONS[this.position];\n    this.anchorPoint = setPosition.anchorPoint;\n    this.popoverPoint = setPosition.popoverPoint;\n    this.popoverOptions.offsetY = setPosition.offsetY;\n    this.popoverOptions.offsetX = setPosition.offsetX;\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId) && this.el.nativeElement.contains(this.document.activeElement)) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrSignpost } from './signpost';\nimport { ClrSignpostContent } from './signpost-content';\nimport { ClrSignpostTrigger } from './signpost-trigger';\n\nexport const CLR_SIGNPOST_DIRECTIVES: Type<any>[] = [ClrSignpost, ClrSignpostContent, ClrSignpostTrigger];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_SIGNPOST_DIRECTIVES],\n  exports: [CLR_SIGNPOST_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrSignpostModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class TooltipIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  updateId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\n@Component({\n  selector: 'clr-tooltip',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip]': 'true',\n  },\n  providers: [\n    ClrPopoverToggleService,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    // TODO: consider centralizing the unique id string on a service that provides ariaAttributes that need it\n    // AriaService in layout/tabs/providers might be a good starting point.\n    UNIQUE_ID_PROVIDER,\n    TooltipIdService,\n  ],\n})\nexport class ClrTooltip {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\nconst POSITIONS: string[] = ['bottom-left', 'bottom-right', 'top-left', 'top-right', 'right', 'left'];\n\nconst SIZES: string[] = ['xs', 'sm', 'md', 'lg'];\n\n@Component({\n  selector: 'clr-tooltip-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip-content]': 'true',\n    '[style.opacity]': '1',\n    '[attr.role]': '\"tooltip\"',\n    '[id]': 'id',\n  },\n})\nexport class ClrTooltipContent extends AbstractPopover {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    private tooltipIdService: TooltipIdService\n  ) {\n    super(injector, parentHost);\n\n    if (!parentHost) {\n      throw new Error('clr-tooltip-content should only be used inside of a clr-tooltip');\n    }\n\n    // Defaults\n    this.position = 'right';\n    this.size = 'sm';\n\n    // Set the default id in case consumer does not supply a custom id.\n    this.updateId(uniqueId);\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input()\n  set id(value: string) {\n    value ? this.updateId(value) : this.updateId('');\n  }\n  private _id;\n\n  private updateId(id: string) {\n    this._id = id;\n    this.tooltipIdService.updateId(id);\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.position);\n\n    // set the popover values based on direction\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'right':\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'left':\n        this.anchorPoint = Point.LEFT_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      default:\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private _size: string;\n\n  get size() {\n    return this._size;\n  }\n\n  @Input('clrSize')\n  set size(size: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.size);\n    if (size && SIZES.indexOf(size) > -1) {\n      this._size = size;\n    } else {\n      this._size = 'sm';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.size);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrTooltipTrigger]',\n  host: {\n    tabindex: '0',\n    '[class.tooltip-trigger]': 'true',\n    '[attr.aria-describedby]': 'ariaDescribedBy',\n    '[attr.role]': '\"button\"',\n  },\n})\nexport class ClrTooltipTrigger {\n  public ariaDescribedBy;\n  private subs: Subscription[] = [];\n  constructor(private toggleService: ClrPopoverToggleService, private tooltipIdService: TooltipIdService) {\n    // The aria-described by comes from the id of content. It\n    this.subs.push(this.tooltipIdService.id.subscribe(tooltipId => (this.ariaDescribedBy = tooltipId)));\n  }\n\n  @HostListener('mouseenter')\n  @HostListener('focus')\n  showTooltip(): void {\n    this.toggleService.open = true;\n  }\n\n  @HostListener('mouseleave')\n  @HostListener('blur')\n  hideTooltip(): void {\n    this.toggleService.open = false;\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrTooltip } from './tooltip';\nimport { ClrTooltipContent } from './tooltip-content';\nimport { ClrTooltipTrigger } from './tooltip-trigger';\n\nexport const CLR_TOOLTIP_DIRECTIVES: Type<any>[] = [ClrTooltip, ClrTooltipTrigger, ClrTooltipContent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_TOOLTIP_DIRECTIVES],\n  exports: [CLR_TOOLTIP_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrTooltipModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrDropdownModule } from './dropdown/dropdown.module';\nimport { ClrSignpostModule } from './signpost/signpost.module';\nimport { ClrTooltipModule } from './tooltip/tooltip.module';\n\n@NgModule({ exports: [ClrDropdownModule, ClrSignpostModule, ClrTooltipModule] })\nexport class ClrPopoverModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ButtonHubService {\n  public buttonsReady: boolean = false;\n\n  private _previousBtnClicked = new Subject<any>();\n  public get previousBtnClicked(): Observable<any> {\n    return this._previousBtnClicked.asObservable();\n  }\n\n  private _nextBtnClicked = new Subject<any>();\n  public get nextBtnClicked(): Observable<any> {\n    return this._nextBtnClicked.asObservable();\n  }\n\n  private _dangerBtnClicked = new Subject<any>();\n  public get dangerBtnClicked(): Observable<any> {\n    return this._dangerBtnClicked.asObservable();\n  }\n\n  private _cancelBtnClicked = new Subject<any>();\n  public get cancelBtnClicked(): Observable<any> {\n    return this._cancelBtnClicked.asObservable();\n  }\n\n  private _finishBtnClicked = new Subject<any>();\n  public get finishBtnClicked(): Observable<any> {\n    return this._finishBtnClicked.asObservable();\n  }\n\n  private _customBtnClicked = new Subject<any>();\n  public get customBtnClicked(): Observable<any> {\n    return this._customBtnClicked.asObservable();\n  }\n\n  public buttonClicked(buttonType: string): void {\n    if ('previous' === buttonType) {\n      this._previousBtnClicked.next();\n    } else if ('next' === buttonType) {\n      this._nextBtnClicked.next();\n    } else if ('finish' === buttonType) {\n      this._finishBtnClicked.next();\n    } else if ('danger' === buttonType) {\n      this._dangerBtnClicked.next();\n    } else if ('cancel' === buttonType) {\n      this._cancelBtnClicked.next();\n    } else {\n      this._customBtnClicked.next(buttonType);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\n/**\n * PageCollectionService manages the collection of pages assigned to the wizard and offers\n * a number of functions useful across the wizards providers and subcomponents -- all related\n * to essentially lookups on the collection of pages.\n *\n * The easiest way to access PageCollectionService is via the wizard. The\n * following example would allow you to access your instance of the wizard from your host\n * component and thereby access the page collection via YourHostComponent.wizard.pageCollection.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n * The heart of the page collection is the query list of pages, which it is assigned as a\n * reference to the Wizard.pages QueryList when the wizard is created.\n *\n */\n@Injectable()\nexport class PageCollectionService {\n  /**\n   * A reference to the Wizard.pages QueryList.\n   *\n   * Populated when the wizard is created.\n   *\n   * @memberof PageCollectionService\n   */\n  public pages: QueryList<ClrWizardPage>;\n\n  /**\n   * Converts the PageCollectionService.pages QueryList to an array and returns it.\n   *\n   * Useful for many instances when you would prefer a QueryList to act like an array.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesAsArray(): ClrWizardPage[] {\n    return this.pages ? this.pages.toArray() : [];\n  }\n\n  /**\n   * Returns the length of the pages query list.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesCount(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /**\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get penultimatePage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 2) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 2];\n  }\n\n  /**\n   * Returns the last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get lastPage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 1) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 1];\n  }\n\n  /**\n   * Returns the first page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get firstPage(): ClrWizardPage {\n    if (!this.pagesCount) {\n      return;\n    }\n\n    return this.pagesAsArray[0];\n  }\n\n  /**\n   * Used mostly internally, but accepts a string ID and returns a ClrWizardPage\n   * object that matches the ID passed. Note that IDs here should include the prefix\n   * \"clr-wizard-page-\".\n   *\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageById(id: string): ClrWizardPage {\n    const foundPages: ClrWizardPage[] = this.pages.filter((page: ClrWizardPage) => id === page.id);\n    return this.checkResults(foundPages, id);\n  }\n\n  /**\n   * Accepts s number as a parameter and treats that number as the index of the page\n   * you're looking for in the collection of pages. Returns a  wizard page object.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageByIndex(index: number): ClrWizardPage {\n    const pageCount = this.pagesCount;\n    const pagesLastIndex: number = pageCount > 1 ? pageCount - 1 : 0;\n\n    if (index < 0) {\n      throw new Error('Cannot retrieve page with index of ' + index);\n    }\n\n    if (index > pagesLastIndex) {\n      throw new Error('Page index is greater than length of pages array.');\n    }\n\n    return this.pagesAsArray[index];\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns its index in the\n   * collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageIndex(page: ClrWizardPage): number {\n    const index = this.pagesAsArray.indexOf(page);\n\n    if (index < 0) {\n      throw new Error('Requested page cannot be found in collection of pages.');\n    }\n\n    return index;\n  }\n\n  /**\n   * Consolidates guard logic that prevents a couple of unfortunate edge cases with\n   * look ups on the collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  private checkResults(results: ClrWizardPage[], requestedPageId: string) {\n    const foundPagesCount: number = results.length || 0;\n\n    if (foundPagesCount > 1) {\n      throw new Error('More than one page has the requested id ' + requestedPageId + '.');\n    } else if (foundPagesCount < 1) {\n      throw new Error('No page can be found with the id ' + requestedPageId + '.');\n    } else {\n      return results[0];\n    }\n  }\n\n  /**\n   * Accepts two numeric indexes and returns an array of wizard page objects that include\n   * all wizard pages in the page collection from the first index to the second.\n   *\n   * @memberof PageCollectionService\n   */\n  public pageRange(start: number, end: number): ClrWizardPage[] {\n    let pages: ClrWizardPage[] = [];\n\n    if (start < 0 || end < 0) {\n      return [];\n    }\n\n    if (start === null || typeof start === 'undefined' || isNaN(start)) {\n      return [];\n    }\n\n    if (end === null || typeof end === 'undefined' || isNaN(end)) {\n      return [];\n    }\n\n    if (end > this.pagesCount) {\n      end = this.pagesCount;\n    }\n\n    pages = this.pagesAsArray;\n\n    if (end - start === 0) {\n      // just return the one page they want\n      return [this.getPageByIndex(start)];\n    }\n\n    // slice end does not include item referenced by end index, which is weird for users\n    // incrementing end index here to correct that so users and other methods\n    // don't have to think about it\n    end = end + 1;\n\n    // slice does not return the last one in the range but it does include the first one\n    // does not modify original array\n    return pages.slice(start, end);\n  }\n\n  /**\n   * Accepts two wizard page objects and returns those page objects with all other page\n   * objects between them in the page collection. It doesn't care which page is ahead of the\n   * other in the parameters. It will be smart enough to figure that out  on its own.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageRangeFromPages(page: ClrWizardPage, otherPage: ClrWizardPage): ClrWizardPage[] {\n    const pageIndex = this.getPageIndex(page);\n    const otherPageIndex = this.getPageIndex(otherPage);\n    let startIndex: number;\n    let endIndex: number;\n\n    if (pageIndex <= otherPageIndex) {\n      startIndex = pageIndex;\n      endIndex = otherPageIndex;\n    } else {\n      startIndex = otherPageIndex;\n      endIndex = pageIndex;\n    }\n    return this.pageRange(startIndex, endIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately before it in the page collection. Returns null if there is\n   * no page before the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPreviousPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const previousPageIndex = myPageIndex - 1;\n    if (previousPageIndex < 0) {\n      return null;\n    }\n    return this.getPageByIndex(previousPageIndex);\n  }\n\n  /**\n   * Accepts a wizard page object as a parameter and returns a Boolean that says if\n   * the page you sent it is complete.\n   *\n   * @memberof PageCollectionService\n   */\n  public previousPageIsCompleted(page: ClrWizardPage) {\n    let previousPage: ClrWizardPage;\n\n    if (!page) {\n      return false;\n    }\n\n    previousPage = this.getPreviousPage(page);\n\n    if (null === previousPage) {\n      // page is the first page. no previous page.\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately after it in the page collection. Returns null if there is\n   * no page after the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getNextPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const nextPageIndex = myPageIndex + 1;\n\n    if (nextPageIndex >= this.pagesAsArray.length) {\n      return null;\n    }\n    return this.getPageByIndex(nextPageIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and generates a step item id from the\n   * page ID. Returns the generated step item ID as a string.\n   *\n   * @memberof PageCollectionService\n   */\n  public getStepItemIdForPage(page: ClrWizardPage) {\n    const pageId = page.id;\n    const pageIdParts = pageId.split('-').reverse();\n\n    pageIdParts[1] = 'step';\n    return pageIdParts.reverse().join('-');\n  }\n\n  /**\n   * Generally only used internally to mark that a specific page has been \"committed\".\n   * This involves marking the page complete and firing the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) output. Takes the wizard page object that you intend to\n   * mark completed as a parameter.\n   *\n   * @memberof PageCollectionService\n   */\n  public commitPage(page: ClrWizardPage) {\n    const pageHasOverrides = page.stopNext || page.preventDefault;\n    page.completed = true;\n\n    if (!pageHasOverrides) {\n      // prevent loop of event emission; alternate flows work off\n      // of event emitters this is how they break that cycle.\n      page.onCommit.emit(page.id);\n    }\n  }\n\n  // used by the navService to navigate back to first possible step after\n  // pages are reset\n\n  /**\n   *\n   * @memberof PageCollectionService\n   */\n  private _pagesReset = new Subject<boolean>();\n\n  /**\n   * An observable that the navigation service listens to in order to know when\n   * the page collection completed states have been reset to false so that way it\n   * can also reset the navigation to make the first page in the page collection\n   * current/active.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesReset(): Observable<boolean> {\n    return this._pagesReset.asObservable();\n  }\n\n  /**\n   * Sets all completed states of the pages in the page collection to false and\n   * notifies the navigation service to likewise reset the navigation.\n   *\n   * @memberof PageCollectionService\n   */\n  public reset() {\n    this.pagesAsArray.forEach((page: ClrWizardPage) => {\n      page.completed = false;\n    });\n    this._pagesReset.next(true);\n  }\n\n  /**\n   * Rolls through all the pages in the page collection to make sure there are no\n   * incomplete pages sandwiched between completed pages in the workflow. Identifies\n   * the first incomplete page index and sets all pages behind it to a completed\n   * state of false.\n   *\n   * @memberof PageCollectionService\n   */\n  public updateCompletedStates(): void {\n    const firstIncompleteIndex = this.findFirstIncompletePageIndex();\n\n    if (firstIncompleteIndex === this.pagesAsArray.length - 1) {\n      // all complete no need to do anything\n      return;\n    }\n\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (index > firstIncompleteIndex) {\n        page.completed = false;\n      }\n    });\n  }\n\n  /**\n   * Retrieves the index of the first incomplete page in the page collection.\n   *\n   * @memberof PageCollectionService\n   */\n  public findFirstIncompletePageIndex(): number {\n    let returnIndex: number = null;\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (null === returnIndex && false === page.completed) {\n        returnIndex = index;\n      }\n    });\n\n    // fallthrough, all completed, return last page\n    if (null === returnIndex) {\n      returnIndex = this.pagesCount - 1;\n    }\n\n    return returnIndex;\n  }\n\n  public findFirstIncompletePage(): ClrWizardPage {\n    const myIncompleteIndex = this.findFirstIncompletePageIndex();\n    return this.pagesAsArray[myIncompleteIndex];\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\nimport { ButtonHubService } from './button-hub.service';\nimport { PageCollectionService } from './page-collection.service';\n\n/**\n * Performs navigation functions for a wizard and manages the current page. Presented as a\n * separate service to encapsulate the behavior of navigating and completing the wizard so\n * that it can be shared across the wizard and its sub-components.\n *\n * The easiest way to access the navigation service is there a reference on your wizard. The\n * Following example would allow you to access your instance of the wizard from your host\n * component and thereby access the navigation service via YourHostComponent.wizard.navService.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n */\n@Injectable()\nexport class WizardNavigationService implements OnDestroy {\n  /**\n   * Is notified when a previous button is clicked in the wizard. Performs checks\n   * before alerting the current page of the button click. Enacts navigation to\n   * the previous page if not overridden at the page level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previousButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Next button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public nextButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a danger button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public dangerButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a  finish button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public finishButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Custom button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public customButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n   * which handles all cancel functionality, if cancel is not overridden at the page\n   * level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancelButtonSubscription: Subscription;\n\n  /**\n   * Resets navigation to make the first page current when the page collection service\n   * emits an event notifying WizardNavigationService that it has reset all pages\n   * to their pristine, incomplete state.\n   *\n   * @memberof WizardNavigationService\n   */\n  public pagesResetSubscription: Subscription;\n\n  /**\n   * Creates an instance of WizardNavigationService. Also sets up subscriptions\n   * that listen to the button service to determine when a button has been clicked\n   * in the wizard. Is also responsible for taking action when the page collection\n   * requests that navigation be reset to its pristine state.\n   *\n   * @memberof WizardNavigationService\n   */\n  constructor(public pageCollection: PageCollectionService, public buttonService: ButtonHubService) {\n    this.previousButtonSubscription = this.buttonService.previousBtnClicked.subscribe(() => {\n      const currentPage = this.currentPage;\n      if (this.currentPageIsFirst || currentPage.previousStepDisabled) {\n        return;\n      }\n      currentPage.previousButtonClicked.emit(currentPage);\n      if (!currentPage.preventDefault) {\n        this.previous();\n      }\n    });\n\n    this.nextButtonSubscription = this.buttonService.nextBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('next');\n    });\n\n    this.dangerButtonSubscription = this.buttonService.dangerBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('danger');\n    });\n\n    this.finishButtonSubscription = this.buttonService.finishBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('finish');\n    });\n\n    this.customButtonSubscription = this.buttonService.customBtnClicked.subscribe((type: string) => {\n      if (!this.wizardStopNavigation) {\n        this.currentPage.customButtonClicked.emit(type);\n      }\n    });\n\n    this.cancelButtonSubscription = this.buttonService.cancelBtnClicked.subscribe(() => {\n      if (this.wizardStopNavigation) {\n        return;\n      }\n\n      if (this.currentPage.preventDefault) {\n        this.currentPage.pageOnCancel.emit(this.currentPage);\n      } else {\n        this.cancel();\n      }\n    });\n\n    this.pagesResetSubscription = this.pageCollection.pagesReset.subscribe(() => {\n      this.setFirstPageCurrent();\n    });\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  ngOnDestroy(): void {\n    this.previousButtonSubscription.unsubscribe();\n    this.nextButtonSubscription.unsubscribe();\n    this.dangerButtonSubscription.unsubscribe();\n    this.finishButtonSubscription.unsubscribe();\n    this.customButtonSubscription.unsubscribe();\n    this.cancelButtonSubscription.unsubscribe();\n    this.pagesResetSubscription.unsubscribe();\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  private _currentChanged = new Subject<ClrWizardPage>();\n\n  /**\n   * An Observable that is predominantly used amongst the subcomponents and services\n   * of the wizard. It is recommended that users listen to the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output instead of this Observable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageChanged(): Observable<ClrWizardPage> {\n    // TODO: MAKE SURE EXTERNAL OUTPUTS SAY 'CHANGE' NOT 'CHANGED'\n    // A BREAKING CHANGE SO AWAITING MINOR RELEASE\n    return this._currentChanged.asObservable();\n  }\n\n  /**\n   * A Boolean flag used by the ClrWizardPage to avoid a race condition when pages are\n   * loading and there is no current page defined.\n   *\n   * @memberof WizardNavigationService\n   */\n  public navServiceLoaded = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n   * navigating backwards in the stepnav menu will reset any skipped pages' completed\n   * state to false.\n   *\n   * This is useful when a wizard executes validation on a page-by-page basis when\n   * the next button is clicked.\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceForwardNavigation = false;\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  public get currentPageTitle(): TemplateRef<any> {\n    // when the querylist of pages is empty. this is the first place it fails...\n    if (!this.currentPage) {\n      return null;\n    }\n    return this.currentPage.title;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the first\n   * page in the Wizard.\n   *\n   * This is helpful for determining whether a page is navigable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsFirst(): boolean {\n    return this.pageCollection.firstPage === this.currentPage;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the\n   * last page in the Wizard.\n   *\n   * This is used to determine which buttons should display in the wizard footer.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsLast(): boolean {\n    return this.pageCollection.lastPage === this.currentPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _currentPage: ClrWizardPage;\n\n  /**\n   * Returns the ClrWizardPage object of the current page or null.\n   *\n   * @memberof WizardNavigationService\n   */\n  get currentPage(): ClrWizardPage {\n    if (!this._currentPage) {\n      return null;\n    }\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a ClrWizardPage object, since that object to be the current/active\n   * page in the wizard, and emits the ClrWizardPage.onLoad (clrWizardPageOnLoad)\n   * event for that page.\n   *\n   * Note that all of this work is bypassed if the ClrWizardPage object is already\n   * the current page.\n   *\n   * @memberof WizardNavigationService\n   */\n  set currentPage(page: ClrWizardPage) {\n    if (this._currentPage !== page && !this.wizardStopNavigation) {\n      this._currentPage = page;\n      page.onLoad.emit(page.id);\n      this._currentChanged.next(page);\n    }\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToNextPage = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that forward navigation\n   * has occurred. It is recommended that you use the Wizard.onMoveNext\n   * (clrWizardOnNext) output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToNextPage(): Observable<boolean> {\n    return this._movedToNextPage.asObservable();\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _wizardFinished = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that the nav service\n   * has approved completion of the wizard.\n   *\n   * It is recommended that you use the Wizard.wizardFinished (clrWizardOnFinish)\n   * output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get wizardFinished(): Observable<boolean> {\n    return this._wizardFinished.asObservable();\n  }\n\n  /**\n   * This is a public function that can be used to programmatically advance\n   * the user to the next page.\n   *\n   * When invoked, this method will move the wizard to the next page after\n   * successful validation. Note that this method goes through all checks\n   * and event emissions as if Wizard.next(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.next(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public next(): void {\n    if (this.currentPageIsLast) {\n      this.checkAndCommitCurrentPage('finish');\n    } else {\n      this.checkAndCommitCurrentPage('next');\n    }\n  }\n\n  /**\n   * Bypasses checks and most event emissions to force a page to navigate forward.\n   *\n   * Comparable to calling Wizard.next() or Wizard.forceNext().\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceNext(): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    const nextPage: ClrWizardPage = this.pageCollection.getNextPage(currentPage);\n\n    // catch errant null or undefineds that creep in\n    if (!nextPage) {\n      throw new Error('The wizard has no next page to go to.');\n    }\n\n    if (this.wizardStopNavigation) {\n      return;\n    }\n\n    if (!currentPage.completed) {\n      // this is a state that alt next flows can get themselves in...\n      this.pageCollection.commitPage(currentPage);\n    }\n    this.currentPage = nextPage;\n  }\n\n  /**\n   * Accepts a button/action type as a parameter. Encapsulates all logic for\n   * event emissions, state of the current page, and wizard and page level overrides.\n   *\n   * Avoid calling this function directly unless you really know what you're doing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public checkAndCommitCurrentPage(buttonType: string): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    let iAmTheLastPage: boolean;\n\n    let isNext: boolean;\n    let isDanger: boolean;\n    let isDangerNext: boolean;\n    let isDangerFinish: boolean;\n    let isFinish: boolean;\n\n    if (!currentPage.readyToComplete || this.wizardStopNavigation) {\n      return;\n    }\n\n    iAmTheLastPage = this.currentPageIsLast;\n\n    isNext = buttonType === 'next';\n    isDanger = buttonType === 'danger';\n    isDangerNext = isDanger && !iAmTheLastPage;\n    isDangerFinish = isDanger && iAmTheLastPage;\n    isFinish = buttonType === 'finish' || isDangerFinish;\n\n    if (isFinish && !iAmTheLastPage) {\n      return;\n    }\n\n    currentPage.primaryButtonClicked.emit(buttonType);\n\n    if (isFinish) {\n      currentPage.finishButtonClicked.emit(currentPage);\n    } else if (isDanger) {\n      currentPage.dangerButtonClicked.emit();\n    } else if (isNext) {\n      currentPage.nextButtonClicked.emit();\n    }\n\n    if (currentPage.stopNext || currentPage.preventDefault) {\n      currentPage.onCommit.emit(currentPage.id);\n      return;\n    }\n\n    // order is very important with these emitters!\n    if (isFinish) {\n      // mark page as complete\n      if (!this.wizardHasAltNext) {\n        this.pageCollection.commitPage(currentPage);\n      }\n      this._wizardFinished.next();\n    }\n\n    if (this.wizardHasAltNext) {\n      this.pageCollection.commitPage(currentPage);\n\n      if (isNext || isDangerNext) {\n        this._movedToNextPage.next(true);\n      }\n      // jump out here, no matter what type we're looking at\n      return;\n    }\n\n    if (isNext || isDangerNext) {\n      this.forceNext();\n    }\n\n    if (!this.wizardHasAltNext && !this.wizardStopNavigation) {\n      this._movedToNextPage.next(true);\n    }\n  }\n\n  /**\n   * This is a public function that can be used to programmatically conclude\n   * the wizard.\n   *\n   * When invoked, this method will  initiate the work involved with finalizing\n   * and finishing the wizard workflow. Note that this method goes through all\n   * checks and event emissions as if Wizard.finish(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.finish(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public finish(): void {\n    this.checkAndCommitCurrentPage('finish');\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToPreviousPage = new Subject<boolean>();\n\n  /**\n   * Notifies the wizard when backwards navigation has occurred via the\n   * previous button.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToPreviousPage(): Observable<boolean> {\n    return this._movedToPreviousPage.asObservable();\n  }\n\n  /**\n   * Programmatically moves the wizard to the page before the current page.\n   *\n   * In most instances, it makes more sense to call Wizard.previous()\n   * which does the same thing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previous(): void {\n    let previousPage: ClrWizardPage;\n\n    if (this.currentPageIsFirst || this.wizardStopNavigation) {\n      return;\n    }\n\n    previousPage = this.pageCollection.getPreviousPage(this.currentPage);\n\n    if (!previousPage) {\n      return;\n    }\n\n    this._movedToPreviousPage.next(true);\n\n    if (this.forceForwardNavigation) {\n      this.currentPage.completed = false;\n    }\n\n    this.currentPage = previousPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _cancelWizard = new Subject<any>();\n\n  /**\n   * Notifies the wizard that a user is trying to cancel it.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get notifyWizardCancel(): Observable<any> {\n    return this._cancelWizard.asObservable();\n  }\n\n  /**\n   * Allows a hook into the cancel workflow of the wizard from the nav service. Note that\n   * this route goes through all checks and event emissions as if a cancel button had\n   * been clicked.\n   *\n   * In most cases, users looking for a hook into the cancel routine are actually looking\n   * for a way to close the wizard from their host component because they have prevented\n   * the default cancel action.\n   *\n   * In this instance, it is recommended that you use Wizard.close() to avoid any event\n   * emission loop resulting from an event handler calling back into routine that will\n   * again evoke the events it handles.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancel(): void {\n    this._cancelWizard.next();\n  }\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n   * routine is subverted and must be reinstated in the host component calling Wizard.close()\n   * at some point.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltCancel: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n   * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n   * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltNext: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n   * navigational elements in the wizard are disabled.\n   *\n   * This is intended to freeze the wizard in place. Events are not fired so this is\n   * not a way to implement alternate functionality for navigation.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardStopNavigation: boolean = false;\n\n  /**\n   * A boolean flag shared with the stepnav items that prevents user clicks on\n   * stepnav items from navigating the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardDisableStepnav: boolean = false;\n\n  /**\n   * Performs all required checks to determine if a user can navigate to a page. Checking at each\n   * point if a page is navigable -- completed where the page immediately after the last completed\n   * page.\n   *\n   * Takes two parameters. The first one must be either the ClrWizardPage object or the ID of the\n   * ClrWizardPage object that you want to make the current page.\n   *\n   * The second parameter is optional and is a Boolean flag for \"lazy completion\". What this means\n   * is the Wizard will mark all pages between the current page and the page you want to navigate\n   * to as completed. This is useful for informational wizards that do not require user action,\n   * allowing an easy means for users to jump ahead.\n   *\n   * To avoid checks on navigation, use ClrWizardPage.makeCurrent() instead.\n   *\n   * @memberof WizardNavigationService\n   */\n  public goTo(pageToGoToOrId: any, lazyComplete: boolean = false) {\n    let pageToGoTo: ClrWizardPage;\n    let currentPage: ClrWizardPage;\n    let myPages: PageCollectionService;\n    let pagesToCheck: ClrWizardPage[];\n    let okayToMove: boolean;\n    let goingForward: boolean;\n    let currentPageIndex: number;\n    let goToPageIndex: number;\n\n    myPages = this.pageCollection;\n    pageToGoTo = typeof pageToGoToOrId === 'string' ? myPages.getPageById(pageToGoToOrId) : pageToGoToOrId;\n    currentPage = this.currentPage;\n\n    // no point in going to the current page. you're there already!\n    // also hard block on any navigation when stopNavigation is true\n    if (pageToGoTo === currentPage || this.wizardStopNavigation) {\n      return;\n    }\n\n    currentPageIndex = myPages.getPageIndex(currentPage);\n    goToPageIndex = myPages.getPageIndex(pageToGoTo);\n    goingForward = goToPageIndex > currentPageIndex;\n    pagesToCheck = myPages.getPageRangeFromPages(this.currentPage, pageToGoTo);\n\n    okayToMove = lazyComplete || this.canGoTo(pagesToCheck);\n\n    if (!okayToMove) {\n      return;\n    }\n\n    if (goingForward && lazyComplete) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        if (page !== pageToGoTo) {\n          page.completed = true;\n        }\n      });\n    } else if (!goingForward && this.forceForwardNavigation) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        page.completed = false;\n      });\n    }\n\n    this.currentPage = pageToGoTo;\n  }\n\n  /**\n   * Accepts a range of ClrWizardPage objects as a parameter. Performs the work of checking\n   * those objects to determine if navigation can be accomplished.\n   *\n   * @memberof WizardNavigationService\n   */\n  public canGoTo(pagesToCheck: ClrWizardPage[]): boolean {\n    let okayToMove = true;\n    const myPages = this.pageCollection;\n\n    // previous page can be important when moving because if it's completed it\n    // allows us to move to the page even if it's incomplete...\n    let previousPagePasses: boolean;\n\n    if (!pagesToCheck || pagesToCheck.length < 1) {\n      return false;\n    }\n\n    pagesToCheck.forEach((page: ClrWizardPage) => {\n      let previousPage: ClrWizardPage;\n\n      if (!okayToMove) {\n        return;\n      }\n\n      if (page.completed) {\n        // default is true. just jump out instead of complicating it.\n        return;\n      }\n\n      // so we know our page is not completed...\n      previousPage = myPages.getPageIndex(page) > 0 ? myPages.getPreviousPage(page) : null;\n      previousPagePasses = previousPage === null || previousPage.completed === true;\n\n      // we are false if not the current page AND previous page is not completed\n      // (but must have a previous page)\n      if (!page.current && !previousPagePasses) {\n        okayToMove = false;\n      }\n      // falls through to true as default\n    });\n\n    return okayToMove;\n  }\n\n  /**\n   * Looks through the collection of pages to find the first one that is incomplete\n   * and makes that page the current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setLastEnabledPageCurrent(): void {\n    const allPages: ClrWizardPage[] = this.pageCollection.pagesAsArray;\n    let lastCompletedPageIndex: number = null;\n\n    allPages.forEach((page: ClrWizardPage, index: number) => {\n      if (page.completed) {\n        lastCompletedPageIndex = index;\n      }\n    });\n\n    if (lastCompletedPageIndex === null) {\n      // always is at least the first item...\n      lastCompletedPageIndex = 0;\n    } else if (lastCompletedPageIndex + 1 < allPages.length) {\n      lastCompletedPageIndex = lastCompletedPageIndex + 1;\n    }\n\n    this.currentPage = allPages[lastCompletedPageIndex];\n  }\n\n  /**\n   * Finds the first page in the collection of pages and makes that page the\n   * current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setFirstPageCurrent(): void {\n    this.currentPage = this.pageCollection.pagesAsArray[0];\n  }\n\n  /**\n   * Updates the stepnav on the left side of the wizard when pages are dynamically\n   * added or removed from the collection of pages.\n   *\n   * @memberof WizardNavigationService\n   */\n  public updateNavigation(): void {\n    let toSetCurrent: ClrWizardPage;\n    let currentPageRemoved: boolean;\n\n    this.pageCollection.updateCompletedStates();\n\n    currentPageRemoved = this.pageCollection.pagesAsArray.indexOf(this.currentPage) < 0;\n    if (currentPageRemoved) {\n      toSetCurrent = this.pageCollection.findFirstIncompletePage();\n      this.currentPage = toSetCurrent;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { ClrWizardHeaderAction } from '../wizard-header-action';\nimport { WizardNavigationService } from './wizard-navigation.service';\n\n@Injectable()\nexport class HeaderActionService {\n  // this service communicates information about the presence/display of header actions\n  // across the wizard\n\n  constructor(public navService: WizardNavigationService) {}\n\n  public wizardHeaderActions: QueryList<ClrWizardHeaderAction>;\n\n  public get wizardHasHeaderActions(): boolean {\n    const wizardHdrActions = this.wizardHeaderActions;\n    if (!wizardHdrActions) {\n      return false;\n    }\n    return wizardHdrActions.toArray().length > 0;\n  }\n\n  public get currentPageHasHeaderActions(): boolean {\n    return this.navService.currentPage ? this.navService.currentPage.hasHeaderActions : false;\n  }\n\n  public get showWizardHeaderActions(): boolean {\n    return !this.currentPageHasHeaderActions && this.wizardHasHeaderActions;\n  }\n\n  public get displayHeaderActionsWrapper(): boolean {\n    return this.currentPageHasHeaderActions || this.wizardHasHeaderActions;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nlet wizardHeaderActionIndex = 0;\n\n@Component({\n  selector: 'clr-wizard-header-action',\n  template: `\n        <button \n            type=\"button\"\n            class=\"btn clr-wizard-header-action btn-link\"\n            [id]=\"id\"\n            [class.disabled]=\"disabled\"\n            (click)=\"click()\"\n            [title]=\"title\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-header-action-wrapper' },\n})\nexport class ClrWizardHeaderAction {\n  // title is explanatory text added to the header action\n  @Input('title') title: string = '';\n\n  // If our host has an ID attribute, we use this instead of our index.\n  @Input('id') _id: string = (wizardHeaderActionIndex++).toString();\n\n  public get id(): string {\n    return `clr-wizard-header-action-${this._id}`;\n  }\n\n  @Input('clrWizardHeaderActionDisabled') public disabled: boolean = false;\n\n  @Output('actionClicked') headerActionClicked: EventEmitter<string> = new EventEmitter(false);\n\n  click(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // passing the header action id allows users to have one method that\n    // routes to many different actions based on the type of header action\n    // clicked. this is further aided by users being able to specify ids\n    // for their header actions.\n    this.headerActionClicked.emit(this._id);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageButtons]' })\nexport class ClrWizardPageButtons {\n  constructor(public pageButtonsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageHeaderActions]' })\nexport class ClrWizardPageHeaderActions {\n  constructor(public pageHeaderActionsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageNavTitle]' })\nexport class ClrWizardPageNavTitle {\n  constructor(public pageNavTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageTitle]' })\nexport class ClrWizardPageTitle {\n  constructor(public pageTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\n\nlet wizardPageIndex = 0;\n\n/**\n * The ClrWizardPage component is responsible for displaying the content of each step\n * in the wizard workflow.\n *\n * ClrWizardPage component has hooks into the navigation service (ClrWizardPage.navService),\n * page collection (ClrWizardPage.pageCollection), and button service\n * (ClrWizardPage.buttonService). These three providers are shared across the components\n * within each instance of a Wizard.\n *\n */\n@Component({\n  selector: 'clr-wizard-page',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[id]': 'id',\n    '[attr.aria-hidden]': '!current',\n    '[attr.aria-labelledby]': 'stepItemId',\n    '[class.active]': 'current',\n    '[class.clr-wizard-page]': 'true',\n  },\n})\nexport class ClrWizardPage implements OnInit {\n  /**\n   * Creates an instance of ClrWizardPage.\n   *\n   * @memberof WizardPage\n   */\n  constructor(\n    private navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService\n  ) {}\n\n  /**\n   * Contains a reference to the page title which is used for a number\n   * of different tasks for display in the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageTitle, { static: true })\n  public pageTitle: ClrWizardPageTitle;\n\n  /**\n   * Contains a reference to the desired title for the page's step in the\n   * navigation on the left side of the wizard. Can be projected to change the\n   * navigation link's text.\n   *\n   * If not defined, then ClrWizardPage.pageTitle will be displayed in the stepnav.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageNavTitle, { static: true })\n  public pageNavTitle: ClrWizardPageNavTitle;\n\n  /**\n   * Contains a reference to the buttons defined within the page. If not defined,\n   * the wizard defaults to the set of buttons defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageButtons, { static: true })\n  public _buttons: ClrWizardPageButtons;\n\n  /**\n   * Contains a reference to the header actions defined within the page. If not defined,\n   * the wizard defaults to the set of header actions defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageHeaderActions, { static: true })\n  public _headerActions: ClrWizardPageHeaderActions;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _nextStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the next page.\n   *\n   * Useful for in-page validation because it prevents forward navigation\n   * and visibly disables the next button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get nextStepDisabled(): boolean {\n    return this._nextStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow forward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageNextDisabled')\n  public set nextStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._nextStepDisabled) {\n      this._nextStepDisabled = valBool;\n      this.nextStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.nextStepDisabled changes.\n   * Should emit the new value of nextStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNextDisabledChange') nextStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _previousStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the previous page.\n   *\n   * Useful for in-page validation because it prevents backward navigation\n   * and visibly disables the previous button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousStepDisabled(): boolean {\n    return this._previousStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow backward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreviousDisabled')\n  public set previousStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._previousStepDisabled) {\n      this._previousStepDisabled = valBool;\n      this.previousStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.previousStepDisabled changes.\n   * Should emit the new value of previousStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreviousDisabledChange')\n  public previousStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _hasError = false;\n\n  /**\n   * A getter that tells whether or not the page has an error.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasError() {\n    return this._hasError;\n  }\n\n  /**\n   * Sets whether the page has an error and also resolve the \"falsy\" value. The\n   * current logic treat a \"0\" or an empty string as false and likewise will treat any\n   * \"truthy\" value as true.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageHasError')\n  public set hasError(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasError) {\n      this._hasError = valBool;\n    }\n  }\n\n  /**\n   * Overrides all actions from the page level, so you can use an alternate function for\n   * validation or data-munging with a ClrWizardPage.onCommit (clrWizardPageOnCommit output),\n   * ClrWizardPage.onCancel (clrWizardPageOnCancel output), or one\n   * of the granular page-level button click event emitters.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreventDefault') public preventDefault: boolean = false;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopCancel = false;\n\n  /**\n   * A getter that retrieves whether the page is preventing the cancel action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Overrides the cancel action from the page level. Allows you to use an\n   * alternate function for validation or data-munging before cancelling the\n   * wizard when combined with the ClrWizardPage.onCancel\n   * (the clrWizardPageOnCancel output).\n   *\n   * Requires that you manually close the wizard from your host component,\n   * usually with a call to Wizard.forceNext() or wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultCancel')\n  public set stopCancel(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopCancel) {\n      this._stopCancel = valBool;\n      this.stopCancelChange.emit(valBool);\n    }\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreventDefaultCancelChange') stopCancelChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopNext = false;\n\n  /**\n   * A getter that tells you whether the page is preventing the next action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopNext(): boolean {\n    return this._stopNext;\n  }\n\n  /**\n   * Overrides forward navigation from the page level. Allows you to use an\n   * alternate function for validation or data-munging before moving the\n   * wizard to the next pagewhen combined with the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) or ClrWizardPage.nextButtonClicked\n   * (clrWizardPageNext) outputs.\n   *\n   * Requires that you manually tell the wizard to navigate forward from\n   * the hostComponent, usually with a call to Wizard.forceNext() or\n   * wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultNext')\n  public set stopNext(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopNext) {\n      this._stopNext = valBool;\n    }\n  }\n\n  /**\n   * An event emitter carried over from a legacy version of ClrWizardPage.\n   * Fires an event on ClrWizardPage whenever the next or finish buttons\n   * are clicked and the page is the current page of the Wizard.\n   *\n   * Note that this does not automatically emit an event when a custom\n   * button is used in place of a next or finish button.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCommit') onCommit: EventEmitter<string> = new EventEmitter<string>(false);\n\n  /**\n   * Emits an event when ClrWizardPage becomes the current page of the\n   * Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnLoad') onLoad: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Emits an event when the ClrWizardPage invokes the cancel routine for the wizard.\n   *\n   * Can be used in conjunction with the ClrWizardPage.stopCancel\n   * (clrWizardPagePreventDefaultCancel) or ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before cancelling the wizard.\n   *\n   * Note that this requires you to call Wizard.close() from the host component.\n   * This constitues a full replacement of the cancel functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCancel') pageOnCancel: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the finish button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom finish\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to complete\n   * the wizard.\n   *\n   * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n   * from the host component. This combination creates a full replacement of\n   * the finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageFinish') finishButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the previous button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom backwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * backwards in the wizard.\n   *\n   * Note that this requires you to call Wizard.previous()\n   * from the host component. This combination creates a full replacement of\n   * the backwards navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrevious') previousButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the next button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * to the next page in the wizard.\n   *\n   * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n   * from the host component. This combination creates a full replacement of\n   * the forward navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNext') nextButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a danger button is clicked and the ClrWizardPage is\n   * the wizard's current page. By default, a danger button will act as\n   * either a \"next\" or \"finish\" button depending on if the ClrWizardPage is the\n   * last page or not.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level when the danger button is clicked.\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageDanger') dangerButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a next, finish, or danger button is clicked and the\n   * ClrWizardPage is the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level, regardless of the type of\n   * primary button.\n   *\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrimary') primaryButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  @Output('clrWizardPageCustomButton') customButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * An input value that is used internally to generate the ClrWizardPage ID as\n   * well as the step nav item ID.\n   *\n   * Typed as any because it should be able to accept numbers as well as\n   * strings. Passing an index for wizard whose pages are created with an\n   * ngFor loop is a common use case.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('id') _id: any = (wizardPageIndex++).toString();\n\n  /**\n   * A read-only getter that generates an ID string for the wizard page from\n   * either the value passed to the ClrWizardPage \"id\" input or a wizard page\n   * counter shared across all wizard pages in the application.\n   *\n   * Note that the value passed into the ID input Will be prefixed with\n   * \"clr-wizard-page-\".\n   *\n   * @readonly\n   *\n   * @memberof ClrWizardPage\n   */\n  public get id() {\n    // covers things like null, undefined, false, and empty string\n    // while allowing zero to pass\n    const idIsNonZeroFalsy = !this._id && this._id !== 0;\n\n    // in addition to non-zero falsy we also want to make sure _id is not a negative\n    // number.\n    if (idIsNonZeroFalsy || this._id < 0) {\n      // guard here in the event that input becomes undefined or null by accident\n      this._id = (wizardPageIndex++).toString();\n    }\n    return `clr-wizard-page-${this._id}`;\n  }\n\n  /**\n   * A read-only getter that serves as a convenience for those who would rather\n   * not think in the terms of !ClrWizardPage.nextStepDisabled. For some use cases,\n   * ClrWizardPage.readyToComplete is more logical and declarative.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get readyToComplete(): boolean {\n    return !this.nextStepDisabled;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _complete: boolean = false;\n\n  /**\n   * A page is marked as completed if it is both readyToComplete and completed,\n   * as in the next or finish action has been executed while this page was current.\n   *\n   * Note there is and open question about how to handle pages that are marked\n   * complete but who are no longer readyToComplete. This might indicate an error\n   * state for the ClrWizardPage. Currently, the wizard does not acknowledge this state\n   * and only returns that the page is incomplete.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get completed(): boolean {\n    return this._complete && this.readyToComplete;\n\n    // FOR V2: UNWIND COMPLETED, READYTOCOMPLETE, AND ERRORS\n    // SUCH THAT ERRORS IS ITS OWN INPUT. IF A STEP IS\n    // INCOMPLETE AND ERRORED, ERRORED WILL NOT SHOW.\n    // FIRST QUESTION: AM I GREY OR COLORED?\n    // SECOND QUESTION: AM I GREEN OR RED?\n  }\n\n  /**\n   * A ClrWizardPage can be manually set to completed using this boolean setter.\n   * It is recommended that users rely on the convenience functions in the wizard\n   * and navigation service instead of manually setting pagesâ completion state.\n   *\n   * @memberof ClrWizardPage\n   */\n  public set completed(value: boolean) {\n    this._complete = value;\n  }\n\n  /**\n   * Checks with the navigation service to see if it is the current page.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get current(): boolean {\n    return this.navService.currentPage === this;\n  }\n\n  public get disabled(): boolean {\n    return !this.enabled;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page is navigable\n   * in the wizard. A wizard page can be navigated to if it is completed\n   * or the page before it is completed.\n   *\n   * This getter handles the logic for enabling or disabling the links in\n   * the step nav on the left Side of the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get enabled(): boolean {\n    return this.current || this.completed || this.previousCompleted;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page before this\n   * ClrWizardPage is completed. This is useful for determining whether or not\n   * a page is navigable if it is not current or already completed.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousCompleted(): boolean {\n    const previousPage = this.pageCollection.getPreviousPage(this);\n\n    if (!previousPage) {\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get title(): TemplateRef<any> {\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get navTitle(): TemplateRef<any> {\n    if (this.pageNavTitle) {\n      return this.pageNavTitle.pageNavTitleTemplateRef;\n    }\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get headerActions(): TemplateRef<any> {\n    if (!this._headerActions) {\n      return;\n    }\n    return this._headerActions.pageHeaderActionsTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasHeaderActions(): boolean {\n    return !!this._headerActions;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get buttons(): TemplateRef<any> {\n    if (!this._buttons) {\n      return;\n    }\n    return this._buttons.pageButtonsTemplateRef;\n  }\n\n  /**\n   * A read-only getter that returns a boolean that says whether or\n   * not the ClrWizardPage includes buttons. Used to determine if the\n   * Wizard should override the default button set defined as\n   * its direct children.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasButtons(): boolean {\n    return !!this._buttons;\n  }\n\n  /**\n   * Uses the nav service to make the ClrWizardPage the current page in the\n   * wizard. Bypasses all checks but still emits the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output.\n   *\n   * In most cases, it is better to use the default navigation functions\n   * in Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public makeCurrent(): void {\n    this.navService.currentPage = this;\n  }\n\n  /**\n   * Links the nav service and establishes the current page if one is not defined.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public ngOnInit(): void {\n    const navService = this.navService;\n    if (!navService.currentPage && !navService.navServiceLoaded) {\n      this.makeCurrent();\n      this.navService.navServiceLoaded = true;\n    }\n  }\n\n  /**\n   * A read-only getter that returns the id used by the step nav item associated with the page.\n   *\n   * ClrWizardPage needs this ID string for aria information.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stepItemId(): string {\n    return this.pageCollection.getStepItemIdForPage(this);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { HeaderActionService } from './providers/header-actions.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: 'clr-wizard',\n  providers: [WizardNavigationService, PageCollectionService, ButtonHubService, HeaderActionService],\n  templateUrl: './wizard.html',\n  host: {\n    '[class.clr-wizard]': 'true',\n    '[class.wizard-md]': \"size == 'md'\",\n    '[class.wizard-lg]': \"size == 'lg'\",\n    '[class.wizard-xl]': \"size == 'xl'\",\n    '[class.lastPage]': 'navService.currentPageIsLast',\n  },\n})\nexport class ClrWizard implements OnDestroy, AfterContentInit, DoCheck {\n  /**\n   * Set the modal size of the wizard. Set using `[clrWizardSize]` input.\n   */\n  @Input('clrWizardSize') size = 'xl';\n\n  /**\n   * Tells the modal part of the wizard whether it should have a close \"X\"\n   * in the top right corner. Set using `[clrWizardClosable]` input.\n   */\n  @Input('clrWizardClosable') closable = true;\n\n  /**\n   * Resets page completed states when navigating backwards.\n   * Set using `[clrWizardForceForwardNavigation]` input.\n   */\n  @Input('clrWizardForceForwardNavigation')\n  set forceForward(value: boolean) {\n    this._forceForward = !!value;\n    this.navService.forceForwardNavigation = value;\n  }\n  private _forceForward: boolean = false;\n  get forceForward(): boolean {\n    return this._forceForward;\n  }\n\n  _open = false;\n  /**\n   * Toggles open/close of the wizard component.\n   * Set using the `[clrWizardOpen]` input.\n   */\n  @Input('clrWizardOpen')\n  set clrWizardOpen(open: boolean) {\n    if (open) {\n      this.buttonService.buttonsReady = true;\n    }\n    this._open = open;\n  }\n\n  /**\n   * Prevents ClrWizard from moving to the next page or closing itself on finishing.\n   * Set using the `[clrWizardPreventDefaultNext]` input. Note that using stopNext\n   * will require you to create your own calls to .next() and .finish() in your\n   * host component to make the ClrWizard work as expected.\n   */\n  @Input('clrWizardPreventDefaultNext')\n  set stopNext(value: boolean) {\n    this._stopNext = !!value;\n    this.navService.wizardHasAltNext = value;\n  }\n  private _stopNext: boolean = false;\n  get stopNext() {\n    return this._stopNext;\n  }\n\n  /**\n   * Prevents ClrWizard from closing when the cancel button or close \"X\" is clicked.\n   * Set using the `[clrWizardPreventDefaultCancel]` input.\n   *\n   * Note that using stopCancel will require you to create your own calls to `close()` in your host compone`nt\n   * to make the ClrWizard work as expected. Useful for doing checks or prompts\n   * before closing a ClrWizard.\n   */\n  @Input('clrWizardPreventDefaultCancel')\n  set stopCancel(value: boolean) {\n    this._stopCancel = !!value;\n    this.navService.wizardHasAltCancel = value;\n  }\n  private _stopCancel: boolean = false;\n  get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Prevents ClrWizard from performing any form of navigation away from the current\n   * page. Set using the `[clrWizardPreventNavigation]` input.\n   * Note that stopNavigation is meant to freeze the wizard in place, typically\n   * during a long validation or background action where you want the wizard to\n   * display loading content but not allow the user to execute navigation in\n   * the stepnav, close X, or the  back, finish, or next buttons.\n   */\n  @Input('clrWizardPreventNavigation')\n  set stopNavigation(value: boolean) {\n    this._stopNavigation = !!value;\n    this.navService.wizardStopNavigation = value;\n  }\n  private _stopNavigation = false;\n  get stopNavigation() {\n    return this._stopNavigation;\n  }\n\n  /**\n   * Prevents clicks on the links in the stepnav from working.\n   * Set using `[clrWizardDisableStepnav]` input.\n   * A more granular bypassing of navigation which can be useful when your\n   * ClrWizard is in a state of completion and you don't want users to be\n   * able to jump backwards and change things.\n   */\n  @Input('clrWizardDisableStepnav')\n  set disableStepnav(value: boolean) {\n    this._disableStepnav = !!value;\n    this.navService.wizardDisableStepnav = value;\n  }\n  private _disableStepnav: boolean = false;\n  get disableStepnav(): boolean {\n    return this._disableStepnav;\n  }\n\n  /**\n   * Used to communicate to the underlying modal that animations are not\n   * wanted. Primary use is for the display of static/inline wizards.\n   * Set using `[clrWizardPreventModalAnimation]` input.\n   */\n  /** @deprecated since 3.0, input should be removed in 4.0 because is only related to inline wizards */\n  @Input('clrWizardPreventModalAnimation') _stopModalAnimations: boolean = false;\n  get stopModalAnimations(): string {\n    return this._stopModalAnimations ? 'true' : 'false';\n  }\n\n  /**\n   * Emits when the wizard is opened or closed.\n   * Listen via `(clrWizardOpenChange)` event.\n   */\n  @Output('clrWizardOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /**\n   * Emits when the wizard is canceled. Listen via `(clrWizardOnCancel)` event.\n   * Can be combined with the `[clrWizardPreventDefaultCancel]` input to create\n   * wizard-level custom cancel routines.\n   */\n  @Output('clrWizardOnCancel') onCancel: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is completed. Listen via `(clrWizardOnFinish)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom completion routines.\n   */\n  @Output('clrWizardOnFinish') wizardFinished: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is reset. Listen via `(clrWizardOnReset)` event.\n   */\n  @Output('clrWizardOnReset') onReset: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the current page has changed. Listen via `(clrWizardCurrentPageChanged)` event.\n   * output. Useful for non-blocking validation.\n   */\n  @Output('clrWizardCurrentPageChanged') currentPageChanged: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the next page. Listen via `(clrWizardOnNext)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom navigation routines, which are useful for validation.\n   */\n  @Output('clrWizardOnNext') onMoveNext: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the previous page. Can be useful for validation.\n   * Listen via `(clrWizardOnPrevious)` event.\n   */\n\n  @Output('clrWizardOnPrevious') onMovePrevious: EventEmitter<any> = new EventEmitter<any>(false);\n\n  @ContentChildren(ClrWizardPage, { descendants: true })\n  pages: QueryList<ClrWizardPage>;\n  @ContentChildren(ClrWizardHeaderAction) headerActions: QueryList<ClrWizardHeaderAction>;\n  @ViewChild('wizardTitle') wizardTitle: ElementRef;\n\n  public get currentPage() {\n    return this.navService.currentPage;\n  }\n\n  public set currentPage(page: ClrWizardPage) {\n    this.navService.goTo(page, true);\n  }\n\n  public get isLast() {\n    return this.navService.currentPageIsLast;\n  }\n\n  public get isFirst() {\n    return this.navService.currentPageIsFirst;\n  }\n\n  public get isStatic() {\n    return (this.elementRef.nativeElement as HTMLElement).classList.contains('clr-wizard--inline');\n  }\n\n  private differ: any; // for marking when the collection of wizard pages has been added to or deleted from\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService,\n    public headerActionService: HeaderActionService,\n    private elementRef: ElementRef,\n    differs: IterableDiffers\n  ) {\n    this.subscriptions.push(\n      this.listenForNextPageChanges(),\n      this.listenForPreviousPageChanges(),\n      this.listenForCancelChanges(),\n      this.listenForFinishedChanges(),\n      this.listenForPageChanges()\n    );\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  public ngAfterContentInit() {\n    this.pageCollection.pages = this.pages;\n    this.headerActionService.wizardHeaderActions = this.headerActions;\n    this.initializeButtons();\n  }\n\n  public ngDoCheck() {\n    this.updateNavOnPageChanges();\n  }\n\n  public ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /**\n   * Marks Wizard as finished. By default it does not execute event\n   * emissions or checks before completing and closing. This method is commonly\n   * used as part of an alternative navigation with `[clrWizardPreventDefaultNext]`.\n   *\n   * If `skipChecksAndEmits` is true, the wizard will complete and close\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   */\n  public finish(skipChecksAndEmits = true) {\n    if (skipChecksAndEmits) {\n      this.forceFinish();\n    } else {\n      this.navService.finish();\n    }\n  }\n\n  /**\n   * Marks the wizard as finished but does run checks and emissions.\n   * Good for a last step in an alternate workflow. Does the same thing as\n   * calling `ClrWizard.finish(true)` or `ClrWizard.finish()` without a parameter.\n   */\n  public forceFinish() {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this.close();\n  }\n\n  /**\n   * Opens the wizard. If there is no current page defined, sets the first page in the wizard to be current.\n   */\n  public open(): void {\n    this._open = true;\n\n    if (!this.currentPage) {\n      this.navService.setFirstPageCurrent();\n    }\n\n    // Only render buttons when wizard is opened, to avoid chocolate errors\n    this.buttonService.buttonsReady = true;\n\n    this._openChanged.emit(true);\n  }\n\n  /**\n   * Closes the wizard. Call this directly instead of `cancel()` to implement alternative cancel functionality.\n   */\n  public close(): void {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this._open = false;\n    this._openChanged.emit(false);\n  }\n\n  /**\n   * Used to open and close the wizard. By default the wizard will\n   * close if invoked with no parameter. If parameter is true wizard will open\n   * else if false will close.\n   */\n  public toggle(open: boolean): void {\n    if (open) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Moves the wizard to the previous page.\n   */\n  public previous(): void {\n    this.navService.previous();\n  }\n\n  /**\n   * By default, `next()` does not execute event emissions.\n   * This method is commonly called as part of an alternative navigation\n   * with `[clrWizardPreventDefaultNext]`. The wizard will move to the next page\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   *\n   * If `skipChecksAndEmits` is false, the wizard will execute default checks\n   * and emit events as normal. This is useful for custom buttons or programmatic\n   * workflows that are not executing the wizards default checks and emissions.\n   * It is another way to navigate without having to rewrite the wizardâs default\n   * functionality from scratch.\n   */\n  public next(skipChecksAndEmits: boolean = true): void {\n    if (skipChecksAndEmits) {\n      this.forceNext();\n    } else {\n      this.navService.next();\n    }\n  }\n\n  /**\n   * Moves the wizard to the next page without the checks and emissions.\n   * Good for a last step in an alternate workflow.\n   * Alias for `ClrWizard.next(true)` or `ClrWizard.next()`\n   */\n  public forceNext(): void {\n    this.navService.forceNext();\n  }\n\n  /**\n   * Cancels and closes the wizard. Do not use this for an override of the cancel\n   * the functionality with `[clrWizardPreventDefaultCancel]`, `[clrWizardPreventPageDefaultCancel]`,\n   * or `[clrWizardPagePreventDefault]` because it will initiate the same checks\n   * and event emissions that invoked your event handler. Use `ClrWizard.close()` instead.\n   */\n  public cancel(): void {\n    this.navService.cancel();\n  }\n\n  /**\n   * Overrides behavior of the underlying modal to avoid collisions with\n   * alternative cancel functionality. In most cases, use `ClrWizard.cancel()` instead.\n   */\n  public modalCancel(): void {\n    if (this.closable) {\n      this.checkAndCancel();\n    }\n  }\n\n  /**\n   * Checks for alternative cancel flows defined at the current page or\n   * wizard level. Performs a canceled if not. Emits events that initiate\n   * the alternative cancel outputs `(clrWizardPageOnCancel)` and `(clrWizardOnCancel)`.\n   */\n  public checkAndCancel(): void {\n    const currentPage = this.currentPage;\n    const currentPageHasOverrides = currentPage.stopCancel || currentPage.preventDefault;\n\n    if (this.stopNavigation) {\n      return;\n    }\n\n    currentPage.pageOnCancel.emit();\n    if (!currentPageHasOverrides) {\n      this.onCancel.emit();\n    }\n\n    if (!this.stopCancel && !currentPageHasOverrides) {\n      this.close();\n    }\n  }\n\n  /**\n   * Navigates to a given page in the Wizard. Navigation will invoke the wizardâs default\n   * checks and event emissions.\n   *\n   * The format of the expected ID parameter can be found in the return of the\n   * ClrWizardPage.id getter, usually prefixed with `clr-wizard-page-` and then either a\n   * numeric ID or the ID specified for the `ClrWizardPage` componentâs `id` input.\n   */\n  public goTo(pageId: string): void {\n    if (!pageId) {\n      return;\n    }\n\n    this.navService.goTo(pageId);\n  }\n\n  /**\n   * Reset sets all WizardPages to incomplete and sets the first page in the `ClrWizard` to\n   * be the current page, resetting the wizard navigation.\n   * Use `(clrWizardOnReset)` event to reset the data or model of your wizard.\n   */\n  public reset(): void {\n    this.pageCollection.reset();\n    this.onReset.next();\n  }\n\n  private listenForNextPageChanges(): Subscription {\n    return this.navService.movedToNextPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMoveNext.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForPreviousPageChanges(): Subscription {\n    return this.navService.movedToPreviousPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMovePrevious.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForCancelChanges(): Subscription {\n    return this.navService.notifyWizardCancel.subscribe(() => this.checkAndCancel());\n  }\n\n  private listenForFinishedChanges(): Subscription {\n    return this.navService.wizardFinished.subscribe(() => this.emitWizardFinished());\n  }\n\n  private listenForPageChanges(): Subscription {\n    return this.navService.currentPageChanged.subscribe(() => this.currentPageChanged.emit());\n  }\n\n  private updateNavOnPageChanges(): void {\n    const changes = this.differ.diff(this.pages);\n    if (changes) {\n      changes.forEachAddedItem(() => this.navService.updateNavigation());\n      changes.forEachRemovedItem(() => this.navService.updateNavigation());\n    }\n  }\n\n  private initializeButtons(): void {\n    // Only trigger buttons ready if default is open (inlined)\n    if (this._open) {\n      this.buttonService.buttonsReady = true;\n    }\n  }\n\n  private emitWizardFinished(): void {\n    if (!this.stopNext) {\n      this.forceFinish();\n    }\n    this.wizardFinished.emit();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\n\nexport const DEFAULT_BUTTON_TYPES: any = {\n  cancel: 'cancel',\n  previous: 'previous',\n  next: 'next',\n  finish: 'finish',\n  danger: 'danger',\n};\n\nexport const CUSTOM_BUTTON_TYPES: any = {\n  cancel: 'custom-cancel',\n  previous: 'custom-previous',\n  next: 'custom-next',\n  finish: 'custom-finish',\n  danger: 'custom-danger',\n};\n\n@Component({\n  selector: 'clr-wizard-button',\n  template: `\n        <button\n            type=\"button\"\n            class=\"btn clr-wizard-btn\"\n            [class.btn-link]=\"isCancel\"\n            [class.clr-wizard-btn--tertiary]=\"isCancel\"\n            [class.btn-outline]=\"isPrevious\"\n            [class.clr-wizard-btn--secondary]=\"isPrevious\"\n            [class.btn-primary]=\"isPrimaryAction\"\n            [class.clr-wizard-btn--primary]=\"isPrimaryAction\"\n            [class.btn-success]=\"isFinish\"\n            [class.btn-danger]=\"isDanger\"\n            [class.disabled]=\"isDisabled\"\n            [attr.disabled]=\"_disabledAttribute\"\n            (click)=\"click()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-btn-wrapper', '[attr.aria-hidden]': 'isHidden' },\n  styles: ['[aria-hidden=\"true\"] { display: none; }'],\n})\nexport class ClrWizardButton {\n  @Input('type') public type: string = '';\n\n  @Input('clrWizardButtonDisabled') public disabled: boolean = false;\n\n  @Input('clrWizardButtonHidden') public hidden: boolean = false;\n\n  // EventEmitter which is emitted when a button is clicked.\n  @Output('clrWizardButtonClicked') wasClicked: EventEmitter<string> = new EventEmitter<string>(false);\n\n  constructor(public navService: WizardNavigationService, public buttonService: ButtonHubService) {}\n\n  private checkDefaultAndCustomType(valueToCheck: string = '', typeToLookUp: string) {\n    if (DEFAULT_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    if (CUSTOM_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    return false;\n  }\n\n  public get isCancel(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'cancel');\n  }\n\n  public get isNext(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'next');\n  }\n\n  public get isPrevious(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'previous');\n  }\n\n  public get isFinish(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'finish');\n  }\n\n  public get isDanger(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'danger');\n  }\n\n  public get isPrimaryAction(): boolean {\n    return this.isNext || this.isDanger || this.isFinish;\n  }\n\n  public get _disabledAttribute(): string | null {\n    if (this.isDisabled) {\n      return '';\n    }\n    return null;\n  }\n\n  public get isDisabled(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const disabled = true;\n    const nav = this.navService;\n    const page = this.navService.currentPage;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !disabled;\n    }\n\n    if (this.disabled || nav.wizardStopNavigation || !page) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !disabled;\n    }\n\n    if (this.isPrevious && (nav.currentPageIsFirst || page.previousStepDisabled)) {\n      return disabled;\n    }\n\n    if (this.isDanger && !page.readyToComplete) {\n      return disabled;\n    }\n\n    if (this.isNext && (nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    if (this.isFinish && (!nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    return !disabled;\n  }\n\n  public get isHidden(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const hidden = true;\n    const nav = this.navService;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !hidden;\n    }\n\n    if (this.hidden) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !hidden;\n    }\n\n    if (this.isPrevious && nav.currentPageIsFirst) {\n      return hidden;\n    }\n\n    if (this.isNext && nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    if (this.isFinish && !nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    return !hidden;\n  }\n\n  click(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.wasClicked.emit(this.type);\n    this.buttonService.buttonClicked(this.type);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-wizard-title, clr-wizard-pagetitle' })\nexport class ClrWizardCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { PageCollectionService } from './providers/page-collection.service';\n\n@Component({\n  selector: 'clr-wizard-stepnav',\n  template: `\n    <div class=\"clr-wizard-stepnav-list\">\n      <div *ngFor=\"let page of pageService.pages; let i = index\" clr-wizard-stepnav-item [page]=\"page\" class=\"clr-wizard-stepnav-item\">{{i + 1}}</div>\n    </div>\n  `,\n  host: { class: 'clr-wizard-stepnav' },\n})\nexport class ClrWizardStepnav {\n  constructor(public pageService: PageCollectionService) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: '[clr-wizard-stepnav-item]',\n  template: `\n        <button type=\"button\" class=\"btn btn-link clr-wizard-stepnav-link\" (click)=\"click()\" [attr.disabled]=\"isDisabled ? '' : null\">\n            <span class=\"clr-wizard-stepnav-link-suffix\">\n              <clr-icon shape=\"error-standard\" class=\"is-error clr-wizard-stepnav-item-error-icon\" *ngIf=\"hasError\"></clr-icon>\n              <ng-content *ngIf=\"!hasError\"></ng-content>              \n            </span>\n            <span class=\"clr-wizard-stepnav-link-title\">\n              <ng-template [ngTemplateOutlet]=\"page.navTitle\"></ng-template> \n            </span>\n        </button>\n    `,\n  host: {\n    '[id]': 'id',\n    '[attr.aria-selected]': 'isCurrent',\n    '[attr.aria-controls]': 'id',\n    '[class.clr-nav-link]': 'true',\n    '[class.nav-item]': 'true',\n    '[class.active]': 'isCurrent',\n    '[class.disabled]': 'isDisabled',\n    '[class.no-click]': '!canNavigate',\n    '[class.complete]': 'isComplete',\n    '[class.error]': 'hasError',\n  },\n})\nexport class ClrWizardStepnavItem {\n  @Input('page') public page: ClrWizardPage;\n\n  constructor(public navService: WizardNavigationService, public pageCollection: PageCollectionService) {}\n\n  private pageGuard(): void {\n    if (!this.page) {\n      throw new Error('Wizard stepnav item is not associated with a wizard page.');\n    }\n  }\n\n  public get id(): string {\n    this.pageGuard();\n    return this.pageCollection.getStepItemIdForPage(this.page);\n  }\n\n  public get isDisabled(): boolean {\n    this.pageGuard();\n    return this.page.disabled || this.navService.wizardStopNavigation || this.navService.wizardDisableStepnav;\n  }\n\n  public get isCurrent(): boolean {\n    this.pageGuard();\n    return this.page.current;\n  }\n\n  public get isComplete(): boolean {\n    this.pageGuard();\n    return this.page.completed;\n  }\n\n  public get hasError(): boolean {\n    this.pageGuard();\n    return this.page.hasError && this.isComplete;\n  }\n\n  public get canNavigate(): boolean {\n    this.pageGuard();\n    return this.pageCollection.previousPageIsCompleted(this.page);\n  }\n\n  click(): void {\n    this.pageGuard();\n\n    // if we click on our own stepnav or a disabled stepnav, we don't want to do anything\n    if (this.isDisabled || this.isCurrent) {\n      return;\n    }\n\n    this.navService.goTo(this.page);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAlertModule } from '../emphasis/alert/alert.module';\nimport { ClrModalModule } from '../modal/modal.module';\n\nimport { ClrWizard } from './wizard';\nimport { ClrWizardButton } from './wizard-button';\nimport { ClrWizardCustomTags } from './wizard-custom-tags';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\nimport { ClrWizardStepnav } from './wizard-stepnav';\nimport { ClrWizardStepnavItem } from './wizard-stepnav-item';\n\nexport const CLR_WIZARD_DIRECTIVES: any[] = [\n  ClrWizard,\n  ClrWizardPage,\n  ClrWizardStepnav,\n  ClrWizardStepnavItem,\n  ClrWizardButton,\n  ClrWizardHeaderAction,\n  ClrWizardCustomTags,\n  ClrWizardPageTitle,\n  ClrWizardPageNavTitle,\n  ClrWizardPageButtons,\n  ClrWizardPageHeaderActions,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrModalModule, ClrAlertModule],\n  declarations: [CLR_WIZARD_DIRECTIVES],\n  exports: [CLR_WIZARD_DIRECTIVES],\n})\nexport class ClrWizardModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\n\nlet accordionCount = 0;\n\nexport class AccordionPanelModel {\n  status = AccordionStatus.Inactive;\n  index: number = null;\n  disabled = false;\n  open = false;\n  templateId = `${this.id}-${this.accordionId}`;\n  constructor(public id: string, public accordionId: number | string) {}\n}\n\nexport class AccordionModel {\n  protected strategy = AccordionStrategy.Default;\n  protected accordionCount = accordionCount++;\n  protected _panels: { [id: string]: AccordionPanelModel } = {};\n\n  get panels(): AccordionPanelModel[] {\n    return Object.keys(this._panels).map(id => this._panels[id]);\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.strategy = strategy;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    ids.forEach((id, index) => (this._panels[id].index = index));\n    this.removeOldPanels(ids);\n  }\n\n  addPanel(id: string, open = false) {\n    this._panels[id] = new AccordionPanelModel(id, this.accordionCount);\n    this._panels[id].open = open;\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    const panelIsOpen = this._panels[panelId].open;\n    if (this.strategy === AccordionStrategy.Default) {\n      this.closeAllPanels();\n    }\n\n    this._panels[panelId].open = open !== undefined ? open : !panelIsOpen;\n  }\n\n  disablePanel(panelId: string, disabled: boolean) {\n    this._panels[panelId].disabled = disabled;\n  }\n\n  private closeAllPanels() {\n    this.panels.forEach(panel => (this._panels[panel.id].open = false));\n  }\n\n  private removeOldPanels(ids: string[]) {\n    this.panels\n      .filter(panel => ids.find(id => id === panel.id) === undefined)\n      .forEach(panel => delete this._panels[panel.id]);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AccordionModel, AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\n\n@Injectable()\nexport class AccordionService {\n  protected accordion = new AccordionModel();\n  protected readonly _panelsChanges = new BehaviorSubject<AccordionPanelModel[]>(this.accordion.panels);\n\n  getPanelChanges(panelId: string): Observable<AccordionPanelModel> {\n    return this._panelsChanges.pipe(map(panels => panels.find(s => s.id === panelId)));\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.accordion.setStrategy(strategy);\n  }\n\n  addPanel(panelId: string, open = false) {\n    this.accordion.addPanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    this.accordion.togglePanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  disablePanel(panelId: string, disabled?: boolean) {\n    this.accordion.disablePanel(panelId, disabled);\n    this.emitUpdatedPanels();\n  }\n\n  updatePanelOrder(ids: string[]) {\n    this.accordion.updatePanelOrder(ids);\n    this.emitUpdatedPanels();\n  }\n\n  protected emitUpdatedPanels() {\n    this._panelsChanges.next(this.accordion.panels);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { defaultAnimationTiming } from '../../utils/animations/constants';\n\nexport const panelAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n  ]),\n];\n\nexport const stepAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n    transition('* => void', [\n      style({ display: 'block' }),\n      animate(defaultAnimationTiming, style({ height: 0, display: 'none' })),\n    ]),\n  ]),\n];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const defaultAnimationTiming = '0.2s ease-in-out';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-description, clr-step-description',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-description]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionDescription {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  SimpleChanges,\n  Inject,\n  OnInit,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { AccordionService } from './providers/accordion.service';\nimport { AccordionStatus } from './enums/accordion-status.enum';\nimport { panelAnimation } from './utils/animation';\nimport { IfExpandService } from '../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from './models/accordion.model';\nimport { ClrAccordionDescription } from './accordion-description';\n\n@Component({\n  selector: 'clr-accordion-panel',\n  templateUrl: './accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: panelAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrAccordionPanel implements OnInit, OnChanges {\n  @Input('clrAccordionPanelDisabled') disabled = false;\n  @Input('clrAccordionPanelOpen') panelOpen = false;\n  @Output('clrAccordionPanelOpenChange') panelOpenChange = new EventEmitter<boolean>();\n  @ContentChildren(ClrAccordionDescription) accordionDescription: QueryList<ClrAccordionDescription>;\n\n  panel: Observable<AccordionPanelModel>;\n  readonly AccordionStatus = AccordionStatus;\n  isAccordion = true;\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private accordionService: AccordionService,\n    private ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) public id: string\n  ) {}\n\n  ngOnInit() {\n    this.panel = this.accordionService.getPanelChanges(this.id).pipe(tap(panel => this.emitPanelChange(panel)));\n    this.accordionService.addPanel(this.id, this.panelOpen);\n    this.accordionService.togglePanel(this.id, this.panelOpen);\n    this.accordionService.disablePanel(this.id, this.disabled);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.panel && changes.panelOpen && changes.panelOpen.currentValue !== changes.panelOpen.previousValue) {\n      this.accordionService.togglePanel(this.id, changes.panelOpen.currentValue);\n    }\n\n    if (this.panel && changes.disabled && changes.disabled.currentValue !== changes.disabled.previousValue) {\n      this.accordionService.disablePanel(this.id, changes.disabled.currentValue);\n    }\n  }\n\n  togglePanel() {\n    this.accordionService.togglePanel(this.id);\n  }\n\n  collapsePanelOnAnimationDone(panel: AccordionPanelModel) {\n    if (!panel.open) {\n      this.ifExpandService.expanded = false;\n    }\n  }\n\n  getPanelStateClasses(panel: AccordionPanelModel) {\n    return `clr-accordion-panel-${panel.status} ${panel.open ? 'clr-accordion-panel-open' : ''}`;\n  }\n\n  getAccordionContentId(id: string) {\n    return `clr-accordion-content-${id}'`;\n  }\n\n  getAccordionHeaderId(id: string) {\n    return `clr-accordion-header-${id}`;\n  }\n\n  private emitPanelChange(panel: AccordionPanelModel) {\n    this.panelOpenChange.emit(panel.open);\n\n    if (panel.open) {\n      this.ifExpandService.expanded = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-title, clr-step-title',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-title]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { AccordionService } from './providers/accordion.service';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { AccordionStrategy } from './enums/accordion-strategy.enum';\n\n@Component({\n  selector: 'clr-accordion',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion]': 'true' },\n  providers: [AccordionService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordion implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrAccordionMultiPanel') multiPanel = false;\n  @ContentChildren(ClrAccordionPanel, { descendants: true })\n  panels: QueryList<ClrAccordionPanel>;\n  subscriptions: Subscription[] = [];\n\n  constructor(private accordionService: AccordionService) {}\n\n  ngOnInit() {\n    this.setAccordionStrategy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.multiPanel.currentValue !== changes.multiPanel.previousValue) {\n      this.setAccordionStrategy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private setAccordionStrategy() {\n    const strategy = this.multiPanel ? AccordionStrategy.Multi : AccordionStrategy.Default;\n    this.accordionService.setStrategy(strategy);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes\n      .pipe(startWith(this.panels))\n      .subscribe(panels => this.accordionService.updatePanelOrder(panels.toArray().map(p => p.id)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-content, clr-step-content',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-accordion' })\nexport class AccordionWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../utils/chocolate/oompa-loompa';\nimport { AccordionWillyWonka } from './accordion-willy-wonka';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-accordion-panel' })\nexport class AccordionOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: AccordionWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-accordion-panel should only be used inside of clr-accordion');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { ClrAccordionTitle } from './accordion-title';\nimport { ClrAccordionDescription } from './accordion-description';\nimport { ClrAccordion } from './accordion';\nimport { ClrAccordionContent } from './accordion-content';\nimport { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';\nimport { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';\n\nconst declarations = [\n  ClrAccordion,\n  ClrAccordionPanel,\n  ClrAccordionTitle,\n  ClrAccordionDescription,\n  ClrAccordionContent,\n  AccordionOompaLoompa,\n  AccordionWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [...declarations],\n  exports: [...declarations],\n})\nexport class ClrAccordionModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionModel } from '../../models/accordion.model';\nimport { AccordionStatus } from '../../enums/accordion-status.enum';\n\nexport class StepperModel extends AccordionModel {\n  private stepperModelInitialize: boolean = false;\n\n  get allPanelsCompleted(): boolean {\n    return this.panels.length && this.getNumberOfIncompletePanels() === 0 && this.getNumberOfOpenPanels() === 0;\n  }\n\n  addPanel(id: string, open = false) {\n    super.addPanel(id, open);\n    this._panels[id].disabled = true;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    super.updatePanelOrder(ids);\n    if (this.stepperModelInitialize === false) {\n      this.openFirstPanel();\n    }\n  }\n\n  togglePanel(panelId: string) {\n    if (this._panels[panelId].status === AccordionStatus.Complete) {\n      this._panels[panelId].open = !this._panels[panelId].open;\n    }\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    if (currentPanelValid) {\n      this.completePanel(currentPanelId);\n      this.openNextPanel(this._panels[currentPanelId].id);\n    } else {\n      this.setPanelError(currentPanelId);\n    }\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.panels.filter(() => this._panels[panelId] !== undefined).forEach(panel => {\n      if (panel.index < this._panels[panelId].index) {\n        this.completePanel(panel.id);\n      } else if (panel.id === panelId) {\n        this._panels[panel.id].open = true;\n      } else {\n        this._panels[panel.id].open = false;\n      }\n    });\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    ids.forEach(id => this.setPanelError(id));\n  }\n\n  resetPanels() {\n    /* return stepper to initialize state */\n    this.stepperModelInitialize = false;\n    this.panels.forEach(p => this.resetPanel(p.id));\n    this.openFirstPanel();\n  }\n\n  getNextPanel(currentPanelId: string) {\n    return this.panels.find(s => s.index === this._panels[currentPanelId].index + 1);\n  }\n\n  private resetAllFuturePanels(panelId: string) {\n    this.panels.filter(panel => panel.index >= this._panels[panelId].index).forEach(panel => this.resetPanel(panel.id));\n  }\n\n  private resetPanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Inactive;\n    this._panels[panelId].open = false;\n    this._panels[panelId].disabled = true;\n  }\n\n  private openFirstPanel() {\n    const firstPanel = this.getFirstPanel();\n    this._panels[firstPanel.id].open = true;\n    this._panels[firstPanel.id].disabled = true;\n    this.stepperModelInitialize = true;\n  }\n\n  private completePanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Complete;\n    this._panels[panelId].disabled = false;\n    this._panels[panelId].open = false;\n  }\n\n  private openNextPanel(currentPanelId: string) {\n    const nextPanel = this.getNextPanel(currentPanelId);\n\n    if (nextPanel) {\n      this.resetAllFuturePanels(nextPanel.id);\n      this._panels[nextPanel.id].open = true;\n      this._panels[nextPanel.id].disabled = true;\n    }\n  }\n\n  private setPanelError(panelId: string) {\n    this.resetAllFuturePanels(panelId);\n    this._panels[panelId].open = true;\n    this._panels[panelId].status = AccordionStatus.Error;\n  }\n\n  private getFirstPanel() {\n    return this.panels.find(panel => panel.index === 0);\n  }\n\n  private getNumberOfIncompletePanels() {\n    return this.panels.reduce((prev, next) => (next.status !== AccordionStatus.Complete ? prev + 1 : prev), 0);\n  }\n\n  private getNumberOfOpenPanels() {\n    return this.panels.reduce((prev, next) => (next.open !== false ? prev + 1 : prev), 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AccordionService } from './../../providers/accordion.service';\nimport { StepperModel } from '../models/stepper.model';\n\n@Injectable()\nexport class StepperService extends AccordionService {\n  readonly panelsCompleted = this.getAllCompletedPanelChanges();\n  protected accordion = new StepperModel();\n\n  private _activeStepChanges = new Subject<string>();\n  readonly activeStep = this._activeStepChanges.asObservable();\n\n  resetPanels() {\n    this.accordion.resetPanels();\n    this.emitUpdatedPanels();\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    this.accordion.setPanelsWithErrors(ids);\n    this.emitUpdatedPanels();\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    this.accordion.navigateToNextPanel(currentPanelId, currentPanelValid);\n    this.updateNextStep(currentPanelId, currentPanelValid);\n    this.emitUpdatedPanels();\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.accordion.overrideInitialPanel(panelId);\n    this.emitUpdatedPanels();\n  }\n\n  private updateNextStep(currentPanelId: string, currentPanelValid: boolean) {\n    const nextPanel = this.accordion.getNextPanel(currentPanelId);\n\n    if (currentPanelValid && nextPanel) {\n      this._activeStepChanges.next(nextPanel.id);\n    } else if (currentPanelValid) {\n      this._activeStepChanges.next(currentPanelId);\n    }\n  }\n\n  private getAllCompletedPanelChanges(): Observable<boolean> {\n    return this._panelsChanges.pipe(map(() => this.accordion.allPanelsCompleted), distinctUntilChanged());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener, HostBinding, Input, OnInit } from '@angular/core';\n\nimport { StepperService } from './providers/stepper.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\nexport enum ClrStepButtonType {\n  Next = 'next',\n  Submit = 'submit',\n}\n\n@Directive({\n  selector: '[clrStepButton]',\n  host: {\n    '[class.clr-step-button]': 'true',\n    '[class.btn]': 'true',\n    '[type]': \"'button'\",\n  },\n})\nexport class ClrStepButton implements OnInit {\n  @Input('clrStepButton') type: ClrStepButtonType | string = ClrStepButtonType.Next;\n  @HostBinding('class.btn-primary') submitButton = false;\n\n  constructor(private clrStep: ClrStepperPanel, private stepperService: StepperService) {}\n\n  ngOnInit() {\n    this.submitButton = this.type === ClrStepButtonType.Submit;\n  }\n\n  @HostListener('click')\n  navigateToNextPanel() {\n    this.stepperService.navigateToNextPanel(this.clrStep.id, this.clrStep.formGroup.valid);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Optional,\n  Inject,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { FormGroupName, NgModelGroup } from '@angular/forms';\nimport { tap, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { StepperService } from './providers/stepper.service';\nimport { stepAnimation } from '../utils/animation';\nimport { triggerAllFormControlValidation } from '../../utils/forms/validation';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\nimport { ClrAccordionPanel } from '../accordion-panel';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-stepper-panel',\n  templateUrl: './../accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: stepAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrStepperPanel extends ClrAccordionPanel implements OnInit {\n  isAccordion = false;\n\n  @ViewChild('headerButton') headerButton: ElementRef;\n  private subscriptions: Subscription[] = [];\n\n  get formGroup() {\n    return this.formGroupName ? this.formGroupName.control : this.ngModelGroup.control;\n  }\n\n  get id(): string {\n    return this.formGroupName ? this.formGroupName.name.toString() : this.ngModelGroup.name;\n  }\n\n  set id(_value: string) {} // overriding parent id required empty setter\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public commonStrings: ClrCommonStringsService,\n    @Optional() private formGroupName: FormGroupName,\n    @Optional() private ngModelGroup: NgModelGroup,\n    private stepperService: StepperService,\n    ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) id: string\n  ) {\n    super(commonStrings, stepperService, ifExpandService, id);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panel = this.panel.pipe(tap(panel => this.triggerAllFormControlValidationIfError(panel)));\n    this.stepperService.disablePanel(this.id, true);\n    this.listenToFocusChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenToFocusChanges() {\n    this.subscriptions.push(\n      this.stepperService.activeStep\n        .pipe(filter(panelId => isPlatformBrowser(this.platformId) && panelId === this.id))\n        .subscribe(() => this.headerButton.nativeElement.focus())\n    );\n  }\n\n  private triggerAllFormControlValidationIfError(panel: AccordionPanelModel) {\n    if (panel.status === AccordionStatus.Error) {\n      triggerAllFormControlValidation(this.formGroup);\n    }\n  }\n}\n","/*\n* Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport function triggerAllFormControlValidation(formGroup: FormGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched();\n      control.markAsDirty();\n      control.updateValueAndValidity();\n    } else if (control instanceof FormGroup) {\n      triggerAllFormControlValidation(control);\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineStepState {\n  NOT_STARTED = 'not-started',\n  CURRENT = 'current',\n  PROCESSING = 'processing',\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  Optional,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroupDirective, NgForm } from '@angular/forms';\nimport { startWith, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { StepperService } from './providers/stepper.service';\nimport { AccordionService } from '../providers/accordion.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\n@Component({\n  selector: 'form[clrStepper]',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[class.clr-accordion]': 'true',\n    '[class.clr-stepper-forms]': 'true',\n  },\n  providers: [StepperService, { provide: AccordionService, useExisting: StepperService }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrStepper implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrInitialStep') initialPanel: string;\n  @ContentChildren(ClrStepperPanel, { descendants: true })\n  panels: QueryList<ClrStepperPanel>;\n  subscriptions: Subscription[] = [];\n  form: FormGroupDirective | NgForm;\n\n  constructor(\n    @Optional() private formGroup: FormGroupDirective,\n    @Optional() private ngForm: NgForm,\n    private stepperService: StepperService\n  ) {}\n\n  ngOnInit() {\n    if (!this.formGroup && !this.ngForm) {\n      throw new Error('To use stepper a Reactive or Template Form is required.');\n    }\n\n    this.form = this.formGroup ? this.formGroup : this.ngForm;\n    this.subscriptions.push(this.listenForPanelsCompleted());\n    this.subscriptions.push(this.listenForFormResetChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.initialPanel.currentValue !== changes.initialPanel.previousValue) {\n      this.stepperService.overrideInitialPanel(this.initialPanel);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForFormResetChanges() {\n    return this.form.statusChanges\n      .pipe(filter(() => this.form.pristine)) // https://github.com/angular/angular/issues/10887\n      .subscribe(() => this.stepperService.resetPanels());\n  }\n\n  private listenForPanelsCompleted() {\n    return this.stepperService.panelsCompleted.subscribe(panelsCompleted => {\n      if (panelsCompleted && this.form.valid) {\n        this.form.ngSubmit.emit();\n      } else if (!this.form.valid && this.form.touched) {\n        this.setPanelsWithFormErrors();\n      }\n    });\n  }\n\n  private setPanelsWithFormErrors() {\n    const panelsWithErrors = this.panels.reduce((panels, p) => (p.formGroup.invalid ? [...panels, p.id] : panels), []);\n    this.stepperService.setPanelsWithErrors(panelsWithErrors);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes.pipe(startWith(this.panels)).subscribe(panels => {\n      this.stepperService.updatePanelOrder(panels.toArray().map(p => p.id));\n\n      if (this.initialPanel) {\n        this.stepperService.overrideInitialPanel(this.initialPanel);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'form[clrStepper]' })\nexport class StepperWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { StepperWillyWonka } from './stepper-willy-wonka';\nimport { IfExpandService } from '../../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-stepper-panel, [clrStepButton]' })\nexport class StepperOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: StepperWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-stepper-panel should only be used inside of clrStepper');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAccordionModule } from '../accordion.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrStepButton } from './../stepper/step-button';\nimport { ClrStepper } from './../stepper/stepper';\nimport { ClrStepperPanel } from './stepper-panel';\nimport { StepperOompaLoompa } from './chocolate/stepper-oompa-loompa';\nimport { StepperWillyWonka } from './chocolate/stepper-willy-wonka';\n\nconst declarations = [ClrStepper, ClrStepButton, ClrStepperPanel, StepperOompaLoompa, StepperWillyWonka];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrAccordionModule],\n  declarations: [...declarations],\n  exports: [...declarations, ClrAccordionModule],\n})\nexport class ClrStepperModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-progress-bar',\n  template: `\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayAriaLive()\">{{ displayValue }}</span>\n  `,\n})\nexport class ClrProgressBar {\n  constructor(private ariaLiveService: ClrAriaLiveService) {}\n\n  /**\n   * Handle component ID\n   */\n  private _ID: string;\n  @HostBinding('attr.id') externalId: string = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n\n  // Progress\n  @Input('clrMax') max: number = 100;\n  @Input('clrDisplayval') displayval: string;\n\n  private _value: number = 0;\n  @Input('clrValue')\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n    if (this.displayAriaLive()) {\n      this.ariaLiveService.announce(this.displayValue, this.ariaLive);\n    }\n  }\n\n  // Styles\n  @HostBinding('class.progress')\n  get progressClass() {\n    return true;\n  }\n\n  private _labeled: boolean;\n  @HostBinding('class.labeled')\n  get labeledClass() {\n    return this._labeled;\n  }\n\n  @Input('clrLabeled')\n  set clrLabeled(value: boolean | string) {\n    this._labeled = isBooleanAttributeSet(value);\n  }\n\n  private _fade: boolean;\n  @HostBinding('class.progress-fade')\n  get fadeClass() {\n    return this._fade;\n  }\n\n  @Input('clrFade')\n  set clrFade(value: boolean | string) {\n    this._fade = isBooleanAttributeSet(value);\n  }\n\n  private _loop: boolean;\n  @HostBinding('class.loop')\n  get loopClass() {\n    return this._loop;\n  }\n\n  @Input('clrLoop')\n  set clrLoop(value: boolean | string) {\n    this._loop = isBooleanAttributeSet(value);\n  }\n\n  private _success: boolean;\n  @HostBinding('class.success')\n  get successClass() {\n    return this._success;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrSuccess')\n  set clrSuccess(value: boolean | string) {\n    this._success = isBooleanAttributeSet(value);\n  }\n\n  private _danger: boolean;\n  @HostBinding('class.danger')\n  get dangerClass() {\n    return this._danger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrDanger')\n  set clrDanger(value: boolean | string) {\n    this._danger = isBooleanAttributeSet(value);\n  }\n\n  private _flash: boolean;\n  @HostBinding('class.flash')\n  get flashClass() {\n    return this._flash;\n  }\n\n  @Input('clrFlash')\n  set clrFlash(value: boolean | string) {\n    this._flash = isBooleanAttributeSet(value);\n  }\n\n  private _flashDanger: boolean;\n  @HostBinding('class.flash-danger')\n  get flashDangerClass() {\n    return this._flashDanger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrFlashDanger')\n  set clrFlashDanger(value: boolean | string) {\n    this._flashDanger = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n\n  /**\n   * Make sure that we always will have something that is readable\n   * for the screen reader\n   */\n  get displayValue() {\n    if (this.displayval) {\n      return this.displayval;\n    }\n    return `${this.value}%`;\n  }\n\n  /**\n   * Display aria-live only when there is value and it's not 0 or equal to the max value\n   */\n  displayAriaLive() {\n    return (this.value !== undefined || this.value !== 0) && this.value !== this.max;\n  }\n\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrProgressBar } from './progress-bar';\n\nexport const CLR_PROGRESS_BAR_DIRECTIVES: Type<any>[] = [ClrProgressBar];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_PROGRESS_BAR_DIRECTIVES],\n  exports: [CLR_PROGRESS_BAR_DIRECTIVES],\n})\nexport class ClrProgressBarModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrTimelineStepState } from '../enums/timeline-step-state.enum';\nimport { IconAttributes } from '../interface/icon-attribute.iterface';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TimelineIconAttributeService {\n  private attributeMap: Map<ClrTimelineStepState, IconAttributes> = new Map<ClrTimelineStepState, IconAttributes>();\n\n  constructor(commonStrings: ClrCommonStringsService) {\n    this.attributeMap.set(ClrTimelineStepState.NOT_STARTED, {\n      iconShape: 'circle',\n      ariaLabel: commonStrings.keys.timelineStepNotStarted,\n    });\n    this.attributeMap.set(ClrTimelineStepState.CURRENT, {\n      iconShape: 'dot-circle',\n      ariaLabel: commonStrings.keys.timelineStepCurrent,\n    });\n    this.attributeMap.set(ClrTimelineStepState.PROCESSING, {\n      iconShape: undefined,\n      ariaLabel: commonStrings.keys.timelineStepProcessing,\n    });\n    this.attributeMap.set(ClrTimelineStepState.SUCCESS, {\n      iconShape: 'success-standard',\n      ariaLabel: commonStrings.keys.timelineStepSuccess,\n    });\n    this.attributeMap.set(ClrTimelineStepState.ERROR, {\n      iconShape: 'error-standard',\n      ariaLabel: commonStrings.keys.timelineStepError,\n    });\n  }\n\n  public getAriaLabel(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).ariaLabel;\n  }\n\n  public getIconShape(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).iconShape;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, HostBinding } from '@angular/core';\n\nimport { ClrTimelineLayout } from './enums/timeline-layout.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\n\n@Component({\n  selector: 'clr-timeline',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline]': 'true' },\n  providers: [TimelineIconAttributeService],\n})\nexport class ClrTimeline {\n  @Input('clrLayout') layout: ClrTimelineLayout = ClrTimelineLayout.HORIZONTAL;\n\n  @HostBinding('class.clr-timeline-vertical')\n  get isVertical(): boolean {\n    return this.layout === ClrTimelineLayout.VERTICAL;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n/**\n * Note: Why does this component have aria-hidden attribute?\n *\n * tl;dr: we want screen readers to ignore this element when its reading out to blind users.\n *\n * In order to make a timeline step accessible to screen readers we need the title read out before the\n * icon. In order to do this, ClrTimeLine step has a ContentChild that queries for the ClrTimelineStepTitle and\n * then adds the projected text into a .clr-sr-only element that is a sibling element to the icon. See the\n * ClrTimlineStep template for the DOM structure.\n */\n@Component({\n  selector: 'clr-timeline-step-title',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.clr-timeline-step-title]': 'true', '[attr.aria-hidden]': 'true' },\n})\nexport class ClrTimelineStepTitle {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, ElementRef, Inject, Input, PLATFORM_ID } from '@angular/core';\n\nimport { ClrTimelineStepState } from './enums/timeline-step-state.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-timeline-step',\n  template: `\n        <ng-content select=\"clr-timeline-step-header\"></ng-content>\n        <span class=\"clr-sr-only\">{{stepTitleText}}</span>\n        <ng-container *ngIf=\"!isProcessing; else processing\">\n            <clr-icon\n                    [attr.shape]=\"iconShape\"\n                    [attr.aria-label]=\"iconAriaLabel\"\n                    [attr.aria-current]=\"iconAriaCurrent\">\n            </clr-icon>\n        </ng-container>\n        <div class=\"clr-timeline-step-body\">\n            <ng-content select=\"clr-timeline-step-title\"></ng-content>\n            <ng-content select=\"clr-timeline-step-description\"></ng-content>\n        </div>\n\n        <ng-template #processing>\n            <clr-spinner clrMedium [attr.aria-label]=\"iconAriaLabel\"></clr-spinner>\n        </ng-template>\n    `,\n  host: { '[class.clr-timeline-step]': 'true' },\n})\nexport class ClrTimelineStep {\n  @Input('clrState') state: ClrTimelineStepState = ClrTimelineStepState.NOT_STARTED;\n\n  public stepTitleText: string;\n  @ContentChild(ClrTimelineStepTitle, { read: ElementRef })\n  stepTitle: ElementRef;\n\n  constructor(\n    private iconAttributeService: TimelineIconAttributeService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.stepTitle && isPlatformBrowser(this.platformId)) {\n      this.stepTitleText = this.stepTitle.nativeElement.innerText;\n    }\n  }\n\n  get iconAriaCurrent(): boolean {\n    return this.state === ClrTimelineStepState.CURRENT;\n  }\n\n  get iconAriaLabel(): string {\n    return this.iconAttributeService.getAriaLabel(this.state);\n  }\n\n  get iconShape(): string {\n    return this.iconAttributeService.getIconShape(this.state);\n  }\n\n  get isProcessing(): boolean {\n    return this.state === ClrTimelineStepState.PROCESSING;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-description',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline-step-description]': 'true' },\n})\nexport class ClrTimelineStepDescription {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-header',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline-step-header]': 'true' },\n})\nexport class ClrTimelineStepHeader {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrSpinnerModule } from '../progress/spinner/spinner.module';\n\nimport { ClrTimeline } from './timeline';\nimport { ClrTimelineStep } from './timeline-step';\nimport { ClrTimelineStepDescription } from './timeline-step-description';\nimport { ClrTimelineStepHeader } from './timeline-step-header';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\n\nconst CLR_TIMELINE_DIRECTIVES: Type<any>[] = [\n  ClrTimeline,\n  ClrTimelineStep,\n  ClrTimelineStepDescription,\n  ClrTimelineStepHeader,\n  ClrTimelineStepTitle,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrSpinnerModule],\n  exports: [...CLR_TIMELINE_DIRECTIVES, ClrIconModule, ClrSpinnerModule],\n  declarations: [CLR_TIMELINE_DIRECTIVES],\n})\nexport class ClrTimelineModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonModule } from './button/button.module';\nimport { ClrDataModule } from './data/data.module';\nimport { ClrDragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';\nimport { ClrEmphasisModule } from './emphasis/emphasis.module';\nimport { ClrFormsModule } from './forms/forms.module';\nimport { ClrIconModule } from './icon/icon.module';\nimport { ClrLayoutModule } from './layout/layout.module';\nimport { ClrModalModule } from './modal/modal.module';\nimport { ClrPopoverModule } from './popover/popover.module';\nimport { ClrConditionalModule } from './utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from './utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrFocusTrapModule } from './utils/focus-trap/focus-trap.module';\nimport { ClrLoadingModule } from './utils/loading/loading.module';\nimport { ClrWizardModule } from './wizard/wizard.module';\nimport { ClrStepperModule } from './accordion/stepper/stepper.module';\nimport { ClrSpinnerModule } from './progress/spinner/spinner.module';\nimport { ClrProgressBarModule } from './progress/progress-bars/progress-bar.module';\nimport { ClrPopoverModuleNext } from './utils/popover/popover.module';\nimport { ClrTimelineModule } from './timeline/timeline.module';\n\n@NgModule({\n  exports: [\n    ClrEmphasisModule,\n    ClrDataModule,\n    ClrIconModule,\n    ClrModalModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n    ClrButtonModule,\n    ClrFormsModule,\n    ClrLayoutModule,\n    ClrPopoverModule,\n    ClrWizardModule,\n    ClrDragAndDropModule,\n    ClrStepperModule,\n    ClrSpinnerModule,\n    ClrProgressBarModule,\n    ClrPopoverModuleNext,\n    ClrTimelineModule,\n  ],\n})\nexport class ClarityModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const CLR_MENU_POSITIONS: string[] = [\n  'bottom-left',\n  'bottom-right',\n  'top-left',\n  'top-right',\n  'left-bottom',\n  'left-top',\n  'right-bottom',\n  'right-top',\n];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, state, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function collapse(): AnimationMetadata[] {\n  'use strict';\n  return [\n    state('true', style({ height: 0, 'overflow-y': 'hidden' })),\n    transition('true => false', [animate(defaultAnimationTiming, style({ height: '*', 'overflow-y': 'hidden' }))]),\n    transition('false => true', [style({ height: '*', 'overflow-y': 'hidden' }), animate(defaultAnimationTiming)]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fade(opacity: number = 1): AnimationMetadata[] {\n  return [\n    transition('void => *', [style({ opacity: 0 }), animate(defaultAnimationTiming, style({ opacity: opacity }))]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0 }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fadeSlide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ opacity: 0, transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0, transform: transform }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function slide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ transform: transform }))]),\n  ];\n}\n"]}